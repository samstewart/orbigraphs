(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   1666911,      29402]
NotebookOptionsPosition[   1662142,      29245]
NotebookOutlinePosition[   1663519,      29286]
CellTagsIndexPosition[   1663437,      29281]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"sphere", " ", "=", " ", 
     RowBox[{"RevolutionPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           SuperscriptBox["t", "2"]}], "]"}], ",", "t"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
       RowBox[{"Mesh", "\[Rule]", "12"}], ",", " ", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"partSphere", " ", "=", " ", 
     RowBox[{"RevolutionPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"1.04", "-", 
           SuperscriptBox["t", "2"]}], "]"}], ",", "t"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"-", "1.04"}], ",", "1.05"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Pi"}], "/", "3"}], "+", 
          RowBox[{"Pi", "/", "30"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"Mesh", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"10", ",", "1"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"goodOrbi", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cover", " ", "=", " ", 
     RowBox[{"CreateFiniteCoveringGraph", "@", "goodOrbi"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"goodOrbi", " ", "=", " ", 
     RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AdjacencyOrbigraph", "@", "goodOrbi"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"VertexSize", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"EdgeStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Thick", ",", " ", "Black"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"EdgeLabelStyle", "\[Rule]", "20"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"1", " ", "\[Rule]", " ", "Red"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"2", "\[Rule]", " ", "Yellow"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"3", "\[Rule]", "Purple"}]}], "\[IndentingNewLine]", 
           "}"}]}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
      "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Orbifold Covering\>\"", ",", " ", "\"\<Subsection\>\"", ",", 
           RowBox[{"FontSize", "\[Rule]", 
            RowBox[{"Scaled", "[", ".030", "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Orbigraph Covering\>\"", ",", " ", "\"\<Subsection\>\"", ",", 
           RowBox[{"FontSize", "\[Rule]", 
            RowBox[{"Scaled", "[", ".030", "]"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Show", "[", 
          RowBox[{"sphere", ",", "partSphere", ",", " ", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"Scaled", "[", ".4", "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"SetProperty", "[", 
          RowBox[{"cover", ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"Scaled", "[", ".5", "]"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Item", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Arrowheads", "[", ".1", "]"}], ",", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", ".3"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", ".3"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
             ",", " ", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"Scaled", "[", ".3", "]"}]}]}], "]"}], ",", 
           RowBox[{"Alignment", "\[Rule]", "Right"}]}], "\[IndentingNewLine]",
           "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Item", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Graphics", "[", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Arrowheads", "[", ".1", "]"}], ",", 
               RowBox[{"Arrow", "[", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{"0", ",", ".3"}], "}"}], ",", 
                  RowBox[{"{", 
                   RowBox[{"0", ",", 
                    RowBox[{"-", ".3"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
             ",", " ", 
             RowBox[{"ImageSize", "\[Rule]", 
              RowBox[{"Scaled", "[", ".3", "]"}]}]}], "]"}], ",", 
           RowBox[{"Alignment", "\[Rule]", "Left"}]}], "\[IndentingNewLine]", 
          "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"RevolutionPlot3D", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{".5", "*", 
              RowBox[{"(", 
               RowBox[{"1", "-", 
                RowBox[{"x", "^", "2"}]}], ")"}]}], ",", "x"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"x", ",", 
             RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"\[Theta]", ",", "0", ",", 
             RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
           RowBox[{"Mesh", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{"5", ",", "10"}], "}"}]}], ",", 
           RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
           RowBox[{"Axes", "\[Rule]", "False"}], ",", 
           RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"Scaled", "[", ".3", "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"SetProperty", "[", 
          RowBox[{"goodOrbi", ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"Scaled", "[", ".5", "]"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Alignment", "\[Rule]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{"Right", ",", " ", "Left"}], "}"}], "\[IndentingNewLine]", 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ItemSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"Scaled", "[", ".5", "]"}], ",", " ", 
         RowBox[{"Scaled", "[", ".5", "]"}]}], " ", "}"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Scaled", "[", ".3", "]"}], ",", "0"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellChangeTimes->{
  3.583689434030222*^9, {3.583690038818116*^9, 3.583690064557714*^9}, {
   3.58369221561723*^9, 3.583692295584877*^9}, {3.5836971219493*^9, 
   3.583697128587344*^9}, {3.5836974345230513`*^9, 3.58369746233471*^9}, {
   3.5836974976174173`*^9, 3.583697552388973*^9}, {3.58369763742273*^9, 
   3.583697661283956*^9}, {3.583697697187623*^9, 3.583697697681795*^9}, {
   3.583697921812044*^9, 3.5836979270391903`*^9}, {3.583698022251027*^9, 
   3.583698106174611*^9}, {3.583698152561407*^9, 3.583698152736507*^9}, {
   3.583698209683529*^9, 3.58369823806411*^9}, {3.583699151298019*^9, 
   3.583699185253458*^9}, {3.583699394613495*^9, 3.583699469642783*^9}, {
   3.583950965930999*^9, 3.5839509892351837`*^9}, {3.584136641185576*^9, 
   3.584136642988099*^9}, {3.58418582819775*^9, 3.584186027196117*^9}, {
   3.58418642444545*^9, 3.584186500754262*^9}, {3.5841866582220087`*^9, 
   3.584186766405637*^9}, {3.584186811686653*^9, 3.584186832061205*^9}, 
   3.5841869859448557`*^9, 3.584187040241329*^9, {3.584187077361844*^9, 
   3.584187079656089*^9}, {3.584187139344602*^9, 3.58418718644466*^9}, {
   3.584187237970829*^9, 3.5841873678137493`*^9}, {3.584187400198305*^9, 
   3.584187624951578*^9}, {3.584187726903932*^9, 3.584187789769574*^9}, {
   3.584187821025146*^9, 3.584187897118555*^9}, {3.584191863261053*^9, 
   3.584191864173348*^9}, {3.584191907261262*^9, 3.584192301136611*^9}, {
   3.584192346117073*^9, 3.5841924261186447`*^9}, {3.58419278995798*^9, 
   3.5841928097936287`*^9}, {3.584192864357195*^9, 3.5841928690435534`*^9}, {
   3.584192934486223*^9, 3.584192945901002*^9}, {3.584192976590774*^9, 
   3.584193077134219*^9}, {3.584205795355566*^9, 3.584205796334511*^9}, {
   3.5843028644298*^9, 3.5843030594037027`*^9}, {3.5843031735375547`*^9, 
   3.584303205365191*^9}, {3.584304234766212*^9, 3.5843042391873217`*^9}, {
   3.5843957808888693`*^9, 3.584395804249073*^9}, {3.584395837001032*^9, 
   3.584395856582262*^9}, {3.584395895875249*^9, 3.5843959487753563`*^9}, {
   3.584396160573249*^9, 3.5843963995481167`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Orbifold Covering\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.03]], 
     StyleBox["\<\"Orbigraph Covering\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.03]]},
    {
     Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyEfXVYlk3zNo9iYGEgdnd3I2NgK3aBrdit2F1YGCgGInaCotiCrIiKASYg
qXSH3fFdNzs73t7fb473/YfjnWeP3XPPmZ3avW6rjJs1wC6XkZHRl4JGRrm1
v0bF3Tskre0IbiU6O1kue9u+SnSfS3/+ZIvCTQ9Gb1gaA7lyd1gXkne75cT5
F/ZfnZEuHu4sHdvcLgncTbqsLmXmbHm2YIlVMyKTxOLEcV4BndIg8tHO0Uuu
7bPMOmo/sXqPOFFvzPSFm1IzYI7N+LgBLQ9Y2uXMEykKbr+YsfZsFsS/9EtL
inLF8S9EwwMXGn13z4b7vXofafP0IMrvCPuff7T/ZUOdIKfT1hXdLI3wf8x4
YOYHBg8w+IHZLzD8AMMntBh60O/ydoDnRp7Tv9o1BMXz+shQnwGXouHBk63j
qx8IBMXz1YBfjrMbJMDAi17lSs96CYrncgdaXcx9Jhnqzevl8OxhKCier66+
cMCxUBr86dxgwXPzcFA8b5l/c3uxI+lw4MIFuxmuEaB4Hjfl3fH8mzIgj9ni
NmFLI0HxHHyoUT+f4AyoNHivn9/dSFA8M+OBmR8YPMDgB2a/wPDD8Qkde8xr
MuhVC5g85nK9vuPbEc/N9iyacsYxGH767ZiQfi+ceF53r+3AxpmRkJrUuNCk
NbHEc9J+v27Oo2Mg+vuIciU3JhDP1xz2ZgbkjYOIYt13+LkkEc+zShaPvFox
HpwXLij14Fsy8XzGq0yr9iIeih7d8qK4fwrxPK7nL9vDH+LBuNqgGH/jVOKZ
GQ/M/MDgAQY/MPsFhh+OTwh+bdquZMNK4LCh0sElJToSz03Wmt2YP/QW7Pyv
hrlPsRji+dIl35b5sv1hhH2HYwtCEonno7Fh+4NHB4CvcUZ2G5dU4nmv34MP
370fQvUfy2p8aZRBPJvdXXPhQK/H8Ktcg2jPxEziGSps7nqvcSDEpFU8dDEm
i3iOOGv2aNvSQChW5Wc116bZxDMzHpj5gcEDDH5g9gsMPxyfYHXKHco0rCTi
H9xfqc9znYMFVi8aektAa4fv3no8Z/Qf9sAk219Yrr25XJ/n+/s/uL4aHSAu
FMrw1+cZft2y+u39UKy5U/DTZz2e2y780vxQr8fi6eHHZ/R5tvHZkPKgcaDY
aFpkqj7PNRddtndaGigarxiVdUCPZ2Y8MPMDgwcY/MDsFxh+OD7ByNX9j2bn
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
vBRc1nvjiEJh4uuEXs+S9c6L17WyebOyw8Wq9evOfdM7L2Xc8sceqhQpKvn2
K69/XgbU37h+n1ekeFumU3f988LIgZkHmHWBwQnMvjg+geEHGD6hZ/c6vnGu
d8XPqaviAvTOy6qwtLXVtPxpbpbn+wF65yW2WIGVX7T8yb986PfLeufl0cwJ
h199eC2CZ7sNLawXf1NNV2ZofltMON7I1Vcvzl7ZM6nbhbOJouupG1mD9eJp
8XCTwaNGJYvWyTdsAvTi5uXkwBQtHonxR9IO/dCLj84JXTZO+pgipo5d8nq3
Xhxk5MDMA8y6wOAEZl8cn8DwAwyfsOR88A/NH4rjj0aVea0XX06eblRKVz98
mbbq0Rm9+OJZY0m4ru/Qft72fYP04sugBxsstPgoJnz+eHGZXn513/FdkhZn
RY+SyUkWennRmTIdJmvxWlT5XLTbeb38p25cb/OEapni/qMCPT318pzQVdne
Wv4gunxcuKyxXj5jUn7cIS0PEQWD/L3e6uUtjByYeYBZFxicwOyL4xMYfoDh
ExrsuLRcyyvE4Pv3Hffo5bE2FYbk19XP33aYHlyg1dNKLw1rz9umq58T/Ue2
L6WXx6p1R8l1haFeOkn8wlAvZeR+haFebkl+hKFeLCSfwlAvuST/wlAvBnJg
5gFmXWBwArMvjk9g+AGGT5rHWs4jDPXyVupFGOolUs5D9XUgntOX8pySXtLw
vI+T5530chX9QxfpH0gvZuhPWkl/Qnq5iv5nnPQ/pJe96K+mSH9FemHkwMwD
zLrA4ARmXxyfwPADDJ+wFM/dMXnuSC+n0Y99ln6M9OKF585CnjvSS9d/4xrp
xRPj42UZH0kvRf6Np6SXq//GX9JLBYzXFWW8Jr0MwfieLeM76YWRAzMPMOsC
gxOYfXF8AsMPMHxCH4xTP2ScIr2sw7g/R8Z90ksSxqk7Mk6RXr7Zm/bRywNJ
L4UeTK+ol0+SXlZmd16jl3+SXjqWSN+nl6+SXpJ/j5mhl9+SXlyKJmXo5cOk
F0YOzDzArAsMTmD2xfEJDD/A8Ak+H9026uV1pJcVfWts0MuTSS8RmVa79PI6
0ksHrJuCZd1EeumB9dcOWX+RXhywXssn6zXSy0us7xJkfUd6mYv1YLisB0kv
7lg/Bsr6kfTCyIGZB5h1gcEJzL44PoHhBxg+oSPWQamyDiK9FMW60k7WlaSX
EKyDzso6iPTydZXsP4TI/gPp5TT2N0zm5PQ3SC+/j8s+yXXZJyG9/H4s+y0/
Zb+F9NII+zaOsm9DenHC/s8q2f8hvTByYOYBZl1gcAKzL45PYPgBhk/YiH2D
FrJvQHrxxD5MRdmHIb2cw76Bm+wbkF5csI/kKftIpJfh2I/yk/0o0ss+7Gs1
ln0t0sss7I8tlv0x0ssZ7LPlrZPTZyO9hGK/Tsh+HemFkQMzDzDrAoMTmH1x
fALDDzB8wl3sv7WR/TfSCwy4nqF7P5R+Ko/dEr18TPXfll+/r+u/+arxJ7D/
VmlTTv9NGPaBgzrb9l53xMlX6YtZF5jxwMwPDB6uTyg64L5uyn39fT9Wvo67
rg63vr3UbpLmbxTO+b/W7NPV89uKXznYQvNbyq7Gnsl7TFf/d/jY22qk5ueU
XZmvv7hM1y/I2PnmmZZHUP2VVbRTao86GXDwdIkrhzU/quyq6t2KZrp+RM/G
RUft94qk+ouRAzMPMOsCgxOYfQHTtweGN2B4g6C75vGFtPq54vgBv7Q8lPjc
5h1fUFeHz7bJX/Oz5m8Un0eW1Tqoq9vvOM7fqOW/xKf1cpErp86PbnpAy5eJ
z2al0zrr+gKZU+s1/aX5P8WnzwCHVbo+wprPTV5q+TjxyciBmQeYdYHBCcy+
gOkzc/xA5J/B25dq9e2eQuX76M6x4i1kYf6V7bQ6+ffoJT90/oDqzZlNL3ho
dfW7RQtX6vyH4m1QWMtd57Q6vGzpoY20+u9vf+bVzosNtbo9PqliqM4/Kd4+
la31Okur8wvYVbqp82eKN0YOzDzArAsMTmD2BUwfmOMHvqTvCl6u+bv/1r6r
p8+b48V71paa32x7c/ILfd46LcuO9tT8bOz1/P31ebvn/droouaXD57t9Cte
j7eBpqO6NdX8eJkyt4/o87Zn+RiH95rf7/P8+Dp93hg5MPMAsy4wOIHZFzB9
Wo4fWFquZqCuPry3aEFn/XO6bsvS+ro8YPDdT16f9M7ph2e9OujyhsVuNnn1
z2mpfpe9dHVs85cxRfTP6dI66T90dW+N8TMP/dQ7pz9mzrDQ5TG9ng9vr39O
GTkw8wCzLjA4gdkXMH1Ujh8InROcrqvfOgWkDJuoFy9uld6boqsDXXpU699c
L140rLTjl65uXJ6rd6CtXryYuW7oa12daRw1uF2mXrzwmzK6ry7PLur0q9Ah
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
3yPdCP9NzybttHMr1j2e3ynMxF8o/K/nPq6onVthWvjmC+0cC7KffcVqaudW
+J/q5FjVOFgo/M0LZTzUzq3oU3+wf7/AYKHwL6nrkk87t6Jg0PlXoZVChMJf
y+xGf+3ciu8WniOrG4cIhb+bS1tH7dwKs31zX2vnWCj8u2wvpGnnVgwub7Wq
gN1VofAf6zDzjOY3xcL6l0fo/ir8US9Sp2h+U3j4Laio+6vwt6h1upnmN4XV
2F9xmh8l/N3ss85p/lMYvy1vo/tL+O1NN2p+U/QdlNlU91fhTyiy1k7zm6KQ
47Oiur8Kv+Xej781/ykmFVzsofur8BfYdCVM859iytP5K3R/Ff7zNr1Mtbgl
ptWxLaXTg8Kf7FzL9bLG+76zjj+0OEb491Zxm1BN431/xngjnR4U/iYzyh7r
r/G+f9u9ozo9KPzrLn2++UrjvcO80DdaHCP8d6oFQQ2N9wKr6tTV6UHhXx1z
8uYCjfewV5cm6vSg8NdMazmnoMb76mmuITo9KPwbb1f2StXsfpdF/ra6c6Dw
m+ypOiJOs/tyrcxr686Bwp/i06KutWb3Db4W3a47Bwq/Z7lFT4Vm9x49krN0
50DhHxwf/vw/ze7HlyxdSXcOFP6491F15ml2P2mR9RbdOVD4w6fOOe2p2f3D
fTUK/NHOgcKfen7Cte+a3Y+pnvhTdw4Ufs/Km+eZan7H+uekyvM0P6TwP62f
r4jO7xzrHGqj80MKv32fle8qan5nSVDb/To/pPC/HDqomM7vNBm44bDODyn8
NVqXfnRI8zt3bgdH6vyQwl+/ZsWMfprfcR/exXT22zTCb+dZN+w/ze94te/s
oPNDCv/LV8G/tmp+p7CD63KdH1L4fRa1mqfz+29mBroU0+KAwt8z3uGCzu9v
MSpff4QWBxR+qzk14rtqfv9r/u4lKmtxQOGv/Wlg/BvN7xdqMsvSVosDCr+n
89lyOr9/tXvGD10cUPinVSvVT+f3rdqOLT9AiwMKf/6HZkFldX6/4GKj3Foc
UPibFEm4qPP74/MU7rRNiwMKP5MXiQGIf67ET/6zD+JPl/jJfzJ5lyiGeEpI
PCRvgvv93Thnv+RvmfyHy/fEfOShpeSB5NeRt9OSt/+Vd3F5JjDzALMuMPke
MPktMDwAwxsweSYweTUw+gImjwUmbwfGHoDJk7m6ANqiHQ6Wdkj2dhfP0T15
jiiOM3mvSED/cFD6B7LPVegf5kn/QPY5G8+1uzzXZFdv0G/UlX6D7JDJY0Vr
9BvHpd8g+2mCfsZb+pn/lSdz44GZH5g8HBj8wOwXmDwfGN6AqReA4R+YugMY
/XL2wNVlEIN+OK/0w2QP9zCOdJdx5G8d93/XHaI/xseyMj6S/bS4JeNjfRkf
yX5qT5Nx7YGMa2QPvzFuusu4SfbD1BGi2QcZNyfKuEn2cBLj7DgZZ/9XncKN
B2Z+YOogYPADs19g6ixgeAOmXgOGf2DqPmD0y9kDVxcDeP6Th5A9PMc8yknm
UWQ/TN0nYjA/3C/zQ7Kf7ZgfHpD5IdnPEszrImReR/ZQB/PGAzJvJPth6jhx
E/PGQjJvJHtYhnlmJ5ln/q86kRsPzPzA1KHA4Admv8DUucDwBky9DAz/wNTd
wOiXsweuLwEVMA9fI/NwsodTWEfMkHUE2Q9Td1N9dE7WR2Q/zbE+6iLrI7Kf
9ljXTJZ1DdlDV6yb8si6ieyHqaNFPNZNhWXdRPawGOusfrLO+l91OjcemPmB
6QMAgx+Y/QLTZwCGN2D6FcDwD0zfAxj9cvbA9YXABOvQqbIOJXtQdfQiWUeT
/TB9DxGN/YESsj9A9jME+wP3ZX+A7Kcr1vWlZV3/Nx5h36C/7BuQ/TB9DFET
+wa/Zd/grz1gn8FU9hn+V5+EGw/M/MD0YYDBD8x+genzAMMbMP0iYPgHpu8E
jH45e+D6cuCEfZjhsg9D9nAD+0gOso9E9sP0nYQ74vy8Jwcn1acDcb9Bcr9U
n9ZFe6gn7UHVleI78rlb8kl1K9NHEgFoDxOkPai6VZRF/X7IyNHv/+pTceOB
mR+YPhgw+IHZLzB9NmB4A6ZfBwz/wPT9gNEvZw9cX5T6kD8a5tiD6gMIZxxf
RI6nPgbT9xMN0E9OlX6S7GcZ+tvX0t+S/aRjPNoh4xHZw0n05/WlPyf7Yfp4
ohjGo+UyHpE9JGB8+STjy//qE3LjgZkfmD4kMPiB2S8wfU5geAOmXwoM/8D0
XYHRL2cPXF8ahmE88pLxiOyhMvqratJfkf0wfVfRBfO0KTJP+9vfxnyvjMz3
yH4CMB++JvNhsgdHzCdPyXyS7Ifpo4oXmA8byXyY7OEB5rdbZX77v/q03Hhg
5gemDwwMfmD2C0yfGRjegOlXA8M/MH1vYPTL2QN3LwDrMB8uIfNhsoenmC+5
yXyJ7Ifpe4vN/9aJZD+d/q03yX5yz/2nHv8bv/6tZ8l+mD62GP9vPU72UOjT
P/X1/+qTc+OBmR+YPjww+IHZLzB9fmB4A+a+ABj+gbl3AEa/nD1w9zIw5996
nOyh5b/1GtkPc+8gmmKf6rTsU5H9vMJ+10rZ7yL72YT9QHPZDyR76Ir9tNqy
n0b2w9wjiMLYD3SR/UCyh2nY38sn+3v/656CGw/M/MDcgwCDH5j9AnPPAgxv
wNzXAMM/MPc+wOiXswfuXgx6YT/QT/YDyR76Yr9og+wXkf0w9z5iCPa9f8i+
N9lPWeyr/5F9dbKfvnivkSrvNcgelmA/30b288l+mHsckY73Fxvl/QXZQzje
O8yW9w7/656IGw/M/MDcQwGDH5j9AnPPBQxvwNyXAcM/MPduwOiXswfuXhKm
4n3EOHkfQfZQBfvVN2S/muyHuXcTr/CexUves5D9dMV7nJ7yHofsJwjv1x7I
+zWyBxu8V0qX90pkP1Z4XzZC3peR3m3xnitI3nORnTByYOYBZl1gcAKzL2B4
AIZPjn/uHhYc8X7zirzfJP5d8X4qQN5Pkb4YOTcPhCy2T9b1DW/WmXog76i/
9TUjh2CU16ybIyc8jBxSf8/I+d1b05OOFX4V2+urvmtbW1/+Tq7VmW6rB5R0
8VXftX33lL+ra/EzYu/TKq6+6ru2Nz/k7/DmW2A1vfm0g77qu7Y3p+Xv9n5Y
7Z/uWsANf1/di5MDMw8w68KM8sN2X57UEUqOLd7ryBhT+p1Jta+NWbl1+7I0
3FfvT+6rtH1ZGu7LtnAz3fyWal+dndud+dU+EwK+3pl83/YmfncfLg4NFJN1
9w33TDIfDdN756Pwh4ftnqbht1Q8PKn/JU53T/Nm7oQNN/X6XeOmmQfo7jls
ay6OeKT3Lkjx06RBUR0/loq3rjeLj9fduwzrumbACr1+V4f+pz73CsiGUj+a
mRTWe0fEzAPMeGDmB2ZfwOAHZr/A8AwMn8DwD4weoXwxMNbd6/Te/aZ3hl5/
jLEHGJkYHTnaKhXCu6Z0WHP/KlT4FeVxdUY8JHb3bbHlwzOY8PH0n9spKy3p
PArnkrp+/foyH4I+6PU9fudx2Hzb5RUsqf/bJ7LrCfqepSPir/EtB79Q9hOI
/HScl8MP+Vsr5P+W5J/8qiXqa7nUF/nPMcj/bck/+cmDyGeNAjl8kj9kzjXn
B/7yMGuSkV/KSl/yJ8hDjOSB/NtP5OG+5IHeY0/Hc7penlP6vSlmHo5nwehF
MH4AmHUFsy+wRXuo2y3HHgTagyiHdnVS2hXFU4ZnweiF0yOnd2DshLMrzp4F
cy64fXE8AKNfzv7F0uUD40IKx8JVj06TKxXeYdm5ScPvF7T64HYP77qjSiXD
gMB37+97O1varS/ScVytJPGoRNy0X5/TYE3Lp1NLjd1v6RCe5VCiXaywHhR8
JmyTlg+4vPvUPOiA5QBbt4ObDoYJh8YP78RVzYaZnzoGN7E+aNkgn++QsE1B
otr+Qc1vJmdDtSabLBbkc7Oc7rkioe3FS6L3klsx0b4ZMGtet0MXPSNhjZTD
4u6X/dcVzoCKVfNvjDWOhNZyHng8IerYT9c02NZ0ztfMI+EwTK4LO3N98B7T
KwUG1c+T0mTiK9gsccKNPxNKfwpKgKwwezsvk2CYLPcFn4yLD/l88zWY72yf
XXR/EHSVPMC32lMrrUiIh+XWqd4P36UQnusltzn7T4mHKzPGlksYmkJ4OodZ
zfaeGgfuRqHWpUonE55ku7f13z2Ngc7tzNO+mSUSnswNQ2vZPI6CRg9nhFws
HEd4qv5yMClnFQJbq4bM9DobQXgqhnf/88EuEJz6Na72vmw24bkwZOkccfUx
WLQoXb6AbRbh+dnxSDv3no9gV1DXyR0DMwjPrf0PZ7YzegCDD8X+TuuRRngO
TY/qcMDxLvjdmzq59tokwmOeuSwixdYXLlwpnn/M4RjCUy2z0ukvdoEieph3
5js9PIGrfXP7X30s8hTKTDbRw1PF65vb+Z6PRLGfD1rq4+n9evsGS6MHYvvV
S8/18ZjPTkw66HhXHOh/s6M+nuttct/NsPUVdx6sTB+th+fydotITV/ibUzl
mvr66nA5vPfdKfGiVpkWm+L19BW2snZFn6lxwuNTnbvmevrqMffcY01f4l2X
ldP09XVhTctWto+jxMxKeafo6+tYxwEvNH2JV82uPLmopy+r5t+6v/bNEB6h
E7I89ey5ePb0OusLZ4j97XfHvtGz55U3Rhj/ck0TJ0q7T8rQs+eBMQXMxvZK
EXuG1V3SWM+eH3YOGa/Zs7jcsk79i3r2XLzqqnuaPQsxZ2FlUz17dnfNOXfi
RI1Xpfz3HbFQeL43yzmnYkq+LJem9Y9YKDxOQ3POtaji9N+c/T0PWyg8/uY5
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
PtrH9ksne4s9kmJW0ywMtv380inlagbJb1SynHDWIwoKG0/d7bIq469dLVhR
Z++FCLBx7V763fe/8gc4vgCOV/bTGte1w3WVnfRC/MMRv7IHM+ShN/Kg9P4S
+byLfCr9zke9VEK9KD0eG23WpohW35Zt2OqXLv9VesnC+DJVxheSv7kl86Kd
mBcp+TWMU81knCJ9HcT8qg7mV0pepKWMd24y3v31Y5inbcM8TcmdMW4uknGT
9PWrvsz3VmC+p+QNewx53vfhGXjtd8quWels0tfIzEnzRj08Iz7UXT9cX+5g
FnnR+tBOKD1y69U1Sdmkry9V6l+ffmin+BA60UtfvqHkv+OVHt1x3WhcV+nx
NeJfgPiVHq2Rh/3Ig9JjBvLZEPlUeixmI/Vih3pRejzxqoZWJ6zyTVwh6wal
l72YhzyTeQjJy2D+uRrzTyWPw3ymqMxnSF9LMY9tjHksnUfMi0rLvIj0lYX5
8HLMh5V8OOZXN2R+RfragXn1PMyrlbzYiIH3apmFCaum/VOS9c5d7z47uhWJ
j9biw6w8+uf0sndq9L4LEeJUl6BLb/XOnVXJhcU8PKLEqhj72vrn9ASOP4vj
lR5z47pdcV2lR4P8kPT4Y9e/PCg93vk3PyQ9rkC9BKFeqH5ZE5FPV39OMHvo
qH8eC2O+OkLmqyTPwDz/HOb5Sr4D895iMu8lfal6IQLrBSWvhPlzE5k/k77e
Yt2xE+sOJV+MeXg1mYeTvtZi/ZKM9YuSLzpwbEAv62TxLXToUQ+9ON7i7PLS
Af1SRUJ6224b9eJ+yVtFdmdr80we7dj7k15c/rDZvo1P91SRNKAm6Mfxwjh+
Do5XepyH6/7BdZUe5yP+2oif6lzkoSXyoPS4Cvk0Qz6VHn8vkHoZhXpRenxf
715FXV/DqHLmjHJ68XEX1jVVZF1D8t9YTy2pJ+spJR+F9dEsWR+RvnpiXXYY
6zIlP4Z1Vrass0hfX7G+88X6TslDsF6LkfUa6Wsp1on1sE5U8nrJxm2efcwU
z7osCyujl78tS17bUMt/xK0zD/r30Mv3Rs/eYqvlY2JW2W8Bp/XyseubbAZp
+ZUwfWNiU1ovfxuB4w/ieKXHurhuDK6r9PgM8X9C/Ib15nfkwbDeXIh8Gtab
dVEvSo+X4OE3Xf+uo1mHp2m2vv+fvgZLfQkl343zlMe6VcmVvjZIfQmlL6Xf
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
tskkfv74Phic61io+JS/wGzzsEzih5EDMw8w6wKDE5h9cTzAmLIN2lY7Gi22
O7RLvNkhgvixdX4S9WZYnHBd07dssY4xxE94lx6uvXwTRKJxjwNrxsQRPzYz
27WaPDpJhB+/897kRTzxk3r71fKRdsnizLHbBSrcTCB+XH2t7aolJIv2C856
Tq+bSPwwcmDmAWZdYHACsy+OB4gt51TPonW8uPJk/aC093eIn8aLv5x3C0wW
4bUW2T1YEED8jF07L21gSpqwNt7q283hEfFjFNr4w/g8meL1w6oDr7sGEj8P
8v+/uq48vOdr6dM2pK0Wvd1oKuVt1VIaghJNh1JFXltd0dqa3motVaWIoIur
rcRSW0tTQuyhSHK70DSSCdLEEgkiP0UWIQsSv4g1lHo93/mck+f99c6/85xn
zpzPmTNnzpyZc6LD2rzl5nWbr/bYWXbQ4tO3JD983W037+lYHJD3dabFR6GT
woeUfkmRk5RxaTjQGdCjhM4Gn7bgkyh82OAzEv2+IP2ywedeyJkgcrLB5wDG
9amMiw0+A4BDlODABh+FTgofUvolRU5SxkXKuUDDh0ZD374SfbO4hUA/l4l+
WtwKoM8Fos8Wt7eh/0dE/y1uFVgva2S9WNzWYn21l/VlcVPopPAhpV9S5CRl
XKT4+Ro+NBx27GWxYxa3b2D3fMXuWdyawU4+LnbS4vYS7OowsasWt9mww2li
hy1uDVns9kWx2xY3hU4KH1L6JUVOUsZFip+v4UNjsT8OkP3R4jYc++kY2U8t
bmOw/5bI/mtxm4H9OkL2a4ubH/b3f8r+bnG7/IX4A8vEH7C4KXRS+JDSLyly
kjIu7dyh4UOvwO9qLX5Xtb7BTzsifprFrepH8es6il9ncWsLP9Bf/ECLW2v4
jR+I32hxu9pI/My3xc+0uCl0UviQ0i8pcpIyLu3cpOFDQ+DP13Q5/rzFbRD8
/zPi/1vc6uC8UDPGOS9Y3LrgfLFJzhcWtz04j3SR84jFbRDOL/5yfrG4KXRS
+JDSLylykjIu7Tyo4UObugcN/9g7hwZlNcq/8o80+9+lQqcvNr4/a9+t/VR2
ZPaEBfOzbXuFTi1GPRX6R+lG2n/lvZ0bvz1m2yt0ClxYnv7jHyl8tW69JUfa
u2x7hU6BuZ/Miks/zDUXPbKhcGZWdfv/Tqe4DQ3a96p3jI+uHvdiw6Tttr1C
p/+AvkPo9h/YlcgXqin5QmzynVzIL/KX/CI2+U4dkI90vcDJR2KT77QL+Ut1
JX+JTb5TBPKdeki+E5t8J6U9KfxJkYcU+bXx0qvA8+pCB0+LwwjkoaVIHprF
YSDy1jZJ3prFYRHy3OpJnpvFoS7y4gZLXpzFYTTy6I5LHp3FQWlPCn9S5CFF
fm28NAB6WCl6aHFIRn7jcMlvtDh43ZF8yGDJh7Q4bED+ZCvJn7Q4xCDf8kPJ
t7Q4rEB+Zk/Jz7Q4KO1J4U+KPKTIr42XXO/L+s2Q9WtxKPlT8mZ3S96sxeEB
5NnGSJ6txcG9RfJyu0hersXBD3m8IySP1+LwJPJ+QyTv1+KgtCeFPynykCK/
Nl6aCLtXKXbP4pCGfOw4yce2OAQjf/t1yd+2ONyPfO9eku9tcRiL/PA+kh9u
cfBHPvl91518couD0p4U/qTIQ4r82nhpHfaLUbJfWByaIM/fu5GT529xqERd
QKrUBVgcvFBHsEXqCCwOtVB38JPUHVgcYlGn0EPqFCwOSntS+JMiDynya+PV
7in42rdBW5aNL+DIiPLbHW8n87WlE8ckLC9j5b6Jx90TPmvx7TL+Li1lzMrI
AzzbyeM6ycq9FXft/ZFfQMIFLhpyp9Kr70HEk4+wcv/F8yK2BVYmuDlk5NUG
vkGZyOPard2jce9fLpzIubsfxXR7enva3f3Iz+k3lDOLIv9ckObmoM5NBy8c
nIl8rV00ePmK8F7ZF/hQ4oqgHaMO8kEnL+uwds9Fo1euHDbQ6zfe82Jk2bSY
73lx4vwzt45UaPcXPD9uUocJ/Y7xkDUbfOI3HuUnjl/25itlrNwrcUy7F/zr
TCrmXrNuRqyvcYbTnfzJXFbup/hOzStP++SU8KbJA6f3Dyji/s59RDYr91y8
+I577JQNpVzUeXyb4ktF/JNzP5iq3Zdxap8G8dcvlfITbZudXfhSMT/r4LyI
t6Q1DaqbW8qt42vP6v4/xTzFwXk79W8dULJudyln7b49hesUcwvnnjSFOt05
HfJu/VIu8W33zo6Pini+kwd1WLvnokkTCxfefmMXj3zzp3VP/5jME8Ie6H49
rEK7Z+GH05e0/bLF79zk91cbJJSe5E4+oZtS+5azcg/F7xYf+fTLtke5qlOD
GXtWn+cHnfnKY+U+izPP589b9HUOJ33uFdt3bDl/69z3HWXlXozXnT711uVh
Lh637NzTCTMucGdnvn7X7td4YuTLd2LiXEzvNKrcffYCj3Twj+KoZvkfDV/q
4nczYsc3uOs3zXHmMYGmtls68sF5Lu53bcKLn/16gbs56zeJ6mxt12WWl4s7
ZS84OMH7Av/H0atM2rzZx51ensMjnnr2uqu0nHs696qHtPsyOnHvPV/lN/6F
F9R4YMUbuQe4b/uI9ZWNKqjqu5Y/+E3eQh1uRtzfr1vu3XNy1ev7N5Uz5ex/
zbtXItVaPOqhwsfLeYCzXvL4y/TlbQr9kujA3IVjGj7k5pPOffpR7jh63ao5
bybTrtzJQ6YFVvBe5/4oneNzPl66JieZzu3LfqhrcgWPcu4H13Gk978r+sUn
05Tex3Jzvqvg5o59+I3um5q9ql1JEs2v3z7z93Q33+PkSWbRgY+jDs66vJp+
brPymfcmHeaWl7y8ylPdFPXm7o5D4jKp/429azsFuHjm2umlWfdc4P3hn0a7
3QU0Iz55zq+NSznSwSGft85Y0O6DZwqp5J0zE9xZZ1nytXL4bI2t3RJchfTQ
kZeTHvzj7vnNuc/dy2vefOTJoudP09LO/Z9Y1+c8RznztZkb/ivEP7DBaeo9
7OrN0R3P4x5wB00Z07K5a3MhxTT+/va9353jyY5+ZlJM4fJQ36VpFHLn+YCf
hx7i2nFfvFcy1k0rVvR56Y1wF5U2CQ4+seGunhXfmp0z7AJf7pIwzH/HWdrT
eOWQ+ZXHOd/Jsy3gtQHJa15aep6q4o/27393XUh9oovDm10ObZVcRvduiqpb
2zePTzv3xfu54P4be0b2LKe3jp95zSc+jw85+hPLPl0a3bnxcjmNGLEk6Jn1
eXzTua//hdJfeLFGvVHZ9HpISFXO8FQu+qBm2ql6brqJvNydkpdLm5GXWwU5
Y0VOyoWc6cjXPSj5usj/PMKbIH+hyI/8TxcPRv5tB8m/Jck3Psybkd97UvJ7
KRT5vV9jvGUxzngpD+P9Afm9JyW/F/mKKdwE4+0h46U7Ml4ejTzhzyVPmL5C
nnAxcOsquFEicFPak9KeFHnIU56/gL8yXlLGSwpupOBPCv7a/JIyv5SCfOZ4
yWcm8R8qeBf0p6XoD5WI/vA7yA9Pl/xwikB++Hro/3HRf1oL/X8JefLPSZ48
mTz5AqzrybKuyaxrN/Lnm0n+PJn8+R1Y7/my3sms9zLkwwdJPjzm5RD/G+s3
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
        "], {{
          {RGBColor[0, 0, 1], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnXf8V+P7x8/nnPN+n0V2VkkilD0rIqVEZnZWsouy9ygZ2XurjJRd2YRI
hIiUMkuhhcxk5vd6fl739/H74zzO9b7f97nPusd1va7XdZ2WfQb07B9HUdS8
jKJE+x/TKJrREEVzJf+trZm25bUN05+xyiNtN0keooN+1c97JH+tsn8kX6Oy
P7VfW9ttKr9Kv5dIfr2mNrIoylTvFcmV5JrkO1XnatVZqjoPq3xZXeeXfJ3K
r1T5z5LvVfnfKl8oeYTkfyX/IHmPKopWy6OopeQXVf6utkRt3q7j/lJZG23P
qZ1VVLaStr10X4v03yWS79JxK+W+t2Ecp+tZJPk+yf+o/e8k3y75eW3zJO+q
c2Wqv7Lkp9XmT2qjibY39H8THZtL/lrlpdrfQvJjqruptg6qf7/2LbS1lfy4
6gxTnVJ1xki+T/Jykh+RPFRyIflJycMlV5Lv13557dvr2Ok612o61xr6PUV1
1td+PW0fqXxVla8u+UPJq0huKnmy6vyrfQttd0u+TW39oXZmqE5T1VlT5RNV
/ojK15b8luRHJTeT/LbkxyQ3l/y49uto313HzlP5tpK31va65If131qSZ6vN
n7RtIPlTlT+t8raSv1VZM51rI56P5LUlbyh5vuTmkjeWvFDyOpLbSL5Dx96q
Y3/XuR5Qeary7yWPlFyTvFjyY5L/q7tvTNE7vSJ2f/g6cv/lHY1T+X+R++TU
1H2JfvWsjn2o7n79hOQocx++Twfeozp1XUNTvath2tZT+WjVacjch8dKjjP3
1UWSW2S+x3/U/mAdO1/l/0q+LHZffUp1yszPfIzkIvN9PSk5l/wb16Pzrhz6
52Qde3nsvke/Hhr6Nv1098p9dajqN4QxSH+8PfTJXPs7tK3CeVVnxdA/39O5
vqR/SH5A5ffGHoOfqGyNzO/9fZW3Cn3pXcktQ59ppfYe0raF2txN1zZfx16o
8udV56HYfay7yhdIvkjyeLW5XOZn+KjkuuSfdOyNqn+z6vwi+VbJt8S+9z10
7ELJF9NnVH/NzH1vfZ1zlLYtVWeSylfOPEa2UtlYbZ1UvqX2o7XtLHmu2tyq
weNupuqvnrlPvqDykbHHxSuhr9Ln31SdFTOPwYfCuGP8TlT5CpnH4FuSV8o8
Bl9SnVGxx91gyTfEnituVZ2hdfe7F3Uv0/T/1AbPXV9qvzp9WP8PVzuf63dO
38v8H/PnLO3XiDxfzmnwnMl8+JXktejnOnYE81KD59LZ2q+p8n7qCwu1jdR/
D6rOA9p/0eC+PUK/m4Sx84jkVpIf1f5+1VmoOj113NvavtH/t+maK7X7lMpv
llxKHit5R+1XiD1meXffad86zIcj1da6YV34puH/58+H6x4vd0seVXe//Sr1
usD1PMf8z5gPc+z9qrOq5CaSH8t8jrEqe5gxIvkd5jFtmzCmtP3c4PmTef4J
1dtc8g1ar1bO3Sbz/Y8NnvPfps/UXH+0ruEC3cub+u83HXeNtrdU/pvKX9U2
XuVLVHadtkkq78jYiT0vXaqyo3Q9T4f5c7H2G6vOCmr7ceYl/X5KdR5lTgjr
2ui6+y1jYYzkrRjLkp9SnT8b3P85bsPI8/xfkrePPP//IXnbyHPgD5I3Yh7T
sU/WPQZXlTw2cz3WEdrbTuWX6f+jVf4s/VNyb8nPSL5cch/Jz0nuIXl3yZdK
Pk73vUT3eKPkw1W+j8pvkryn5D0kD5Z8hOR9Jd8seQ/J3SUPkry75N0kD5R8
lNr5Re1cJ7mP5N8k3yD5dMl3sg5r21v1v9F2heTeKv9Vda6XfK7kZZKHSz6f
uVryfZKPZu3Vdofkq1X+iPajeP4q+0vbu5xX+566hlsln6M6/+rYYZKPVPl+
Kr9F8sXqFydoe17PZ4DKD1b5Ayq/KPUicT/zto4bytqLvqHyx5i3eO/6/5vI
+s/PqnMt55d8hto7VtvDjH3t+2n7UPIzOnYyfZZ71rlOzNzfHlL5y9qPY/yq
/ASVT+S+dFzf3P3wBtXJdb7RjDXJheQxzO3aP8kcpjpn6thfGBvM4arzEuXa
zpJ8t/Z3sW7q/5PU/luSr5T8p7YXeRfa91L5Q5JPk3yo5BGST5V8CPMHa0/i
cUD/v1PlfVU+ieeu9lfWf6/xXCSvKnkCfU/yapLfkPyw5FUkv866IPl91hxt
rzb4/j6mf+r/G2Ov41dKvin2On5NWBd+CjrSnoXGFnOc+vkJ2nZQ+cZhLdsU
fS6slYz9WzT2H0SvkhypjdUavC4wN0yuuQ7j5v2ax84+mvPe1PaBfr+v89yq
46+L3eadsdffffX/W9qmss5ru6XW2HS0rdrZSc+kv+rsKnnXzOtdW93vlqpw
jOTv1OZK2m5R/f8avN6yNh3Fmsz5JB8uuSb5cslr6byXxu5jDTrPS2rrYx3z
lf6PtV2m8vV0ru10riMa/BzuiMOarv9v1PVfy5qkY4+vWc9soX0/bXuwPoZ1
fEfJH6j+M6Xv82ntn9B1bKbyrVTnwdjr/jM61ywdu5PKd1B5k9h62rMq/6rm
e1kutn63t+TlJbeWvA9zu+rMrfn5/6N9a13zDg1uH72CNrfBdghr8W7cX+k5
f9PE8z06yWaJ51HW4u6qM6T0XDmzwWsses5wXXuPwjrx6jrXcTXrxlujFwWd
ZHf9f23pObSp/j9WWzv0DZVfX3oe/wtdVdfZQfLPOvZVHbuj5N/p75J3kjxS
7+SVMH4Zr8dU7tPn6H6HaHuC+UT7wzOPWeaDLQvPCQ/q2NNjj9NLVOeIzGvr
fSpvknhOHiZ5+cTz9uq6ri107Ac69gLVPyzznHCv6iyXeD5/VvIlseeZZZLX
SDxOr1b9e+oec9drf0zmMXuj5GMzj81bJR+fecy+rGM/COP02zCWmZeYW2dH
vv75Kl898Xzyn+Q1Jb8tebHkQbH1nHmSmyae67B3DtH1ryt5kM51ZGa9opvk
rpl1vGWq240xpG2C2uik/fE616fotxwv+RdsMfq9/ltF7a+vej0l/61jV5e8
i+TxqrsDx7COM3epvKPK/2AekrwzstpZX+dtzzuV3EpyO+bKoPOwpjdh3lb9
fSSvKPk9yftKLnT+tqq/u+RK8iaS92Bs8t5UZzPJNZU3ZS2UvJyOfVfle9Pf
JB+s/YHaVtD/m+nYPSX/pus9mDVJ1/y+6u7H/C25UP139Hsv/V5e9TdV/R4N
Hr8PxNbDp+i5jik9/rdTeRr02E5qb1LuMbgiOlHmdvZS2WxtR6h8Z+3fzD1m
99Z+jrYj0an0TDbM3OdPVtlh2i5grtP1zI49122nNndWnQGSt5fcSfKpjFnV
OYF3xxiXPEv1T5G8keQdJQ9WO89rv7nKDpZc6VxH1KzfltofXrN+u5Pu6/TS
+u5KKju6Zv1tFmNCx2/aYJ3xqKA3zm2w3gkWsZzKjqxZ/5yl836ZWo++E5ug
sD6IDtgn6IEdVXZqaR16C+qr/ZMlt9d9ddZ9nc71S57BmJHcVXXO1f4cbeur
rJ3qHCW5s8rP1v5Mbc0lT489P2+gOu1Vpzdrgc65ruRNWCslZ5ltn+G6r7tj
4x5fMKZj12mtYzuoztGS20neRfJpkj/U/4dqf4qOXV3nmqrfvfT7CMlXaT+E
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
p6i5xvgX/OxwDlskjn+hLxH/gl8ejgqcB2IN6P9wVg8MuAr4RiNvSvKHqd+p
uk0jt4H6eWQM/sXSODz8B9pXd2/kVBBHo7+inRP7Veg/+AG5dvRYONsch57c
Xu1MKM1VWjfxsfRn/Davl/bddEq8Z6xdqbK1c89LWySOPWGtv0blzXL3f/w5
40ufG12Z8cR5j63bx4l/8/i6faj4T/dV/c9Vf1JsvhA2HbZtm9Q2OLYzvkL+
BzPEJ/VWbHsWv9abse1isPqvYuNdn+phNCvNg8Hu/qSw7bYb9nvpMdc0nAvb
cJVwLjAT/HTdc+vhm6XG/MHVD1TZN6W5Xz0lzy7Nx+oa6mAvf6PztCnNfYH/
g22Ljdk2yOgz4L1vx8ZI91M7X5b+Df5Ae2AyYA4H5cZ4sTG/Lqx/HhEwc/Sl
bv/DzyV/qf9bqZ2P9fsLyeuV5ht9hg+lNEcHm3pmbIwCm316OBd2+ozYuOgs
1V+/9G988bGuabTKL9c1lMwhkX3iDei1ke19zgmuu09ibhvymqnPyfv6HL9M
ac4QPnQ4YwNVvmVqbhU47bf4m0r/XiB5q9Lvslnq43hW8/F/lT5+m9RcMrBf
bO5PYtvdXVL7KdBDegX5Ssnz8PeWPmZ/3cuc0te6b2JeH/d+AM+59G/8O3Nj
4x5HpuZjwJE4LDW3AXvh9CDfHtkf8nVs3P6sUB8d4yedd4fScS/4Dv4sbEPh
i1lc2F74Ufv2pWNmdk9dFxvnLNX5q7D99TP+59IxML/gTy4dn4Y/5bvYutNv
Ku+CvyS2z4U9etSv+JlL19szdRvoZvg7aAP9DU47PjRssTNS+3bRP/GrLI6t
B14dyh+K7K/5IbbeyHzMvAyfFp/anNh4MvyQtDS34TzJywr3mXMl/1tYjz1b
8t+F9S54NUxc6O34kYk7wEaAS/NHbJsRjs3vse2ObmGtR19YiO+09LnPV/l/
hfst/JylsW3PgSqvlV4rj04dX4CNc47K/ymsH56XOtaA6xmk8nppvR1+Plg3
cxe8GkhKXP+xqWMZsJsuU/2C9ZExIjkrrc/D/fkztj0LJx+8Gr7KhaljGTjv
YNXPS9sL6IzojnCb4TujU6JPolciw39+JuCl4O3wapLEzw2uC/b8a5E59mC5
YNH4cdPENstNqWMHuK9r0btK6+Fg4/DzP4nMg4LPPzMyH2aF0jr2dZJXKm0f
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
fyeDuRHdC70LnhLjokfqte/gmn0g/wcM634c
              "]], 
             Polygon3DBox[CompressedData["
1:eJxFnHP4xMjShTOZX2YykzXv2sZd27Zt27btu7Zt27Zt2/Z+77tnnuf7o5/p
SnU6maTTXXXqVE+wwbYrbFMWRfFAVRRD/N7aK4r/NEVxEMIFraIYleO7dIti
unZRzIr+cvRd9Juj/x/6GdEfgX419AegnwH5MORVkfdHPrcuiqNovwnHh6X9
0Z2i2BD9iOgfQb8r9dEpl3ETs3Jsa9pNRBkVeVra3871xub8w7jeRcjTUZ+e
MgJtn+P83Tn3P5TLaT8bx0bh3J2Q/0t9FvRbIU9IGQX9NJx/C/2Nxvn709/5
yB9wP6/RfiPks2g/NW0PQl6W83dA/pH2f/eLYhX05yKPj34v9POiXwn5B/R/
oV8J/TnI+6ObnHIv11uMNntTH59yE/J8yOtw7e0oL3JsGc5Zm/q2lOeRl0Se
hv4Pob4cbXekv+/o/49+2np/PyH/g7wa8nnIE9B+n276Xhn5ZZ73qfS3A8fn
4/9Nyu9+6BdFvyH6MZF36+ZZL4z8Pf39SX/L09/ZyG/yPF5AvxTyMcj7Up+M
ck+ZPibj/AO6+W8boX8L+UnKPNQn4npjUd+jm3exCMd2pj4C5ZwyY2hr+l8F
+R/kvbjGaY4dSoluN8pc3P/j3P839LME59/C78mU8am36P9+6sPR/kzOv5D2
09L+Mdq/yfE5abMlv+NRGvTj034L6uNSesjjIt9N+xNovw3H/os8PL87+M7o
a3LO35P6eJQby7zjb9G/Q1ka3Uy0P4nnVXD+mtz7SVRnQ3cU7del7XHIsyMf
g7we8v+Qd6Q+POXsMmPyXr8D5DOQz0MeDnk7n7HPlvZtns/3HFuL+sJcb1nu
90yuNzVtHuaczdGNQ6mpj4P+Uu5nB/Src96xyAshP4B8GfKnyF8gX468AOd/
wDkbcu7IlO/Q/cU1lkX/EPpraP8jxxbkdyHafkLbo9CPxPUfRH+z10VekPb3
I19Ku09ovwDyfciXIH+MPBvyPcjnIb+OfGYv430x5H2RL0HeHnlV5GOQZ0a+
E/ls5FeQ50DelPF4pM+e622B7l7K+ejfQH9GL9/LIsj7IM+KfDfyuX7HyBtw
nyNRvqH+O+fPz/EF+T8f83+ORF4P3QiUr9D/jLwP+rXR93xfvNPZ6W9Drn8o
8tfoz0B/BOVF6k9xzmXod/T9c+w45D859wb6+81vgfMv5PhNyH8gv4/+D/TX
If+C/Ab646mvSXke3eOUs2h/IvKIfrvImyOvxDl/cb+Xc2x9dZSv0f2KfBPX
34Xrb0W7czl2A/JOyJshn418I/LOyFsgn4O8Cr9L0d/39HcG59+MflfHP8fP
Qz8e9fEpf6C/Cf2mHF+R9n8iX+bzov3h6L/gHqb2+0HeDXlX2l2F/A9tT6T+
gN8m/28l2p2G/CjyPvSxDvIwlPdaeUZf0P4k9A8i74F+ZXSnd/Is9kNeEflU
5EeQ90b+kvYnIz+EvCfyun4/lA9becYrUD8F/cPIe6FfxvkT+Rbk7ZHXQu77
DSP/RPu1nRso77byTk6gXlI+ov4B5ROudwDn34B+a85fyvXAd4q8LfKn6A9E
vhHZhXNZ9Ici34a8I/LSyAcj34y8HfJFg/EwnP23Mn9fw/NbnH6+Qv8z8rXI
SyB/jfwrv1fR/gfav8Tz/B35mir3/iryX8jH0ed99HUv8s/IV/g9o39+KN/n
bozfcxi/1WA+2AP5XOQO8t+0P57z76d+H+2/Rj4G+V7ke5Bnof1d3M85HHuV
Y1+hP4r6Pb579GcOvoe7kZ+lPED7vVxPOXY98hOOT653VtsJm7nPtZryLf/t
Yg7dh35P5L1pf63XRN4deXfkq/1P3i/ynsjXIC+MvA/9nU9/3cH8sh7yQchf
0t9+tFuHe+wjn+ga6dxLGRZ5P8pTtD+Z9jdRH5Hzp6b9c5SZuJ8ttCeoz0X7
N5H3LiK/QJkFeSv0qzH/Pcn9jMqxzdDvwrOezoJ+efTTcvx5yszIWyLv7Lpi
QV4OeVfq01NmcGwjr9/PfHYu1zyEe1qG/s9Angr5IdqM4bdAmYz66rSfkvqz
lBmd+5HH8d5p+xzyNkWuPyfyG66nRfRPUqZAXtP1mPoTlMmR10D+jPpbtN+d
Z3UF7Xfi3qa1OJbRn8/zGo772dG5zPkA3RiUv32XlI2oj0b5nXpD+Zz+3ulm
Lb+yiJ33H8qfrdh7G1Mf3fmQ+jCUzaiPTelyvbGRb+N6Y3K9Q7we8pPIx/OM
rndtRL4KeVhtJvQnIo/P83oE+THnI663Lb+TeE36m76VdX1i77HM+n4F5/ec
L517kd9FvgB5Du75Vdq8g3w+8uzIr/j99TJed9E2of2VyI3zJfIJyGshP4p8
C/+7dD5CPgz5c645VSu2jXPrPkOxcZZAfxD6R6r8/yHuf3NtVv7fH7QpkTfT
Bkb+HbnlWKX9Chz7jfM/5/zLkOdHfh95br8H5GurrF8F52+KbjTO/20o73tG
5Gdpu7XzG/ImyKOgvwL9vJy/H+ffWGV9nBN5b+Qrkb93vdOWoQxD+30p46Ab
l/I7/d2Afh7a74t8fZX1aEvkI5D/Qp6L//df5DuQN3IORL8y8qHIr1V534sg
H8B/vIi+a+T/0W5jrjcy8mVDGY/TIz/J9XYq8j3NgPwU8s7Ii3k+/T3kvM75
yyGfTn+3cv7oyEvwPJ5AX9Lv6rRfCf0hyK/Sfiz0KyIfjPwK8pjIiyMfiPxw
lfE8Ouc9RpmU663mnO57dYwhL+CaQn1K7ud+5E2K2NlT6rOUsbdXcDxxP3dx
P2MgL498NvLtyP9BXhR5f673oDbp4P4f9n1yzZ8G/U+hz6L96XyFbhpKxfn3
D+y1U+nvFuTRXGNoOzllAtrP4/zps6KvbbUleZ4TOJdx7AW/N+Rp6eu/lA7n
P0ibh+nvuSbrqOtnR19Km1Z7CPlh536OtTh3Pdo/RvtjtXe059CvwPN+m/up
0G/g8+b4u5Rl0R3N/cyA/nj6H8t1jGOPuHZRH6L9+rT/mv7e0T7l+OlF1sUl
qR9fZH280PUNeZIi9/Qh7d/WB+zEPl2O/l/n+sXg/rRzZ0d3UBF713V1KeQT
iqyvc9P+Zdr/Tl9LOt/7PfdiqzyjPeF8RllG+9f3R/s3aV8O7vc8nw/6iakf
1o49PibHrtTf0z52vaD95+hWKDLfjeF/0H/SxnMupuzqt8Sxv6hfqM1A+4OR
z+nG1h21yLGF6e9Z+vt24G/eo61Bm8+Ql0e+F/kO5C8H11uTtp80+Y79fpdD
/zZlae1f/s9brheUQ2i7ZBn78D3KcmXs8QX0v+jj00H/CyE/jfwV8orIr/Gs
3nRO6GS9XAndx038OP23it+Lqzyb48rMW7PR9sAi85f+zGuc8w/6dYvMu5N0
8q07/25OX89Slq9i773K9d5AHruT9W0V3zfyyJ18f0+jv57+Hqe/8bj/Nehv
B3TXOSQ4tjry9toafg++c9p+wPkncHzbdvyqppO1VP+qra/m94d8jGOC/m/m
nKdoO6H2vnY3+lHQH4T+Wb9f9O+jn05/hPu7G/nVgX89v/6p78R3oetI/3c5
x1E/jfNnRH8L+mfQz8+xcuAvDEP9SPRDjgfnF+RjtQmazLd3dTMmluLcD5FP
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
COZm7pM5CuYmnFfFfzIHw9yLu6vkTpmjYW7GnVVyl4wBGvs7q0ruhTkYzs2n
VcHuxAvkFonhbce1tu0HSxfD24H69v1wl8Tw5Ee6XskNkDO9Zp31UC7zVkX4
lK6XciPkiGtP6r+u0Mqatmqd9c9chV1o/w/1g/SHynAY9Df1h1dGv6o+rrGd
frCLz2lzkN+DNkYRDHhO6nP0w8Uxxqr/J6fDfNHDu7HVnU/lTmuz/+v/98Ll
fq4a+P+9cJ2fMSbCuRdQZi6CuRoLnFubuZWY4G+D8WLsVUyrpe9ImasMB+Q6
53PKQeiXpv3M9DUT5WDkQ1vJxZmTcmAr3GFzdeagHNAKN1k+wWZ1uAPaaBvV
GY9ya/2mbqbtvJSTkNej/1Fp/z7l9TIxE7n98zTJZZCLOb5rbz++mBxtuQJy
BsTnxOlmRTcL5bBWji3VC94zVZEcvkvRXdJPrquY85X6Cv3k6oo5H0b90H5y
C41BHEX9yH5yHcV0j9F+6Ic7Jaa+ZC940ZRFcuiG78f+kCsoJ8H48wZ1YnU+
87n1t/vB7oz5mytozuC33ksnfPPNke9qDWJWTXIExP/FYCY0vtGP7/ki54/t
+txProo5LpJ0zId6hXMPL8NFkZOi/6cfODVtp+onV0fMQzxiJsoGyJN1Ehsy
P8q1wRjRmH47lE1a6cP4lfiFY30j5OnEq/vxfd+h/bTUp+nHt5TjIh4xc5O2
xqTEY8RrNmzFxpzSZ9lPLpA5RR8M5m9j+ebomFthfpm2kzkW69K2X4crbU7T
2si9OlzfAwfxs+HqxO6N4W+A3NSJZ5mjuAnyMMjHl8mZ3AJ52DqxfH3q/Z0b
kM8qk3OxTp31xlwibWRju8Z4xVfFWa+m/VX9YCPm7JhrY86N+JU41qq94KPG
zs3xWb/OeiJ31jXM/LVfKP0i7+zrwXwvt8YczNPp7906vna3E/9If0lfX59L
/03/TmzgsTL+49J15q5F/Qbr+AvmYmij6/u9XUenD/g39QO55uxlOFj6b/pn
5mKZUyK3R59VX3WYTvxL/U1zn/Tp5Joc0Av+IedE/1Q8ZSH0i1DG1bbuJ7dK
zM7crfe1F1uJ7YtHyQkz//3QbmLVs1N2biVmbbx73Tp4mccm99vUZmjlHciN
kiNl/vDR3eT+zELZvhUuvbm8s1J2aCXX4QrXG8qOyHN0grfNQFmvFW69ucMf
cr0lWuG6z+677YcLaY7vpPqLlJ2c71vB72akrN8Kt1t/wfXIXMCRB/b0CXX4
3XL+vP66g/lgn0H8SH64sTOfmfEs8y0WbMUGuLeOTa0tbQzReJ38eLkUxiSN
L5qf/XUVG/z5Oj6avpkxyRfrYDxiO9qUr9fxyfTFHBOuX/LjRulkfDhezIdv
deJjflWHD2KOke/8izo+vb68Y1BfYN9+Yu/6BN/UyTcwB8kxpG2xZz9cBG0M
44fmR/wbG0U/A8/qMI7tjv72Vp6Nz8h34zuf0bnd70X+K/p6YD/uom1C6SEf
VIdbpf30bB2MRmzG+NrK/XB+5Pp4DecOcwrNJXQOMd5p/obcWmO+fde2OrkZ
+qPGH81Pkdssxnl7HR9M38uY8091fGZ9ZW0A4zfm9/gtinEafzEfRi71kq3E
a8y/kSvnGHvPWE4VLqM24Lf839/74fbKJ3Mu0345ecBH0n4x/mgu2Wnt2DfG
J81ts43+rjml5pKeOeBXyM8QzzYGa36Q+Uriq59z7Gru+44q9tsPlKs64c8Z
P/m+lbx18zu0t8xfN5/HfBVzvT9rBeM230L7zfz54evYV96bHOMz6vjf3kvZ
Ct7rHO3cfHE38SbzW8wlcU4wHiT/Y+NW1gjtI+Pj5n5d0k68Rj7KSq3YYMaX
5HuJZWlj6au6fl8+4K+4nssnMPfNY87t2lv25RyvPTuXGAb3f3w7a4H27fED
fpf2qvFhc/2OaWft0H617hri2rJRP1wJ15hOP/7ITu1w3PR39P+MPTtm9Vf0
D+VS20Z/Sf/PWPTOyJfWwajEptyvwFiLMZc3qvjwYrHGgz9sB5MVn5V/JbZq
jNh48QMcm7tIG+Pv5qvIhTEGdGUdjEhsSM6G+P2qTfKjjNmbf25+/rBFbHax
JPGu99rBlJ7oJ+dJvpjnPNVPDpf8GXOq5OK5ZrpWysmTP2C+itwOYwLGy8wv
kcsmZmV8asUm+S7mvYivmINs7vGN7dhG4jPXtWMjac/KHzAX8Z521lr9t8fa
WXPF0rR31Ympie+YI2turH1cUAe/se+RW8EKz+mHGyNmaPzS/CK5YHJe9F/1
183N2LEdLPCMfrhNYoJi+WL6j1axMc+vYwO49htjFC8058lcJ5+hMTnzmfRn
3D9Cvox4zqL6J+3ET1Zqko9kDHEU9MfVyU3T/tH20mbTVtMGEx8TH5DLso/x
5H7wrb3awR/vrIMRiQ3JyRH/Ej+QS2+btfrhaMrN3B95JnQn1ak/oc3Rjz/v
2DQ/d9R+4pNyacWnVumHYyW3yjlaPEw8wtyKPZFH6Acfsy4ndqR+8Lq928H3
xO/u74XL4rGR+8H7/C9NO/wgc54W0j5CPr2OzaytbMz8tn5ylhYoMobu6CdH
a8Eiz1CuiPwiz5UzIl9Izt4i+p8cW78X/pB1c6zlJ5mTJj/v9Xbsf/kc5rpe
1Q62pj9gXYxNf0B+jbnK13BsnDr+gXVzdOTayHeyLzk3G/TCj/JduyeJ+IM5
eebiOYa372Z/FX0P56Stu+Eb62u7x8FcVfww/TE5f3NWydfU/xJDm7tK/oi+
hhxB8S/3q9HXNAa2aJV8P/FccwDkW8hv26wVG3+OKvmk+m9iYOZzmL9hfFEM
7f0BXms8Tn6R+RLmTxh/E3N7b4BnGD+UL2C+hPkZxj/FTOarki8nniMmsmCV
/Cm5GHJ0tV21ebV1tWFXdS2qk+v9ZhG8UD6kuZHadMP0EsM1drv1wL6Wnz5f
J/7l6L34iPqG2txj9JI/6x4n2nSr0H+rTi74G0XwRPl9+jLGEMUD5WPKvdem
XK1KvNdc9LeK4I3yEc2F2a4Vbo6cLLlYxm/EE8yvGLOTOfG3Oj6ZvpgYw/xV
8gv1b8WEFqjiB+sPyxk2X8j8Ht+dGKd4kvsrmaviOzqnSo6luZWPD/Ao9yOQ
6ysHZvEq+Sv63psM8Cv3XzJXyHe2WBXejPwZc0rEp9wvyVxix9RFVXJUtZW0
mbbthgPt2ugePBdUyck1F9ccDcevHGptFfcIuqRKDqG5g+aQOJ71UfVN5dDL
OTDfVPzQHBb3fjDfV3/RPSAm7oWjIzdHzMC9F8x/1V53Dwbzgdxv46UiMQHz
ycw3M75tzHTWKvm7+g5yLmepYltq/8tpN1/PfDvj68ZQ3YvC/EztefekmLlK
frRjTUxE/EK++oqdYGrubeFcrP/sHhfmF5kf5djRp5qpSj6vY0cMzXwx86Uc
K2JE4suSr+TmiqmIL5tvcEQrGEbTS/62e27os/d7yS91Dwt9Zp+v+TnP8Gy/
oas7Otl/Sa6jMU75rvKP5UPIR3HfIPfP+aBITE2Oh3xp8SM5LL5P822epL+v
iuTbmQ+oLWvM2/3D3K/Kucz9AcyfN/9O29YYub6gPuGEnWAUcjHkZFyjn9vK
/mXup+Vc7BpuLMCYwMydYAjG/uUAXECbN1vZV+XUKti/PpXjz/2fxMq0yeTP
yn+Vj/FzK/xi+czyNbzejZ3styV3R47JTZ3wsIy9SaC4uRN+uHiZnCW/J/Nj
HuP/f1Fkn6bTq+CL7td0cSf7a4lvftTKvk3mN9vW/ZvcV8l8LrFf91cyP918
dZ+l+zHJvzX/Q+zTPWjMxzW/1nfn/3UvEvOr9Q3ck0ROj3x48VD3O3BvEvnw
2sruUSJ/3/wAbTs5kvLX5CPL/dVHrXvBLMQqxDDE1+Qj796KDy1XQM6AXCk5
UuJ/5n+ZW+43IPdFDsxl3fgL4sHmf5lb5jf4R518c/fQEIPS9tMGnKYTfEN8
wfwusSq/yb/qcHjk7ojhiZea72UumN/gn3Xy5d2zRczA/cDcn07sUh9A7o0c
nEu68T/cL8399sTytPHlc8v/1taUbyn3Qg6GXDc5t3d2wkM2FmyM/65O+P3a
enJg7+9kPzH5cMbgH+hkLjf2ZgzevWZcm8Rj3HPG/FjzX/Vl5SM81Em+g76k
nLwHO8mX0FeXUye3SI7RVd2MV/N3ze/Ut5Sj514a5uuJz7inxt2d5CdoK8vJ
vapOfPJJ5s6JW+HjrNbE9pZjOlUdPOqRdvZQEC8RrzpcW3GAf7lfmGNNDF58
zP27HJvmhC/ehAMr91X7f4Z+OPdy7d2zTW6k+Mfq7XAkxUNG4dihRY4ZH3T/
Id/NJEXiC+6npG84cZH4gvst6UtOVGR/Kvd8cq8nY7ByP8UbV2iHA+r8IL64
TjsxQ/HnCTh2Mm3Xbwc/dI8L97ZYU3utFzzRujms4p3m6MiVX6sdbFn8yGch
xixfaPp+/pucRPFLc4LMBVqbY4s24QDL/TVmINZkjoa5GWJO4p/mBJgL4D0u
1oQjLDfYGMQxveCh9iVnU7zWPSHcC2LFduLN7pngXgm+U/FW8Vq5mz4D42PG
2+Tabt0OHvVNL3uTbYi8TD85JOaO7ID8Zy/xNNuaI2asUjx8g3ZilsaPjO+5
d8VW7cSPjBe698iW7cS/jPfJ7dxGn6qXeJj1n8pg+XJutRnE9P/oJR5lX+aA
GSs1PuC7MWa6fy94/crtcI7E781JM5fKY/v2gl/7LNwTSn9E/+P5IntWih+a
U2qu00rI+/WCJ1p3zyn5n/P3MhdPUAS/db8c5ypjKnIf9TH1LcU/xM/NOd0P
3Sr0cXQveLhjwxxosUhzUPcvgkkaezHn9YBisGdnL/i754p5yg9xPx3nZnM4
jD8Yj5B77jOXX+L+M/p6cjTFP+VPyeWpO7F1tXm1FTud4I/u+WG+VL8TvFbO
jrlsQ53kI8gHkJv0U5V8BXOezV/6pYrtqw3s3GuOpvsFmc8iN8I9zNy/4LBO
sDT3GzJe4x5r54k/VcH+xADFAt2rR36wHH/3rviuSj6H+RRyNd+tYutq88ql
+qEKHrtZE/tmvgH+6p6K5ibtXQXfNSfJ/PZ9q+C15jiZ27RXFVv53xhckZxk
sUkxSn1dc3jFoz+uY2+Yc2p+ivye+dC/X2X/JvOFjJe7x577PWnfPzCUPfTE
SsVMxTbd+8r9pPQvHhzKnnl/cy+718m9NAfT+OJCTbhH2iLGHxdugu261ssP
XroXrEzOn9+G38h91I/QV2uSE2AugDEj+T/L9IK1ydE1/iUf3W/pkCr5OHLe
tS3di2CrXvJN5JLJITa/xD1m3Fvmm3b4Tu6X5FpiTpV8IvdT0vYx5if/3Xi3
+euH6hs2yQkxF2TKIvE941MXUD+gSrzNPbXMLT+4Snx2kSb7t2jrGI9dssl+
L2KDxn+XaPLtaSu5V5v4qvvxuC+P8RnzNbWF7MP4jfvRaSvZxv019eXFdozB
G580Z/FC6gcO4skLNtk7RNtV21sbXN/OnFH5X/Kj7kc+sko80j0Cz3cuQJ6W
+l5ikjyry1qJfxuv1pbzP8h92arJ9yEHxnxX+bjuzaJNL/9E+9P33y6CbRsz
NlYsxi02Lt/NWIkYudxPOaDamH4jvlvfsT6dz1jbxvnfWJ02jraTMWZjy9pQ
5muLQYs9u8ebtr4xMWNh2vz6rsaIjA3pw5r//08v+cHuueb+TKP3sxeMHCPz
w0frZ28Xcz7NDxfDEbsxZ9R8cjEmsSVz1uTXuL4Y63BfU/ML/X7dG0qfSV/E
9dZYnT6JY8cxJCZhTMP8+qafvYPcg1j8XXz/gSJ7cpmv75riWuKeyBM2wYTE
guR8mf8uBiT2Y86g/CQxLbEsOXXyW4xZG6s2D2MRdDvUyY1yz8SRm2BWYlVy
Ussma5RrkxxS85uNGRgrcM9m5zLnNG1C5zD3F3AO8Nt3DzzzpY05+PLdA9n9
F/w+3AtIH938/mH62TtJH1o8zHjFQ0X2DBuxCSYsFizndajJGu3aLEd26X7G
541F9oxzPd+7ztzsHqPyl+frJz/eHBrziR3f7s0lBuR+DgYP3XvIPf9O6yVe
pW3gnmJyCY13398Op1D+gXsYu3fxJu2MnT3q5JY7hoxnrtIL9qwNKRfS+PhD
7XAi5UoZv964Hc6UuXnmuzkXyRk2nm7+lnvXeU7VD/9H7NQ9Wn/vha+ireEe
q74/9xB078At2sk3cj9U8yPeKZKb4/tVZ46OXBvzezZvh3NjPN/8MX1R/+OC
/exBfW6RPQOMnfs8tY2Mocsdk1+xUTscMp+/exS4N4FzhPwLYzDGXmxjPtEU
yBcVuabcMfkbPjs5ZPP3s6e1exf4juSjL9DPtc3JMt7vntTuv+Iz+z8ujgTI

              "]], Polygon3DBox[CompressedData["
1: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
A/KEUEk=
              "]]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0s1LVUEYB+DX62fZF+i6uNCmhQZSO1sJbWwlknkjiCJJF7mT/AuM/oAM
amcFgu5yI2iWHxVFxc1bml41KTBBK0UqCusZgjPn98yZw5x3Zk72UnfLtZKI
GNS+lUUkz8hP8pB2pyoi4+ERHuAarudhPsqneJJP8hku8mk+zz+5jbv4qszp
93IvX+AbfJMvcn/6Fl/mBzzEHTzCY9zJU/yat9T3ltflK/1ZvlsR8YYLvFEZ
MW7sHW/yI37PX3mC59Ja+THP83d+wh/SWuTZ8ogFnuI2XuRpPsdFXuN2XuIv
nONlzqd18wrP8raxj6meVK9+nk/siXjBk9zAo/yQ63mQ7/Mxvs23OMt93Me1
3MPX+Ypstyed3MrNnOOmdCbcnObn49yY5uEs16Vz5Ro+zH/T+tV3UC7LXXlA
u2c/V723n//Yn6KxffybF7iaf/Ec7+UfXGAlxg7nuSqdl6y0Jx7FS65gU8dz
LmdXPOMyEPHUrZRL+bOW4YwslPz/P/8BeN1fLA==
            "]]}, {}, {}, {
           Line3DBox[{1282, 1427, 1693, 1428, 1694, 3004, 1429, 1463, 1430, 
            1702, 1464, 2955, 1482, 1465, 1709, 1483, 2957, 1501, 1484, 1716, 
            1502, 2960, 1520, 1503, 1723, 1521, 2964, 1539, 1522, 1730, 1540, 
            2969, 1558, 1541, 1737, 1559, 1577, 2982, 1560, 1744, 1578, 1596, 
            2989, 1579, 1751, 1597, 1615, 2995, 1598, 1758, 1616, 1634, 3000, 
            1617, 1765, 1635, 1653, 3003, 1636, 1772, 1654, 1672, 1655, 2936, 
            1779, 1673, 1691, 1674, 1692}], 
           Line3DBox[{1283, 1431, 1432, 1695, 3005, 1433, 1434, 1703, 3009, 
            1466, 1467, 1710, 1485, 2958, 1486, 1717, 1504, 2961, 1505, 1724, 
            1523, 2965, 1524, 1731, 1542, 2970, 1543, 1738, 1561, 2975, 1562, 
            1745, 1580, 2983, 1581, 1752, 1599, 2990, 1600, 1759, 1618, 2996, 
            1619, 1766, 1637, 1638, 1773, 1656, 1657, 2937, 1780, 1675, 1676, 
            2029}], Line3DBox[{1284, 1435, 1787, 1436, 1696, 3006, 1437, 1795,
             1438, 1704, 3010, 1468, 1803, 1469, 1711, 3013, 1487, 1811, 1488,
             1718, 1506, 2962, 1819, 1507, 1725, 1525, 2966, 1827, 1526, 1732,
             1544, 2971, 1835, 1545, 1739, 1563, 1843, 3035, 1564, 1746, 1582,
             1851, 3037, 1583, 1753, 1601, 1859, 3039, 1602, 1760, 1620, 1867,
             1621, 1767, 1639, 1875, 1640, 2932, 1774, 1658, 1883, 1659, 2938,
             1781, 1677, 1891, 1678, 2030}], 
           Line3DBox[{1285, 2034, 1439, 1788, 1440, 1697, 3007, 1441, 1796, 
            1442, 1705, 3011, 1470, 1804, 1471, 1712, 3014, 1489, 1812, 1490, 
            1719, 3016, 1508, 1820, 1509, 1726, 1527, 2967, 1828, 1528, 1733, 
            1546, 2972, 1836, 1547, 1740, 1565, 1844, 3036, 1566, 1747, 1584, 
            1852, 3038, 1585, 1754, 1603, 1860, 1604, 1761, 1622, 1868, 1623, 
            2929, 1768, 1641, 1876, 1642, 2933, 1775, 1660, 1884, 1661, 2939, 
            1782, 1679, 1892, 1680, 2045, 2031}], Line3DBox[CompressedData["
1:eJwVzr8rhAEcx/Gv4c7AjUZhMFpcRuPZLEoxGCiTy9UNRv4Gdvn9I0WJAcud
wS0Y/ChKDIhOkhIXRV7P8PR63/fT9TxtI4W+8bqIGPakUxEf9RFL/E1HLHPO
70VdboiY1ytuKa5ygRu2Nb7Yy24Zfch1bts2+Wq7cGvSl9zinm2Hb7Ynt2b9
zF2WbPt8t327tesfHrBiK7GRs/YOnUm+j6c8Ygu7+Glv1ZXkvTxmJ7v5Zcvq
E33DM+aYYw8L9nN9r684wF4Osmi71lV9yzH2M88J213y7fqBkxziFB9Zs9d0
VU9zlDP8S/7j+Qcws0En
            "]], Line3DBox[CompressedData["
1:eJwVzrErhAEcx+Gfwd2gzmZUZzCauNGIyWAwUIrBdi91g8XA38Bf4BR3BlKU
GDjDWdzCKVKU6JwkMSjCc8Pb83l/3/fqsjNzY0lbREx70u0Rn+mIDf6mIja5
5r2oi2x0RJTcUrrMdW7ZSnyxVdwy+pRl7tq2+Wqru3XpK+7wwLbHN1vDrVs/
c5/HtkO+277devUPj1i1nfDDltF9upMV1lhlljn2MO+7M13X5+znIAeY2Gr6
Vl9wmEMc4bztUj/oa05wlJMs2G50U98xz3EmXLDdt/67fuQSp7jMRduT/tJN
rnCWq/xr/cbzD25vQLY=
            "]], Line3DBox[CompressedData["
1:eJwV0D8oBHAYh/H3BndXCoNSFqRYlDJgYlE6CxlYFFkM5BRFIf8jpyhEMVhM
ZzGZTCwmkwwWl3TFzHbxueHp+b6/p7uua5rMDs8mImICIxURibSBqVTEaTLi
m4e8X3KxMuKCx7GpFXlAO+dP7YxHkdUK3Ked8Id2zIMY0964RzvignbI/cho
L9ytHfC7luNedGrP3KHt8S6u9C5u1p64TdvmLbSjxvsDt3hf5zW0ouTe99l7
u9Fe4WU04Kv8/dqdXW8v8SLq8Ore0W7tWnuB51GNR/eGlrer7Lny/4AUbtyr
2rWdtmd4Gn9+X979a//gH9t4M5k=
            "]], Line3DBox[CompressedData["
1:eJwVzT8oBHAYh/EX4WTAoJTlrhSLUgZMLEpncRYWhcni/CmKohB1iqJcUZRF
Bgwmk4nFdJMMpksiJikm+dzw9Hzf3zP8UpMzw9myiJjASGVERSKiHFPVEfmq
iE/OeC/URpzYxxjHhvbGg9oRv+qHPIpZrcj9Wp5ftAMewpj2zL3aPhe1PR5A
WnvkHm2Xd3Cu93GXVuBObZtzONW6uUV74HZtizfRgW+9QbuzW7V1XkMbvrQ/
b7d2ild5BUl8uHP6jd1sL/MSmvBU+kO7thvtRV5APe5Lf2gXdp09z3NI4Mp9
xu96jZ21pxG4dP/yD/4BR640mw==
            "]], 
           Line3DBox[{1368, 2053, 2052, 1897, 1687, 1362, 3025, 1420, 1889, 
            1668, 1356, 3022, 1416, 1881, 1649, 1350, 3021, 1412, 1873, 1630, 
            1344, 1408, 2991, 1865, 1611, 1338, 1404, 2985, 1857, 1592, 1332, 
            1400, 2978, 1849, 1573, 1326, 1396, 1841, 3033, 1554, 1320, 1392, 
            1833, 3031, 1535, 1314, 1388, 1825, 3029, 1516, 1308, 1384, 1817, 
            1497, 2951, 1302, 1380, 1809, 1478, 2947, 1296, 1376, 1801, 1456, 
            2942, 1290, 1372, 1793, 1455, 2042, 2041}], 
           Line3DBox[{1369, 1424, 1898, 1688, 1363, 3026, 1421, 1890, 1669, 
            1357, 3023, 1417, 1882, 1650, 1351, 1413, 2997, 1874, 1631, 1345, 
            1409, 2992, 1866, 1612, 1339, 1405, 2986, 1858, 1593, 1333, 1401, 
            2979, 1850, 1574, 1327, 1397, 1842, 3034, 1555, 1321, 1393, 1834, 
            3032, 1536, 1315, 1389, 1826, 3030, 1517, 1309, 1385, 1818, 3028, 
            1498, 1303, 1381, 1810, 1479, 2948, 1297, 1377, 1802, 1458, 2943, 
            1291, 1373, 1794, 1457, 2043}], 
           Line3DBox[{1370, 1425, 1689, 1364, 3027, 1422, 1670, 1358, 1418, 
            3001, 1651, 1352, 1414, 2998, 1632, 1346, 1410, 2993, 1613, 1340, 
            1406, 2987, 1594, 1334, 1402, 2980, 1575, 1328, 1398, 2974, 1556, 
            1322, 1394, 2968, 1537, 1316, 1390, 2963, 1518, 1310, 1386, 2959, 
            1499, 1304, 1382, 2956, 1480, 1298, 1378, 1460, 2944, 1292, 1374, 
            1459, 2044}], 
           Line3DBox[{1371, 1426, 1786, 1690, 1365, 1423, 1785, 1671, 1359, 
            1419, 3002, 1778, 1652, 1353, 1415, 2999, 1771, 1633, 1347, 1411, 
            2994, 1764, 1614, 1341, 1407, 2988, 1757, 1595, 1335, 1403, 2981, 
            1750, 1576, 1329, 1399, 1743, 3020, 1557, 1323, 1395, 1736, 3019, 
            1538, 1317, 1391, 1729, 3018, 1519, 1311, 1387, 1722, 3017, 1500, 
            1305, 1383, 1715, 3015, 1481, 1299, 1379, 1708, 3012, 1462, 1293, 
            1375, 1701, 1461, 1700}]}, {Line3DBox[CompressedData["
1:eJwNy0kyAwAURdFvQhpNsAKLEE00qSKaqSrDaEKIhCQEs2AHmoF2KxEZmMlC
2IUzuPX+u6/+VKmxVR+IiG1MJiIeUxFP6CcjHuQ9JvjvdMS7zPNvchyb3B2W
uVc9gw39Fkvchd9zjPHr3A0W+SbXwChfl398DQu2M/0UI7aqrKFty9lO3BUM
247kMeb5X3vZfYi0rSQPMGer2nrY11O2XbmHWdsXv4YkX+R2MMN3uQIS/Auy
3Ke+iiH9GdNcR1/BoH7l9xo//KVs4YP/B+maJc4=
            "]], 
           Line3DBox[CompressedData["
1:eJwVzzk2g3EYRvFXZ2gNETFkKYlZQuEcG7AASkQMGcSQSCNRGYIFiOwAhYqF
sAm/FPc873fv+Rdfent3c2cgIraQHox4G47o4WcoomtfMcd/jUQ82zz/ZGfR
4Do2xz3aGWxwVaxxTW+vMc2vcxWs8g2ujhR/aa9Q1la0C/c5prQzW0NJW9aq
7gqSWqn/Bkv8n37qPsGkdmSPsaj9akX3IRLagS1gQfvU8pjg97h9zPMfXA7j
/AOy3Hv/nzDm+x4Z7s7WuVHb9vYW33zL3uCF/wes2itZ
            "]], 
           Line3DBox[CompressedData["
1:eJwVzzdSQlEcRvG/nWEV5oBhJUgSoXYBuAq1UkqCGZSsjWEDCjNWWrgM3IO/
V5w5951v7sx9i0fH+cpMRBSxNxsxno+Y4Gcu4pM/sKt/LUSMuKwPeQdVbcAl
rc/b+NV6fKg9u/uElO+cfoaiPtKG2NL7PMCp7cDWc+5i0/bIHZzYCrYH5zY2
bPfcQl7/s98532Ldds03yNmmtivnS6zZGtxE1jaxZbGq17Q6MvpYy2BF72Jf
6/CFtpy8C+nkPXyuLfGbu+/41l/5Jfl3/R8WAzHC
            "]], 
           Line3DBox[CompressedData["
1:eJwVzEdOgmEUhtHLzLIKd6AoWNkEiokNFR3rNnRG2YdYUHp1IGGmiegqZAse
Bm9O/ufm+1cKt9mbRETkLLMQMV2K+OXXYsQPv33vcbIcMeC13ueuVbQer7Qu
d+bvtQ4LWpsj77fn/9FbvNSbHOpbHPDQ7d4u3BpaX9tkjzn9zs7d6lpXS7PD
N+b1mfuBtbWU1uIrz9z+9H1rahtagzWeuo31rK37rusvPNGfWdaTfLJj7ZEl
bY1VO9IeWNRWOfZ+xE99yA/f7/wH9h81zQ==
            "]], 
           Line3DBox[CompressedData["
1:eJwVz0kyQ1EUgOFjFqwiG9EmopmpUpiqIo1IrMMYyYIQyUuf6IIhY2IDvjc4
9b37n7qv6mZP6vu1hYg4MHuZiO+liD9OFyPm/HLeZbIcMeOl/sYd09SeWdee
uG1etSlr2iT9j/sFvuhjXugjTvQtjjm3G/qu2g040vIc8tjuypzb9bWBlmOf
PVb0X/sj09M2tS67LNv96Icm0Ta0DhOW7Dps2K2zrbdZ1B95q6+xZc60B95o
q7w3p9odr7WV9N3uf6Tv0t/T9zp/8h8VBDvI
            "]], 
           Line3DBox[CompressedData["
1:eJwVzklOQkEUQNFnMEZ04hbcjy2CikMWoFHscSNisyKnktiACChfEcGIzZDz
By+n6r5UUvOlndz2RETkTXE6YjgTMZmNqJmMGbhv6jezET8800bcMNfaFyva
kOvmXhvwVPtkx/sC7/Q+T/QPtvU8WxzZ9ZyP7d75rK2xybmpiCP9zf3JPccG
Ex7q395umbq2qj2yywO7V17ZPWgr6d/4wn27Di/tltO/6W2W9RYv9KX0H2ZP
a7KqLaZ/MLtag+faAhPv/3ir/7Lr/s8x18Y+Mg==
            "]], 
           Line3DBox[CompressedData["
1:eJwNzMkuA2AYheGvEkPZiQ1VtIYLKG5EYqNWXdRGuQLaml0FWtySoTUtKRIL
Samhz+LNec/58v+ZwubSRiIilrEyEPExGNGXjLjCKB9DP78civhy3+LrMo8T
27fctpXktWzYOrzMU96O44Y37T/2Ck/bJnDLn+Wn269bVZ/Up9DgLzLvVsKO
ntGzaPKW/PNmlxfdTzFtu9Nf5b/bHl+zn2HGdq+/yZD7yNlreODv9oQ8wLyt
jkfeg0Ms6OdY9W+vfoxF/QJHvO39sHzCLJ/DCO8C+4UxpA==
            "]], 
           Line3DBox[CompressedData["
1:eJwNz8kuQwEYhuG/uw7GNLWVrsxaQw23IbErEiur0/swU9yCoVwSEZQOVlTF
zrN4837f959zklPcrW0kqYjYxFY64i8bUchEvGBCnsSY/JCLSPM+Es9t49qW
0Q9Q01/50ZblQ0x5dxpv8pM9x0eYsc2iKX9x321APsacPo93+ZurbglO9JJe
xofc40E+xbP7gr6Ilv7DQ3yGPbcbLNnaep+H+Rwr9lt05F/7CNexartDVx7F
Bdb0Bnb8Z16/wrp+j0s5eJw/sexbFRTlf+AuLRk=
            "]], 
           Line3DBox[CompressedData["
1:eJwVz8kug2EYhuG3GzEkthSVYiE9AUV1UJyA2BLtAWgdjVkNe6UOSNibhybm
61/cuZ/nfb//z/dN1BurW6mIWMNmb0RqIGKyL+IeM/0ReUzJ1+ZDvIOmczVc
mA3ru9jWH/jGLM17mPXtHB7l5Z6IfZ7XC3iSP3nd+QYO9AW9iGf5izfMmzjU
S3oZL/I3j/ARbu0r+iJe9R8e5WPc2VX1JbzpvzzGreQedm28y3/mGT5BwewS
H/I4TpN76Veoe2NWP0dR7+BMHuRp7ibv9K8V5OR/tUIufw==
            "]], 
           Line3DBox[CompressedData["
1:eJwNy0suA2AYheGvRfVC2g2QSErEwBLUqEqZCGNJq9OK1qUuy3G/D6huwipY
BIp6Bm++c97z/1O1nfVmIiI2UE9H5HMRBXxmIsrZiBY3J/e4onuGNreNZ25a
P8ee/uVupiIu3CV/97lvecu7XVzKFf6A78tJbggtXOnLtkPbjzzMjaCNa33F
1rH9yiluFDfyu1u1Hdn+9LSewa384a7ajm0DPavncCe/uSd82MfkcdzzC+4L
EvyM/oCS3kXD+1n9CYv6Kx7lCXcSSX/WcOrdPP8Pg7Ao1g==
            "]], 
           Line3DBox[CompressedData["
1:eJwVzzlSglEQReG2kFkDcR6qlFgoq9yBLMABIVcDJNLEIXIGZTsqzrIFXYWu
g+8PTt3uc/sFr3xwXD8aiYgGWrmI5WLEClKFiE1ccGv5iC9uVT7ikjtEKxPx
ZL8yj7rdc3OCZ27Lfs2n5T53ij6/bb/hM3KCK+EML7od7laXlZPcFM7xqqtz
d7qcnOZm8Mb/yV2uo8vLWfsc3nX/ssF1dQU5b1/Ah+5H3vNFftG8hE/+Vz7w
Y3wl+Tc2kjdo81X7ALXkHt/miqxi3Jsmeu7W+SEQXSRe
            "]], 
           Line3DBox[CompressedData["
1:eJwNyskuAwAUheFrIdFKUDVtq1VTQhueRMRUq2JRpLamF6C0angdNU8rw0P0
Ebr1Lf6ce/5zM+WDpWpXRCyj0hMx1xsxj75kxArOuIVERJk7xL37nNvFln6E
FlfT+/1v68d44Fb1C35A7nAneOTX9Es+JTNcB/t4sq1zddugHOeyOMWzbYNr
2NIyx03ghW/LEndlG5J5fRKvtor8RtM2bJtyT+PN9iOv+RF+xj2Ld/5X3vCj
fEH/wB93y+2hqH+h0R3xKQu2Isb8b+LOzyL/D+DgKI8=
            "]]}}},
        VertexNormals->CompressedData["
1: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
39Uwn8/7WFeelf/7ncnpcNq5BgxzFjMwRBRq0M/VbEE71+KPxosYfKIKI+jn
YqCfa1owiYHBJ6bwIf1c9u7LU+eUqfOuXxZfZlGAv//jY7u74Tv6aWjmBO8N
zn2lDGZU/XKc8yDpo05P0eSgl6jCCH93cowuhzLT+S54p9nU7VJUQNV9cfI6
5L2vy268DN45xIcnFiqouqmR7z25X1wKp8ktVPkShSe2MIwut8umeUfg3YWt
QtbnClX38druvUbi88bTU/s/jOHSo0eEl1N13CE3rV3gdzaaNDmXJKSSv3cp
SZczp48oWd+2IETWK74efA3+2KC0j/DfdLPaG/ivPu/wGPyRg66XjLruefj7
mDF0vTALIIL/tMhhgv9srbA/+OneLIFOOG9NfFEhnNcsJbgU/LShgqZHpW43
Ck9MYRhdj6GI7TjIs2tN5rwpJU/mT/OkPnS+8fYJyF/ToDUW5L8kSWslJX/c
ZkH7HWc3Wdb5Be+owg5j2u8D8EiuZ4R3ndF4J69hqk7kyM0jcXvMnvb7ziq7
4v4tLNwvFPeg/W7AgpZ0g436IPbnKbl0tSwXX/bYlpN7uhun35Dhv/XzC77f
tr1nwduncMKJlvclXr5nhn79+vWakz+p/I9daPeOmah154uivuFXzzirmjWT
sEO7D5nLFWFlSQf8e5Pxy/cWBYiRhh8Z/DzTB/LZ6D/6KZ+qoyPo9lDKw3EM
5O8RKnLPi6rTOen63fJa8i/o68w+AZ1lVF0vR9fXCYFz5SB/58TN6yj5Iye6
/M+jgydAnsavangoeSJGujwjLWlyy8wVvwF+/Z0uN7ejNPmsWf1mL8SB9XT5
eHZYGYAcNr62YBf08lQ5zUC7H5n780PdgxmCD0pRckARYswkvj1rZ0kAOaT8
/q5GyQGxudH+3oHngbfh+uOqmLt57ZWjN1f87/emRuN2LwU+xUvurwQ+f9Vo
fQB/3tENQPcft1jxC+aP6Px/tdPwfEr/uo7Bx6fwPzx74wbvAX8N7gBfh5sr
/vf3y0zRqt8QH/6d5eeh4sP/fkdL1p+mX6fn4akC1LnG6PrNG+rpAHu4PdmY
4luWi5YorEul7AF9HRJiA7ta8rA5foi6l5xUciD5VKLC/STImVOghRfk/NxZ
HOpSFNwoVgF62fO4kugl0yuY+HWQvRvR4+FMG6JHQ7qfqnomOoDek9OL7oLe
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
awXGlqK8WQ0VO6EunD32cdPA/iEUyXu/TOpYHLosbMVSzdGFP337vbFLdgjp
SocnrpjKxL0xicILXnXi5gF11sMPBtFTr39T9ZrVOCjqgca1mx/wlxHzp5cW
fELdTr1CL53H8Aa+2DEx43osPGnsvT23BN2IcvgZROyOU8w3hzVtAI8LL+II
+9GINl05LPD0SDsyU1RMaQsewsNP3q+SHWpGqQeb1s5uq0cHY298FM4bxn1n
+G0+8LSi72bcPiLM5Ugu4UDP7n0jeF/lO0WH5FbEZdj5N2I2Edk+zMvWVxrB
m1wNA12etyK7kPbevzzpeN0wY0LDXhJfMd8vc2ssQu/3/VSR5xrDc18YvKAu
d9u4stCdxCZc4NYxB3W5uj1hScDnYkmL3YRPfM5/uxDwKXC2ZQHU606/0Eyd
NW/BXS0nJ6BeN/O9SzTwz7JjcBfhH39V42YF/k9J3dGE+tupcVs+q/AWrGkR
tsM0/DMScXZmg/rekOtj7DUnWvEryzhJqO/tGTIrBnlvSro+JPJilrqd10Fe
5W+h/lDf63JNIi7yaivmvx6+7Fj/O+TReSUR5J3bZptP5MXjl/ieEnmR84ah
bKgT9glerr0mrxXf1M6kdcKTy1d9Bb0dffHUhugNf0DOk6C3pvCP9Pv28D4t
+N5PUDV75LYPdlhp3QDf31/20xq+v9Vfl/R4NhGvY39xF/ixY9r+EvjJuckh
CvXGp1HZa+Bn6GJKHvDDO5M2BPoPOXlsLcjbkIvXg7x8rTUHibx42tuyEOQt
LLS/D/IafuN4TeTFCxcq7QO9dV1ZyAt6081drAh1y/Lcrv+kif5/BRQlg/4X
cfv8JfrHSn4DUaD/wRJJBdB/rFo1J9E//uYe5gbrGx8SzAvra7NUbm2maAve
Vz73Ctb3WORlRVjfhUs+SZP1xb9jx+yCu1Ow1l23f5ccYvDzNPMU1p5xpPs4
tBLs55iGOKt7YxE2bijcRewHjR1VMYb6cK5cVU111Sr843sErQ/3EtfpBfvX
27Qsltg/dqhxpfa/9dsBPaiT/9Jjre3v1o+ZAgxonfwRTr5q2NfKZ1xCyL7G
3Onbn8K+TmK46Aj183HT1yYurBzEyTMRDVA/n8J4Ux32+4qG9XVkv+OnRtYT
sN/lbjkmQj28xouTwVlnBnFD0dp9ef2fUPIfNTbYv1Pigbxk/+KP+EQ92b+o
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
oM8UhiQM+/TWg5U3wU/+f8a+jHI=
         "]], 
       GraphicsComplex3DBox[CompressedData["
1:eJxMm3c4lu0fxmWXEKWSrZ39ItvXLKuiMkqhZK+sJGVEqBRJIULKzshOPI+9
996eac+GhuLXP13376/3OM7jPL7ndX7c93Vdt7xC193O29DS0NDoMNDQ0P39
b/Xvkz5P83qBiTPrRXLpCJ7/qcyvisBF/Md5ytIh01Hge4j//UyQhOec2S3Z
/HEGH+/3mXNQaQrqOF5eyPKn4hnVvtgMfCbhTx4yZDp/mggr/D8dxJpn8F+l
0uQaTMfx0dbCKW8sSDD1507ma505/DjZ+u1USy9+ePmwKfcfEoz1dRpVCM/j
w0W0+b/61OL732y0u4mTYbY/ICPVdh5Pw5V3mnjHCwo/LUv9/EaCofs28Qv7
5/HDO6v/S8XXQQm7lir5HAk+hfRnn5eZw4dcfJNb6tIH9WxvzJsliHDmZEBr
U8YMPjGVpJ64MQ6lZSnvtdcngUR5g285S8Vf/sGxUK1FBg6axMKClREwOPi9
yXKEiLdN/q+kiGUWpo+9dnr5pwdO1+QtstQN4z1OXQhI712EtzqF6WEW/TDI
kV2zaTOMuCW8W6CXKR8HQXHPHHVpIuLmYEkyZmAiwktvC7KGDQVxo/LurBoe
JEHwPHvmQNQ04nbO59Wn60wUuDvNR/P6zwziVt+5PfVEMQWuHz+tHN0+i7hN
6XPOfZujwNL9sSfbWOcQt1TH3o827ymgiuef06ybRdzmV0/cPPedDP4M9Lnm
8zOI21iBcLd4FQluJXAe3+8xjbg9p7lB2k8kwGgV185BOQrixl61P8vu9Djc
E5cKL1ohIG6KF82Tn7/ug+nOT9Qp/yHEbfZlnBFxfQDWecZEOX8OIm6/myRu
fv0+Ccn7OYo3pQiI205KuK7VFRL8d49NUFaGjLjNjFWLhxpSwEHQR+08UBG3
owQ+67k4KkyMXUhreTmNuD2sPrtP4cI0fP2T45ZxaQZxoypbtys+mQa1G+20
F17OIG45/qWuw3rTcNUow4BiOIO4sf9u730eRoVywzCjzJBpxE1oc0f9iAwF
xoMjw62EqYhbRQTDMz9pEtx/P1/ktp2MuEUZbNWf95+E3kvS6w2UKcTtmi9w
9RwZgFH3K8e8BAYRt/PJ9OQa7yFYOnCcPch9AHHzxAkrUR8S4FKSEmVaaRJx
Gw5f33YzkQzmX270EheJiNsLlgOX3xVS4bjTRsqJATLidv/TxII1xwwcvuZY
VcdFRdy+7mA0tx6eAdr5k/sy26iIG+tPfXmzvbOAV1CN1KWfRtxsNs5k3eya
AWpO+5k7dVTErViMR4qwOQ0uh3LchuipiBu9UtFDrhdU8PjvofqRCjLidvT+
Lffam2R4tbbg9K2eiLi9ZSrTXtUhgCdfQ/fRhgnE7abCA1xo7CCMNt7UtErv
R9y6RicNXUaGQfjy81COnj7E7UOUB21qCBGSVml2V6+OIW5/vlSerWmggNms
Z2x9FAFxW6L6R8ZtTMPpXxfaaC+SELeRCO8yPrdZiD4b1aV7l4y4vb6osX9a
fQ5c7vM0XjtEQdxwFyQ1Q4PnIKejwLvMjIK4uRQw45zk52D7ySe9vbwUxM3n
iqB+kPksRH1XPJbuTEbcIjK+p+iOT8PE+UhuFiUS4hbVtfXkXiwFLrN8CJ5y
IiBuuW/DNPqBCDttDnPRBY9h3HSubjEvD4Epo0LYJa4+xK3GaJD/tOAoSBTc
D0/n7kXc0sUD61idSCDMfGta6sEI4vY2f81yY5AK/UJ4Q5LGJOKW/fjKWerx
WVglMrvGVxEQNyJRRzyoYA5uHfmFO9lORNxYAh7s5H86D0Pn5a3wNiTEreKM
vANf3zycYr3zIuIFCXG7mlXJdDRkHuBINOOwBQlx2+fZ3ElKmAP3z1rEpSoi
4lZL+zPqF/Ms+E7nWLSlExA3Afr8vabpVEhVvn797tYE4lZ48gF9mTAJnr4g
aKwLjiBuRxiHk1qPjQB/wvEdUq49iNt+rRrlfp0xKG/L/aByphtxGzZM1uRT
JkO8Pw91x+9BxG3zK6cJsXMaLqud3XlQfQxxyyLFbokoz4FoQl/l46OTiFuW
JfUFd/883E4XfhfAREDcGO7/Xnr4aQFsLzcTGp8RELe0s34+cXSL0Hi2QKS/
koC4cTwX6RD6sADWb0qFIx8TELeyr82iz3Dz4M95XEPr2xTiFlcgndLGPQff
jeSafTYnELc5r+qlPYnTcABUgtzoxxA3vbbnjs9WSXA9xna0/s0g4vb1ZfRz
i1OjsOnIyfPWpgtxK5pSxFUajYO227HlkbF2xE3DeY51cp0MXkEps0pm/Yjb
/aAHHy68n4EGFbF9zQLDiJvc+OEIcal5+C95bGGhYBTb3wpP18QML4BEkgG7
tdU4xs3S+ER78yKEvjhPJ248gbhV7bc893L3EuxzzZ+98WYCcSNuk9rarFqE
3naLE6J6E4ib8Maj00q1C9BArn6RqDuOuM3xLdsHss5DKLNYQ2TEKPa8xc7v
fuUzAx6c+sas80OIW7YZR7lXJhk6Ax8cu8jcj7i1y+/K8dUeg90dMeF3WtsQ
twdigQ4dChNwYIefd/VGM+KWU+IS4fOKAvRtDcX9iT2IG1lzW4qR6yzkeal0
eZD6EbfY2M8d3UwLsC9wMduUZwhxc2Bji6+vXATn0jLayahh7B7y7djd98VL
8MNj8nHLjRHETfcPf+DYtmXIoT18tT59BHE7eCimIzRrCbyvcx3QMB9B3Pau
CP8qSlsEg3exAUfuDSNuSpeO62yS5iFRX+XexMYg4kbmoHyekZsFO4nwIytF
/YjbDuuSrMe6FJijfpjPMO1B3CRH+7d/PTQOb7Ic/uxlb0bc5N5U8fzcmoDm
SK6nuZv1iJudrBWd6JG/+0Bqez/Nqw7E7aCU45Ffu+dgsXmAnhrRg7g9e+w0
wo1fAME2buHvjn2IW7dtj29KwBIYZg7dHXvXj7gtRggbc/svQ68PDKyZDCBu
vJYpxRc6luHdbifWG08HELeQGxm7Mj2WgfZW7dDK2QHELexplPcXuyV4IPet
QzemH3vejBzTzsQvwK7uAddgwz7ETUk2LURg/O++ZSls12nTg7jtDKE68/RR
QJNKm1J1uANxo7sXfL+VPA4knYN+7XL1iBvjbsltl99OQrXgTjv1uWrELSDx
kMuleCoUZoeV0A03IW7+/Z8OP0mcg9NcCao/tdsRt3vh4vyyJovwMl2T56BO
F+Imzcpud0pwGdLGIkgzKd2ImwarOs/xQyvwCrc/6LJkD+JmoLr4hdN7BfxD
g3rprvYgbsfiOEN9969Au5mF+szxHsTN4mShx37mZaicEYHI593YuRA7xZEg
sQjrj9zpQ/m6ELdzjmwm963nIPaLWx0NUzvixkJvdTtEiwp1zu0lV+80IW5C
Ph61AkET4HbIxJJdtxpxe3gkP/m/g1NwOn5w+GbgR8SNmCV78s4XKhjEFvtb
/qpB3J7SjCg4M83DisaMuoVRA+Jm3fj0qmf7Ijj9vB2562UT4rbaoMrx+/Uy
RDHUfjTZ3YK4adLUyvGkr4DPuF9LxkIL4rYqNFpo8mMFhGTMmLZJtCJuDy6Y
TSm+WgGV8/GflogtiNtcYricw4NlsLIb9z+51Yy49bx8qSL/9/2ln+GRWfFu
Qtzk05qsPTvm4Ol67FOyUAPi5qGirq35mgrhyh/P1RXVIG6Pf5idV/k9AVwx
Qh6TT8sRt19bToXL/lNwKkolum3XB8SNUYZ9+LDMNLzp9HSsYy9H3I4rqrjz
XJyHnUUvVPeEVyJuxft7vfWFlqCQLbD71DM84mZvSc2V+LEMPwdGKc1N1Ygb
/S5Vv/fbVqGsg372kVkN4tboP3RZU2QV+A0C0xIf1CBuw1njKcbfV8A5Mew5
8/kaxI36O8H14tQyMCZzsRpVVCNuustvaxJ/LsIuU4N9p2zxiJt7gVm3D/c8
bO43Dw/XqUTcdE8+mVkdp4K8go+3xocyxG3x2KJDzMVJEHWN+SPsVoC4LbhS
Bw6WToHRjXGFsgNvELd+MbvzHObTcLhzQLKaLxNxi+2rGFe/Pw+PxeoVs+Pe
I24izxW3mV9cAuHmrbiUt/mIW7pMVspt8RWo89HiedRTgLgxyV848IlvFRLW
iVop1z8gbnoyxoRXp1fh1m8P2fbID4jbZ1PZ2bx9q/BWv+LogSsfELdgcniX
O9cKnBKSddtRX4C4ybldxNmKLkGfngoh9HY+4vZVOMND7vQ8aIgNPf9p9h5x
8w6PeKBJNw3ifpwGzPgMxC3Q/dYL3MNJKJB8l1NwOwVxuyKsRxfdPAXtYmL9
xM/XcP+4+e46fp/dfhpYLgQkhJ91wP3jVkWXvJ71bB5Kmf08OWhdcf+4uYsf
ara1WQI1cVlZXPxNHOIW8u5rrNoK/P3ZTu9Ld8f943bipeDK/qOrsJ5mkmeq
6oH7x8236DILh9EqMLymC8K5eOD+cWsXk1PYLrQKS6bC/AFyHrh/3L4fXYu9
f3QF/vsY82Yp1h33j9uAQb6BucoSQIrqpmDwTdw/bht4GeV7JvMQnE0lKOFd
cP+4xZzwyGXb9fd7mS834+CCPe4fN/vZTFH/hEn4WaoaM6ZzDfeP24HZpM/U
iRbgmxVyqYjrxr8jalnKUJbxznwrifSuTWBb4L45uasT/z3emiJwcgWeFm6k
BO9oBxE3h9e1Vl3Ib/tLQF/KtgWGVT7gvzq1I7+BLJEzcW8nFBxSc3vv1IH8
d3lW9s+ptcGuujCNPemtyP9k/zmfrq0u6Jp84e5zsQ35+4w1fRl+t4Osvfes
fk0z8vNsz1L8QuyGT+lXzKL4WpCffnAzNORFJ3AslMx34BuR35Vry8KxoAe4
XLriw1sakZ/Sd+99A0M3eCXIdS69rUf+NW8overYC3lG3zx3m9cjfyy9wx6Z
vG5Y3f6tgO9mLfKrC+PivrH1QVXB91bagRrkx5G/HtLT7IHY672eC0eqkZ+V
PvOg5+s+cLYYaQrzwiH/RMLp75fre4BW5Fn4xotPyG/21XqvFFc/WLvXbpXx
fER+/ImA8W7JXvB7lMApjCtF/jfyCtHvvPtB0eFQaUtaEfIL39JlEQ/vhd+J
+1xn2z4gP7/y1U9Xcf0gO//c6NB/75E/M7pBirW1F7x69GX2PspCfuaqXEXm
lX74aXuCgfZHCvKzsjEsCK33wtPge3vvVCUhf82vwGQnpoG/5xrd4abMUOTf
sf5un8LOPpAK/HJNIzQE+ePdTO+IVTbDSwkFcTxDD/IHsZ9VOcg+DNeDYw6m
TE3i4xQPvVDnm8drejz/zPejFaQk+25Rj2DP8x6FmLmsbUPgoftw2Tl7Cvnb
zfYsOoQOQeXjd/+JSU7iFz9rHBBzmwevpZ2u57p7gT5WTvjWIez3h0dTHWdi
7Rph8Oeu91cHsfdCPYPQkubSDJ5cEVyZGh1IVzbQ3xjdMwrkWpnrdhITKHdP
/gWHpj0dYDe6kpHi2InWGRlgEPU2cAQc2TnyIx6Oo/XgPyb4HLXpB1PXEyq+
vdjvlx7wPmGxNG0FxuMq6nRP2lBu8PW7Ohd+j4HyTc4y46tjKDf3IPdQKXsX
mGcZUiRutKPcIy3mmbpXxyCVdfVVX80oytXWnTpjRhoA2dcx0fS2Ayh3u7hK
+WPhdlB0PFTlWNaCcl0kOzpM6iZgr7lHRpjTCMrlSuo/ZujZDb5Tw5Qe5VaU
K8g75yB9YAJyZwf9OMeGUW5posfY0VNDYPfbsAtHwH6/cb07UXdfRwdIbos/
vFXXhHLbBuSGB+ym4FFNV6jqlSGU26q0Nlqg3wOFqWY8jN+bUG7ji5rhKyWT
sPHGvv/e0CDKDcIL3Pn5dBhefJe0d9LqRbkeZp27dht3wapYbi5dSQPKteu/
ZvHVkwDa7udGJqQGUO6PyqdRtLt6gS+3WdPtRQPKvdyd8tRrLwESFtJeOH3s
R7nKjO495z6NALHE4elsdDfKZX7CrnjlSjewnvQOGIuoQ7mDoSxMc4JEiNkV
8XR2uRflxm++TriG74Uo/wbj7gN1KLft2nuTaDwBDpT5OBgG96Lcy3Zfozpb
RiGdZWv75cQOlEsaEQiQ3egGYyHl74xna1Duo4OhhjQVRFBg/bxv80U3lqt/
LZ72Uh/g6zMNtz+qRrnBtn2pmsZEeHEvbqRSrhvlztBL0it/HAOfmzZFj1db
UO5V/bP8V0N7oCmm3Fd9vQrlRnL+zAtXJUEieV9l3oV2lHvazcBCerwPFotW
2o62f0K5iadlhkcHicCSfOF9cWEbyhVz8vS/Hz4OqZqHmDOPNKLcEHqTEqk/
PbD7wH/3SsQ+olzGQHHX2VwSBHlGSIZdbkK5Mg7p9eY6/TD0eMdOmhulKNdE
l/N9jSYJHG/2qnYPNKLcnzFTiR9OToD20vzobs1alNvJLOR13LIXLL2+Cq2f
Lka5F/8bsE5iIgP5RwaX3qlalJvN/+fKZmI/yN9+nEYgFqDcXVbCvb4JJJD6
IyV6c7IG5R5Vlry6VTsBPxfXot/GVKJc7n2Jlb05vdDKe3ji+os8lFv6x+CB
hj4ZaA6tfCxVqEC56rZJW+Uj/dDzc+zLpbh0lKt4hT7y9QQJ7CIVR3LffUS5
dw7RMbeITgL9dz66X0HFKLee1S+9n9QLn4Ryr13zeYflHjC0Cr1NhuirLlKT
Ufko91qZi6r2Zj9cDgjyv5v2EuXSPFUVJ2wnQ6hzFN3diTyUG//+ydJzz0lQ
eB6Rxp6fiXInGI1tV+j6INreQOB0cAzKXXBb8paNJEOpWZiN7e4XKHfmdnTp
7R0D8C47Ne1DnSnuX67vY/HvLNFkIPm+u/f4gC3un998p7Q5myAZ+ri6tN4k
xKD1ZLVSv7DGToKX8qWnXH5RaD3qjKOf+oXJEKlS8nU50Qb3z98bmxL7++/9
IYleU/VBqDHu3zoDDePOWD3sg86EuP41Duzf+3YGcv5Y8B+EyT7HYN917Py6
1kfzoVFsAM7PSSr9KBxC/hsuL2RffxwEuYupgfflsX/Huf5Vu2W/yDCwRYZH
nn7Xj3Rg+zQf8fc84q6MluX9gf0++exvvVcu5aNQatRLtybbg3Qla6XDRj1j
cDwojy8F34n02ptKLWst4/DFz1G4ZKUV00kS4hJvJuBcm9V0BE0T0pdbXhWz
m0yCP+eEV9l6LdKXZHhia2YmIcAgProptwrpUQwlEwnGU7C1daumWL8E6fpt
jUICyVNAYfxcOvkmC+kPLFuF1uumQIRgmSXN9wzp77okz6ZyjcAz3rUjUyzY
vSLrrYYWV9gwnHO8GC1wbQJxVqtvh+CdY/Asd7Hhtt448msz0N9s9xgF2R07
2YqyxpCfcfJJOANlHGiftG5o2I8iPx1Pg9wQjEPCys4XUr0jyL/7Ic9FxleT
0LmDjtHFbhj51z6XzvMvToBOJe5X1fgQ8luVTfdr/T1fKr6/S9fVG0T+vuGZ
wULvKaCun+543TaA/FHvKFcm2wnQevGZh8HufuQ3zUzXsnEhwNQT7qKTb/qQ
X+HKf3823IhgREn7ydjQg/HJiVoh7yRCbaT6WxarHuR/mJTzkLBJhFFn7Tj9
+k5sPff2eibGEeHPwt3vnlydyB9soq43fZsEV5T8a0ZHW5DfM32ufpGdBK7x
dp8XT7cgv3HqiU8Bf/efQ89ZcS599chfEOL9QM+DBJPbtx/dc7Ue+bvq6aTk
RcmQmTl1qsgOj/ybMZdSNPEk4CwZZVEqwSG/bhavVfENMqgaje8WoC9B/gvM
Zd3+6yR4xurfWBBRjPzybJcbC0PJIMB4LNVkVxryVyuXM1fuI8MTT5eZ1Lh3
yF+zZ9idrmvg7/m+zXWSeQyfz9vWPpeyAFden/sybFoEKq1717x+leEniN76
y9KrEBnSa7b0fAh+s0rPpASNIP+L8PvbI+eKIdtT08QjuRT5M3S3+ANURqD4
p3Ne59/n5J+/W1HVgt66FNwePzgofaIE+a33SMu1/b0PDL0R6DrHO4j8zGwa
ksG1ZWB1vFbOPrEI+ZVJ25gY5cYh8Qmvi6hGP/JnrEeMejJ+hDYjq7nJ7x+Q
Xy2+fiMseAJCH5g7PDLsRX4iSTDXQqwCSj3UVvxVC5Bfw3XAuyt3ElYzNSjZ
ut3In6NQmrIk+wkO+CmYRFHeI/+gVUvY/eIpSHuVpdZl2Y78sqK25CX+StDO
r89POZGF/Cc4ujXl9QlQ15wYZcXSjPz7ewOUjWYqoa3CTiXoQhryb0btLNfN
IsDZyGI59oQ65P9gvaAt8bQKJsUaT6Rbv0H+kQ3dcOavBDi9GbOf9hgO+R8I
FPg2cuLg+N2jaWr4V8i/i8jKwC9ChMZ9daGL68XIP33qBuc9LxwE09NPS8RF
I/81GmUDvbNEUOQftWU1z0D+6Jn7VcRCHLDNyPPylYUgf1byMP/7DhywC4jk
G8ZaIb2Hz/UkT3olfD3KM5nJXIcvfjAd/mPHKr7LvCBrfq4KvlU88rv3qBbp
uLUQkVuhhdDs1R2S8roczfkt3y/GehgPPNdeh60xYn47J0rec5FqCPH6dkzE
vwbpo5m7EpIPFsPC8e/cxobYc56a+URhFV8NvVGWO86vViN/xdyohPu5GtgW
aHQu8iqmH2agH3LJKoFC447PWzPY8+xm7vhlcaQGxPu/s/NE4JFfQ/7FZSXL
WrjmR9Fdu4BDuvk2nXbevWUgM8j6VcO2GM3pTOOqlJ2qBZu24f4Nzirk375f
5VfppTog/tZvjG35hPQxHbtHDPblIJKj4jvRXojm0P8qe5LQWQf5H6rSDt2u
QH66e2ORNSr1kOG0zYhe4CPSTYLZxFNef4Sr20fPZPNh71F/1J165ox6qL07
PvUKV4b8QSLw9vyOBtjM2Qw9a1qK9PichxkPSipAdNSeVakkD82RPfHA6r5d
A3D/unonbK4Y+VcVir/dxTXAb/7NznzvIqTrXZYwd8/7BMyP1/1CWHLQHLor
e48fZ28En2DRK9K/PyC/afWxF26XGuHZW4XEgHsF2HO1eyheI6wSknIEHG5q
ZKA59oM38hVfN8LQoDs309dc5Bd+HdB5a7QRNMJTeC0p2UgXoUlf+aNaBXK4
ntLrFm/RnL5rfJKcHE1QY6AePt+egfzNp378+a3WBCJnUqlP894h3bM+93Rn
fxUUlXgLVDUloTmndt8+f9yxCXbujsBJP3qD/J3fPyo/jmgCOuGTxSE1iUh/
oMtCZtDBgYSluClt/ks05yYPU/3+zCZgYpb8rGf7EvkF18rnWyqboCWu4WA0
fRTSDYdshQXicJDjJjiw9j0CzVH0f1QQ19oEn7+xStorByP/qWnjPUE9TSDd
alpmmemAvXf9C4JV9TiIEDvTFEG4jeZclqI57uA2CNGpb/BFXWN48xvvT2+e
XcCvqFudiw3HQadmlOI1Xez9dWc7huPUrYKfPavP1Fsx3f7q1OEqnkKw+8Ix
9HgR2wfMxq4aDa0Ugr9hu9aiAabXOuyprzUfgltGU6zXd2C5TIVcwibqw7D+
2R4nrzKKdA1SKu7yrWoIiBWyn5TD9g2GsJpFNTwe7H7MS0vXYXr8wwcGdcWD
cBsmb7LrjmLnyx/dUeOwYnjSeGex/Ad2Prod18gjCIxAxllLI0/7EZRrz8M3
KfR9BFy0CX7nIoaRzpzupXn+RQ0w0mq+tObE9p8zsbiWs8w1EGDRDo8zMF1X
k2ZSzXkYelwrM9oLh9F6+PJKHzMwlUKvZ7MH8SG2X53vOaI11jgKjyyE9rJm
DaHcXv/vb7qfjsGO7AXmZdwg0mdZDeyoybWw/TxF41Exti9JSWqfUuarhRzO
z5cPr2H726Frb5ydmEbBOoqJhbqFne9bh0ycjruUwYuvazrstNi+58tc/rPp
7DgcNPVXPNk5gHIjn39Jesg4Ad8eTtwRGepHul1/4rapmDp448nNPCqE7Ydc
Zvk1R/nqIC/wXamRWyXSrSN8BGxDxsDGIWTD8L8BtJ73ihYCwuXlkNVmO8xs
je2fpzcrTxFKJsD5yHM3rtE+lJv+7OC++CuTUOQ2468y1Iv0SYmidWHPeii4
ymhT6FaOcll397nOMtYDn6nrUnA7tt8WHZ0R8CGOQ1OOXMtRgz60noZCpW63
6Y8Qyt7imZ+H3U8i3T+XBP+ahLb7sRXLnT0oly6k1MQjcgqGh9lbvWu6kZ79
RSooX6EB6oVrqqXflKBcW/1hWbeRejhD0xTXyoLt5yeSuF5t55uEHznRp16f
60HrWWytoBatV8BKo6vRr45ctB45SzpKIisBiBrXM9UtulCuZwBD9fBZAih0
6ff4S3YgfeMsw9WkmQbAU42skj8Wotzh4aTlpucNwJqszmAqiZ0LMg720fmy
U1AULeC9ea8TrSeqMeV14cwn+KbcM0fPm43WkzbD33/p8d/7z7HkHq1frSg3
t/+/GLY6AlB+pxLkKpuRbu7t1nv4biNQnr5Vy7idj3LLNWf8Dsg2gmjEB39f
Fex8kc/YaOTgIsCNOgcHG4VW7H47P+l7sbwSHj0Mrm3ST0freXjq2vD0NwKw
FwXd2bzViHK77pQS+w4SYaGFRlJdpB7pen4/k+PXG0FdIJ476lIWym2c+taQ
U9kIkmtlq4ou75FO00bLmHaXAHGCJyKuDzag9fyQKw3JsKsC7zOXWfKvpaL1
PKtwt2g2IEJk/Wvv7JEalCumSnIpv0mEDy9VKO0MeKRb7FOodTJpgj3TI2Wc
fG9Rbs+zJ88njzeBjbGpyGPVdKSXKNjacfcQ4P6LPdo7L9dg3xffLjgQvlYB
e6kR6WF9IlqPJPPI2/hIInAW68Vrn6tAuVlleSzWWURon0/9yvusBOnuccH7
xRKawHPKS20gJh7lyiWeUpO52wT/GWyz4l9MRnpg5s6fOzmJUMG0WCL6/CNa
z7vkN5bmljjwWRorMnsXg9ZzwX38BCuOCOeZmPcVtReg3DX+o3TRHUSQ2lAi
9zFmIr2crYv6pP5v7uPd0sVvH6Lcll8u584UNQHuuc6I4Mnn2M/RVdVOBoig
EWcxGHuxAK3nP9zJ+cR0HOCDjThch8Ox+7P1lT1LQ0QICOC893w0EeUKSoqK
WfT+vVdocBErZ/Rw/+Z7/agdnetsghzTGjnXDF/snvlh20VzMyLcGf4lqbcz
EeUeMImyOd+Kg++XeEOLX95EubtZY8js2/5+v9S9H8nTxu7n78srQz1xRdAA
t0LU0rH7MyHSe7uWXgls1vl3h2lh591V1bVU66pScLm379tGM7bPf2OrmD+4
txyMRxwFjGWx77s960fYvp3/CIod1u52j7H7583KnSl2HhWQMxXWoP4qH7sn
D45riHt+AnAJZWb7id0PaSs0RQQuVsJxn7dnHeQysfXohfrK7qmCo2Z2o3mX
3iE9boLVPrqwCvLF4wIv30hBevVy3Rl/cRzsuM85z1geh3RuMoenQxgONDZN
V3IfRSH97ciT8sVKHCgdVUnRjwlEurf8c7bWzr86T5ZDn4067p8u/d/ujOnL
k3CJ5e8nui8ZH/Gcru2sCRXPez+JKefxGNRf4V3wfY/9ffgrtuQv171H4ZlN
QZuqLQE/sCuRFLIwiw/+JZew0+vvftt7ZEbHgYTmlBfnVdqPTwBrWK7NzhLs
76XDhvo4Jl+Nw9aE1qGBtUk0p0NA/E9UBhFuLvTlamkS0ZwY9WF3DQYCpF3V
krp3cQrNIXWRH4omT8K97e9sdL+Mozn5bUYDCY0k2BeQpKy0nYDmyPL78FZu
J4KYAx/x8YEJNOe0S0bLBhCAhe2D94m+UTTnIo2VKqGLDE5Xk55K+U6gOeYW
UTqev4gwmZE5NIIbRXOCv2W0hvMRQZ92yGLl+TCa49S99fxELQWufrlzBFc1
iubsmGNrMxwkQdNo3smDWsNojqh4vYnyDBFuUAggLT+I5kQ8fjx0LZEKtnsG
3E6Th9CchkSJDONEMix2MnDr5A6gOUnvfgeJJpKgz1T3VGFtH5oj6//5W/jV
aXgSqfqMd6kfzdlKUjiZqE+B1o1JZd0/vWgO23ibV5gSGVSGpO+fOtmD5kxf
VFjC089AuaNF7/vJHjQnI7Rf6hKZApLsyuFact3Y372IBVvG1JNBQOqORItI
B5rjidfq1no2AzxadmpMPh1ozoHApuTx61R49/HIEKmyFc258F+KYfFJCkgd
XUuVbGlCc3q212R40c5CxQE7YjhbE5oTRrsrKbqFCj647DOKi/VoDqu48NL1
ZxQYKDkuSatfi3EeEJJoN50Fzb5dXGceV6M5nLbWbPT7poH+dEJ/AiMOzel5
u32HXD8Fmmw3DRTcPqI57HWTzrNRszB87cJQ7VwRmuPoeVFwSG8ajOm3Ra5y
FKI55fyGR8ibFAi+RsZPGL9Hc371ddaU004CVVuE11KdjCfoCxsqZlJBvoTK
4icwBrlE1Tx2O+z/B1nruCvc/XMEBrkMODK4CfjjLRV2N1XmIDCzQUggYgyY
tzlJtpCn0Pxdlk1zaloEmO8+d6xDmoTmK9M4lwnaTcB4ydsvLp7Y/zdhYR/v
f4tlDCofMUcPn51C8/dXDyxqcY0DxU776dlrk0hXMryqavRmAoI+ZiXNrE+g
3KRw6Y3TXkQwmnzLJMBBRLm3s9hG3kdMQeFS8t6bI5Mo19860GR57wTQqp3b
+Oo4geYzqsRvO7ZrEoJKz+jvdh5HerD6/MUjMVOwZexRrz0zhnJbq7j+7Ioi
wSW75Tz9kimUu2X2lrWnkQDWZbzaKpnjKHcs6V56Fs3feyDPkMOXG2Novlr6
ZIjY7BScUQ1MJxqPIn1+02NV7AMB8qO7Ik6XjaBckwCZnvMvyXCmVPzC84MT
KNfWa7xtsIgIvxqc9Dv/zvmXK7v2R0nemgBh+IokURhB810l2RjiOwggYcx8
9LDQMNK3VQUtLIYQgSnwoeMthyGUO6JFMZx4QIFlZo8G9pujKFfoRHT9xQgS
bNIGP+mnDKHcauUUzQPSRDB/+VCa//cgmn/GJzgs6TkRJARW8M7dA0jv6nB5
eFmLBGKfv9j60wygXFOF+txXV6lQtmpAQ349hHLlft+lnDtHhid8vGOHzAaw
v7veR+jdvkIEKkN/qV1SP5qfZGucqq5NApam8GE72z6k/9bVbI5bJsG5lWRm
kYBelPvKaKkoinca0iTtn5wv6Ee5p7UmdkxvkOEAD+/R4sJelBsilf1V9CUJ
zH4Yv2k61ovmx2mzni8mkkBLQVWCTO1Gekt1oxzpPhnE9HeJNHd3odxkLv5F
Ys00zASIVtRl96BctXOf2M/93Wf20jhJH1vpQrnpneTemqNkOLLx5Kykchea
35Z28Ii6PRk2Sckyj9+2I10h2m3yEQ0F4l5+s7/o34pyGWKjEzsNZsCVR+Kc
m1AHyvWJZX4/wUYFrQv+tFMXWlFufqlcrMBbMnjkb+uLpW1F8xkanXcbDJOh
pjrnIvflJqTraI3SbLOjQEbMefIR1gaU+7PYIqOkcgZyN156Pm1rRLmr0zEa
NF5USBao0Wd9VY9y7zJSxcuY/u7bx9L2DGTXo/nJOzmOX5CiABtH043obzVI
zwppa+0ooYC9fFIWPxMeu2906mhzccxCDL3AsIp5Ncoln18OV6+mQhfJlCMv
qgrl3h54v7rbmAJdOeMZMrdwaP5KGRxd8aBAAYvZjOuPcqQ79m8Nv1ikgLAu
47MvXUUol1fCIPGx7iwYFFnJz+cXYT/fk/bsul+osPN4Qff31g8ol0aF/9D4
IwrYhbIoOXkWoflPthbX+xL/8txzZSq0JwfpD+8qHw7LnYX3pMr8M7Gv0Hkx
VXL3Y9eNabj7rSZMXSgOnRd7dhx7y81ChQ4F8deJdG/QOkUy90gN2czCl+rQ
H2x6r9A60x1yMsZ2TsO8c/KkX20sWue5kbcOPZkUmAh7Nne4OAWt507s16u/
TEZgdHa769AAdt8zDgxrm2WcANuOtzqkn9i98R7D3DL9jXH4z5/rXfU4CX+u
6vE9lvBpPN8YQ9fe9CmQYfwecfUrdj/Ma1jZkJmYBC4FkQ7zCSLyj59cUtbZ
RYS0bQZGE8PYPfCV6cN+g3gCmP496aGFgPxftdc2KhT+3qN+eFtmZ2L3vc9m
XRz4AiJc2bhzyFhzCvkn347m7jhLho/xY/T6rZPIf0SsQSC3iAQP+eduzHeN
I794oPXU+t970ZMU09HHAuPIPyP/smg+hQx/AgJ9uZRGkX/4udmeS/9RgSVi
B7vExRHkn95HzLrhQ4EGRt+m/rAh5C/iE+Q7QjMNT313nvJwGkT+X3Gd2sIn
qfDbdWJD92M/8v8mxRq4FU9DdHi5dIl9H3YPfPLI6NQ4FbhOdjqU9vYg/+FB
UoT12RlgGN4q8j7XjfwahC7+XQ7ToG8pGL6c14H8QRZUI8OOGWh7HOYXe6oV
u8/bWtiOj03DY9FIZ7qXTcivw2xqnyo5CyJWfW6tXXXIz37WlOGIzAws9bbV
V12rQX49H9+UaZ+/95RT632MIRXIr+L/LjbUfQY+JtXzJP9XivwcKXkXWlNn
wamnsPfm82zkV5gpWy59PgNK9uKxzLveIr/bjPvN4AAHsH8c0ica4Y5v4t3j
x2709/t0K8CibeAkfJ+8lyl4WQl/uaYax2e0Cvs3S5RjkuWB/NynkLFGAenf
LRqedRoowuMhzhC2HfJIv/vLNDp8TAlyHk3JyMqdRHrvbHXvF10VAFy2VJye
DNJtX5yytHupCrTZMc0ep/5DumHSj8xr+L+fj9cConnEJJFe/d1RuOGaGjyy
zPWloxVF+rRGUtVItxoc83jvcvHhUaS/7ZjrdRFVh8QDxx5f+iaM6SfFxPZ5
qUOEbztz/UtepJPCAwvuZ6iD3b25vblCu5Hu2f+ywqtRHdype6TaRemQriQ2
Y9fSrQ55vDb0wgL1Vf/0vWbUN7PeJ+G54N5Pu7MwnleOiefJa8vD1evyCrBX
Eek0tn82rv9QgNen7LOO22A8E6ZkJ1yfKIHR0Py5lliMJ/fa0LNQWhXg3dWu
JluA8dyZ1mb/01gV9gsZfUktwHiqeheUqIQCcLSKFlonYDw7zEoNfuqoAXv5
+GAdFeMZFVbSsfpJDXjLoxuVPY8hfYEwwBzIow5GhxbiL1MOIn2mgU5E3k4d
xm25ZDru8iM9jiXZuiZJHWI/ZKY+ZOVCujnuvN5Yjfrfe1GOSBkLE9L7LJqO
X/3L89BKwBkm1incP73k7fcJkWxHUDPMOdjGgz23sXnWJwanZSHyjVMK5YAy
mvNHZlb224wzaMXVHjwtehP5t3h6JYRwcuAWqv7Z5RnGvztrK0Ce3g1mtnS+
0V50RX7Z13XCZF8FOGXw5dLROeznYkOb/ELd/yY8Gyu21Bd1Rv6Iuj0W3PuV
oIUxlvL7oBzyO3sclDhl5w6L8f5WM2QH5G9RTAgkv1QGXZZngr81ZZHf/ltf
J4+yB2TzrpTcvWeH/PENmq8efFWBUHWOSiN9aeTndzFObtvwgK5DhNW+jRvI
Hz21KO4oAbB3zGfrlLIU8hPUlo180jyB+5Gp4sC168jf6n2RkfOgGnBf4T3j
/5848sfLmQlelveCYL/fs9ttLJG/5NTbn2UJakDfc0bOoeU48luWfitoKfKC
A3/KvGlIl5CfeyuegWebOjB6lkk4axxG/rWP18ZP7vOGHbIdjz+rXcTm6zG8
aDivDqlefqZNqYLYz9fJ+4L4dW9wdrkw3LnrDPKHc6StmUWpw5e2d115U/uQ
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
d6fROpk+CYUPrU9DE8/h+Cf/q+vMw6ns3j0eohSRSJGMqUyREpE7lQjRRCpC
pnhVIkOZUiSSQqZSUiqUORlC5kwN5pn9bNM2i3hleB3nd553rXPtcx1/fq7n
uvd339az1netfV/rVsV+2/LtM9F74r1w+dWEMedjvI/wqTg3ZbZIhXUNvPlK
/HhfELxTsMXhWj+Uqo2Ja+lj/5zX5+LHcnwAWjUOGX1gwfsCKUad8/Z+NHhw
34Zppz7eF2zob9y60EOD7oP1/sPt2D8vSISImJylwUdJtj1lb7F/9pvzfjLp
vrwOqJq/Fd6J9wX6bCdu5q3qBfMnmrs+h3UinUUKrRTxFwNgbMzmfbwC++E7
q+LboxKW/XnaHQVFG+zzz7P6/XlCGwRTcQ2q6asepFNwT/m+EpUh2CVSsrhL
tAfpfFfV9Ov9s0EA3UDr3bPYD1/TYtF3zO2HuHGaytx77POVV6uKdsz1QtTi
Ht2Mujak8+sR/lHnNBqkZPJ7ftTrQjoNxJRXhQ4OwpqZK2vVMrFvL628fTtJ
chgOTyZcr28hkE6e4xkRW1yGwWXFnbhDZwikU+Iid7t68RBMtd4MqtiD/e3F
96ekIjsHwMhrVvIMH/btr8t45t8ujzf7R7Y/H000I51eafzpovGDcPTh+cy3
w9ivSg8NTnmuHQb/VPvR263dSKeWQZ/SYb0RKDqc+EF8uhvpLGEXTn4WvDwf
HmHPd6V24fnZqXVPc+Uw7LftNxbPx341mcHWkaOPBkLRz30ZRzqQTlf+mEOC
Ef3wM2prSfxkA9L5VMyVn8N7CMyCRUxNLzcjnfWmLyzZ140ALf5D1SNR7KsT
5L7NM50ahZpwTbvwDR1IZ4OGU/tswCi4M4p/ejrbhnTmDV84LZM2AiXrHRWs
x7H/3Mv1Jfrdj0FYuffKZK13K9L596OCKAvVAVgjcdPKuaMW6fxncSH8gPIw
nPvGYfe7EvvJ6/xWt7kmRkBNY+7igg72yUPyIyklu8fAWjDCxnl9C9L56sTo
CNelMVh/eL2A03gT0mlPmx1SdRmF0ra7k3krG5HOlhvB4Seih8CS1eIG21wj
fo+2JTFmVg2AVBdFl8/8G9K5zsxasblxebz5+R4K4/6JdHpl7xG7nzq6vL5E
yu8/j32v2qeIFI+JMZjjMkixm6pHOmcMmewmeMbBrFFH+FN1HdJpom2kIco/
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
G1l3509Xd/dfT7UAlg==
        "], {{
          {RGBColor[1, 0, 0], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNm3f8VsXRxe/eZx8rarArqNhRAQsKiqCIijVqjLFhRWMsUewo2LDF3jX2
buy9l9i7sffE3jX2Hut7vpzD5/WPZee3z9579+7OzDkzc5l79Jh1d2qbpnmo
2zQd9YuUprlfvbpmPv3wi4QPJC8kuah9InkB9fOrzSZ5ndo0f1B7R/JfdIOP
O77PNvr9R137puQdNPCp2mSSt1P/iZoe10yvpksnyrtq7Hu1WSSvp8E/qX0k
eYDu8bD6XqxHbebGc47S3Kk1Z1nJR0vuIXko91HbWu3PakdqfCqND5G8o+TP
1CaXvL36rzt+/rbqv1L7neSd1X+nNpPkndR/qzaj5L+q/0ZtBslzqfXM2ufR
O86t1kNyf63zQfXTqu2iuV/wbMkT1LdaQz/JB7I3kvtLPlzyFJIHS16GfW88
Z6Ta0hkbrzm/qM0jeZz6n9Xmlrymnjmz2u/0zL019pNaH43vpf7Hjte4uNq8
2bNLuE7P2kryQZKr5AGSB+oek6t9J3msxn9QmyP7O2Xj9Y/R2OesNeubM3tw
hMamrF7nIZxt9TMP5mwlLyp5Ma3vX+qXUttEY5uqfc24nrmo2kDJy/F31ruP
rv214zVfyntXn+NKmrui2l8kn8I5aHw1yX/nfCSvIflcyb0kbyh5C/Vbqv2P
Z+u6JdWGSz5Gc6apfuYJkqeTvBL7rd+nUvuJdWjNT6gfoXa25syGLko+S/Ks
kteTfI7k2SWvL3mIrltG7feShzVey+ropO7TU+0l7EL9jGovSj45erta5Okl
r8q1usc02Jjmbc17q/2i8TOxCcl/lHyG5JmxN8mzy2imU9tM8hK65in1azd+
/9WzjpM0v6fmr9L4+pWjX6voOTOoTa3rttXv26l1JK+msVXVdkfnNbaj2hQa
v073Wajati5ER6qfu6Pa5uy32sXooMZHS/4HOsgZSL5I8pzVc0ags2qT6Z5L
qj2HP8Du9PsuatNobH/sJ3a8vOYup7Zx3mdY9OVE7LX6XQbqmmfQL85a8gvq
91S7SnPmr17jleiU5B0kXyu5r+SdJV8jeUHJYyRfLXkByTtha7x/3m9DjW2k
9pnkAzSnSF4Ye9W6FlZbQPIjGh+i8ZMkr6+x3mqz47c0vozGT9D43ZIHSv6b
5LskLyH5EMm3Sh4geR/Jt0leVPK+km+W3K96LbdI7i95vOR7JC8p+TDJ57EX
jZ87WM/7t/rj8AP6fW+1WYrtBd+ITlStq6M2SPIojR2p9iX2q/5QtQU1/yj9
vV/jc3hd166p8esl3yd5kOQj0CXdY121YyTfr/HB1dfdK3kpyYdLPk3tyMbj
t2t8sep7roWtqE3Iug9tvCevas7qmnON5Fckryb5asmvSV5D8rWSX5C8suR/
SN5U99hE7ZLG67uo8fg+7J9a7+K/T81aNtTcDdTOwN712yvYtNrzuudKmn9h
Y5/M+eJ/71a7Lve+HR1Cp9QGxaYPUttdc/dQm15jfwAP1WaS/Kjus6zGT9ac
/0hetfraxyQPlXyK5NGau6XafJybxlfR+BXomPoJanNrfBm11zR2mdq/NGeY
xv8uuX9r/UMnwQ18MGv+HF1UW7Ixbv+s1rsxbjdqC6nr2xq/wdZ31R7Al6j9
V+0htQUbYzL4Bs6B4T+oTdcYEz8LPv41mA4+bh9MBx+3DQfg2p2DHWD22OAs
+LFPsH5+yTepX0QP3EvygNY6ik4uyj6y3ujH3rHLDdDBah6yd3B57qwVXOL+
PA8MAf/GB9ORxwXTwdO9wgH6MD9niu3M2xrX4TNg4Cy535HBbvjGUcHQodl3
/BC+9YhgPXzjhOD7ylkH+AbOHRxMR14bf1DNkQ4KvoObBwbTwehDgolLYHfY
VjUfOzH4i2/Hz08VHOH9+0UvDgimI+8aTjJrY04CT4CHHB28xrceExxfXvIS
rXEavIYjTAYGS94cW6/mDN+g02or5N3wzdzncd1nuWq76xmfjL1MFww8kH0V
di2nto3kPupX7BpT51I/omvcxWeBZxuo/cB91dZSG9wa18H3M4Lj6zbG8CnV
1pG8lcaOrsb0oa1xGjydR/deqWuuMKf6FbrG9TnUD+8aa/E/I+KLsN8V4ovw
USvGF90d/3xYzh58XTd6ir7i15bQ/RZX21RyL/XLd43fv+rvJ9VGqf1Ffx9T
jft3xRa49pzwHN793PCcjRpzkunDPW4KrvHMaXX989nbNVpjOXgKzk+vNlbj
u2nu8dW8cYz646o5wNXBa3DwyuA7+AdWT6e2fWOcBw8ZvyqYDla+Hp98Q34b
lz24PZzhAPSjNZbDMc4KJ4FTnRkch1MtqL2ZX23bxtx2JrWDJe+g34+t5gy3
BKPBSjgCeAJW3RZMR745uA9W3hp8B0+vCT8B91+Lz8e/43uHV/v35+KfwQJw
FXw9V+3p4DjyY8E4/PAjwfSTsw6wDsy7P3h3dGNMHBDcvC/4zpxnwhnOb+zb
wVaw6tlgxwWNeUQvtbMb2+LisUd06Xddn8k06j/UNfc0jpkuqvbt67TGWrBp
8djywKwPu+RZ4zX3xGquMqvay5wJ92mN8fCHx4Pvp2t8htjvsdHvk7JPj4aT
gGvvBcfvbLy/d6vdhf60xmxw7f1gOuMfhGPckzWB2WD5HJr3H/WXqs2l6+ZU
u5wzh2fhJ/T7xq1xHaznmuvzTM4JvOVM3w2X+Gf+Bstva4zVs6odL3ksHK0a
ux8ON+O97gnvgs+8Exy/ozFnAIt5Jhi+hdotkt8OjnP/eXSvV7FRtYPQkWqs
fyG+8eLGcequ0eUp9duz6vdozFGJ1xh/q3E8Tlz5XmO8noYzYh/z967F84g/
P0xPvMzvYDr4/lVjPCUW20jzv2jMFTaQ/HHm7SX508zjd3w7XKKvdKyfWle/
T4BXNI43NpX8Y2O/PL74GcR736cnhtqv+G9iqo/zTDjGzxkjZiHZ8HRjf7h5
8d/4x1n1zAW6ftYojX2bNfFMfgcL9ih+Z3IEn6aHMxys8TaxwXbqZ4t+H1eM
93DlXunhgVPFf7L/O0leWO11yX8uxi1+26p4Hud0hPoewbbT1e+cM/ib+skT
2/RITzzybfYJrJw390Y3ZoueY3d9wkvhe908B384+aT3UDuxeN2vRC/e8HY1
O+ifOXOvHYufgf79Wbq0VvWc+cMnb1Y7pfh5/D1n5mJrP0kekrzNg9E/dI9Y
m9h5TcnrF/NFzvFTyeOiTxsWc1B0ZkHZxLLFvogz/zzz1yvmnbNHd9+NPn+s
8d1/o9PvZ86ZGtulWPf7FfOyHjnnD6Pn6O5/M7+fnjusmBtv3TqmubdxDEs+
YTfJI1vnFIht++Ys7ss6v8j6xxTv7f25/8dZ/6PRM3TsH5qzZ2ymJVYt5qWf
qB8bu5oxeofPPFfybtHXLjmJYq6Lf16+2LdjN9jRUtH1b7Ie8mlvNxNpfLNx
8fgKmfNt5M80vm/s5Dr1+8T2ptBFI4o5GzbHGLY5SOMrFPOoX9UPLeaWmxTz
rbViZ79G/lzjB8Tmp2YPi/nVFer3jv3fon7/+Aj0/YesDRtmDHv/Qr8fFDvf
rPj+o/Isxkbl2h/z3GXhnsX8jTPdSu1GrmmNDWDB08HxcxrbDXaKLX+t/qjY
8OrwomJehD0zBl/aupg/ITM+ba5dRL5nqNoq+nu+rjnKtrk//hoZ+8fOsfFH
1R8Wv/CV2uHxFzPquasXcy3slvgTGyfmIJ4k7niiOH/BfbBJYj/sdLiuXbmY
O/27OM5nPn4LGd/Vh3i8eB/eUjvpN7bdJ896rvhZ8HB8bc0+f6n+0GJ/s3Lr
d50iOotvwi/hU/ARl0aeI+PMgTeg29+pPzk+aNvicea8GBtgzmk6nweq9X5t
PWuNYn6yTTG3ODbzZ8hZsLdLZc3fqj+heE0b6dq1i3G/JzmrYn6Ir8VX4idH
F58R53i/+kOKf9u+eP28yyy6ds1iPsxZ9MyzOKNe2ds5iCeKOdIrascX//aU
2pHF13zD2ovf8+Hi3BZruLc4P0VuCh8DpuBnrinOjWLjFxbnuHvF9hkfET+z
aOZcVizjc/DT82T9+LaFiv0bdk3uEvvCNw7I/LOLc9P4cPx5/zwLv7ZIxndu
HeMNil1PlRiKMXwHfuN02de01bnHvxavAfzCr0yR2LC/7GNRtQOL6wKHVft2
nnNangVXAS/BlV113S6J2XiveXPP79WfWvz3AsW8CX51CjyuGp/+pvU8WO03
95N8X7Xf7x9fCtftGywgR3eqfr+32kfDKxbq+lzQmSVjd28U2ybn/l6xDWI7
A+LbyZ+AwwNzvtRE8JnkWKiVsC7yJH+GPxefD+feN+/1kdb5+2odeF9jfy/G
5L/DhavvBVc8uNr2byo+U/Rh3uApNZc9dJ+7q/++ozj/y7lvpjl/KObYs8P/
iznteuTcivn8C2rHFHOgVWI7xHd/ik2RH3tQ9/9P9TWXS36m2i8Mjh8m1710
MIVzP0O/P1aNB6dp/r+q552u/uHqeetkDeQMz9XYv6vXNzI+mZzz+lkznJzc
87XVvuihYu6F3107OoA+rRm/Smw7LHiE3p6t35+r/m2N+JkJjXN02Dtx5Tn6
/cXqv/+pNb9UPe8Gyc9Xr2lofC/557M09nT1fpHHHlkc12+eswaPRscPE6eQ
M764moecr/6N6t8uLebfcI2Nc17kMN/Uc9+uvtdZxfweHkRt7YJq3nNBMV+H
j7yk+W9WX/9YMe+cmE8nV1GNF9RbLq3mFU9q/mvVZzwMTFN7gvhT409Wv+d5
6l+t9ne3F3PxiXmK+EDi0KuLuTi84x71WxbjCfWKK6sx+sbi2AAMpw5zeTXH
AGMOzTmCkYdlzQ8U83VsC/41LveHP43NXsGx4Fr4tneLOS4+48riuAV/Sd70
9mr9f7yYu4PnrxfzY7CLvPjN1bbwbHFtBswhj3tjNR69XBwzgG8fFccD2PHF
xfEGa1gi3Gl44zoamIb/BJexLTD6OO3tI9Xz4EZ7Z51w2V1yvmcUc038MZx3
95wvHBGuiM8+r9hvTuLjO2f+FPHb2CA571urMRF+B/cDT+4qjtngX08Xxy0v
BOuOjAzPOiBnDSc6Kntya3H8BrZQn7m+mjvBaQ7P3oKph+Ts4G4HRR/gevvn
2uuL40PW80Fx7AE3mej7Ik/kCNnzV4vjNPYSLrtvdIl9xXeB1fCMk6MD4PHx
mf92cYwEhr9YXId7Kdhyas4RTnRS5sAnTohu3EieuDoXTR4ajg4/p0DO3/j/
DYIjFxXXNMGgq/J+V+ScyU+vXx0LkK9dt5pX7xLb5tzRI+IBzvmP8f/nFOMz
PRg9Knzp8mLduTL6g74Te2ATxAE8nxhhh/io++IP4D2T5/1ezzuCXfy+XfTr
vOgVdS4w9JJiO7s4eg7v4PnwEOpFG1fvCXZ5afn/2I7riI/gHexN3+jyBeX/
47Pzi2M0dPP66AM6cmv0hDjgtmLOT9xwQ3HsQD0UTLkt+nhddHzz4Mu10XFi
D/SO+i92x/X4S+IxfAncirngKXUi/OFr0dl7orfYwe2xBfLcm1XzH3wSvg+/
xPcJ4C/vA48YEC5BLRVfendxTneb6rwuvu3O4nwEucztq/kqHJy58HA4012x
U3LC+OZ/Fue7wI43i/Ne+1XzfDgsa4djw+ufL/Y55LH2rMb9scHZ52M3L8YW
4NRPFnNd8sG7VnNgfDNYi38mN7xTdcwCj36wON6hLgwf4G98AH4WPwCHeqSY
R2G78AzslRoZ2PpMcU7u3MZ51WeTYyf/+Vzy6uQ8n0m+nTn4IXw0vmhh7fHA
rnEXv4Uvw3cRK3Bv4oXdgulPxu7h6Pg5fBN7v0l8CfiEPxkTnsC6ifn+VRwv
UD+F/7xU7DPAAPwGdVIw+sNiH0ashS/Bf/+3OF8Af+Ss4I3kVsdVxw74J/wa
Pmqifyr2W+ODuf8pjufo4Z/UxOEhrAlfhV/DX8EleT58Er/7QN4PLIUHgKf4
eGJRMJY4jPcgtoJTkGcBZyb62mJ/S80RLvFOsT/GR+OTyVkeWM2/4fv8TtyB
3wWD8b3UTabvutZPzQUeeHMxb6WHl8Kd2/hP+hJ5f531/zqup1NnJPf0ZuOe
v+HS8D5iaTAHrCbWAivAdmJ78AqeQk4B/Plr7g8nH5J7ch/GeDY+mTk7kEhp
HZtTIxkbXAWPwVZqpOSwyF/txe+t6yjwAmJRcIOcCXVWnrU9v7WuuQ7Nb4z/
EvmDzPkl69lT7/1lx9/bwE2In8G0bTT2346/R9q29T6wVOJc6jFwdXr+xofs
rn43tR5qe2YOvBSe2jPz4cVTJ6bbNfEdnAHO0k3cd7yeOXn19zDEg2Na1/yY
y7XkeYg32BNikCs0v3f1NxWzxTanbc2V/lcc68LRiOXAXt7lL61ryeDpjq2/
RWDNe7SuMx3WaSYWn/kmiveaJmum5974Ur57WVVtpurnLpH6WjcYPShnN7HO
3fg7tQUiEwv2zZkSZxAjEWvsRm0UX4cttM4pwXX3aV0nIF7ok3G4/Tj1e7eu
Uc0QHcJPMj5zdGmWyFx7Jzpe/b0HMcmMmcPvzMP3cu+JzyiOE/rkWfBo8m5w
NHg3OT44ETEEuVf48n6ta0XHR963dd1ojozzLr3zN77oZa1n+ZrvDTS2f+v6
Chx/jsx/SnOWrs6nUUcdXa0Ds2dPeNZDmrN49fctE206dof+LxRb21dzvqmu
9WOPxMnYwqEa/666rr275K+qa9PU3ueNji2Ys5stNjhD9Bk9ZM47sS/uiU2x
LtYH9uFzBoS/oRcD4nP4Xm+e3JPzHd+6DkQcOEvO652sgzwz36lROxse/ekX
XeLbH77BIM9AvoG8w8TvMVrLAyP3y3i/zOda6s4zdP2tFNcunvm9chbsP98F
kLd/M76R/C9+gPiQ/ALx5hvatx5d117RGeLP+fL71pmzVeR7G9cDicOPiUwO
jniH2jixLnEuMvlW4rgrquN5Ynm+cRuSOfzNHPIAxMzcZ0LjsSEZpy42Ojr8
aHUugDzAZdVxETHRJdV5HPbg/uocDed2XXUcTgz+j+r8DnvPu3FfckG8E+9J
juUt/T6S+KdxHDs06z+QdbWuz71QnRfA/h6vzlngF6+qjoG57tnqOB/f+ZT6
M6v5xg3VOQLe9aHqPCa+k/tvmXckN88ZvRl/NSy+i2cMi+/ifchBk+ugPo9M
PLWkznCprr9vpE5OzreTZ8E/r8l1q/3m2jWy56xpjdwHf7JmfAvfWK2Vs141
107I/gzPOa6dOYw/Hr56R/YB7kcuk/1aMz6Kby6oGRDLc36DYheMD865E48S
Dw8KviB/l/nEzOQiwBTyRxMxqPU7s57ztMc/V3/ncCrfqFTXm+bteo/Yn2Ph
DNXfqLxcncfBdtEt7vlT9A1/Rf6Mbz+XytrQ28FZ/yvVeShw4KbqnNfv805L
5b2eClcnj0vtevPY1HvV+A12k4umBk3ejNzKRpEH5UxXyO+ME5svpOteaR3D
MU4OiPwPeZyNMwcsGBU/gE+eWOcoXis5Mnw48zfLtcSGfcnv6O8X1U/ZdX15
gzybOczdNPImkXkX4ppDJb+hNjL1jmv0fte35lvw76taxzBwzStb53yIl65o
HXcRt9zUmvfDcW9pzXHfzrpYH7Hxza25DrHoA3x31PU3Epe1juuIA9cHC1rH
ZNe15rJw/Rtac3pimMtbcz7itGtax7pw32tb80Jikqtbc0fimRvb5HOKeR/8
D5xCb8gJgheLpcbNu/XNtyhPB1/gbfA6+B0yWPNuNVeDp8Frto1//jnP4P69
dY+eXX/7+kLiLOo8TIT/gEf3VOd/wUy+wSQ/jE/D53NP+NKF1TlfcO/O6jw4
WPqO+mnz3X7Je3FvdG+R1K1+yLpZ89x8f9T1N9VPwPe6/q6jd74n4fulwflm
CT4JZ0DfwHpyyH+MP1k3MnqOzayXcfCX/Tw4tkBOmTwbc/+U+eAXdjR3bGqz
yMxZL/NXzrdhv1TfH8wCp/rnewBiOd5lpq6/j7pD79Lp+luj6yWXruu8YAr5
Cuon20UPHlSbT3NObJ0bWFjyya25FTwBbjrxG1mNnxYdGi15lo7jHn4bE/+2
pcZm6jg+20p9r47jpwXUv9A6x7O85DOjfwsytzV3Gyr5jNjY1viSjmPNudWf
0DpWW0by6dHpgfwe2+sv+ZTW3HAxnhl7gJOOi/+H1+yTs/ikOrdFXov4AM4N
35458+Gx1MPJxYMvn1ZzVvgqOZyDNf5c6/hn79x/x+wVOvxo6/iXOPjo2Ork
HfO1vXLdEbHnovGPq+MHYgfWQWwFrxub+cisaXzWv57mftI6NzNC8lnxI2tR
p2idizoxfmeGjn/D1zwUn4RvmqbjeORWyQ+rrUP+vLX/2xSf2XGOZF3177fO
E2ws+dfWeY4N4KutY+4NwaDW+RLyALdJnk1jm+DTOs5bjEInO85VbASutY7R
/yD53dY5MGKl2yU/gj0R97XOh60m+fHW8ejKks9uvXb+npP6iv5eVf05re9B
XrGP/n6idU5vHmo22ZdD1P9bbV6NPdU6j0x+b35qHvp7ro7Pj7PbXPJ0Hecq
fq/+5dZz15b8ems/voXknh3nFNekVtJaR9aQ/Gyev5nkqTvOMaxOfaH1GmeL
TsK394geEruhe9SeqfXcVp3Hpk67YvQSncTvkUelnvl+de5g4ejziNznjur8
P/VJ7Iz4CFvD1skBYu/YFjkQ7Iu9OF9/P93aV7IGOMYt1TUC6thTdx0vXRFO
C+fbIvt1rvrHYqvnqb+jtT8n90tdF+7I2ojTL0OXqr93hU+SS+e7A/gndRO+
gwB3qd1sUcyTqd3wrQfroX6DT4WbUrcj3oSfU1vhe40JWRtcFF5N7WnDYAf1
I767gedQ46DeDsemvkadHI7Nd4N81/NWdb2KeOL16poQHIS9pUb1x5wR9Sc4
CHHjhDwXXwZveKC17a8SW6a+S44CPvxRdS2ZOjJju2ccnSBuBWvo94uMj7tU
8t1qn1XHnMSb5Nsv0djb+B7eseP/kwK3JMfBM+Gi5DImi89GHhR+znPBuA+q
8w7kHD6szoOQA9kl94Gjcv0ukdkfcmLUh8GMizV+V2tuPzI6vHL0Fl1C5y6Q
/M/WeHCh+hdbx3nE3nC8z6vjbWLt3nl3YsG5Moc9hh/Bkz5srdMXqb+zNS+D
n33TGgPgRve05mXws89aYxh86L7W+AGHu7dNHUH9q605FFzqx9Z4A5e6v7X/
wI9gP8vIFpbtGoewQXI1nZwNmMRZkdfHv006m34dnxU5+w/09yId1zHwJzwb
zoffuyzrgB+zLt5z0Y7fm3wtPhk9oGYCtuLjqKXgW87LGYDlnAn7AtayT/DO
t1rzUOoDn0oe0HHtAuy4KHYL7mLH5PjBBc4VPD5OfW/9tkTH17Kv4NBh+JHW
/pr7fdTap/N+77TGj7+pf09tae3ZEHhVx5hxhMa+b40HgzX2U+vv3mfs+v/o
wSFGanx2taXUvs45890EPhwMgB8fLvnL1t+0z/Kbb+nhRVs3xqolNffb7OUH
0SN8Fn4fH/ZtdS6GPAx8hPwqdgy2/C8YRXwATuJPwSJyeuARvIZcKNyGmIaa
FGcHZyE3ix7BocjfooOLRX++zJlwNuOzx+w19wXbyYWC4fAa8rroNRzts9gc
uoMOgUfwIPJj6B65W3ATvwwWUdvaLXt2evw9dS1w7cLYJFwQGwUDwEjmfF8d
ZxJjfq7xP3Vcn+F+3Pf82DA8D5umxgUOXpA9YC/mD4azpp2jp+jrLtFf9Jhr
ORu4BWfFWa6fs8Vu2CP254fqeJhY+OvqnBr5tKXV/xDbXUXyrB3zEeIfeAs2
TFwE97gm9g+v5SyI5eAzk3wHeoaOYf/cl3sSO8Fz8B3UEwg00Fd8CvaALRA3
wqXQD3gGnAx/Qe2RtaF/6A14jB7Bz1bqmK8RB8Il4GrErvAMzvSznDf2Q2z5
RWtfRsxJbIj/gl8u1zHfpNbUQ/KwjmNFeBdcExyCZ0+KY+Fm4BMxJHwPnko8
AEdHh4ld4T/wRXjqsh3zVvwgXBx9pqY0meQhHftQeDk+Fa45ItyTOBP+Q7wB
71yhYx5KzWd6ycM75pRH6vdfWvsLeCH+44voPbYNjzxKfc27Tpb3xb/D+yfF
wHBj/D41RnzF4uGdrLHtmNeyN1OEkx2tOVNlXT2yNs5k+pwL3O4YzflduCZ8
FB0mzllR8owdx0LH6reZwxd5p2mzZ032Dd8Hn8YXEh/AMw9qHUvAHeGN1NDQ
2xXjQ+HB+NTPY9uT/CwxAH4Xzgo3hZeCSXA7MAq+CwfF3qlNEa9N4vpwaPwV
vA/+RzxDTY+YC/4Nb4anYptwcbg1fg9Ov0psilwGsR4xBvUxYj14P74En7Ln
JB9Q/F5gCFgyLvZLzopcFLlk8mDklzj7jaML4MGGwYev4jePjB/Fn6IH+CVy
5uSkf6rOj5GXxSeQP6fWQWzFNwzEXMR91B2IpcAY4hAwB50YFR3B/5OfJ59N
vE3+jf9z+2V1TYR8Oee6ec75u/hozh78xt/ji8FSMBXbRydGR0f4z/3E5MTj
+Hfw47jY9r6x9QE5c/AZzCOWBgOJQ6kvwA3BIjDp+NZ4D1bjT/G5G8QHt13n
AsgDgAFjggn4613jv9Fd4nZ0GeyHI7Bu8AB/zFmicwdEB+Fm1ErgYLwLHJ64
pE/0he/TyUNSc+cbW3QCfUFH0C30CF2bMzYEDs0TPQUD0MXdo5vzR6/BkEXi
D+BN8HDq/nyfSO6Rmil5HvgQuAc/IhdE3ZB8D5yWWh68FRvYMTZBzoqaIzkq
8p/Upvmm+JLgDNwN3gPGoruTdZ2jWze+gNgP34Dv2Cy+BPyHB+Avatd5GHLP
nAV5mFXjv4iN8WdweOpK8Fu4BpwDf8T/Y6KWQb0CHs63pnB44gVqfXB1/Nem
8WdwfuqP5A+m6jrnSV5ziq7zWuQ+id2oCxCvgWPgGfYFnyPnAucA28GXA+OP
D4/94Qvx1/hDfCQYg58cHBsCD3kuNRjqL+AG+HF8/Bl+DT3Aj4Pn+HXwBxw6
Kr4HvTg1vvaE7CW4BD7xjtg4OXHy4eAJuMKeD4ntPhUffHLskvMir0dOb3js
lXfge7+F8+3EsOwf78O+cz/OAS4AJ5jEGenBcHg3+oWtLhoey17BJdHN/eIL
0XdsFjwH13kffAi1Pep6+E58KHb3RXCd+3wd3IJ7fBWMZ7/g2vgDOAY8grXA
ScBA3hscHBk/wbe0YA5nAu6sGPvmDOA+cCDOjDiDeANfc1TwFf8KV4Izcfad
cAj2lzgGm8AO0Sty6+TVwVtwFx8Bl0en4LRgDnbGeWAL5LjJb/8fqYpeuw==

              "]], Polygon3DBox[CompressedData["
1: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
VP+6uRf6TxmaXC2uBq+V6qv1U41lfVWvdMxCL7l+6s+b0vtYX9UrxkavLOrD
3UXUCmuG9WMefHQWmsT6cm8Rtct8uBo+sYyzlJq6LfYTRWgZ1/CPMjS62lz9
/Sp8bBlaeAC4i7Ev4Zsydkol6uP8IrS5mriZ9acIbacGsl5Za9Ryairr1dwi
apk17XX4hDLOfp6h1G9qbrW2mv1s7E99PvakSuhJzzB9sjgDqo/Vr67t0Cz0
rnratVQDvwAfAX41Nrj/1Yx9Dq/FtVPAKuxhZdTKXnnUr8mgVhYx/meqL+Y6
9+THMs5wnt08U6m31cfqYTW4ekc9am5zz9Xn6mX1q5pefa1+cm/VxOon9Ze5
Vs2mflOfmZvVUOov9a65UR9Rj6u3nOsz1ePqPef6DPWy+kvf2DsLPe6Z2bOy
Zy7PF+ppxw7Noh6q930XNfvL8GPABvfT87bx7B5jt9Qn0vlsfvKpLTwLVWPP
9Tn1qHrrL62ahX5Vj5m7zMFDjQfQNo8zunpsBmiXx5lWfaieMnepaTcqI77U
j/2zyOfqPXPd01nUZ898nvU8M5vf1WfmOmv2R8YTaJHHGdzz4hRQN48z8oPY
40CZR//AQqO/qVV95ijXE3TIo+dxH/ZI60sWPQr7F1eCTnn0OB7APhb8mUWP
wP7AVaAz9vNgjPsPOuZxBrW/MUl/zKPHoH47DKzLoidxQKpHdeAfg7nYB4Mv
s+i5qCed45g9GvsFX/D9O+fxzfYHZoLu2J+AN7BvA6caG3n0R651fbHfzWOu
enhRFteoL+yB2Pt4OY+1U29ou4Zbsv79q5Fj1K/2MxpVo9dTyeN8PM18nMeZ
eH3Kx2o9NZ/9g7PAtnn0GDyPnwLq59GTsB91NejiWTyP8/+x3OOjLM5A9huu
Abv6beDXpHe8t3vYM/WH7isi39mPORc0z6PHYb/mOtAtjzP5l0XohyKLd2xV
hp6amoXeO9z4A+3ziIl7sY8EP2bR0zrKeAS75NEj0bc9387Nw8fVv/Zw7N3c
nkcsqIe1jQnPd/aw7F3dmMdeq79m57HnnpeNSWPRe6rP7NHZm3POYSmf3ZOH
D5mv7P+Yu8xh9k48P3pveyjdyqi/6lk18Gvcax28ibm3Er5iP9C112dml9Fv
0pfmw+8oo7+m71wFv7WMfpi+Ps57ltEPcm/Os6aVcX+f5ZmoQxn12rX1HTzf
bVKNMc+sHbC7VqPWHJlFrFqPlucRszsnf7N3Zky1s1dUjb6jPmi9td/VO+Vv
9epf/bcs6r97ZT/k4Tz2zPptT9Be4II89trz8H157Ln9E3ug9j69xlg3Xy7J
I+bNFfZnFuWRM6w/9jz7MrYwj9xhPdI2h3jetqdmL81n6EvqB5+tT9nvsWdl
r8p7Wi9dY9d2VR65x/qpbQ6yXtujtDfpGpl7JpcR6+Yg9Z39OL9dDWTuUQ88
m0cOMv/bg7X36jdZH+3x2tvVp9QPxpK9Xa8xlx0Hluax/vZ/W1Rjb15nzjZl
6AXPmp5ZjTXPx2vyiDnzgWeUv84mKf7UbGo1Nbz60h6lvcm3U3yrCdQCnmn0
jUHV0CX6SN0yNLla3Bq/fRlnIs9C9lysJ2oAa7+azXyvhlO7qTHMVepZn9Uo
xbP9Tnsh9szMVerPD/LIWZ4XjQF9/8089Kk9QHt/zrH+2FO1l/p5Hr1c65G2
PV3Pd/YE7QW+l0fuU++uziMHvlVGDBk7r+aR6zyf+ixznvrYnq+9Xq8xV55U
xlxzprnd86P3Nsd7HrGnay93LfydIuLNXsq5lchn9ufVSmpY9Zz9LLXk6FQP
7f/bO7QHqR5emfS3GrI+9+pXDQ06KuVL9YO9PXtK9eytVkOzjkz1zN8P1F6e
MTdnrE81NOKIpBfs59vrsmfg+dfzivnCnGw/zx6vvV17vm+l7/e3i8GpHtuv
V7uqaazf/r6gtlET2t+z/3Z6Fj0U+3vqYftx6lP7gZ63pyb/td+3OOll9bb9
viXpPOAavZHizd8C/A1Ffb0inZ+8p/1Azxf2Wuz52P/zfGUvxXfQX+0PTkjf
p29vXY340cetXZ4n3TtrmP6unu2fRY/Y3k7jauhtdbd7sV019s49Uas1rYY+
V7NZu5tXQ8tZw137batpb9SZ2N3BjEr06O1vWQPM/cawe9mkGnvtnnbC3qoa
uXpgysfmaHODOcL3swflu25ZRv2x5lhrPANaH/RJfdEaZC7vVY17mdN9fzWn
WnrrMr5Pn1N7b1XG96hJ7O80LuP99DnPAo3K+D59zH54wzK0gb8hmc/Ma2pb
f4PwPKPG7YHdDayrxG80/h7R2R5aJX4j6Jzme1bybx3T99fFrlOJ9WgF8jz+
Zj/WfqC/BSxJ9c1rnGsPwXxpj9jesGcs9YdnWs+y9nTUj/5+Ye/fe7o//n4y
EvuGStRTz9SepT0Dt6/G70tqsWVJr9l/V/sPS/Fmv92zk2vi93qNczsU8fuM
v+eZy32G++GeupevlJHrXb8RqR4PSvXab2nA+P8BmFdPwg==
              "]], 
             Polygon3DBox[{{1322, 1341, 1230, 1127, 257}, {1295, 1306, 1045, 
              1258, 81}, {1301, 1312, 1050, 927, 87}, {1298, 1309, 1047, 924, 
              84}, {1342, 1303, 89, 1277, 1278}, {1340, 1323, 259, 1199, 
              1200}, {1296, 1307, 1046, 923, 82}, {1299, 1310, 1048, 925, 
              85}, {1300, 1311, 1049, 926, 86}, {1303, 1314, 1051, 928, 
              89}}]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl1Pd3TnccwPErCRWz9mytxojY1Cg1alS1Vu09j+M4OI4/obRUrdamNrW1
Zqzae++9SeytqFKvLz+88v587n2e5Mm9NynSY2DLAWmiKCrsS+/YKArzFe4a
foiJon0Ucny/zuQgje0H9FM9osX0qM7mOE3sx7SontLielrncpbv7Gc0QS9o
Kb2o87lMM/slLanXNEmv6wJu0sJ+Q0vrLS2nt3URd/nefkfL6gOtqA91CY9p
bX+k1dJGUQXzM3MVfa7LeEFb+z9aWf8Nr9XX+idvaG//T6tqxBfh2rHCsVjt
SAw1SMeXfMQq5+O1M+mpRSbqkpk1zmfVrmShDtmpTw6Snc+l3cnJV+SlEflY
73wB7Ul+GpLqXiaw1kcdEud+mJPN15xbp9fD+3QDN8wb9aZu0hT9W1N1s27h
lnmr3tZtWsr3u2Pebk40v2KszzGDrx3fqxv4xNyLgoyxT6eBeY+uI4+5B7kZ
bf+deubdupZs5m58zCj7NGqbd+lqMpq7kIGR9qnUNO/UlaQ1dyKOX+xTqG7e
oX/xPx3sb3UEk/k8/F66nFe0s7/Un8N7PT+TtFK4DrqUp7SxP9HhTKR8uF66
mPu0st/TYUygjH2LLiSVlvYU/YnxJIZrr39wleb2K/oj4ygR7pHO4zxN7ed0
KL/xWbiXOoeTfGs/oUP4lSLhnussDvON/ZAW1mnuZYr7mplhnp0keybzYOcy
6qBwvTWegeGZ1v7hWdd+4dnXvupSRd4e9Yl9/+cSZXGgj58RE56/6MP/nnea
fJTo
            "]]}, {}, {}, {Line3DBox[CompressedData["
1:eJwNxesqAwAYANBP7EH2NP5Ro6kpakJRW1FbTVEoud/nsrm+x4iILCLaIov2
JDs/TieZzadyXRExyHh3RF9PxAr91ChzQ4pVBrjliDvSrDHEPcc8kGGdYR45
4YkRNhjlmVNeyLLJGHUqvDLBFpO80ZuIqPqdKbaZ5oMzPsmxQ54vzmkwwy6z
NLngmwJ7FPnhkl9K7DNHiyv+mOeABf65ps0ihyyxTAcRFjSz
            "]], 
           Line3DBox[{871, 1004, 872, 1011, 887, 1018, 896, 1025, 905, 1032, 
            914, 1039, 923, 1046, 1343, 932, 1053, 941, 1060, 950, 1067, 959, 
            1074, 968, 1081, 977, 1088, 986, 1095, 995}], 
           Line3DBox[{873, 1005, 874, 1012, 888, 1019, 897, 1026, 906, 1033, 
            915, 1040, 924, 1047, 1344, 933, 1054, 942, 1061, 951, 1068, 960, 
            1075, 969, 1082, 978, 1089, 987, 1096, 996}], 
           Line3DBox[{875, 1006, 876, 1013, 889, 1020, 898, 1027, 907, 1034, 
            916, 1041, 925, 1048, 1345, 934, 1055, 943, 1062, 952, 1069, 961, 
            1076, 970, 1083, 979, 1090, 988, 1097, 997}], 
           Line3DBox[{877, 1007, 878, 1014, 890, 1021, 899, 1028, 908, 1035, 
            917, 1042, 926, 1049, 1346, 935, 1056, 944, 1063, 953, 1070, 962, 
            1077, 971, 1084, 980, 1091, 989, 1098, 998}], 
           Line3DBox[{879, 1008, 880, 1015, 891, 1022, 900, 1029, 909, 1036, 
            918, 1043, 927, 1050, 1347, 936, 1057, 945, 1064, 954, 1071, 963, 
            1078, 972, 1085, 981, 1092, 990, 1099, 999}], 
           Line3DBox[{881, 1009, 882, 1016, 892, 1023, 901, 1030, 910, 1037, 
            919, 1044, 928, 1051, 1348, 937, 1058, 946, 1065, 955, 1072, 964, 
            1079, 973, 1086, 982, 1093, 991, 1100, 1000}], 
           Line3DBox[{883, 1265, 1266, 884, 1267, 1268, 893, 1269, 1270, 902, 
            1271, 1272, 911, 1273, 1274, 920, 1275, 1276, 929, 1277, 1278, 
            1349, 938, 1279, 1280, 947, 1281, 1282, 956, 1283, 1284, 965, 
            1285, 1286, 974, 1287, 1288, 983, 1289, 1290, 992, 1292, 1293, 
            1001}], Line3DBox[{994, 1094, 1291, 985, 1087, 1264, 976, 1080, 
            1263, 967, 1073, 1262, 958, 1066, 1261, 949, 1059, 1260, 940, 
            1052, 1259, 931, 1352, 1045, 1258, 922, 1038, 1257, 913, 1031, 
            1256, 904, 1024, 1255, 895, 1017, 1254, 886, 1010, 1253, 870, 
            1003, 1252, 1294}], Line3DBox[CompressedData["
1:eJwVz90rQ3Ecx/Gv8If4Z9wptBVFmSjKPJQVhezCw6Vbt5uHDfM4D9sotVJq
pZRSSsmdv8Lrd/Hqc3qfzvmd0ze5MDzfFREZ/rojBnoittnilx/t0bYospka
n3rTNlhnjW/e9Ad7zyorfPGi39lbCiynd/Ck1+0NSyzyQV2/tlfkmeOdU72/
N+LS9QWzzKRzKbl3bmtMM0WHff0sPUuOCV7Z009slXHG0neyo1fsMaOM0GZD
P7KHZMnwnP5HP7Blhhhkl381czYj
            "]]}, 
          Line3DBox[{1336, 1338, 1327, 1325, 1318, 1304, 1321, 1326, 1351, 
           1341, 1322, 1331, 1305, 1330, 1329, 1335, 1352, 1306, 1295, 1343, 
           1307, 1296, 1308, 1297, 1344, 1309, 1298, 1345, 1310, 1299, 1346, 
           1311, 1300, 1347, 1312, 1301, 1313, 1302, 1348, 1314, 1303, 1342, 
           1349, 1315, 1332, 1333, 1334, 1323, 1340, 1350, 1316, 1319, 1317, 
           1320, 1324, 1328, 1339, 1337}]}},
        VertexNormals->CompressedData["
1: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
7wCa//wO8H/n7rSoc3eD1Lm7/wcuoqGD
         "]]},
      Boxed->False,
      ImageSize->Scaled[0.4],
      Method->{},
      PlotRange->{{-1., 0.9999999999998993}, {-0.9999999999999748, 
       0.9999999999999748}, {-0.9999998571428571, 0.9999998571428571}},
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]},
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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
5iMwoxGqf3UZS/4Pz8zr/htQ04Mi\
\>"]], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
           SparseArray[
           Automatic, {7, 7}, 0, {
            1, {{0, 4, 8, 12, 16, 20, 24, 28}, {{4}, {5}, {6}, {7}, {3}, {
              5}, {6}, {7}, {2}, {5}, {6}, {7}, {1}, {5}, {6}, {7}, {1}, {
              2}, {3}, {4}, {1}, {2}, {3}, {4}, {1}, {2}, {3}, {4}}}, 
             Pattern}]}, {
          GraphHighlight -> {3, 1, 5, 4, 7, 2, 6}, 
           GraphHighlightStyle -> {
            6 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
             4 -> {VertexStyle -> Hue[0.14, 1, 0.9]}, 
             5 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
             2 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
             1 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
             7 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
             3 -> {VertexStyle -> Hue[0.14, 1, 0.9]}}, ImageSize -> 
           Scaled[0.5], VertexSize -> {0.2}}]], Typeset`boxes, 
        Typeset`boxes$s2d = GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$4", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$6", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$7", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$3", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$6", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$7", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$3", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$3", Automatic, Center], 
             DynamicLocation["VertexID$6", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$3", Automatic, Center], 
             DynamicLocation["VertexID$7", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$4", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$4", Automatic, Center], 
             DynamicLocation["VertexID$6", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$4", Automatic, Center], 
             DynamicLocation["VertexID$7", Automatic, Center]}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.0001937884754836805, 0.31823716684075093`}, 
              0.06415272600389244], 
             Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$1"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.6946654040242253`, 0.3189627344256111}, 
              0.06415272600389244], 
             Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$2"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.6949416592011364`, 0.9654747332116507}, 
              0.06415272600389244], 
             Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$3"], 
           TagBox[
            StyleBox[
             DiskBox[{0., 0.9648215660605998}, 0.06415272600389244], 
             Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$4"], 
           TagBox[
            StyleBox[
             DiskBox[{0.8485113459102751, 0.}, 0.06415272600389244], 
             Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$5"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8466491549206725, 1.2833113220558312`}, 
              0.06415272600389244], 
             Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$6"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8477109312976009, 0.6417849406778126}, 
              0.06415272600389244], 
             Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$7"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{4.129999999999999, 
           252.36999999999995`}, {-99.07519999999995, 93.57175745764691}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[0.5]]},
    {
     ItemBox[
      GraphicsBox[
       {Arrowheads[0.1], ArrowBox[{{0, 0.3}, {0, -0.3}}]},
       ImageSize->Scaled[0.3]],
      Alignment->Right,
      StripOnInput->False], 
     ItemBox[
      GraphicsBox[
       {Arrowheads[0.1], ArrowBox[{{0, 0.3}, {0, -0.3}}]},
       ImageSize->Scaled[0.3]],
      Alignment->Left,
      StripOnInput->False]},
    {
     Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
zz8hB0IPEPMCYScQ6wKCAxDcKM6QdX3Oe4VfYj7txv2lGjevBfx3razOh8Px
B1XPf3PbeBuFP2RXBxjrxarER/N1m8IVfpVV8xu0xEklDi6yK4hV+GcWfrbp
mDUq8a5Hs/ztSYnJrM7zNs1U41pNm0GlinjBtjmk1FONX19v5vVoWpDGfNf7
HDyhEqcIORB6gJgXCDuBWBcQHIDgRnEGvd933yniCNtS0iXlkko+I3v98r+y
+v/DcvOBqSr+X7YyaZAiTrHz27t1GauSt2SNijiriHds0awetQap5CdQPFJf
ETfZltV/Od5UyUPGdl6QpYi/rIadX7i9Sr7x80d7F0UcZ9qHOx5jKnnF1AV2
hxX5ADt7Ym7pHJX8gZADoQeIeYGwE4h1AcEBCG4UZyFfxeVM4v+h6Omqsnq1
z0cty8oqeaM070k+L9Pkb8HtZJr81/J1MU3+f2yVHJgm/5qcG9Pkf4RzZpr8
NeRA6AFiXiDsBGJdQHAAghvFGXLwXnjze/F//PW5HlG3tsB7d4XfO8F/Ad7T
qvyeCv6L8V6H8nst+PdCP1Cb+wHBvzb6DRvuNwT/7+hn7nA/I/gTciD0ADEv
EHYCsS4gOADBjeIMHzEuFPC4IPgb4T16x++R4L8Y484EHncE/6HqcUrwX4dx
7RWPa4L/XIyDW3kcFPx/YNzcz+Om4D8W42x9HmcFf0IOhB4g5gXCTiDWBQQH
ILhRnCGzhvZ0lbxI8HfCOGLE44jgn3++9m6VvEvwb373UaZKnib4LzMs1FPJ
6wT/Vy9qOKrkgYL/MefWRip5o+C/cH8XbZU8U/An5EDoAWJeIOwEYl1AcACC
G8UZhmNdUMTrAsE/PHTdD5U8SvD/mMfrjlm87hD872KdMpzXKYK/HdY1fryu
EfxnYB10hNdBgr8h1k0RvG4S/HtjnWXF6yzBn5ADoQeIeYGwE4h1AcEBCG4U
Z5iKdfF7XhcL/i5YR5zhdYTgfxPrcT9ejwv+UVjXn+F1veCfiv2BLrw/IPjr
Y58hmvcZBH8r7Fd84P0KwX8X9j2qeiv7HoI/IQdCDxDzAmEnEOsCggMQ3CjO
4Id9jGZblX0MwX8S1tGNeR0t+DfHPkmNgco+ieCfgP2WON5vEfxl2Ldx4n0b
wd8U+z/2vP8j+P85w/tIq3gfSfCfhf0oK96PEvwJORB6gJgXCDuBWBcQHIDg
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
+A==
       "], {{
         {RGBColor[0, 0, 1], EdgeForm[None], 
          GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFm3ccV9Mfxu859x5khYbQj8resreSlMpKKDuRQiIqGVEiilA20RINm4yE
sstMSlRSkZ3smd/z7jm9/HFf9/me77n73PN5nufzuQ1P7972vFgUxa6pKEqt
F2nh9/pa9q6K4jM1XiN8XiiKU7VcLLyv2hep/TrhvYQ/FR4gvKfwAuGrhHcS
niN8ifB22q6F1sdpuU9tZ+q/jYTvFe4kXE94kA66jfo1F75I6+u1vlvLHvp/
vvr1Fx6mPu31Xw/hxmr/RO2XC/dQ2yCt79TSXO3fqP0W4QvVPljru7T0Fe6u
ZaDw+cHnfoeWA9T/i9LH21/489Lb7CL8sfBlwsO17qjfGwoP1Tkcr+0vEN5P
bUtKH/tmtR+n9vOFD1X7t2q/lWvQ+iXd2zqch/BJ+q+28APqv0Lrf7T8pGXN
wvekr9qXa11Dy19a1tXyPy2Xq32Z1mto+U3L2lo20VJX+3tQ+20s3F99VtM5
bCm8odrHqX1X4W3VdqjWx2r5RctaWjbWslSLuhW1tHxe+PlvoOUrLTrlledZ
Rx0e0B+7CI/Sepr+qC88Qrhz5f2MFO5S+Xxqa32/fu8sPFrrcyqf/xjhbsKb
Cl+m8/xO69W13KP2U9VeV/h24eMrj707hU+ofG53CHeofG6HaP21fg8TPlB4
qfANwrdqn2fpOq8UniT8d/Q97ao+2+uc/xR+Tm1ztWwvvKP6ttf6sHyPudfr
aNlB7cdr3VLLW9r3BG1/qvB04QeETxZ+U3iM8EnCM4THCZ8ivH3wGGesvx+8
T679bP2/g87hb+FndPw50ffwg+Dnzz2ZI1xpaZSf6S68j/o9M/fhHBcG72MH
Le8GjwPu+Vnqv536/y68IHi9nZY3dG6j9N8JwvPV/itjIY+d3/I4mKrtftKy
Quf0jvo/ov4d1f6e8BPCnTiW8GPCpwu/xLsl3JZthW8TPkZ4mvAdwu2EPxSe
Itwl3xPuJfd0ttpfVHtX4Z21nqvflwrfomN3Vr8rhF9W212Vx+ptau+i9n7C
B6vtS/13s3Az4a+Eh3IvhJ8TbiX8itZ3V34GL9BX+CjhmcJPC5/JcxF+SvgM
7r/ws8KdhV8XHiHcQfg14TeSx8erwsMrn/9k5gnhw4WnCN8ofKTwi8Kvqf/R
eVxxLuznebUPUZ8jGKtq31lLa+GdtN5My/7cH/3/bOlxuK3w06XHz+Nav6x9
HiT8qHBf/Xeg8GPMecIHCD+i//sLNxOeqPY+wnsLPyXcT/hg4SeErxBuIvyn
8M+8n8JLCs/16+V3n3eOef9J9blSfZoKP8T8LbwPx2IuFN5P+GGem/C+wlsE
3wP2/wyxovLz5plcV/lebBV8bzifLYOfCftnzmduYsxcK7x18Lh6TNc1oHIs
+Ev7+ZU5iPda+JXkuawu733pmME9u7ryfftD+EfhMYxx4WXCo4R/F35H244W
/lH4C7UPF/5OeEHlWDCEMajlNuHlan9L/e8R/kF4ceV4tEz4s8ox5XvhhZXj
zmid/yRtO1348uC5n3NI+n8t7ecx4VJ4deFHhCvhGsKPFn7+AyuPgT7BY3yE
lkuCx/hILSvU5x/1GS/8t/AfzPvCvwp/V7lP1Dppnw8L/6P2v4gBwkHrUu0P
FcXKCT8ITxS8NHge5f7cqfO/WL9vEv5J236pfvcK/yL8beXz+Vn4a+H7CseX
xslzVmMtDbS0YWyorbf+25N5TW01tewIrjyGGD8DdKw11L4146fyeGVsXKX2
1dW+lfDmlcci46Rh5feBd+EO9emtPjcK3y7cS3iIcIPK7wnvSKPK454xuYnw
BOG9hP9XeUwznutXfmd4Xzh3tuO93qbyOGOMbVd5TDOeNw/eH2P9ujxWD+FY
wed1RB7DjHXex6uF6wrvXnh+Jl4SK69R+4Zq3yO/O1wf78NAtdcLvm/ELGIq
czvzM5wJbvCX+gxifDPOC/+/ai5n38znxFW4xmrMS8mxk7jZvnJ85T0POs5i
rTcrHFuIUcSXierfs/I5f1M4/sMD4AO1PHRWxjRiF7FyvPZ3kRp3y/eB+8d9
vCxzFWL6H8LXleY0xEE4BNtfofYfCnOVfsI/Fx4PY/X/eeq3U2H+cmFlDnNu
ZT7BucJ3elTmPCdW5gqcH9wJLgWfPLky3+Ia4CPnV+Ykp1TmZNyjJ3XOb2g9
pzDP2VkXG9V2pv6PWhqq/bnKcYIY8ULl2EZc+whep999hJ/XepZ+nyX8TOV4
Q6wZW5krwBNGVo4xxIVXk2MDY2Zo5VjFGLipclxhjB3NeNNyNu26rsMy751Y
mZfAScZX5h9wj/XgX9rvO8LrC9cXfld4A/iX8HvCNYXfE36b/lqvznsifJzW
DZLHBPMAcxDv+MNqf1v7P024qdp20XKi8FbEPt6L4HeQ95G5dIhwi8yBa2nb
TbXP94VvqBw7GR+D1WevYI7RL5iL3174PWauhcvB55mP4eg9g+dd+Dmc+pPK
cysagTkYrg4H/KDytvOIxcJ9eb46/puV+QMcf2bl/Tyl9lmV5w04xfTkOfdp
rWdXngPhF3Mqz7/3VuYBcID7KvMDuMGmxHfmEM69Mv+Ae7yezGPgMDfoevcJ
5lHooWmVNREaZW5lnTKsMocgRsJtP6oyv4XjlJ6X0TqvVtY7z2n/G2t5i/Gm
db3kuLOW/n9X+DXOU8e9U9tNYW7StrdouSP4hf5XeILgD5VjJPP/mskxiXj0
feW4QkwhHhLHuOfEC9q4J8Q4YinnfzO8W8tY4beTY8YI4eE6h9vVPll4ReUY
RvxaXjkes/3XnLt+76LfS4UnC28rvIR4JbwFsYj7Kbx96bF5YPTz4lh/aWmR
79EB0c9uJHFMy1PMRcHXx/38qTI/4Hr+rhwjiY+/V+YZcIxPK3MCxt+M5BhP
fF9UOfYz5sbqOK8E86fJWs8v/N69mtuYY6cIf1r4vXtReGHhd+Fx4Vn0ZR7T
fqbq96Naamj/tZPbn9fvBYXf37XVXkftrwuvI1w3ec5aV3hDxjf75P/K/Jk5
bXbh/k8Fz230v0vHGhgc9w/VdQzTci3jlvk5mDN8Xpn38B4uqcx7ePfWTuYx
cJh1hVcjHhfmPE9r27mFuc9Hhc/nfrU/y5hlXKnvBtrmFeZe7e82Lc8E+wQz
KnsF+AdvVfYQFgq/LXy18Glab5UcJ2YExxQ0+GTt/+PouIMeph0tWY9YlKyB
mee35PmpfXpwXCQevR0cI4inbwXHJeLFx8HHgXvMDd6O2DQ++nkvEe6qc1un
dOz+Xn3+F8yBv9Z6oxy7z9b/NTPf+FZtmwRzDHjFIcn94BWHJv/3nZb6wZwE
LfCL2udH65qWycd4Sr9/j77WzdR+bWXtsCOcMVlLLMuaAn6F7uUa8RA66Vz+
jL5vnwRzB+LsvOCYu02+Xu7ZFsJnaJ/bJP/3TrBfALdA1+8EGQiOF90ra4dZ
wW1wiQ+D42cDxlwwbyD+wjHwOtC5xPEdmYOEPwteww/RPs2Z14Jj+ubCXzOe
de6zo+M1MX0LtX8r/KzaPoo+Z549zxfO87jafoz2Ml4P9jhq5XP7onBMfy1Y
88CLVvEbuA0anGNurmW28JeF9TjcqWHy9nCqH7k/HF99UnD/HzIHRpetp3XD
YA6zpbZtmswF4bQHCdcO5qgHCtfiXILb4DOLgrdn26XB2zHO4ck/q/+86Hu2
bvB94x7CsXfIY2O/5N9faKkTzJ14PuvnZwRP3j/5GIu1bBDMi/Dz3qscc/G0
3kz2tfDD3q8cZxcLv8v4K+wLvlPZG8Qne6WyV4bGheOg+7qofc3S3hHjrUbw
2IPPH5B8bMYPvIMxwzPjuaBD4e17Jm+zsfAeyZphI/hpsk44B26bdcG/wRwU
TsUO4OvwqOW5HV76c7D+bCr8SzBXR3ecCx8szed/Deb2cPgQzdHhZmXm9ujT
F4UXRMfrKmsBPJAVeQzAc34K3rYJc4rO+eBk3o/u2Et4TeGzdMzVS7+DnbVO
pecfPJy1gr0adNO+6r9OsP/DGv/qeR33k+j5h7mL+8F8tbX6N0vWEl8GHxM+
/6nWawf7QuigvZOPQTyCL3yo5YnguEH8GJPn9hnCPXReW5b2f+CfJ2nb5sH8
8GT0uPCTwqcl89SXte0iLd0L8+HT1d6a8a+2VlpfxDkIHyJ8nvCF2vfWpT2Z
RpnrXsg4ieaY8N7Noo8Dt2yQeSYe7KPa/ynJv7n3jfM7yNw4qLLfsma0L8O4
XDuax8LJB+v/Vsm/14oeu3hl/wRjxnBdte8XzP/h2ycmn3cd7n0wz4fv/cY8
XFovdBJuo//+Dj4uur6++jcT7pbfkQPzseDhw9F4+n2a+owI5i3dotteZnwK
DxeeJnxINGeGn9yo9b3ce+GWOu69ydv/IlwrmY91Uv8xantGuKPwKOFJheP4
Pcn73TPvk/e6BXw52SuH07ZLvv5p6vNZtMaBDx+r9v2D+fBxwgcEa5zj8ax4
T6PXeH2j1d4+Wc9coHvUqLSPunF02znC9aL30SU/l/sr+wmbqP1gtZ9bWE91
SP79Z7C3iOezenSOAe69RnQ7XL0JXDvZF95d7d2CeQU5gj/UvlRtO2XfGO6E
b39lcr+DhPsk+5Lbqs/pwbx9G+HTgnXfPupzYXJehJzIRcn/HaWlY7B2w6/u
q/Zzgvt/XDkHsZv2c24w5yHP0kN9Tg7WkmcIH878FN3Wi/c6+ji9hfvAL0rn
RPBCL1f/s4M90suEuzLvRx8TfkWeomfyNVwMfyntkzdV+6XJHusu0dv1U3tv
/b9raW+WnEgv9enEWM4+LdrqVrUflazlameNw/u7QdZ3zBV3qk/b5P+6o91L
z5O1ojUTmggt/CtxHz2t9k+jtdX6Wu8ZrBP/Cvbl8WHWUfuuweMHXdk6+Xcr
4RHCo4XXhRsG62I09eFq3z0419Nb+Az2pz5nBusp8gi/E98ZO9H/E8uOZB/B
Oa89ot8J4t0rwoujnwv6/Qhtu4f+qxl9HLQ5mu7I5GvYInr+66n2qcILozX1
YepzX/I7eZWuv62Wp9X+jv7/Dm3A/c/6Gq3aKmN8uX2jtTF69rBo/YwGbxGt
jeHt++V2dHHbaI2GxjlGuH+wf4jeuSr5N3NAvzwPvKk+X0ZrgX3yPuEAe0Xr
c3gCY/2C/C4cHa0V7xc+OFofog3na//9k4/N3DKvsr/aLPdHVx6YPQe0W+to
LYf/0DwfC/2FZhyi/dyg34dG5/bQYpfqnh1Q2g+8ROt9S/OWU6L74m+8JfxN
tGY5SevBwVqmnfBVwRoQrfcnc0tprXe18AD9N0N9vo7Wy+ijgWq/hvkleo2e
+oZYk6yjlsKPkrUWGuoa4auF22f9hQfbIVp7obn66njNSz/To/J9Q58eG318
9PKJwoOCtTka9sbkuZ/7NyTfc7T8DWq/nvEX/f+Tec4fGjyu0Lk3J//mufxW
2XtZLdqHx684Ifo68KjxAa5Pvl/Eppty7CC+3JT8mzzOWcJthaerz1fRuv7w
aP96pPAZwvcLP5vj0S0Zt9a2I5Pj05lqH6v1c5yP2u5I9i+IZ48Fx8SXgrXy
rBwfHwmOiSSwaUdjHqt9Tkj+r3s0v0FTd4ne3wvC/fHYSl9jV7XfpfYXC5/D
bcF+xdnCdwu/VFj/3k281O+o9W3Jvgbi4dbkbfA3buG38Nva9tvoa8FXuSt5
X5w35wPXOivaj8Gf6Ry9v+eF++GTlR4nM9X+Q7SuvkZtJ5Tmaj2itT26/mgd
9wHtf3zwOU/I19JW7Q8m/24j/DdaONr3GJb8DE7X72HB3OBK7btV6TnhMjh1
aY/lHPWZmO9Dk2gPCP/niIxHEUeifRY8ljb5XR7BPKNj/aNjLVPbUcJjhccF
85qHg7kNXBPPAp/igmgMB22n/uPV/6Fg/sOa+XAAvlrpe3UkPEF9Hgx+vuPy
/bwar670s+bePpCf6RHqPyb59+HCo5PH3EXqu11pjkHev4vajwnmqO2CORu6
BN2It8NYm5rHG97Oy8H+zk/whNK6ciLno2VasJf+ZrAWnhDt+zCW8UfwSeYx
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
d7J41cQlvoclNlHryreH5En+DzNJmxw=
             "]], 
            Polygon3DBox[CompressedData["
1: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
1D39Ss6OOkh/98MmvrU+qrp/lRLfUxugf/tBk9hUzlR/+/0msezQOmMrlsjO
0Tapj7VF2ijnrlDi63rN9+AvSvaCOnP8En17EfhBP1WJfpWbuF976m9bcjYO
qxMfeI1z/Ybymz+z5oV19rDxt/dwbTn5UqKfz0e+r4ptHA98bh0b6dmcoI2/
7hn9Erm0sZ1yKcbDPpPP4hrGs55pz7JrGE97D9d2Dfm5e5twm55xdeHNJXtB
nSjf9njnC/Wv438vTN/gOn3Pg+8GrwPerwrf8BJ9w6rMkS94tdufcvKvIC9S
ws24Hz/mee5pMyZvL3/3Av/3r7Kmay1Ustdd8/E2nJicl/6c/MsY5HUZX7mO
7l28RDerg13rXvB6ddZUdy8G3qSODlcXL1HiW6uT5T9e6c7fRvR9ifwOfUfX
sfnG8180ydUdWSde/7xJru/wOnyI1zjXnJTf9rQSrtxv7Nw3S671Gr/NoiX3
8hv9gPx6yVqn1tGF6tBBnU40vnytia7xHYxv3wXvibxdHb7luybchWdKvuCr
Jv6I76D8XgnXZ99j4MtKflu/r/H+W01+y639vcDL0rb1+WgP6duBl6/DN8tv
PdyEm7VPPvax7vfvB34E+SL6VkTeib5HwaNKfiv5Wfll+5SdY7zvPVx7Oc8A
8uklvtp29D2AfEnJ2hvU8eXOLPEN9enkF/7dhBtflr53PNslvp9cu77guSVj
+oTyzy/St02dPeK7XFjCffpO6u7bwYPq6HD5jzfp27dKjuZT1r+3jWze5m3a
MiXfzv0mH/N2t5/9hur65Up+K3W+/PZz3Xre4w3kpUq4Vu/3GWt/XOJLmxv4
mvZ+iW+sT2l8t2SJL6EOd607S7hN15T/eaOzP1vWefalS2TH9V/XKuEW5Fzl
vtQ3cmFyYPKV+kz6Ssa4cgvaQ2NjOQa5JvfHMVU4J7kW30/uQc5F7lJ9Lxco
h2l+1Xx8/yr5Ably+UJtyYe9cE1+P22JnJNcifparkLO5OBO359ShaOVn1Bf
y6XIAR/Sxn6oG1bqhbuV79AWfNALl649kksdx5l39sXcipyKXKf2TO5OzlPu
UvskVymHKdcv3+nZ7t+Eq/O8nl2FszM29XzJzRmjyu+bf5SbkY/S99KnLJ0P
Jtcv/6ruX6MJV6h+kPuTM5Tb8/f2Wjk+uULt0agqnKFco/bmrCqco7ky7b9c
oDkzuQE5C7kKOQJjPf2hi6vEfHJH8j1ySXJIw9vsP221HLu5fv2lS6rk/OXP
JivxDS6rw1dNWuI7maM1llmnZMyYRr5sAvB1dWym/F2fEl/iWvCf1P3g69WV
ddYaRBtdZ01jsXVLYiNjsr7qypJrtanyY5OU+I9eM7m2oiQ21eYZq65Xwj0Y
s8qlub7cmpya3K3xg1yuHK65UPloY43fe8mvft8b59aP45vNj1Z8y0mr8PPW
VsiHWItijYW5WXO0chH/64XbUP+b+5LjMBdu/szYfIYmtS3yG9aijKtxMT4D
31DH57dWRb5iiio1K+YO5Jt8FnMI5g6Mz+XOzSHInRvfmFuQQzdXJF9g7Yc5
I/nVvp0/4jeXS9a+yd3LKcsVqx+OrsIZyw2rX/TF5IjN9amPPbvm/MzXG2cb
b5tP03+0fmDtJvrJ/JP5enMH7iH9SesfNmjif5sfNo411jIHZz2L/L3c7MtV
8g+fNuGe9TGtH7LeqE9+hnH5GnOw5l49w3IR6kx1pZzEUSWcgM8o57dfSQzt
PY1B5SL0ofSd5CSMffXx9e2NgeUetCHaDjkI60fM4Zq7XbVKrsuc1xRNOMw9
+T9jk9/XnLJ1D32b1IaYMx3eJP9r7YmcuHUP0zWpLZHj3qtJPlh7Zc56b+RZ
m9hCc7zm4owrjCXMyVmvJf8tF/5mlfylvIVnxZzaiCYxsbGw+U1zY8YRxhPm
yMzlme82npmti8flvydowpfK509Z4k+agzD/Z1yrb2WOfNru+eXyrXeQPzJ/
0DTht+T6tKfmvuT8zDVrr80Vm3M2N6Y/IbdvjszcgPbZXIE5AmtD5P99/z81
yUXrT5hbMye9VZt4Rt/KmoTdOn/uiCo5OnNz+hvmrs3RmSvWf9iySs7Y3L7x
kbGtOX5zy/pD8snjcsxt4jt9D2sGrC0wftu+So2B9W7Wh5j7mahKLlt/U3/G
nPYObeyxvoQ5VXPT+sv6QuaozfVZc2W9hTm/Pt1+MTdv/Ze5b/0P/SFz4Ob+
9c93qFIDYC5P/1hfwpyeuTv9SWMbc3jDOn/X3Iw5CXOB+u/GsuYEd+385cOr
5HB2buOfG/uYEzXfKe9j7OUc8zVTlMQPV9fh37S52lptsvGq8YL8/ezdWfJM
DQHP1aS26/nOvzQXq//0Vne+3+8lfn6m89/macJd6+Po25iLNlejfpdrNmdj
/KA/bDz4Xi+5AWMUYxNzwdZPbVCSW7Km4NLOHpjrMWdtPZL1eeZO3VPWnsgv
jK5Sg6Jt0T+S29PGmLuTzzf3ag7PWj/5h8uq1PxZyycfom9vTZ+1KmM7f91c
tPbhvjb6a0inW9Qx1l7M3CQ3pf00F2SOauk2fJv5AWvKnu++4XxN9pDxoPGd
/v563dn1DMt3jd/5Gvoc8tOv9FK7tkDJ+1rDdltnz6z1maRKrGHMYXyzVuc7
6EOYT3i1F39ttRJ9PqY7n4+2Of97dLpfG6B/8Fln7x5us5/Vhepada6513XA
N3X21dolhsbpKnWWud+fe7EV43X+grUA+ktj2/D51kj4bf3GczY5o/pnT7TJ
31iTYW3Q2iX2xNywukkdNVuVHKe1f3OW+KPWAGo7tCHW86zWJDen/2Gtgjk6
azflN82/WMM5oE0+abUqNYXWeplvUhda82VtmfkobYU1Zt7PmkO5+td6qRXa
sPx/LtP8spymXKYcprWT8verVKmhtDbN/MCAKjVq+isPtNE/42rV2uRf1dVf
9lILZn7HfIQ1Yeoa+V5rDdQ5nmXPh7Upnml1/eCSs63O92x5xhbs9rC1PPKB
1v5Y02OuVv/t2So5W8+yZ3rR7oybzx/R2R45V2sXzH/pO1nD4O9jvlPf8Yte
7Kn5QGtBrSGxVsl8orVL1iwt0oZvNh9iTZu1hvK1+h7WHC7Zhl+2FtEaQmsT
5Ze1ZdYoWltsPmaFKjXG1oaa79BWWSNqLtr3N3dtTtraZPMl5sqsUbb2Ur7W
XIo1mNZeyq9a62gNprUX5jsHVanBsDbDfJu1GNZoWItlPnPtKjVZ1r6aX7R2
0BpYz6f1hOb2Xu/il5VK4gdrUKzdMf/Ur0oNj7lw/WFz5ebErV02n2mt8Lga
5jb5Jm2JNcT/Byg20CM=
             "]], Polygon3DBox[CompressedData["
1:eJwV01toz2Ecx/HfbNMybEhyimmaU8yGmeLCLKdJOzSGhU2ZhTXCtJJDklup
kQul1EpSK8Rms7Fhm8ONciyKDcukrGkX5vVcvPt+P+/n+zz7Pb/ffyllVQUH
R0RRlIF4VMdFUbrmS0wUVcRGUSyecge4RQZr5IXoln+rN+z5wa/RX+YSsFl/
Gtv5OjkOm+RTKOEuyEPO3CCfRBHXyX0L+5yXpS7HSy7R3F2uQC7EWDkP/fYU
yfetHZWXmv3umfdxI1HDZXF9XKWcgFdyEt9szxZ5K/rRxa9Wc1Bv7YX8V9+g
7/N31usfc3fULC5JTcZ4ZxXil5kSuTW8P3PN+Mp1IBOT5es4oj9nrji8U7lD
3WvPZz5F/whP+BnqTOyx1iG36HfpP5mbps/mmvBebsJPdzwf7u9Zcq2fwEY+
g2vEO30jesylyWXmhuTy8B25Rrmcn8S1YS4/zF3kiuUu5IXn4yq4efIxeT5u
cju4ZK4VqdwZLocbdPb+8M3wmqvlVpqplZdhAM+5teo63HLHJrWdm6JORSk3
Rr6CUnu7kc/3YpUze+Ql4c7hW6m5XC+XrT/L7bSvgZstH8IEa5Xcg/Ab17dj
AXaH72suzcxhTOSehRl9bfj/UDNxL9zb3Efr4/QrrOWbq+Omy1WIt3ZbTeU+
6EeHveYehnsEr3/DD+KS3ML/0Q+E34G1bXK9vbOsVYf3x18Nvy/+n34Yc8y1
ydfC8+jfcjHhG4X7quncKDURnc6q4hebOR7W8B+uJH8Q
             
             "]]}]}, {}, {}, {}, {}}, {
         {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0TkvRFEYBuAz1rETvYkfQKJHoiYSShIJHQXR0RAVUUg0dBIJCvuuE4xC
awzGTvgPEoV4ThRv3ue798y5596pHxjpHk6EECZlOy+E6HX9patlpMA1F1Nc
o9fyQ2jket7jFm7iDr1qbRv38jl38RD365y14zzKnzzDU7yov62dj3tzbWEI
y3zEe7rUvcu4H+861w1v6DNzlm/l2nyn7yXDOf0gj3JjftLPkuUX/Rp/x2/6
XdLxXcwfvKkvzBlOOcspp+O30UlnOeQl/vEOqzzHC3F/9yZ4Oj6X40cd4z59
Z+0gd/IV93Art+tZaxu5mWe4jhu4Uq9YW8e/suNcVXpLZ9yr5Ao5MZfrMjnm
Ul0iR5zUxVIkB2avEzwi7LOtgwqXif///Q/ZqUTR
           "]]}, {}, {}, {
          Line3DBox[{690, 754, 755, 866, 1522, 756, 757, 869, 770, 1502, 771, 
           872, 778, 779, 1489, 875, 786, 787, 878, 1526, 794, 795, 881, 802, 
           1507, 803, 884, 810, 1512, 811, 887, 818, 819, 1491, 890, 826, 827,
            893, 1530, 834, 835, 896, 842, 1517, 843, 899, 850, 851, 1493, 
           902, 858, 859, 721}], 
          Line3DBox[{691, 758, 726, 692, 1495, 759, 728, 697, 772, 1503, 730, 
           699, 780, 732, 1524, 701, 788, 734, 703, 1497, 796, 736, 705, 804, 
           1508, 738, 707, 812, 1513, 740, 709, 820, 742, 1528, 711, 828, 744,
            713, 1499, 836, 746, 715, 844, 1518, 748, 717, 852, 750, 1532, 
           719, 860, 752, 722}], 
          Line3DBox[{693, 760, 905, 761, 867, 762, 1501, 906, 763, 870, 773, 
           907, 1534, 774, 873, 781, 908, 1535, 782, 876, 789, 909, 790, 879, 
           797, 1506, 910, 798, 882, 805, 1509, 911, 806, 885, 813, 912, 1536,
            814, 888, 821, 913, 1537, 822, 891, 829, 914, 830, 894, 837, 1516,
            915, 838, 897, 845, 1519, 916, 846, 900, 853, 917, 1538, 854, 903,
            861, 918, 862, 723}], 
          Line3DBox[{694, 764, 765, 868, 1523, 766, 767, 871, 775, 1504, 776, 
           874, 783, 784, 1490, 877, 791, 792, 880, 1527, 799, 800, 883, 807, 
           1510, 808, 886, 815, 1514, 816, 889, 823, 824, 1492, 892, 831, 832,
            895, 1531, 839, 840, 898, 847, 1520, 848, 901, 855, 856, 1494, 
           904, 863, 864, 724}], 
          Line3DBox[{695, 768, 727, 696, 1496, 769, 729, 698, 777, 1505, 731, 
           700, 785, 733, 1525, 702, 793, 735, 704, 1498, 801, 737, 706, 809, 
           1511, 739, 708, 817, 1515, 741, 710, 825, 743, 1529, 712, 833, 745,
            714, 1500, 841, 747, 716, 849, 1521, 749, 718, 857, 751, 1533, 
           720, 865, 753, 725}]}, {
          Line3DBox[{932, 1133, 1325, 1132, 931, 1131, 1324, 1130, 930, 1474, 
           1496, 1323, 1129, 929, 1128, 1322, 1127, 928, 1126, 1321, 1523, 
           1473, 927, 1125, 1320, 1124, 926, 1123, 1319, 1122, 1501, 925, 
           1121, 1318, 1120, 924, 1119, 1317, 1118, 923, 1472, 1495, 1316, 
           1117, 922, 1116, 1315, 1115, 921, 1114, 1314, 1522, 1471, 920, 
           1113, 1313, 1112, 919, 1111, 1312, 1110, 1135}], 
          Line3DBox[{934, 1134, 1326, 1044, 933, 1136, 1327, 1045, 935, 1502, 
           1137, 1328, 1046, 936, 1138, 1329, 1047, 937, 1139, 1330, 1467, 
           1503, 938, 1140, 1331, 1048, 1452, 1141, 1332, 1049, 1453, 1534, 
           1142, 1333, 1050, 1454, 1143, 1334, 1051, 939, 1504, 1144, 1335, 
           1052, 940, 1145, 1336, 1053, 941, 1146, 1337, 1468, 1505, 942, 
           1147, 1338, 1054, 943, 1148, 1339, 1055, 1160}], 
          Line3DBox[{945, 1149, 1340, 1056, 944, 1150, 1341, 1057, 946, 1475, 
           1489, 1342, 1058, 947, 1151, 1343, 1059, 948, 1152, 1344, 1524, 
           1060, 949, 1153, 1345, 1061, 1455, 1154, 1346, 1062, 1456, 1535, 
           1155, 1347, 1063, 1457, 1156, 1348, 1064, 950, 1476, 1490, 1349, 
           1065, 951, 1157, 1350, 1066, 952, 1158, 1351, 1525, 1067, 953, 
           1159, 1352, 1068, 954, 1161, 1353, 1069, 1162}], 
          Line3DBox[{968, 1186, 1367, 1185, 967, 1184, 1366, 1183, 966, 1480, 
           1498, 1365, 1182, 965, 1181, 1364, 1180, 964, 1179, 1363, 1527, 
           1479, 963, 1178, 1362, 1177, 962, 1176, 1361, 1175, 1506, 961, 
           1174, 1360, 1173, 960, 1172, 1359, 1171, 959, 1478, 1497, 1358, 
           1170, 958, 1169, 1357, 1168, 957, 1167, 1356, 1526, 1477, 956, 
           1166, 1355, 1165, 955, 1164, 1354, 1163, 1189}], 
          Line3DBox[{982, 1215, 1381, 1214, 981, 1213, 1380, 1212, 980, 1511, 
           1211, 1379, 1210, 979, 1209, 1378, 1208, 978, 1207, 1377, 1206, 
           1510, 977, 1205, 1376, 1204, 976, 1203, 1375, 1202, 1509, 975, 
           1201, 1374, 1200, 974, 1199, 1373, 1198, 973, 1508, 1197, 1372, 
           1196, 972, 1195, 1371, 1194, 971, 1193, 1370, 1192, 1507, 970, 
           1191, 1369, 1190, 969, 1188, 1368, 1187, 1217}], 
          Line3DBox[{984, 1216, 1382, 1070, 983, 1218, 1383, 1071, 985, 1512, 
           1219, 1384, 1072, 986, 1220, 1385, 1073, 987, 1221, 1386, 1469, 
           1513, 988, 1222, 1387, 1074, 1458, 1223, 1388, 1075, 1459, 1536, 
           1224, 1389, 1076, 1460, 1225, 1390, 1077, 989, 1514, 1226, 1391, 
           1078, 990, 1227, 1392, 1079, 991, 1228, 1393, 1470, 1515, 992, 
           1229, 1394, 1080, 993, 1230, 1395, 1081, 1242}], 
          Line3DBox[{995, 1231, 1396, 1082, 994, 1232, 1397, 1083, 996, 1481, 
           1491, 1398, 1084, 997, 1233, 1399, 1085, 998, 1234, 1400, 1528, 
           1086, 999, 1235, 1401, 1087, 1461, 1236, 1402, 1088, 1462, 1537, 
           1237, 1403, 1089, 1463, 1238, 1404, 1090, 1000, 1482, 1492, 1405, 
           1091, 1001, 1239, 1406, 1092, 1002, 1240, 1407, 1529, 1093, 1003, 
           1241, 1408, 1094, 1004, 1243, 1409, 1095, 1244}], 
          Line3DBox[{1018, 1268, 1423, 1267, 1017, 1266, 1422, 1265, 1016, 
           1486, 1500, 1421, 1264, 1015, 1263, 1420, 1262, 1014, 1261, 1419, 
           1531, 1485, 1013, 1260, 1418, 1259, 1012, 1258, 1417, 1257, 1516, 
           1011, 1256, 1416, 1255, 1010, 1254, 1415, 1253, 1009, 1484, 1499, 
           1414, 1252, 1008, 1251, 1413, 1250, 1007, 1249, 1412, 1530, 1483, 
           1006, 1248, 1411, 1247, 1005, 1246, 1410, 1245, 1271}], 
          Line3DBox[{1032, 1297, 1437, 1296, 1031, 1295, 1436, 1294, 1030, 
           1521, 1293, 1435, 1292, 1029, 1291, 1434, 1290, 1028, 1289, 1433, 
           1288, 1520, 1027, 1287, 1432, 1286, 1026, 1285, 1431, 1284, 1519, 
           1025, 1283, 1430, 1282, 1024, 1281, 1429, 1280, 1023, 1518, 1279, 
           1428, 1278, 1022, 1277, 1427, 1276, 1021, 1275, 1426, 1274, 1517, 
           1020, 1273, 1425, 1272, 1019, 1270, 1424, 1269, 1299}], 
          Line3DBox[{1034, 1298, 1438, 1096, 1033, 1300, 1439, 1097, 1035, 
           1487, 1493, 1440, 1098, 1036, 1301, 1441, 1099, 1037, 1302, 1442, 
           1532, 1100, 1038, 1303, 1443, 1101, 1464, 1304, 1444, 1102, 1465, 
           1538, 1305, 1445, 1103, 1466, 1306, 1446, 1104, 1039, 1488, 1494, 
           1447, 1105, 1040, 1307, 1448, 1106, 1041, 1308, 1449, 1533, 1107, 
           1042, 1309, 1450, 1108, 1043, 1310, 1451, 1109, 1311}]}}},
       VertexNormals->CompressedData["
1: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

        "]],
      Boxed->False,
      ImageSize->Scaled[0.3],
      Method->{},
      PlotRange->{{-0.5, 0.49999999999994965`}, {-0.4999999999999874, 
       0.4999999999999874}, {-0.9999998571428571, 0.9999998571428571}},
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
           Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
           EdgeStyle -> {
             Directive[
              Thickness[Large], 
              GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, ImageSize -> 
           Scaled[0.5], VertexSize -> {0.1}, 
           VertexStyle -> {
            2 -> RGBColor[1, 1, 0], 1 -> RGBColor[1, 0, 0], 3 -> 
             RGBColor[0.5, 0, 0.5]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], {
            TagBox[
             StyleBox[
              ArrowBox[
               BezierCurveBox[{
                 DynamicLocation["VertexID$1", Automatic, Center], {
                 8.437694987151189*^-16, -0.23104592393085188`}, 
                 DynamicLocation["VertexID$2", Automatic, Center]}]], 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$1"], 
            InsetBox[
             FormBox[
              StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$1", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[
              ArrowBox[
               BezierCurveBox[{
                 DynamicLocation[
                 "VertexID$1", Automatic, Center], {-0.6659337642194738, 
                 0.3844770380345749}, 
                 DynamicLocation["VertexID$3", Automatic, Center]}]], 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$2"], 
            InsetBox[
             FormBox[
              StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$2", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[
              ArrowBox[
               BezierCurveBox[{
                 DynamicLocation[
                 "VertexID$2", Automatic, 
                  Center], {-3.4416913763379854`*^-16, -0.7689540760691488}, 
                 DynamicLocation["VertexID$1", Automatic, Center]}]], 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$3"], 
            InsetBox[
             FormBox[
              StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$3", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[
              ArrowBox[
               BezierCurveBox[{
                 DynamicLocation["VertexID$2", Automatic, Center], {
                 0.20009163956496426`, 0.11552296196542552`}, 
                 DynamicLocation["VertexID$3", Automatic, Center]}]], 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$4"], 
            InsetBox[
             FormBox[
              StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$4", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[
              ArrowBox[
               BezierCurveBox[{
                 DynamicLocation[
                 "VertexID$3", Automatic, Center], {-0.20009163956496454`, 
                 0.11552296196542586`}, 
                 DynamicLocation["VertexID$1", Automatic, Center]}]], 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$5"], 
            InsetBox[
             FormBox[
              StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$5", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[
              ArrowBox[
               BezierCurveBox[{
                 DynamicLocation["VertexID$3", Automatic, Center], {
                 0.6659337642194748, 0.38447703803457334`}, 
                 DynamicLocation["VertexID$2", Automatic, Center]}]], 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$6"], 
            InsetBox[
             FormBox[
              StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$6", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
              0.08660254037844384], 
             RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$1"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8660254037844389, -0.5000000000000012}, 
              0.08660254037844384], 
             RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$2"], 
           TagBox[
            StyleBox[
             DiskBox[{1.8369701987210297`*^-16, 1.}, 0.08660254037844384], 
             RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{1.8906933090100573`, 
           254.60930669098994`}, {-126.31450669098993`, 120.23930669098993`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[0.5]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Right, Left}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.5], 
       Scaled[0.5]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.3]}}, "Rows" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.584206074544878*^9, 3.58421286302107*^9, 3.584213138324966*^9, 
   3.58427903231569*^9, 3.584297752671645*^9, 3.584300532769156*^9, 
   3.584302876394753*^9, {3.584302947810521*^9, 3.584302990207008*^9}, {
   3.584303022187501*^9, 3.5843030604749117`*^9}, {3.584303182087735*^9, 
   3.584303188064999*^9}, 3.5843042398166122`*^9, {3.584395784693671*^9, 
   3.584395790263275*^9}, {3.5843959021596937`*^9, 3.5843959072432423`*^9}, 
   3.5843959502961063`*^9, 3.584396147043605*^9, {3.584396187702635*^9, 
   3.5843961973933887`*^9}, {3.584396294618905*^9, 3.584396400374227*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Good and Bad Orbifolds", "Section",
 CellChangeTimes->{{3.583504537673525*^9, 3.583504582132621*^9}, {
  3.583509437760704*^9, 3.583509440334321*^9}, {3.583604913812951*^9, 
  3.5836049144171343`*^9}, {3.583604949342388*^9, 3.583604952190271*^9}, {
  3.583689447610469*^9, 3.583689449360402*^9}, {3.584187992018056*^9, 
  3.5841880036177387`*^9}, {3.584188035410377*^9, 3.584188040250277*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"teardrop", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], "*", "x"}], ",", 
        RowBox[{"x", "\[LessEqual]", 
         RowBox[{"Sqrt", "[", "3", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"4", "/", "3"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", 
             RowBox[{"4", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], ")"}], "^", "2"}]}], "]"}],
         ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "3", "]"}], "<", "x", "\[LessEqual]", 
         RowBox[{"2", "*", 
          RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cone", "=", 
   RowBox[{"RevolutionPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"teardrop", ",", 
       RowBox[{"-", "x"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"Mesh", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"5", ",", "10"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bulb", "=", 
    RowBox[{"RevolutionPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"teardrop", ",", 
        RowBox[{"-", "x"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", 
        RowBox[{"2", 
         RowBox[{"Sqrt", "[", "3", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"Mesh", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", "10"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"football", " ", "=", " ", 
    RowBox[{"RevolutionPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{".5", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"x", "^", "2"}]}], ")"}]}], ",", "x"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"Mesh", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"5", ",", "10"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sphere", " ", "=", " ", 
    RowBox[{"RevolutionPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", 
          SuperscriptBox["t", "2"]}], "]"}], ",", "t"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", " ", 
      RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"x_", ",", " ", "y_"}], "]"}], " ", ":=", " ", 
  RowBox[{"Piecewise", "[", "\[IndentingNewLine]", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "-", "y"}], ")"}], "*", ".4", "*", 
         RowBox[{"(", 
          RowBox[{"1", " ", "-", " ", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "-", "y"}], ")"}], "^", "2"}]}], " ", 
            RowBox[{"x", "^", "2"}]}]}], ")"}]}], "]"}], ",", " ", 
       RowBox[{"y", " ", ">=", " ", "0"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Sqrt", "[", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"1", "+", "y"}], ")"}], "*", ".4", "*", 
         RowBox[{"(", 
          RowBox[{"1", " ", "-", " ", 
           RowBox[{
            RowBox[{"1", "/", 
             RowBox[{
              RowBox[{"(", 
               RowBox[{"1", "+", "y"}], ")"}], "^", "2"}]}], " ", 
            RowBox[{"x", "^", "2"}]}]}], ")"}]}], "]"}], ",", " ", 
       RowBox[{"y", " ", "<", " ", "0"}]}], "}"}]}], "\[IndentingNewLine]", 
    "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", " ", "=", " ", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", " ", "z"}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", " ", 
     RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", " ", "=", "  ", 
    RowBox[{"Plot3D", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", " ", "z"}], "}"}]}], ",", " ", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
      RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"planeBig", " ", "=", " ", 
   RowBox[{"Plot3D", "[", 
    RowBox[{"1", " ", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", " ", 
     RowBox[{"Mesh", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"4", ",", "4"}], "}"}]}], ",", " ", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"RegionFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "5"}], "\[GreaterEqual]", "  ", "x"}], 
         " ", "||", 
         RowBox[{"x", " ", "\[GreaterEqual]", "  ", 
          RowBox[{"1", "/", "5"}]}], " ", "||", "  ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "5"}], " ", "\[GreaterEqual]", " ", "y"}],
          "||", " ", 
         RowBox[{"y", " ", "\[GreaterEqual]", " ", 
          RowBox[{"1", "/", "5"}]}]}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"planeSmall", " ", "=", " ", 
    RowBox[{"Plot3D", "[", " ", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "5"}], ",", " ", 
        RowBox[{"1", "/", "5"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"y", ",", " ", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "5"}], ",", " ", 
        RowBox[{"1", "/", "5"}]}], "}"}], " ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"Mesh", "\[Rule]", "0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Grid", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Infinite Cover\>\"", ",", " ", "\"\<Subsection\>\"", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"Scaled", "[", ".020", "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Spacer", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Style", "[", 
         RowBox[{"\"\<Orbifold\>\"", ",", " ", "\"\<Subsection\>\"", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"Scaled", "[", ".020", "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Spacer", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Finite Cover\>\"", ",", " ", "\"\<Subsection\>\"", ",", " ", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"Scaled", "[", ".020", "]"}]}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{"planeBig", ",", " ", "planeSmall", ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Arrowheads", "[", ".5", "]"}], ",", 
            RowBox[{"Thickness", "[", ".05", "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{".3", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", ".3"}], ",", "0"}], "}"}]}], "}"}], "]"}]}], 
           "}"}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"t", ",", " ", "b", ",", " ", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Arrowheads", "[", ".5", "]"}], ",", 
            RowBox[{"Thickness", "[", ".05", "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", ".3"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{".3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",",
           " ", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"RevolutionPlot3D", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"3", "+", 
             RowBox[{"Cos", "[", "t", "]"}]}], ",", " ", 
            RowBox[{"Sin", "[", "t", "]"}]}], "}"}], ",", " ", 
          RowBox[{"{", 
           RowBox[{"t", ",", " ", "0", ",", " ", 
            RowBox[{"2", "Pi"}]}], "}"}], ",", 
          RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
          RowBox[{"BoundaryStyle", "\[Rule]", "None"}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Show", "[", 
         RowBox[{"t", ",", " ", "b", ",", " ", 
          RowBox[{"PlotRange", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"-", "1"}], ",", "1"}], "}"}]}], "}"}]}], ",", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Arrowheads", "[", ".5", "]"}], ",", 
            RowBox[{"Thickness", "[", ".05", "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{".3", ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", ".3"}], ",", "0"}], "}"}]}], "}"}], "]"}]}], 
           "}"}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Show", "[", 
         RowBox[{"bulb", ",", " ", "cone", ",", " ", 
          RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
          RowBox[{"Axes", "\[Rule]", "False"}], ",", 
          RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Graphics", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"Arrowheads", "[", ".5", "]"}], ",", 
            RowBox[{"Thickness", "[", ".05", "]"}], ",", 
            RowBox[{"Arrow", "[", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"-", ".3"}], ",", "0"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{".3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], ",",
           " ", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Magnify", "[", 
         RowBox[{
          RowBox[{"Text", "[", 
           RowBox[{"Style", "[", 
            RowBox[{"\"\<\[Times]\>\"", ",", " ", "Red", ",", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", "1", "]"}]}], ",", " ", 
             RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], "]"}], 
          ",", " ", "4"}], "]"}]}], "\[IndentingNewLine]", "}"}]}], 
     "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Alignment", "\[Rule]", 
     RowBox[{
     "{", "\[IndentingNewLine]", "Center", "\[IndentingNewLine]", "}"}]}], 
    ",", "\[IndentingNewLine]", 
    RowBox[{"ItemSize", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"Scaled", "[", ".25", "]"}], ",", " ", 
        RowBox[{"Scaled", "[", ".05", "]"}], ",", 
        RowBox[{"Scaled", "[", ".25", "]"}], ",", " ", 
        RowBox[{"Scaled", "[", ".05", "]"}], ",", " ", 
        RowBox[{"Scaled", "[", ".25", "]"}]}], " ", "}"}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Spacings", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Scaled", "[", ".01", "]"}], ",", 
       RowBox[{"Scaled", "[", ".05", "]"}]}], "}"}]}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"Frame", "\[Rule]", "All"}]}], "\[IndentingNewLine]", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{
  3.583689434030222*^9, {3.583690038818116*^9, 3.583690064557714*^9}, {
   3.58369221561723*^9, 3.583692295584877*^9}, {3.5836971219493*^9, 
   3.583697128587344*^9}, {3.5836974345230513`*^9, 3.58369746233471*^9}, {
   3.5836974976174173`*^9, 3.583697552388973*^9}, {3.58369763742273*^9, 
   3.583697661283956*^9}, {3.583697697187623*^9, 3.583697697681795*^9}, {
   3.583697921812044*^9, 3.5836979270391903`*^9}, {3.583698022251027*^9, 
   3.583698106174611*^9}, {3.583698152561407*^9, 3.583698152736507*^9}, {
   3.583698209683529*^9, 3.58369823806411*^9}, {3.583699151298019*^9, 
   3.583699185253458*^9}, {3.583699394613495*^9, 3.583699469642783*^9}, {
   3.583950965930999*^9, 3.5839509892351837`*^9}, {3.584136641185576*^9, 
   3.584136642988099*^9}, {3.58418582819775*^9, 3.584186027196117*^9}, {
   3.58418642444545*^9, 3.584186500754262*^9}, {3.5841866582220087`*^9, 
   3.584186766405637*^9}, {3.584186811686653*^9, 3.584186832061205*^9}, 
   3.5841869859448557`*^9, 3.584187040241329*^9, {3.584187077361844*^9, 
   3.584187079656089*^9}, {3.584187139344602*^9, 3.58418718644466*^9}, {
   3.584187237970829*^9, 3.5841873678137493`*^9}, {3.584187400198305*^9, 
   3.584187624951578*^9}, {3.584187726903932*^9, 3.584187789769574*^9}, {
   3.584187821025146*^9, 3.584187897118555*^9}, {3.584193110409483*^9, 
   3.584193138015587*^9}, {3.584193194922391*^9, 3.5841932098646507`*^9}, {
   3.584193249112626*^9, 3.5841932504566317`*^9}, {3.584193296068103*^9, 
   3.5841933106086807`*^9}, {3.584193366005022*^9, 3.584193367795381*^9}, {
   3.584193414660308*^9, 3.584193416458366*^9}, {3.584193458308425*^9, 
   3.584193461031646*^9}, {3.584193542363206*^9, 3.584193570383233*^9}, {
   3.584193631868184*^9, 3.584193654583934*^9}, {3.584207427977562*^9, 
   3.584207501726315*^9}, {3.584207597447155*^9, 3.584207626676507*^9}, {
   3.5842076755108*^9, 3.5842077203567533`*^9}, {3.584207767876896*^9, 
   3.584207853383381*^9}, {3.584207930296794*^9, 3.584207998168458*^9}, {
   3.584208035919663*^9, 3.5842080419817553`*^9}, 3.58420808388694*^9, {
   3.584211608664071*^9, 3.584211644171987*^9}, {3.584212203939707*^9, 
   3.584212208037219*^9}, {3.5842125744924917`*^9, 3.584212640724815*^9}, {
   3.584296319128419*^9, 3.584296395719811*^9}, {3.58429644238603*^9, 
   3.584296669869536*^9}, {3.584296736407246*^9, 3.5842967386965837`*^9}, {
   3.584296779136149*^9, 3.584296854690329*^9}, {3.584296892461269*^9, 
   3.584296996777444*^9}, {3.584297068795958*^9, 3.584297188399145*^9}, {
   3.584297293293878*^9, 3.584297335189075*^9}, {3.584297376168564*^9, 
   3.584297576953013*^9}, 3.584297766513338*^9, {3.584297848833336*^9, 
   3.584297914758376*^9}, {3.584297957218121*^9, 3.584298011394829*^9}, {
   3.584298117096738*^9, 3.584298202007159*^9}, {3.58429957778618*^9, 
   3.58429965971666*^9}, {3.584304202964367*^9, 3.584304214333768*^9}, {
   3.584396442592865*^9, 3.5843964496569*^9}, {3.58439649139237*^9, 
   3.584396495152761*^9}, {3.5843965389924498`*^9, 3.584396572888001*^9}, {
   3.584396611039075*^9, 3.5843966649230213`*^9}, {3.584396710218545*^9, 
   3.5843969957591143`*^9}, {3.584397029373207*^9, 3.584397090514019*^9}, {
   3.584397121962578*^9, 3.58439714435212*^9}, {3.584397187297997*^9, 
   3.5843972107109013`*^9}, {3.5843972488630857`*^9, 3.5843973682382812`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Infinite Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]], 
     StyleBox["\<\"Orbifold\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]], 
     StyleBox["\<\"Finite Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyFmVuoVGUYhoekA3nXAYIoMiSK6AAadJEt60LwBNFNJVFQKARtgshAtDI7
QIER0o2VEhUVSQeMrEBbsdBKtkGsDhIbUafUyjTtIkECi1nzzrCed705F3uY
Z7551/e/6/v///vXnnHfQ7cvPaPX683+78+0/95n7Fn80alTf5Z67w1ex4pl
j3y4fsvEYePvTj9/9cTUQeNHX1++bOb8vvGlA52pEF8HXhnvDV8hvgj6xof5
hPi+8eF4jQ/9MT78nHgpX+kzuXwml8/k8rk7vg68Mi6fQ3wR9I3L55C/cfkc
/DEunwMv5R99JtdncvlMLp+74+vAK+PyOcQXQd+4fA75G5fPwR/j8jnwUj7R
Z3L9nlyfyeVzd3wdeGVcPof4Iugbl88hf+PyOfhjXD4HXsoP+kwun8mlS67P
3fF14JVx+Rzii6BvXD6H/I3L5+CPcfkceKlx02fydj3XoZ7rUM+MrwOvjMvn
EF8EfePterb8jbfr2fwx3q5n46XG1+1zFXyugs9V8JnxdeJF0DHe9sfyNN72
pwr+GC97rdcx7HNj3l6Xx7y9jox5u+4ZXydekMufcF3j8ieMy7j8CVz3sYCO
cdTPiKN+Rhz1g/g68SLoGEf9ME/jqJ8RR/2Ql+37ZutY8KcO/tTBH8bXgVfG
dUdDfBH0jWMdCz7beI1jHQs+Gy/b88D2ZfOZHPuy+dwdXwdeGZfPIb4I+sax
L5vPYbzGsS+bz4Grrwv13A/13A/13A/1zPg68Mq4fA7xRdA3jj4z1LON1zj6
zFDPxsv2Om3nJvOZXD6T49xkPnfzyrh8DvFF0DeOc5P5HMZrHOcm8znwsr3v
2XMA85lcPpPjOYD53M0r4/I5xBdB3zieA5jPYbzG8RzAfA68bPcR9lzLfCaX
z+R4rmU+d/PKuHwO8UXQN47nWuZzGK9xPNcyn7uvO1nqvX3dzcb1Wd8jvgjx
kVMH+syzCFx5Wjw5xkUe4qvET+PP+FygOun2uTqNPzzXKE6vY8jPeOiTR/pp
XKEPGfPtVz5xxdSWI6XexTV/yYefixBvHPq2PpBD3zjrX/p83ot4yyfNL173
rzUHH5yYOlrqHbwIXPHUKciVX9Jn/opL+Yfrmj+It/ue8ud1V514f/q6N3fa
fBHvtV4Wb3U7/N7qlly/J7//vL1vbTnycblp68oVE6/sHOWjz/pe/NiyixbN
nP9eEeIjp474UM+uq+uEeONDfXKNy+LJ4cOIK7/Ak45x3C9bJ8lxv1gntk62
76vVj6178Gek886Sd5+duHh7rAd9j/h430N8ui/St/tFjuvaftft5+bkp+3v
qEPjm1YunLZu5tqkY+NK9Tn78Nx5U49+MeLDz9F/fT/iTR7mf/u+27gK09G8
wLgwXq5j1p9AxzjHi/uVfBjrDPML993WN/hDfeOY7/TZOOZ7GfRHfN8n1545
a9bPtr+I8/+Djy+4+e7163davDjjn2647YPijO8317V4ccYrT/5/TfmQ67rk
0ieXfvt58FifXPrk0ieXPv+fIn1y6ZNLn7ydfx3yr0P+dci/DvpViK8svtd6
jePJoV8E/aI7fvy8EeMdcYw36Nemz+dsuF+mT477FfLvh/z7If9+yL9v+nyu
gvli+uSYL6bP5wlYH0yfHPPd9NnHYl0yfXKsM6Z/53MP3Ljjjj9svizYePnu
724Zn4+kf9NHU8v7Vx+1+r/m65cuOH6hr6uvXrbr0lU7Dpn+Czc8s+35D341
/dWD999M/+F7T5x8+6nfTb89z8b69a5Db9xyyS+mv33/a7fedvYB09/y9137
7zl+wPTnD3zYY/rNePea/jkrpl119vJ9pn9y7davLrx3v+k3eX5v+k0+P5j+
ywM/d5v+Y4PvfzL9RmeHxZ81yPNbi587GO8Gi58z4NssflHDrd5WNTpWb+c2
17V6bnS+MZ3Pm/xN58lmvKazofHH5sVnjZ+m/2Pjv+n/09wv02/y32f61zf1
YPqLm/ox/U+bejP9L5v6NP3vm3o2/fZ+MtZ/pJkvpr+mmV+m/2IzH01/YzN/
Tf+6Zr6b/pxmfTD9hc16YvpLmvUn1YPV/7z/52E/mjR9PgdDfOhPXId9pnTY
34KbPuPV/3F9U79Irn6OXH0Yufqn7vg68Mp4b/gK8UXQN67+IORvXPsxufbR
4FuKL3Uf6DO5fCaXz+TyuTu+TrwIOsblT8jTuPwJ403xpeqX/pDLH3L5Qy5/
uuPrxIugY1z+hDyNy58w3hRfch2WP+Tyh1z+kMuf7vg68Mp4b/gK8baPyOeQ
T4jvG5fP5PI5+GZcfSrnr/pLcvVt5Oq3yNUnkasfIlffQ67+hlz9Crn6DHL1
B+Ta18m1H5Orj+e8Vv9Nrr6WXP0oufo2cvVh5OqfyNX3kKtfIVefQa7zCeep
zhXk6tfJ1WeTq48kV/9Hrr6NXP0Wufokcp2vOC90LiLXeYNc5wRy9ffk6uPJ
1TeTq98lVx9Jrv6PXP0f76/6P/qj/q97X5gM+/Jk2Gcnwz41afrq26ijPi/E
Wz7SYbzOsYzXOZbxOsfST533yLcNz1fkuh7XE12PXL9PnPmLM3/9nvHiKT7l
T67fk/8LxV/4uA==
        "], {{
          {RGBColor[0, 1, 0], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Y8gzzFcrck7OMZ+W1Ldf/Ayb1I9811slz0yceYbbjits87qRc7KGBc6d1LSP
Rp4zOBd85b1uVWXNTI5uo/bXkdrYWu0vIn25ZZX/APDP5mp/HKmZG6j9uX24
hdpvWvvqux5Gm6h133ZsNlT7s0j/J5afjzxTrvLaOpesdz5xvDRzH7SgCzoW
WTu0rfKMQ37lXPNRZPw1rTK2qWNeE5ZG+nUT3V8S6Z+NqqwF8dM11V4cGQtr
qP1hZCyvrfb7jqO11P4yMq7xw2XeV+owai/2nDh/wHpK3mnv/eS/x1clY4n4
+aykfuFnX9sniJsR3svhHrfcY9FstBKdXOoxY+0P7PVCj1lsP2FdP3ltHas8
33FO59yH9h9lXUFzXy6pa6/6Gn3GZmdEnt95frp9epG/Ea18w/ZFkzh/cg7u
VOW5klzzrPu/WbIWhSdbM+jLmbBOODZK1rKst6ljge9v7DhY5W+lY237/G8e
z3dW9vOaGMLvl3u+1c89dqX3CZuhLcTIdNsX29Z2TNXU1Cv9DeF1LnM/4paY
7UkcRe7lO95j9reH7jWN3Ev2/JuSGsrc9b2OvuJ1It+9MToRuX874DeR79hK
3CzSPzZFu6zH24lbRvoCtkGD+J5vwjWV+Fv7Cv5NnHJWw583VHs9P1/i3ID/
d1G7QaRvbi9eN9LPODeRuzs7FqjXG1c5Rx/PQ7xTazSoco4tPM+O4saRGrco
smZBE5pE2g6bvRVZq3R13JEPiN8Oaq8fqX3UMPwbIDbfizwDEr9d1e4U+d9o
a3QjUlt7i9eItDsxyzm0pXWMXN7C+sM5FR3rpXbDyP37IPJM2cRaRw2B/rDO
qf7GzSPXx9o4q+ML1DboDHluLesJdR5at6XaHSM1+o3IM2I9ayz1B9q7aZXn
H7R0TXG/yHqtV5V1HvbZpMoaFw3ErhvZti0i/QPf2LDK/6cr/E3b+rvaRvoc
/tYq0ofwD7SU/zho/neR/ynRVep+tIT/Zs0jfRE/7Fnlfxl8oEeV//vqVLkP
g70X+M429h/2obv3YqfI2CAusMcg2wS/5ZxOrhkYGQ/EAvu5gfe0W6RdsEl/
caNITdy4yn/Hv/jeAN/fqMp/x9QS/G+hhmad7SJjjPj6HaHxxwA=
              "]], 
             Polygon3DBox[CompressedData["
1:eJw1l2UYVkUQhXev3YGgCAaKSBkgdqHYYiuYqKjYgt0BBmJ3YGEBKpgotiJ2
i63Yoghid7/vM+OP8+yZe+937+7szNnztes/cNtDmlLKp2Bm8HstZTXGVcGT
8D/BGvAdGZfjwdbgAeL7wTdc+wOsXuI3T8HnAyuDL4jfA//Ad2XcBbwA/wus
WeKdz8Bn532nwE8GbxMvBjYAU4g/B3Nwf3CJZ97i+t9grRLveBa+AFgVTCWe
DNrA1wPfwT8DreBrg6/hH4MWzhdMg38I7oN/y3g6GA5vx/e+gR8LFoNXsAd8
d/Ay90sTvB94ifjuGrk7E+wP/xfsVmLNz8Nn5fl94HuD14lnIx5Q4tobxCuC
bmA68fvuAff3YuwPXuP6TE3wPcGrxLM08a7+8OXhi4IHS+zJt1xbCfQAM4g/
AoPgNzBeDK6HL8Lz4103+Jq4BfGd8DvAFOKFiO8qce0L4m3MCXxBcCr8cdDe
9TJ24dkfGbsTdwOPwrf0G+4bGAzfGrSBzw2GwH9wzfAVwEPwBXnH7fCx1iDx
06Az/Kyst0MYrzQG18EngmXhwxi7mlvGI809uBy+bc6vJTgNvn2+zzmcAf/F
+oT3ABPgv4JVSlx7Av59jbktDx6G/1zj2T653oGM1xFfAEbADwU3wy8DN8AP
A6NLzPlG+E/uSYkcPWa9NrHWMdYn8STQF35J7ufejANL1MBl8L1qrM2auhS+
cBN7dy+YTrwTWLdETs+G75Hv2wRcBO9dIxez2kPw+0HrrNl7GHuBtjV6zZ45
Gv5IiT0ZDb8XfAXfHtwFX5zvf1miJ9qoBe5HPuOzv9XQjr65P8dYMyVq6hb4
MlzrUqPH7LX2oEONd/ruB+Gdsiftzd1rfHtDcCF8lxrcPTsXflCN2j4NXAPv
Z83C13eP4JvVqN2ZwMnwAeD4Ejm+Ar5rjVypYefBD66xl0PBtfayNV0ix+fD
96vxrU9SLw6sUQuDwdXwnWt82z0/B/5hfu8q64r1tQT3EN8NpnKtFfG4Ete+
It4u69seOj31Yif4zuBN4rma+P6p4L3cnw/szxp74Z6qnV1zr9Un1zIl99v1
bgrfMetDDVPLLrYv1QJ7qIR+j6tRj4PgJ2S+3BPXvkiNvRoKdsiefqTGb/zt
Mozjc38usRdSf8zv5fCR2S/293BrI/tlXzDEvc58vpvxlYzdmN8RNXI3IevJ
+tihRA6sT3VRfRyU/bNsE/qwT/5+TnCUdZ75M5/yY8D79noTPT0y+8vz54gS
73iHeMkmtLUzfGn4npm/A7I/u6Um+Q3nPncTZ8lxzjH72We9r17N10RuTwQf
E8/fBD/JGiPunpozooQ+z9PEu6wpa2ulJjT+xqwn12dtDMnvH15D2x/Nfj6y
hnY8CW6tobGe7da/2nsCeKVEz47N/mkBX6qE/p8E3vRZcIe1VMM3tMj+OhFM
gk9UQ1ID1AL7Ve1Wj1pZHyX0eXrOZ2Tm3rnoDTbNfvS36slG2e/qsHrcK/vL
86UtvEsJfZ+a9XFz5sbzqDVxx+yn48Az8Ldy/pvbYyXmpD6qwdaQ+jsp+9ta
NP/q/bE1cvd6rk99sxZfzXypn+b6JTDGOqjhlfzmbTXOENegPniWbuGelZij
5+UB4OwSPeF5p6fQW9gz6tFW1kCJNXueqv894VuV0Cf1x9zYw+qfemnu7BH1
c4kmvE9H+FJN6Jnexx5VP9VkzwbPCLVaf3Z4iR7Qf42qccbZr/o//c4WJTTy
RXiHJri6qZ7o/3qXeOZ/P6T2qGn6H/2Nc+tTwu/or1zL1iX8lv5Lrqa/kvm3
tsZl/Xp+dyihmRPzm37bd6ht6pMexvrVnxwPXixxxo3JerCWx+f+TMl+uSl7
Tz/m3PpmPWwENqzhbfWcalx78G4J7bPfh5XYs8nWvT1dw9t5xtnf51q72e89
waI1vKpn3p35LtfbL/td7zMs9cMz0vt+07Nz3ibqxbrxfFmHceEaXtczdhP4
xjW8sWe0mqV2f1JCy9aEt6zhFfWg1oRniXpqrawBX6iGV9ZDq1fO3W9+VMP/
dyrhsdQP/z/Ya17z/4B+vSt8OfBcDf9zjbVcwu+Nyh4x/zNq+EHv6bE+J+7c
hL86NPXB/w/2uu/U//t/xFq8tYT/1Q/LbwPfETdNeOdpuZ62TWj9jFy/NWWu
zal+xuc/yH7Rb/u8ufLM9XyYnP1oj/j/QD/mWTGqhJ/WX8tH53o6NrGWgVlP
nZrw44NSn9wz9849Vs/1n0s4txL++Mes3aVL+Ef9q9ppzetX9Zfea596op+4
qUTOptU4m/XmaoT+UL8/An59CX+vH/db7Uqc3/p/7znHL2v4Fc8W36k/+Q9e
Wrwm
              "]], 
             Polygon3DBox[{{507, 394, 340, 43, 455}, {550, 403, 353, 93, 
              460}, {517, 404, 352, 88, 467}, {501, 392, 338, 37, 449}, {504, 
              393, 339, 40, 452}, {554, 422, 373, 180, 490}, {552, 420, 371, 
              174, 484}, {526, 411, 358, 124, 479}, {551, 409, 359, 129, 
              472}, {553, 421, 372, 177, 487}}]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0MtNAmEYhtFBFBBvVCCxAK0ACzBCTNwJOxew0wSWAlagFWgFWgHagOJd
vGyJDRhDiLeF50tcHJ55F/PPMEvbu5s7qSRJtphyEdcpPx9aoMi5vaKrlOnb
NW3Q4sXe10OOebNP9YwxWftS0/oT93PFnn2tN9zStu/0ngc69qMOeKJrP8fz
+CRnv+qk/uoFPd7tEz3igKHd1Sb1OMuu6jqluM9e1kVGZOwFndBvnWeODXtW
Z8hTsafjPeI/xnl2Jr5jvBNrdjrO4ev/+/4B1u0rmw==
            "]], 
           Line3DBox[{301, 271, 309, 286, 293, 439, 292, 548, 294, 265, 310, 
            272, 303, 304, 305, 266, 315, 277, 306, 307, 308, 267, 298, 547, 
            280, 442, 297, 268, 320, 282, 319, 283, 321, 269, 323, 284, 322, 
            285, 324, 270, 300, 440, 281, 549, 299, 291, 318, 279, 316, 278, 
            317, 290, 314, 276, 312, 275, 313, 289, 296, 546, 274, 441, 295, 
            288, 328, 327, 302, 273, 311, 287, 326, 325, 301}]}, {
           Line3DBox[{444, 497, 443, 498, 445, 391, 446, 499, 447, 500, 448, 
            555, 501, 449, 502, 450, 503, 451, 556, 504, 452, 505, 453, 506, 
            454, 557, 507, 455, 508, 456, 509, 457}], 
           Line3DBox[{459, 510, 458, 511, 460, 550, 560, 461, 512, 462, 513, 
            463, 539, 542, 548}], 
           Line3DBox[{469, 519, 468, 518, 467, 517, 558, 466, 516, 465, 515, 
            464, 514, 543, 546}], 
           Line3DBox[{471, 520, 470, 521, 472, 551, 561, 473, 522, 474, 523, 
            475, 540, 544, 547}], 
           Line3DBox[{481, 528, 480, 527, 479, 526, 559, 478, 525, 477, 524, 
            476, 541, 545, 549}], 
           Line3DBox[{483, 529, 482, 530, 484, 552, 562, 485, 531, 486, 532, 
            487, 553, 563, 488, 533, 489, 534, 490, 554, 564, 491, 535, 492, 
            536, 493, 423, 494, 537, 495, 538, 496}]}, {
           Line3DBox[{329, 383, 330, 387, 337, 391, 341, 395, 345, 399, 349, 
            560, 403, 353, 405, 355, 407, 357, 561, 409, 359, 412, 363, 416, 
            367, 562, 420, 371, 424, 375, 428, 379}], 
           Line3DBox[{331, 384, 332, 388, 338, 392, 555, 342, 396, 346, 400, 
            350, 432, 436, 439}], 
           Line3DBox[{333, 385, 334, 389, 339, 393, 556, 343, 397, 347, 401, 
            351, 433, 437, 441}], 
           Line3DBox[{335, 386, 336, 390, 340, 394, 557, 344, 398, 348, 402, 
            352, 404, 558, 354, 406, 356, 408, 358, 411, 559, 362, 415, 366, 
            419, 370, 423, 374, 427, 378, 431, 382}], 
           Line3DBox[{380, 429, 376, 425, 372, 421, 563, 368, 417, 364, 413, 
            360, 410, 438, 442}], 
           Line3DBox[{381, 430, 377, 426, 373, 422, 564, 369, 418, 365, 414, 
            361, 434, 435, 440}]}, {}, {}}},
        VertexNormals->CompressedData["
1:eJztyMEJwCAURMGPqcQeck8PKUHwbAsp2RLMSTANBGTeYRcml3bXFBHnO0fM
nvX7xTnnnHPOOeecc84555xzzjnnnP/gnzjnnHPOOeecc84555zv7gMVQOWe

         "]], GraphicsComplex3DBox[CompressedData["
1:eJx12LGqFUcAgOGLvkdIJK+QNicWggmBQEgjBAshtlbpbATTWNhfSFKkD6kM
IsqAIFGwS2HtA4jaCHaRe/yz7DfMhcMyH3tnZ//l7L3MZ9dufP/TuZOTk/cf
Puc/fG598+WPp6fPRseTs583h/vvrry8+vbJ5K//+Pn6518/nvzb3y+8+Pfi
o8kfnM1zb/Lvzs7/c/Ifzvy3yY/H2w/1r47nH/RLx/knv3dcz+SXj+uf/NXx
fif/+9hn8o/jlY+62lmvs15nvc56nfU663XW66zXWa+zXme9znqd9TovfNTP
znpjvc56nfU663XW66zXWa+zXme9znqd9TrrdV74qJOd9X5fb6zXWa+zXme9
znqd9TrrddbrrNdZr7Ne54WPethZr7PevHpjvc56nfU663XW66zXWa+zXme9
znqdFz66bzvrddbrrHc9vbFeZ73Oep31Out11uus11mvs17nhY/uz856nfU6
63XWW4feWK+zXme9znqd9TrrddbrrNd54aP7sLO+f79vvn8fbb7//my+f96b
79e3+X68eZ31Out11uus11mvs17nhY/9erfOep31Out11uus11lv3Xpjvc56
nfU663XW66zXeeFj//y3znqd9TrrddbrrNdZr7Pe/eiN9TrrddbrrNdZr/PC
x/77tHXW66zXWa+zXme9znqd9Trr3afeWK+zXme9znqdFz7276ets15nvc56
nfU663XW66zXWa+z3v3rjfU663XW67zwsX/fb531Out11uus11mvs15nvc56
nfU663XRG+t11uu88LH/+7l11uus11mvs15nvc56nfU663XW66zXWa+X3liv
88LH/v+Rab9u6qyzXzd11tmvmzrrddbZr5s66+zXTZ119uumzjr7df/7r58+
/+Tmk39GR/vrH8eHxfmTM//0fHXmn3y1fvchOX9az6qP1737xS+P7vz1dHTE
DwvvfOc56K1vNb/r77zV+hfXnfpw/vTcV+v3uv8B6K5rWA==
        "], {{
          {RGBColor[0, 0, 1], EdgeForm[None], 
           GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
             
             "]]]}, {}, {}, {}, {}}, 
         {GrayLevel[0], 
          Line3DBox[{246, 1, 242, 227, 16, 31, 46, 61, 76, 91, 106, 121, 136, 
           151, 166, 181, 196, 231, 248, 211, 244, 236, 212, 213, 214, 215, 
           216, 217, 218, 219, 220, 221, 222, 223, 224, 233, 249, 225, 245, 
           237, 210, 195, 180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 
           229, 247, 15, 243, 235, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2,
            234, 246}]}},
        VertexNormals->CompressedData["
1:eJztyLEJACEURMGPVmIl9nAlCBdfC5ZsanZGgtjCLDwWprTveVNEzFWOvX7+
qJxzzjnnnHPOOeecc845v/0H/ZUifQ==
         "]]},
      BoxRatios->{1, 1, 0.4},
      Boxed->False,
      ImageSize->Scaled[1.],
      Method->{"RotationControl" -> "Globe"},
      PlotRange->{{-1, 1}, {-1, 1}, {0., 2.}},
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[
      {Thickness[0.05], Arrowheads[0.5], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
      ImageSize->Scaled[1.]], 
     Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
U8/b2of8d7k7dDi48Y0U+j+KSwg8
        "], {{
          {RGBColor[0, 0, 1], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnAf8V9P/x+88V4oU2qRSihQpQiKjMpIUhYqyFdlEslK2UhIiyQrZIzIa
EiKjssoKyd4j8/96ep3f4/94dHq/77nnnns/Z7zH6/0+32ZDRxx4UpYkyTll
kuSij+m/20UPEN2lSJIL0ySpL3q2yhuqv5B6te0m/lvRo1R2F/+d6Ay1vU3l
aV33V/v5oieqfWPxx6j+J/Hfq4xRfUfRX/XizcQ/I3qz7k9VeVjXv+m6meiz
oqv0bHPxq0KSvC2+vvhB4m/T84+LHyJ6iupfE3+e+G565hv1s1jXG+i6j+i7
quuk72vJt1dJ0lP8EarPRLdQX33U/m3xl6hcpzZbqc2eeuZH1b+qdoNVd57o
lqJ36l0fqH6gaFe1WSP+Jd27V9efiB8s+qLos6p7SuVQXS8QHaFn71CZK/4E
0X30riHic9Fr1Wa0+Laqv1XPTlN5Qtd/qP9N6Ef0YJUjVX+xrv8Uv6noHNGD
GCuVWioD1ddGql+m/g4v/ez74juL31D8UvE7qY97xJ+uch396nqE+Llqc5au
7xV9X99xl+r6iF6vusPU5jRdP6LnB4hfo/pvVc5XXTvRnfVME/ErmXPxI/XM
LNFJhb93O7X5W3Vtxb8g+o/K1uIX8Zt07yLx24r+q+t24l8UHarrC8W3zz0O
W4pfILpWfR7KXKj/nzP/3kdFZ6jdHPHHiE5Qm3VVd4Ho7yqHqL6N2h9Ce5WJ
uu6t62NEK9FLVabouQ6a98vF3yh+a/Fd9FvPUPt11e4a8aeIP5VvVJ+nMTdq
N4+x1b37RduqbKq63pXnkXp+wwrVjVD7R9kLqjtZ/Emq/zD3WD0tulD1bMTL
VFqKP4fvV5seunej6Dui2zBH4l/Xmm2iNnVSf9uDqn9W93fSe9uq7gI9O4Hf
LH60+CvZ12ozX212VJsFrBP2muijKh10//m4f6kfS5/se5WDuafn9hPdQ797
G9WNUZ9XqSxjjkRfEG2n+nqp39tN15NF3xJtz5rNfN1a/Cjxl4jfQvdGie7E
/lb92ao/V9ddU6/DOuLP1b0fRKfyfn3fvqL76vs30f2RiWVBe9XXFv2E+dX9
e8UfzJipnxtUZun6H9Yx38/aUJnEe0QvZo2Kbqs+H1bb/VU+1b2Nc6+xD/Se
8eI/Yv5Fjw+u/0ffNV3XDyGLRFshH5kL0R/1TD3VPy66va4fRAYgU/SuddiP
oofpupb4B9jHeq5u6t/bQffO5v16z+TUe/AUldqF9+nnudfhOall9GuqX1/0
ELVvV5r/S/QglfXETxDto3KgnttMv7GN2v+k+puRi+J/FX+r+I3E34fMFv+l
yhnim4o+V3r9zxT9PnP/D2X+xgcSy5RDUj9boQMyv/dB5JKeryl+muhslZni
+zLWrBc987Ou7yk9P6+ITtM3XKf69qKvi+7CntK9JaLnxbHYSs/WiHP6ZO77
A0RfTS3X7mRMRHdO/b6Gan8aekX8GNHnRC9XGSv+EpWrxd9O/2r3jPhv9B1L
GXPRW1WWiT+V8Ss9X7VEb1bbE/TMVXF/bZy63enB79lbbXZAvrP+1Xa6rt8V
f6boXan7v0LliOB+vlf9PNa8yq2qX0f1l4kPou/p3ne0F80K97+P+u7IHlXf
X+r6atXXYz+id0rvzSdE/1W7Kbq/l+i1KteJ3030KPV7hdoeoQn7V/Qw1V+k
9lfo3nj2o+gTyHjxN6CDcsvLXUQDa1D8kegtPfs1bVRfV2Wg+I/07lGl+T91
fzfxg8SfJ/qUnr1U5Stdr692R0VdNpYxFd1X9J3g+fpd/H56/gzxlejzoiNV
flS79YLHaq3avCK6o8odqu8c5TP7Yk7ptleJbqnn12GN6hvrBMveu5hP8d+r
zZXi71Hd0antkrlqtytjpeemlV4XR7AWSq+foewztekpfhnyWvx74i8VXYmc
4Leo3K/+9lX5gLWhvpYgz9RmLfMhfmfRE1X/iviRzIv4L9V+qOix7DvVHaI5
Ol7X36n+WNGTC9sj5+jeCYVtnLPFH13YBjkLXs+2Ef+F6mrqurv4N/SdP+n6
APEt+R25bbRjsZeirXKc+H5xnb+qth3Ft+A9+oZDNVbnq+548euqbi90EGOd
28Y5SvS33Huik+iPattb/ObqY2zhfbY9z+ldy3mWvS++h8o74ruLviX6JmtL
z7QWXYPNWFrvf8k6ZR2wN9XPBaXX5l6iO+Ye77Gie6vNBug15lDlIOZX9DHV
1Vb5TNcb6Xqw6Cp9fwOVk1Pvk+W59d2L6Org9fAV+lx9niT+79w2MvPbWvTU
4Of2EP+27jXADkQniK6v8mFiXYxOZP/foncNTz33H4t+lPr3nKzntxH9Xu9Z
zTeqvKDrEapvj0xVff/M9vM4Xa8UXZHatl4merzKr3rvJmp3HHIVu7r0nj0G
GSO+B98p/jjxZ+r+AM3joMLvOU3XB4ufJ36Y+EfUZrb4Qdj1heflEvRXlHXY
Eg/lHv+euj83eP5rVrb/sAPnBdt0fySey1mZ9cMBuj9R/XYSX1v0c11vIX6+
2s8uLc/eEX0vty30CHo7t538ia5vQQYhP/RcQ/HHiv9c9duozEktK7HfvhG9
TPTl3PJmtehZwXZ522Bb/vfE9jE6//3Eds5TutdZbf8S/TT33C0U3bPwfF4t
fsPcMu3jzHb6WvGtVGaU3uvnim6Xeh3ye6ZFPVhXfWypuvXimkdnon8Zl9mp
ZS7fiv3yW2K7tle0nXh3WVruIifXqO449jL7Xm3+Sjx/bwTzk9Rme/F/i79O
/PLUawX5dXPw2mmCzR7srzUWXaG+Gqv+SfEfsA7EH6S6N1Xqim8T7bVHE89x
W+zi1P5as2i/8cx9peuWiD4d54R5Wl14nAajW8XX0r0H1Weh5/qltvMW55bJ
I3U/qL5hantlgL7pcnS0nl3A2o+6YIiuO7IesH9V90zq55G7bye2WXePNi3y
br76baR+rhFdWNoWfUh0ifq/mH0jupQxTy33R5ZeF+z3s0vLky1EP8m9F+Zh
l2oCW6i/Ss82iuPJuAa1O118Lv6P0jbbn6K7qX2O7aL6fcTvjZ0lvpf4J8S/
Jv4A8R3V5wrxs1S3ROVZPXu1ysmJ7aRdS9vei0S3imubNf4k/gz2l/idoi+G
T9ZDfTZgP1Ov8qHadxFtoPp6yEjxG4uvI/7hYFsXu2K66B2l5efmwesc+dZM
fFf2ifjdgv1Z7BPsoCui3bJu8Dp8T206B+tsdHftYP9rWmJdjz9+E+u+tN2D
/dOfcWANi+8j2l3lW/E9RXdX+UL8nsH2yBeJ90Ya7Q30Arb96sS2TffCsn+i
ftsB2H6Zr3unlvnY/PgEH6v0U6mfu7/PwCf0jnvVpmkwPsD7xojuk9rPQrY3
QH+zxmlf+HvgR5fWNeicz1Q+iXqH8eSdF4quLC3T+qu/uoy17t/AuFX2kR4X
f6DKv7rfV3Q71X+lNreJf1fvGqL6CeLfwOcXf02wH4ENvFj0ALU9QmUDviPY
j/9Y9W+W1v3bqO418buKby9+h9K296voVvX5mNofru84Ire9/0jmZ3h2qdpc
W9oGGBzlHnbp1dijueUh8vP8zPoD3TEut/xj77ygZy7SvRZxTW1Nm8xzsm36
/2MExabtUdoXfolvRz+pjx00Hj/omY1V/1hmedk+6l/WLP4qvuqjqXU084Fc
RzdPiH3RJ3428maHKHMmpfYpwEmuyFw/I7EfTvueueu3j+1ZC22jrmcMtovy
v19hG3Vl7nXXIdohYDD0z9yjK2jPuGHDYsvqXzIh9bPs+ftz+8dv5PaP8IOQ
y8gHMAFkxJhg/Oti0ZP03kxtRuBDIxfpU2VVavvjH8Y2GMO6QHQUug8fnA/K
bJOVtEtttxWp907tOJ5JtPPZCw8Uvn+3vuFM8TmySHRcMI42ln2a2r75V8+M
1vXOqj9P9Gv0Hj9WpYVKzdS4x5uRR2e8kVrXoJ9Y+zl6UrRRatseLKVVap1y
SdSb68e1hJyCv620/OL7by9tf6KL8cWW6/pE9I3oW6XrWZOFytBoS7A2OsU1
0Df1nP23zqOvgW4Ca8EnxB9ENvJbr2cfZeaxt7pk/q0vJpZj8FPQFblt3ed1
/6PgMbxJ9QMK6/RDCstA5vAG9mtm/mWmIreN96bqQvRNlorfPfMawMf4MJi/
Uc++n9qOxD7YK/O78E/SzDY5Pio6gjUyubQcZn6nor9S41rgk5unxqmwF7fO
PF/U90w9FowDsot1dDO2p/g7xW8iuik2ImtS9IzStn9z0dNK2/PNGJPSOpz6
xal9h10S2xpgRo9EHvujUeI1sllq++PMiK2Aq7BXNkmNG7BeGsc1MyKuIXjw
bnxH/MRX8c3Ev5sbazsr7rPTM+NuYG7o/zZRpi2Je3Cz3L4itgN2xQGlfVP8
zb4RA3lKdH9+F3a3ZFevwvq6N/MfvM6eKm2fbJEal9tepZXud6qMVVDPO2rG
PcOYMw/MR8vEfh32DvbVORFPnB3bt4z7C3nWMK5n1jX2FTx4CrjKnNz7qXXc
U+dm3mPw2OfIPcYHDAccsp6+fUzuecSWOkn1e4vfJ+6/XlEmY5vtl1o3sC6Q
M29GXYwtjr2FDO8V9y9t/3smsU0HD06BX8KzXRPjZ13jXGPL0w94B3oNmYFt
y9pBjrF+di6ivsttp7JewL2R4eh1dBJ7oEeUD2BvYOVsXWw55M8G+FYqV6W2
Z84UnZTZpqmh/k/gO/BJU/cDplCjtN1eMxgDAc/H92OvsGd2E99EzwwX/TLu
RZ5HX94UHAO4TvQ7tWmRGHsvgu1M7E10NzZ6/WD9juzE7h6i5/piB7DnS9sJ
2Av9MtsP9DVb14PFPyv6T+l67IspajNIfA216ZP52Qboo8x4Zv/o+x6YWrd+
k/s+sZbV0f/CHwfPBCvE35mcOY5QsJYK713w86uC3wWWu6p03OGj0rKHuQM3
6KA2e6S2+T+O+AM4xPTUNslYXXdE76T2MR8lXsB+wQYsvD/AvVkjrDlsC941
MLVdtEfsAzwELJF6/Lf6sT3rEx2CLkSPh8L4VYm+zYxZHZ94LbAmWAdPB+Nn
f4u2VP2JrPXEGOyi1H4xe6hLlC3Y8/g1+Df4E+0y7+dfSj/7M/5OMJ5dvzLO
eWrqeMbbmfsGX2KAwb3Bv69V/Qi1OVzXpwXzf+n+KaITM9vf+LPIceTJSrXp
ovsHVp67LTNjsGDq4LCzolyFxw4B0wXbvTux34dPjg9wBjar6Hr65psLx92m
FpbV+JDsz6mRZx+iK3eK+hK8tH3cizXjt7Gm58T+8fM/C/4NxPLSwr8PzJPf
RP3R6KbSdtw1ZfKfwYXMqC9+Q7U/P7Vvzm8DZwZvPyg1zxCyTlmvp4r/Fz9F
fJfS65S9cabqaxWWDVuJjkptr+GrwYNVdNEYNsHOSr1nNkcui36de40TY+PT
NihM20bs8/S4ln7MLSeImf6QGxcipjY1GBu6nv2uMkztf1AHX5eWNw1K40bH
psaO+gXz1L+aOW4LXlcUHiewZeK41DcqjZmDKTF/4AxgTaxL8HPeRbtxme0h
bCGwG2xeYqnIgz5RJmD3sl+wG+mPfsHh74g8/YOFg613E3+nnn9c39KxsnwD
N+6FjyC+tb51YGXcHj/9MtZbYTx/SfS/xqWOFYGJ0aZJYYyFfvDTaDs2fv+w
yINRMt7TM485/vrVqW0CeOIuxP6OzIwXb5sYV5ge5QVrn73M+q9S7wFwj0a5
ZT6YTfPCexTMvEYwfrNnZQyLtucUtv+vie9tEdvzHPGlGZl1Qxs9e2VqPUI9
/G2J8UVwxl7izxU/PrX9AT8hrsut1de1qdfY6NT8nYn9z4mpY8ETYx1YBD7K
pHg9OvLsJfBBbIql0decktq+mRz30AelZcbkKPNvxPbDRiwd3yKGtK34bzLf
ByPET70rs6+KXEHWIFuIo8E3z+2b3pTaRsE/RXa0zq3j7saGT+wzTYi/HblC
G+QMsUb0I+2xYW9JHZ+FJ16L3EPGIAeRM0PFz8SuSozzTYvtdyj8/XzPtPgs
9WB4T6bWeYuiPCTOhaxiPSCvWuu335J4PbcItmXwTcAWsY/An9FNxCOxYR5I
HYtF78xKjUVgk8wJjtX00+A9ExzbOaiyzXBPbIPumBHXJ1guz3YrvG6pR6ew
P9hL2JPYlrfHPcW+ZH+CGb4f/Fzfyr7RrNg/cTfWDW7MwMw43vTEcSv4d0vj
HsiB7rkxbuTYp8E++H2p/eWDYz+svcHYfJllMDEz7oO9cJ924CXYgMRXGDty
S/AjGonOTM1fmjh3BV8DHUYMD18EXwM/b2ZsA14Ibsj+fC71Nbocm454PLF4
sEbiT/h4IyPPbySGit8PRs28z46y5dLIswYaRd2HDmRd0A7cHN/x8dSyck1c
NzzbvfQ47axx3r/wuIJ58w3gnsMSv39+/Ia3g393T7V/JDXGgbztWljHTS88
X6wHbEh8lrtTjwVYGPYLMYtWwWsNv7hx7vd8kRkrnR/fy9gwRv/FzETnRplD
/Iw6sNvDMscyb9X1t/EZxvaMwrbb+bnzZ8AZ7kDnquyg+pn4QDFORLzoSH1P
HWxT0Tm6romPmTlmiN3MGqqdWYcQ+7i4cI4Q+TMn65kNMsee2Av4tOjCg4Pl
62Eaq6Mz97+H6tcpLXtZq+QU8C7yCgYH55CQa8S8l5nXwJHxGy4W3yPY18bn
HlY4Hkdcbl/V/6R2GyHfCue6nFjaHyeWt5Ou9wYDSdwGvJsxJNb5i+7/mvre
t4XzYRar7c+p71GPLz9c99pX9q/ws5qWxnxoQzwRv/7n2J4YIvjPcaJPq90r
ut8ZvFnXNbC7MsvV16O83Tezv42v9G5q/Hau+LdE304dvyHWsEr9tKuMUVBP
/OhA8S+nznHCXsBumBf1C/ICPbJ1cB/EgsBxsLPAxzpkbo+NcVH0JfEp1y29
BvGLec878Rs6gZOyn7Dfxa+TORfi68K5RsNU/230U/BXfs+8Tp4T/SnO8xOZ
bUvwJvQZ8o5YCWvr5cz7F/uBeCSxrOeDf9ey+J3bZR6XTvG55f+rD15fjUvj
NIw/WM0rmeefudgPG5t9WTq+wtiTK7I2c1xsbmb8FZ1FzIVcEvQOOGznwn4v
fvpnce1uBxZXGhc5pLSvXzP+rsOC8zq+RCZFfwMsomlqOx59ij+4XuZcNPTe
0NQ5XuDSyOMV6vPz0rZrg2BbCZsJfTau8L67RPSr4PgvceCupe0R7NLhpfcL
+2ZBxIHBg9/M7Q88IHp57hgrcbhFEUMGS0aWIFOQz2eVxul/K6xXsbfQrcTl
qV/J7xDfV/wK8bdEHAY8ZmLUNaxDMBAwXOQ4cVbs6lf1bX+ljjuQU9g7eB/U
43cE53VsJv4P3f8z9fz1VB9rIw9GD1aPf0HuJDx5k6cWjt0Tw99fbX5PPe9g
GDgPyGviHLyXd+Hv/hP3IH3/EfsHX4UnlwCc8DR0amV7BzuP34nvwnxhh2Ez
nh1l9aDMehqZvk5hOQ1GgW+Cj8z6uCb6SuS6EGfCfsGXIUcHn49cIOws7C3w
hOtT+8jYflVmHx/bDztxdBznGlG2sMawFfGr8amJL7JWmfeBsZ5+WIOsRXAJ
cIh+cU1OCrbFPtVzHwfn9xX67TuWvr+mtEzrnTlf4drgPj4R/3mwzjmm8jX1
JwbnbYJF3yM6XNdN8WMK51OSV8ma2Cp3/+RpnqQ2zTM/C2ZCfIU8icnBPsEP
hW0fxpmYJnRQ5OfHenQ3eYjkI7JPyG/j/jw9+2ThvfxVbiwGTKZTYR9nQOY8
CnTXgKi/eokenhmfuS8zpvJwYbyDOd22sB4fFOe9Q27dRW7mjfSZOB+oS+6c
AfJ9pkY/nZyiO3PjxLcV1u2NM8fwsA+Qyfhjg6KtwG8YFpyf9zrjmTvWTC4w
ch35DpZ9cu7cB3I6OmaWocjPHfh9mWX6yCjbkfEz1K5T5hxaflOTKNMviDzr
lrwhcBD8pUNFW2XO+2T8Ns2cI8h4bx7HnO+kHpn5SbDc+g3doVJf9X8Xzg+B
ZyxaZ46HDkmMtfAu4p3kjzSIbWgLT14IOSMbZx5fYqg8e1zw+/kOxvqu3Bj7
7fiBpZ8jrwTMinklB488HvJ5XlD9jsH2Up3SucbEXhfqetfgPJ9NS8diqa8L
kJA6tkKsgZxlYr4LEs8n+D9zQ24NcQfiD9QRG2DciQ3TnneRb7Iy1p+i+g0z
59PuIr5z4ncRjyB/aUddL85Mj8S+A4tLnG/A3K6I/RAPxq5Ad+8UbYMQZRc5
f9gE5ETx/fTTLbjPNDc2RCzpBdG9gvXphqXriDN1ju3+9y3k1KyO9V+pr61E
j8dvDc5l2qR0TIzYGOPLnHDNGl0TLBuOldy4r3Af9xeO4+ySeYyx6/bIHF85
P35nt4hl9op7c7fMY8S97+IzxGWo4x42AuPHNXbCRfF38fsuibYiNiPv2T3a
EFdE3YSOekjftE/m/PyZubH1vnx38DokF+jSaG9gdxyfWQaxF8hF+jj+dtpT
f3SwDdk9c3wIW5Jr4kR7Z9Z59MV96vk+8sPx3ZA/6B94dBBxQTDcB8EccvsC
+AR5Zp8BPUTeCPZMw2CsGv2CL48vUBdbRPRylR7iLwvuh2+gzy0q51K/UVoO
g4mBjbGnkAVTgrEj/Dowe3Ji2AMfiH8Mfaw2j4u2VD/b5M6BQafwHcTW74vz
PSvqFHLuJ2KTY3PmtgfQ7+h09PGyiCODVX8TnKd+V3A+ITGVbcUvLxyzvjtY
r4Htg/FjG2M/ny06L9qB5MYTf3otdzwKvwmc9O7C8TnW62rkLucWcuekLQrO
7fpRdGFw3twPwXE41sYXwfIZ2YtsB4+6InXOBvmCyBNyxX5BDol/OjOWBfa6
r9o30bv+1PXS4LwyZMwD4t8qnP88Mzj3jLWMf4TMZ//fHnUNOPgNUQchq28S
fSXYR/wl+HdsEeunFJabN0T9ex0+YmUMBHykuWgtfA+96z21m4x+F72+MObc
Rvwt/MbKZw/uY4yDfSt8LHxD1iI5J+TNEI/DnyXHi3wSzoTgm+O7k3vYtnJe
2rjSeaT4w2By5AyDLxBPJo/38tR5Qd8Gn9m4h/1LXofe+W5wnioxOOJ+n2aO
NXMOAX0Eho//i001Gh1b2WfBxxlf2GerEdctvjF+61PiL4y2y0XoEPV1m/hm
4r8LjtOzd84vne9CXgr6brHqh1T2HcDCONPwYeF5vxedVTlnvT9ysvDZnFnB
uYJgSZwnaFU5R+Qw8c0r54vfoTYvZR5nvof8avBncOjWlePWrBnyhsklIBd/
fmY/i3Mcf2WW1Qv5DZVzyvuWXifY4djja4NzUluVtvOJ77YLlgnP5D6HQg4b
eWvktHAehrw/zpRkuXOKjlHdi8E+I77jT4x7bp8avx5fHn/7lcJ57+TVvBTs
1+PfN62c+3578Fkd+udc0jqVz70whutWPt/CuKGbyF8aUnhvoh/Rk52ib4WP
dVRlXxoZRa478ezXc+f2kzvI2PZRm2a5cdSXC9s7LxXO+QeH5nuOrmw/IR/w
l/CP8JOWFM7Vv5P9W1l/IBPAnYjl9C6cNwWu1KMwLoT9R+4cOUD4oJyzOLwy
doN8Xp55XsiFHqb6r3U9I/h8DvmMnJXAr18cdRNxEc42ECfZtfK+BRskD47z
Ne3ivJDXXLtyXvSiaKssjGuDPOlulfEgYhbk0YFxv6fn9iZ+kNsHXxNtFWwW
5o686Q2QYeJr587r+zzaV9hZgyvvpVVRVpBzXUd1vxb2YRlDzjWQE9ChsM/J
2HJOZFlwvjCxOc54kFPNGYz3M+cQcvbkj+D87AdFfymcv/EQuqLwmbVWUYZj
n2CndFVfF+T2T8nXQ1YgM/oDnueOr70U18CLOAGVz6Iwvx9EG481j+12XOZc
8KzyGTx00HriT8qNb9yK7M58xqphZR0JbgDWBi4CzgHmzNpoieysfGYPmX95
4XdcKXqLro/NnHPeMWIUYBXrq/2puW3aJzNjG5ytI88c+QaWA4bwPDpVdEDp
szbIH86WsG4Hqv2CwnvnNdUFcL3cuce1yJvPnVfMmTjOCSKXwH/A9Dgfht1x
TOY1TV7ofzw+U2W5gD35T/AZQvIhFwSfZfxe9I/CuuaR4PMOH4l/NFhGgzch
sxcVHuN3xP8bfKaIHEswkqMyfze5lpy/+JC1y7plTQX7z9hN9EOsiZgT+eh1
1WZUbjywXuVzF3wDeXvkM7yOPK6MfbCWxhR+H9jMtDint8bfgu8IRoWsRGaS
T8jZEOYOG5+cZ3TrXoXzIVer/T1gDoXPbKJDyY/lzAP6l/Ms7EH24l+5/R9y
54lT4wMRa0ZWgTuBPxET7584ll1D9eP17O+549fEsS4rPJ+c6eNsH2eRyOEh
D5ZcPXIOyLsnzx/smjMu6DP0Gme8OMcB3k2uLnn8jB9xUmLE+GxNC+PnYMPE
S1eXzm0gP4Lza8T7OROAPYpdSh4meRdgYtgfX+SO3dYpfJ6C/JiPcuekItuR
8RsGx7yIfbEe5yY+A0rOA3lU2KvsOXwyzokiq+YlzsdnzbPGW2g8Dy6dsw5G
yHkB8KQvS2M45BhsXvjcLvlMnDXkHBqYT83CufrEGzgbAa54YeKzlcgMbFFy
scktBH8DhwPrAfMZFXEc8BxieJxfIwb+YemzZvjcYIqcvyMG/ik6p7TcRvaS
m0EOBhgxmEafaJ9w7gB/A9sVPBE/gbxo4vjYaJtWjgmCPXEmjJj46DjOL5ee
d+afMwnkAO1aWC6BybL+0PnE8ciL4mwIMSLONpWV89rZI+RMkzv9uGha2cbF
Pucc60XMRelzFMSqf8l9Zhncv57eNb50jj52CLkprIHlwecgsNU507BhZXsU
2X54Yf8T3+GIwueF0fuchSY237CwXQ8Oi34n74TzOPgPnLsGQ8SO7RzXAGuB
dQWus3/luD/7pnHlc2dgp2ConN0lp4HzdJzfJN7GmQZiQ+RVMG6cJySmtl7h
fA8wSJxw8hz4rd0rY2KbaXyeCD73Sz4E9mhV2T7DpiX/4dzYD2uU7+TMNLlM
I+M65Iwt58WwmbGtsbHJfcPfYsw5B9wvju34uB/Jj+C8NjlFYI0TC5/pIOdg
n8L52UcmPq9LHg45E5wb46woODFnyzhThv27e+Xzj/iA5xXWP2AnnOPm/NQ3
0Q7En8PH5cwWvjz5seTJchYVH2FUYX8Gv4YzWfjU+KT4pshmMGPOo+O/k4s7
JtqS+Pqc98KXJyeW3FjmemzivKXZcW2zxsHGyZlemhs/Jy72Uxkx+cwyaLdo
w2PLY79wBo2zaOBmYGXnBNsh5P/sXtp2QG5wjh/cAKzgyuBcUrAHcoCnRMyI
vFzO9SOLMvFbVj73go5rUxmXZ+9wTpLcHPI5OedIrJH82ZtyY/X4ieTGkzM/
OfffDcB+4Mzj0Mq4KusKvBXcdXxwzit4AznDnPFhzdybO48W3If8ZHJYwVrI
c+Y8HjEbzrBw7gV8kTM+5N6vSmyfgEWCSV4djOvVj5gAGPKB8b1flFG2Y3NV
zg1iX3MWnnwC8rjRp8QO5xaOiZOTSI4q50fIWSV3FT2L/TVcffTLneeNLY19
Pjyzr4WNBP7yQmFbFpuWvxvwXGHbgP4XFrbTaHN4MCYO5oDNg02FbcR5JexJ
zqb8H1Y279o=
              "]], Polygon3DBox[CompressedData["
1:eJwtm3fg19P3x1/r3rcRTRENFQ1bsrUzSkalJe20s7OJMsqWLVJ9K6Psvbei
bEmikCiEjB+K+j0fPV9/3M/nnHvuva917xnPc94NB5/a7ZQsSZK5eZIU+j9I
/+vp/99qM0Ufr86K6P9T6yr6ppgk22hCY/FTRJ8SkuQ90Vto7B/iR6jVlvw6
jR2kiU+Lro1c/39Xe0v9I/S/ptpVoqcxT/K30iQ5VvxktRqSHau+Jfr/nPit
9f888c+Kfkzjq2lsd7XvRPdTqyXZX2ozRO+l6y+SbLb4abq3VzT3H9GXqv0j
eoX6zhC9j9Y6VvfXSHPOFf+I2gHqO0HtPc2/V/yXkj2l8Zdq3ieim2v8leJ/
kizXuD3ET4t+njfF/y26ieRdJf+M64rvrpaIDlqzm+hhWqeZutar/U/0BM2r
Ivne4t/W/1TzV4u+VbLdtX5LzflMc/to3F7iz1P/IpZU3ynq6662UPTRmnu/
ZI+IP0p0J7X7xA8Sv0by+ZozUPTb6ttB/BNqN4n+XX2HS7ZV7vv9Rq2R+Inq
76/rvZ9ZPlz/X1ffRrUTxW+n8Zs0doH+b6+1HlG7TnRb9X0vepPGtBYd9Dw/
i54q2Z5ar7r6bpB8d63TUvwM8aMzrzlS9Lsa30ryGuI/0pjWmtdD9DdqN4p+
MPN+uUVj1oq+Xn0niP9a7QbRO2p+e9HvStZO658q/n3xF0pWQ/wrWnOoZNXU
LhP9hK75VTl3N8lH6/+r4v9V6y35mOD3XeFdaWwhvpL6vLTgYIiP4h8Qv6/4
b8Wfre6Wmnu8+AfVv6XkDdTeF91S7TLJTxb/G7Ta4sTfcAJr6Bofi35Rffdo
rd3Ud1HiM/ms7rmF5Islf1n8J5JfpOtEzpb45qL3kfwjyZvw/iRfoLav+E+1
zoG6n3Ea80/qPXIx50VtvMYOVt8voodJ/rPot7lH0S9rXEP2h/7/rXaFxizh
fakdLHoPtYsT6wT2zB9qR4jfWv3rdS991baUbFv17aV7uRh9Iv508as1pqb6
DhG9iD3A9xG/s67/oWT7i18dvP7u4gdXrD9Gauxxic9cV62/UeMLteNF76dx
EyUbKn5d7u99ssZ3UN/LoleL/kX085LvKPnd0fsB2a+im6nvQsmf5PnUt7f6
PtTYncS/r3tZKvlY0SjNz9l7kqeiP1bfWsm/E71G9PdqO0g+Lvh98d7+T2Mr
WnOc1svQaaKvUf+X7Ge1NqKP0ph1kqdqR4g+TW0Xjb1dY/8SPVNtC8l2E7+f
3sdd4odIvi86Q3SP6LVHsl907aniB4vfRfzNop9Sq6H5B2n+AZo/Sv9/E/+7
2mjRp3Ed0X+rnSH6QrVC89dp/gWie2l+Ln66+Ch6X3RYYp32qvonie8sepna
ZNF3BX+bhzX3F43/VP93xp5obKbrd1DfkRwj9KL4Luw5jb+b9UU/qvkXamwz
9Q0UvbX6zhU9RvK6mrNBfedzrxqzTPT1kr8qfpj410Rvo3aB+NP4Jrnf4eWF
zz/vtqI5wyRrrL4uFevwNwrrO3R7A7W5mv+g2tka+7famannHBf8TSdq3Y8S
f+s/ecbM72CR6FcL30tftbty3/95mj+DMyX6JbWBkh2v9gz6ubA+HKP2jug7
tMZs0T+pjdb93atrnCZ6J/a76G+1ZhfRXbTeG6KPK2xL7xN/Qu5rcm2+Gd/v
vfIs9Nb/F9gDuenqnG3xi7XmUZr/icZMF/2i+gZIdozaE6Kf0f8dJOum/8+L
X6n5nTS+jfpeEf2p5nQWvxR7HGxTsIXHJ7Y1u4l/Hd3HGZT8mWj98zO6W8/3
qfi7NL6Oxh4pfl20DerIeY8+o2M19rXEZ/c40TO5ttY8RnPWFT4LO5TzfwjW
Bfuo7zTR9TXnPvFtsZMV78mLctsI9mquNkj0bbnte3f9r6vxZ/F9RP8m+bX4
G6J3kvx38WO4NvZOdKr1Joi/nz0p/i++F3tX8qOwhWrt8B+wlZr/q/hRqfta
iW6u+S+J/1V8FdH/qbXS2Js4M5JX131fzP2IX1P6XIux94l9sd/VNynxPeyk
sf8G695fNaaRrrdB47/MbDPPQabxX4jvzvqMl/wg9V0v/nz2M7Tkk8X/Ifrb
wrpkO/S81vtN4z8ofYT5oqPGfJz5TI8KtpmfiD8qsS1dpXntdW9fadwhmv+Y
ZFU5S/r/NPpW/W0kfxabxL2pHZzap5ub2Y5hz/A52oneRes/JvpbjZ9d6ucD
xF+tse+KPhwdIn6F5B1L/2eV6BbqWyL6Svws0ePxb0TvqvUeF99fYy4O9m+Y
u7f6FmPLg/VPE63VEXukvms0d8/UPuL+6r8385nmbDfSeg9L1lNrnKe5DcU/
JH45/p/4t7Dx4j/mObXecP1vIv4CbJLolySvl9qHwJf4QnxP0VW19mEa34br
8bxa73LJv8l8713Vt0r8Y4X9+t7iHy/sM+M7X4l+Ef2EmtjkIP1ZJvrx3L4E
7xD79jB94huJ/whdoVYfXaj5z3IGsEnir+B76d7qoq/E7yd+x2g7jj3fSu0h
0fXUN4frS366xm8jfpbWaqp766DnWc93UGsu+Zf46JozSvTZmrNFqc95fmKW
KoXPQ990sxuWVBN9aO7YYaz6/uF75PYHR6c+sw9F7+c/y/OHv9Y/9R7cW/QQ
rXGw6B/UN1T0YLUF4n8sefYt+/eFxN/nVbXPEutAdCHzGfuT2kLigtzfGh2N
rr6eMyV+vPg9RTfFJuOPce8V+4foqiHogNzxyok8Oz5QsL/WWPSg1DoT+9dD
tMhkveg7ctumM1LHKF8Gz/1Z99KvYhuILbyw3EPbFqbxqYnFeuUef4n6ahW+
R+61JnGC5tcozPMM9+TWrx8yXnRryesW/vYjNKae6FP1fI117VtFt5H8cI0b
IPmpkm/CV1A7mb3ANy2s99H/6DB02VbB/i1+7kma/7HWm5L429YVPyA6frq0
jFdY767ENroorDNPEf1vbl3KfsJ3OYczJfkKtd3F/6s1Kpo/UWPaiV6ovjs1
9wfx49gPmldH8svEd8jss06I1pH4b/hx6M4r1Dqie9Q3ldhRfNvMe2q86FWi
B4v+Tm17zblEfa0z+9t3aPyDnOvMe26A6Kc4A6WORFf2j46Hsb2F7udY8Rv0
LOfg+xOvFY63f+OAVOw/9M+8R2qIvk2tV+bz9yO2XvdwhfiWkn+WO97uWtp4
bH2D3M/PHsT+L1ZrIP5PYtWK/VlsFT4bvtvtWv9Eyfqo7z/xSwrHD3/hg2j8
B8H6/VD1h4r32zzJ+6AfNGaA5M+LP1n9UfJromPbVuq7mtgx2vfg/j4rvN+J
xydrfiPx1xbGH5rhb5X+zXXoxtT+zjCt/ybnQ/3bav2v1LcH96rxW2Af2Wfi
a0heW/xB2EvN/Q+diO+ADhB/oPh7iS203uvYXo3fRuOnBOMN4A5bV6x/8Bew
8cSkQ8AkxI9Uf5WKv/cq/HH1zRP9jdpeojdp7FaSd4zWJSjp9qL/lLwbuk/z
a0q+qfB+qi1+B/FHin8ytY07orAvenRie34g9k5rHKG+Q3knor/mjIveqL4t
K/YJPhdfNbevcFU0lnCY+iZF+wj4CttIXkvjJ+O/Z/ah8KXAi+aX+oRY/W71
vyn+2tTx6Xr0tWTV1b+d5h8G5iDZRvUdUvqK4Cej9H9+qc857/hY4EHoj9sT
+1Sp5MfjN4o+VbIn+dbRvgTn5QPJr4/2rauJ/7Dw9ztY/Fvi+xEbaM761DHx
WYXPEeeJvrOR4w9l3jO36d2cI74F5wV9HI3H/Mnzqo1F36FzUveBz5yrMS01
fn+N31P0VPU1Fd8b/SJ6Db585phlJ63VIfj50I31Ko6vG4lvoDFTNP5prbGz
6JsKx8Pniz9Q/AH4F9HxI/F7ljueHlFYV/2ivpHsV8lrafw1xB2SD47G28Dd
BuAviw6ZYxTiqysLxwbE0JeV52sguiszxsc6rEdMDp5HvEOsuGMZf20RHD8S
R/bFv9H/dyT/tbyfe4gJMmOM4DncLzJiYDCBs6LPMj55Z63VKVi/Yyvqa9JD
+t8qs87k/BD/ce3Rid/nxdFyxg3X+P6FsbBD1TcXf7Mw1sc9cC97aPwCXfs5
9d0crEO4fnP2cuH3vnOpf9bm3l8DNP5H/BTwJnwOyZeq78Ty+78jupvooRXj
pz0y2yxs10XR98I93a7rPZLbt9hLfdM15xbJe2bGNNZIPoN7zuzztRZ9o+Td
iZckXwpfeK+wZ8Br2N/gs3m5n8FHwBobSnYz+lNt18w+ExgD56ee+BtEj6xY
/xP79UttAy/FZov/V/y5GnM/+yvzmUIfogfQB2AIpxfGeMB6umT2P9HnzH9U
9IiKr8P1tk+MD7OfeX//Y69Kflth/wF7tT26ufBZ5EzOwXeJvj73Maxif5dr
YfPmqX0b7U+BteF//F04FkW3jBEf9P+s1JgMeMMsbEbmM3Wv5jQNxh+JmdCH
4I1fJdaBxE3gHehL4i/isC8KY7sT2GOa+3FhLB0M7yDwOrV+omvmxhvfLYxd
z1U7AV80GLvDhmBLauuad+L7i39A/GXB2BKYI04vODF48dDEeNPR+LCJMagr
RG8fjWc1zY33LAmODbph70VflRur6Vzah5vUtyHxnkVfXU3MkdiGgPdxv1VE
9yX2qvj5aoofSNwifi46Uu+htea/J3pXfLTceNqJ4j/h3Ip+Su0k8TeU/nCV
8vn/KvwueafYohuJEdBf+CJaa6n44YkxvM9LObkJfIgevJvMvgA+QR1sbPDa
XAPfe7La2sQYLlgumPSdud8ZWPUxatMS74lCz98oGFsBwwPfaRYcy+Hz4ftN
yY1Ns0fA7xqrb0JmDAQspI5a28SYyuLy+3+NblFrC5agtr9kdVLjIYvUDhNd
PfX3JiY4Ivc3I1Y4Mrefhr/2juS1yphvpdYbL35l8FkFgyae+Upta961+r4J
jt+JLdAp4IHsF7C2n8vnZ0+wN8gRPBPsz09MjUm/ozlfB691G/EBvj0YDedZ
83tL9nRwLE6MDvb8dnCsfbnGHBl85hYU9g85i4y/TLJ9NOZS3l2wb4xPg2+z
ofQ3OHMXhvIZE58h3h8Ywkt6B7smxhZYg7WqpsYDwGM5G1eK31nybdXXQfRL
6hsUrBPQDeDxxCqHl+eTa1wiuqpax9RngrNBjEusyxrg7+xx9jqY6rzgnM0t
udcgl9McO5w7v9RT/P1q4zJ/Y771zhrfLfce7RaMgRJzEn+CjS6M9gfJDZG/
2LtiH4P8z4ro/A+5JfBH8gfsZ3It7PGrgvNB4K8fJCXeX3EuifzGh5rfMPhs
4yeCXdYLxnLA3MDeGjIeHEB9iwrnBzm7nOHnNKY+Nlz/eyWOsc7KbWNXYi9K
fYpv94baaeiPaPuzrowXeX5wSvDKrsExDD4Y9uorfJ1g3YRuBeuq4JNKtkth
vLZ+cL4BDAos6q1o7AAMAf8ezArsamIZj4LZ/a2+GzJjeWCwMyS/OjWmA36F
j4K/dKTWyqP3DnsoBucAwXnAey4IzvmQ+2HPTgzOCc0tY5JJwRgicfjmeLzc
H+hsdPjlwTaA3BM6Ad0wNtgfX6D7qy5ZHV3/bs19LPH+AsMjLic+B9sDIwMr
a5o4v1k3GBtdRowSjQ99Kr51Yn8B+4Jvw/7/rjDGwvsi5iL2og9Zu9T5I/YD
346Y59Do/CVjmfNa5vePL00M06bcT+w1clpnsrcK65YRifMto4Nj67XoaHyM
4Nh3NT5U4ecndiYnsVb8ssLPR8xI/gV9zF7nmc4KtgnTc9sAbAFnmvvHh8M/
J89IvpEcAHhRA7XpmTEI4gf010m5bcx7pU85rbC/16nUrzeWOh48EBuGLaub
2L5jA8k7Y8Oxjc8F+55g3GDde6hvSmrMFnzqtehvRa6E+G+e5s4Sf13qnM7M
wrEm33CMZK9GX4vcH/HwTsH4PTh+p4ptLnl6fAxs8RvRuRi+DfEomCDYIDmM
9uiN6PxmkXv+1cH7/4TU9vRo9R2de8+z98+O9jfxO7tVnPOZnvgMbhGN2YGj
gKeA5XGP3Gu9cj9hTyfhT6s1i8aQwK3Br8GWOFOcrUmlvf1fNF6J70a+g8Dg
0cwYNtgGmP2OhfFtsHyegXdBfM+zkb+7K/WZOYRzrPVHpn7mocH4O9jUVYnx
djBIfMvhqfN3OwTTw9ifoqtp/fmZz+TbYC9q16TGgMGCyQmRG9omdb6DfBG5
j3nYG/Sz5rcr/P7h0QHoAmIY4hnOMGcZjIX8KD4u9wNG2kp0+4pxLPCsz6Jz
2uAI4AkDxa8LxjbBOMg//BGsi29Enwfnt8BO70mcrwKz3rXweeT+s2DsbWri
/AQxMrHyHZr/X3BMQWxxp/iNwZg/2P9U8ZuCMTHiAnyOa6MxqUsK54vBqsDo
wOrAY7kfcn5PZcaoyAUOi85tEEMOj455iX3BB8+M9t/YKw+U9hH7fEdinxf7
2qKwL3J/4vwM9Rx3pPaZDyTeCa4dIcYYrfWWRePz4PTk58k5gaOCp/J82Adw
Yt7pR9H+HtgJPjD4PTkdcjtjM+fH8IfOTIxB41+BcT1dxjNgX9h+ahm4pwPK
eJPaBTDYrrn9e3y9hvh4mvu8/j8k2dTUOdpf8WlSY6zkr/C5eF6e+ziNf1F9
V2X2IfEln8v9Lm4Xv19hDGtZZh8KX+oMzW+SGaPrGJxfH5g6hjyY/afxHbTG
bRr/STQev9nOi19eOF9EPgcfHV8df+Kb3D4StSrkv8gd3leez5nBtQLkPMh9
EAuQS+eMkl9/SPIdxTfkjAbneMn1Vkld/4CORFei08DOqAlokjvGoFYAjG1o
bptGvITOQ/dhn04u/YkzC+ezwUqJT7Cl5CSYz/Vrim6L/tO4gzR+Ue532js6
x0qulZz7tNJ/IxYjJ/MytlGtqeiLNP6J4Hw1tRv0vcm1gn3TXcS/Hmwf8PXB
tMG28efGFM6/Hx2N+b1cxu9ggeSEXssdU5ArwufA99g2df6IHBAYfkycG8J+
gY1wpldFx0vodjAYsJhZwb4xGGGTaMzvpcwYLVgg8Qu6jJwU16NG56ncOWdq
d/B3bs6NkSalv3N7bn+deAqbQexEXI0teTna3mJ3OxMvBvsWM9T6Be8PnoUc
XePofAW5Kmq0di/fb4vENQC8T3w6fLvdEmO55J+ohSHnRO6JvC57b7vU+Wiu
wbVqqT3Os2v+W5kx3wXRNQPUDpBjBx8nPv4hcU6GeAsfDF8MH/yd6PzkpaKn
pcawe0reJXfMiH07Qfwhufc8z8P7praDHCW5ymuCc9XYkCqlPUEXk/Ml94uN
Payw/sf29hDfNvcafC/2E89CDop4h3qA2Yl9HL7PP+InZ86pYY+J/9El1FQd
GBxDEEvgg1MbRb4cW0dOgPoRfHJ8c3Lm5HaoGWqfO0YjngMjfzFzDQfYeZ/g
/ODy3Hg+Ogy9i/5Ft6Gj6ufWkeiuatG+DjUb5Kvqoeslu0n8XoVr8qjNm6Nr
1NTY7aJ12aHovODr8e45sw9jryW/L7MO+178P4Xx42pad6NkDYJ1FTqLXDQ5
nhcy5zDI/VAPAu4F/rWStbhmYhuFrXpf/NO57417JE/H3qAG8dHc9SLUIVGP
9KPo+6NtGzYAW0BMNT63T4xvDF6HraGmCX1LPAwWBd59T3T9JLUf1IBQG7e8
xEs2iP85Or4H2yYnhL2l/oTaImK490Q/GH2W0SHoEmKiM3P76Pjq86K/HWee
s0+Md3puHx9ff4j6WmBHJT9FsrHRNHjhSt3LLsHPSk0S9TPjorFKcsDke5sH
x/bYmNOjc0z4M2B4xNfsYXQPeQr2NjWi4MjgyT9FY47jC2P4YJHUe/6I/6s5
nfCjor8de5C9uFb886V9AlviHb1R6gfeHfUi1HbhM78ejTlSJ0lOCSwSzLZx
7hwBWC4+57wSPyR3trXuf8vENTB3RufoiFfA2KnP+qGMdd8s9RExI7EjNYPU
O4DBg2ODZ4PNE9MT24OBUx9BzSS1k9QIUJ8ABjw/cc0m+Z40dx6ZHBC5IOIp
ateI74nze1WMy4DPUDsIvkFughpBagU7F/a9eYfk+28NzletSJ1vqR6cyyIH
Qy7m8OjYjBwo+c1/C+cqyFngj7WLjtXIWZLPrKH536Z+B63E7xpcO3V4Utb7
BNd2sp+nl3LwV2pmqa9Czt7nzHJ2+YbU8/6R+duSrwSbocaNWrc+et5xuXO2
xIvg49QuUuNGrRv1qYMS5wCpJyVnw7fhHqlH7a35Z+fGDNqU90/ujZpValfJ
j/C825X+KP4pNDlkcsnE1x0T1wxSf0S96hOJMVb065zoWJKYhdiFM8PZAfOn
Xpo8AfkCcqzUM3OGOctPFvalqRfCF++U215Sz4Xvi32nPpp4EV+EnBe5r42l
rzyF62GPcmPJvMPHM9fnEW8SQw8R3TcYv5lZ4rXUd1CbQY1jj8L1TMQSkwrn
g2blxr7w777OXY9KPMoz988dD08QvU9urPdB/G1ddwXXFd+3MBYBpg7+A4YE
HtkjN7a0vowNyEEclhsjAysDUwYvJ+cxMbFOQjc9G+0/Diivh89Evg1MDF+K
+Hm/zDm3Obl9OPJZ5LXw7fDxiWX2zO37PxydawdzA3sj/4LvSQ0OtTjkOKln
on6J3OfN5fdEJ3JP1HfUxnbhf+eOcYi9NuSOfagPwRehxohao8/Rx5ltyjGl
P/RM4ppdand7gdekfgbif+pxqDUlh0oulfoCsDFyuORyyVeB5ZGTJDf5aHTt
FffMvaMz0Z3ETNgr6g2oLaUmgdoE6h3AEqlpoLaBfBS5ZnJm5M6o16G2FQwA
f4ScKvanfhlPLQzGBqmhxz6DoWA/wYTBVsjRkysjZzZG46tGYwXkPEdFx2es
RQ3OqmDMBeyFnBu5v17B2DIYC1gLObwHCufMuD9yRORpyNeQO2L/s3e4J3BL
YixiLWrIqOdHh6HLOuaONcl/YcuIQdl/1JuDzVMfR86HeAxsl5onap/I4bGv
2F/k9mZFY5dgUGBRxKicVzBNsE1yUrML56vIVZFPpjb+kJLHZ0Q/dy59ye7B
57dPeT6I54gPqUGkFnF2dK4DDBAsEPwMXYhPi2+Lz4kvTd0bvij1GNhWcsrE
e+R8ydny+4uh0XVn+PrUMFH/hv0lJ8fvNU6Mxor5/cGS1PXwxB/UM83PjYWi
I8gdk59Hd2BP0XHE3C2D9S11LJyxEcHPyLNSf3ZssH3jNwrYFGwL8QaYHeps
TrCPgK9ATd6L0XhKh8I5mS+jn5FnxX4+X9oHfueADR0evD/xHdE5m/FryRcW
9rFGlPuR2gR8Znxn8gnUeFF/94j4VuJ/En++5u8vfml0PRqYF9jXNsH1Tthg
bDHxGu+UesIng/M3+IycvyOw7cG64kbsTzAGARbB/qcW7cfyXfAMfcr9Tu4a
G7U6ugaRWsRbE9c/sr/IfWLDv4+uCSBHjT+8uvTnbilsI9GlxBdgeeDBX0Tr
6xe1TmPJXwuuAaQWcFbiegpqxqjZJyYjNiOGJZZFZxFP4WMvz2zjsd/8JmRl
ZhuMLaZG6MnMOoHaIfboObl9KPYueBG1TNT0fI1+yf1bCTCQZ8uYgjgLnx/f
H4wArICYA/8fPJlYDowOrG55NH46pzyr30XnH9AR6ArwAmpzsImvRNc0Utt4
QeL6RN4B7+ISzmhwvJLja2Sut2fvge2h86m3BnMEe2yfGF+kxoFaB+qte2J7
ouvbwPDA8sjZkbsjxiS/Rk0btW3swW2jf3/CWcMG9Cxc/8r1+U0Sv01amLvO
eXMMGXxP4MbEVNwrNUEfZbYB1ArxTs7NjbnzrshHYbex3/y+Bp8Re5eUviQ1
RCsy1+iQfyP+PT83Jg82T83O55lrkKjlIT9GbQs6AvyH3Ae51eGJ86/4WOQG
0AHoAuIDdA8+IPk/9NHVpY+J70U9NNhs1cz4Jr/ngQbDBculxo/fmfB7E+on
eH/NCmPu4Cn9orE3auTAH7eKzu3MSIx1D4qO9ah5GYJvF1zbRM0P+NC+wbaM
GJZYdlTuXDg+0Ozc3/f8ws8HngL+Ri07Pga+BvERvy3AR/ytcJ4KrHx64vrV
xdFYIRg4WHifaGyb38icVPrj+ObL1Q4WX03856nrSfaPbpvpzPU+qwvzryTG
xx6P/jZgfmB//MaL33qhP6kH43rodmJU8PQ1ha9FTABedkvwWlyTejfeJ1gu
MSV4ZufoWidqSqg3rxWMXZGv6RTdoKmBvLy8f2qTqKGjlg47ib2kRozfE5I7
o5ZhSOJ6yF8K15ZQjw8+AWbOeePcofvBlMCWyFl3Cc4B8o7BuMG6wQ/2LVyv
SO0s+QIwIX6fsCT6NwF1SswD7AMfG2yKejJ8b/Dt2oVz5OTK10TnV4kZiR2p
GaZ2mBwCuQR8SnxLfo/yQjA+Sc0z+uSA4JoLcFwwGLAY8BRq2Dfr7+B8PnXo
5MjJlYOXgO3ye4M9gvcn2CX1NF2idUhDyWdm1i3UtJJ3BfN/Ifo3DLy7/1L/
Huq46PdJzQ31k/wma2kZb/FbLdZkbWp2qO/je1IbiE+Nb42+4XdK/KaI3xaR
PyBPypnaMjpfwrvlN1D8Fmr7YNuCAee3j9TEUhtLfcRzou8OxrI3pf49ZO3g
2k5+w9W1nI8MzJugh5pQakP5zRg1zIzn2Xgmnu3/ASVdEl0=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwt1nmQz3Ucx/Gf3Z/fklSIxEyu0IwjRk2XnREy07H/aFCWlKsJu3KVMWZC
KEwzalAxYhIpNSVXzg73fUyUo12sa2NdQ+Ts8Z6vP177+byen9fn+H6+n+/n
t/V6DuxYmJVKpQqpPO3MpFLzlJ+US6WapVOpvJxUahnWJBvj6wgP4HcLt5FZ
JrtaW2O53/A+6nPoGn5I/nfsLX4uXcdOYrX1TfOd1fcZo5XMYqqGHTF+N7mR
MkNpn3pbuWfpb5mXsU5ys+iytsn8cDqoPhF7klbIDcH2YmP592lHJpk71vAV
35t+xdZRoXpXbfut5ZRyAzYY66ZehJXGcxsvBytQv4S9IFMXq4ANxf7D8rAx
WL45DnuOKTE3/4C9ualeKPOKtjVylWOzsdn6Npcdhk3AesLH+enaJpZP9rlY
fRXV0nZAfmz5ZI9ir6bi4/jWNBY7z9eQuc1vNeZIfhB/xdxnlduxUdhw9RvY
OWVj2XuxCdnJPsZ+Lpdrwfei5dhBuVzP0ZCvyffQ90Tscbw3bVWpUjw3Nh3r
YW2rsZZUjV9CNfQ9hpfQbT5Fo42TK9OaDvE51EC9Pk3QVoE/bszX1H/GGhjj
sXh+vKJxlmHvUVd+PF5q2Lr8i3Iv8aOoJPaU7xDib9Ln+j7Mn8lOnqMR3aW+
C+8gf8kYPY35oXI8VcF78flyr8st4u+X68Z/iZ/mF9A262zOt8Vn8Q+lk3f/
B3ZDfaD2W3y77OQcrJHboV6Xhsn/wh/IJN9e03TyTc73ZyltlPmImhtjYzC5
xvzTcjOxB/lLeIH6NTw3zg12BuuL1ZarRX9iQ7WtM9/6OHvqb8bz4+fMdwpr
KFeRr0+HsEkxD63kG9LRuCP4NrSa70e19SulR/S9h59L5/mFVFm+U5yNOJfq
/WUGUHGcHyzLOH35Mut8DvuJqmDF+hbRLb6UFsqMxncbY6Z+J7A5sa/YWmwa
9nXsgz6LaQmVc26/xa6rr6RVlIP9iFWKsfg9VC0nyUe/7vhC413ISs5u9exk
HbGemjnJ+u7D9vMHqDpWhHW0ln5xt+g71VoGYY3ie8YnUW9+NvXHNvObaFY8
V9wJ8f3hHfW9jC/AbvIbqAlWjJ2M82ePyrKTb/Fxfp7cRZmlsQ65HenkeW/c
eb/xns/yi6hqdnI3xR11TW4+9m98q1QH24t9g13h11BdbF862au7s5NnjWe+
xn9Pt9U3UbO4j+S+w27xG6lp3Afp5H1cvrPvsf9l/Azr3q59sPYhdDjuP/oh
1mSe5+Um8hfk8uQqYldpD1YQdwR2jp8qX8jvop3x/dI7+rbQryXV41vJfGbP
qstMwVbEWvGj8e6xq/GtYnl8Pdm/sKzY5zhj/Bd0HDtG09Q/TSf31nnl0bjD
lGPiHpc/qvwn7jvl0nRyR+XH+1Fvr32tch2dxtqZo705Z6STMzI4k9zRcVe/
rRyhbUucAfVX9d2i3EpnsKcyyW/TPH5unIvYA+MV6dOJ363t0Uzy2xq/sV2w
gvhG+DL1i1g/5XBscyb57YrfsGFxn2Lb4t648z32Ub6LbcJyqQRbEGeMTvGT
M8n/BR/zo+gI3yWT3N8n8RFYZ/6NTHKPfsCPoxL+CTool88PMsd6/hk6jHWP
s4Ft5P8HJg89YQ==
              "]], 
             Polygon3DBox[{{1711, 773, 722, 721, 886, 1384}, {1415, 919, 739, 
              740, 920, 1416}, {1367, 859, 687, 688, 860, 1368}, {1700, 751, 
              688, 687, 850, 1361}}]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stLlGEYhvFXTSHb5ELQoCgw3RSYSIsIOmwq0IQ2LQXBhZEzpqVlB03z
lGlpNeNZc3I8QNEiJUEMWriqVRBI/0Krtm76vQbzzH1f1/fMzPfOzImG5I1E
Tgjhg/mTG8KSaTV3TPSf80JI6gm9RW7gbH4IanjrKSmPcm36Cu8R0nqbPMaf
Iu7iQnxPHuc69Eq+HRfpHbKcP8s9xPfxEbnFPdDP8d24Uz8pt/lPcRf34Uey
Kt4r91gf0l/KjwUh5Nm9hGfxiPxr55V+kK/Fc/q4/Gl3jxvDN/G8vGw3rYcD
dnC9uiC/2r1mdxq/xo0yn1vUa/l5/Ea/JXf5Cq9/H+8rfo+mmf9hb1jP6M/l
d7zl827jDF6Uddygvsk34Xf6nKzhr3MDeNT0m6vclGtX+L54VvMsniGen0u5
1otfmB3uqbzAj/Hdeo/5xq9zXXGPfyIvylKuWR/UZ+QvZypxpjN4LX6OPG9n
Wi/my/Cq3iW/2D0d7w2X4hVZwnXqZfwkPqwvy998tde344n4G8lD3jerV/Kt
OJW7/3OETMH//+s/FFFS9A==
            "]]}, {
           Line3DBox[{1291, 1690, 1555, 1870, 1503, 1323, 1501, 1885, 519, 
            1502, 406, 554, 1183, 405, 1422, 380, 1852, 1500, 343, 403, 1743, 
            1869, 1754, 1448}], Line3DBox[CompressedData["
1:eJwVy8kuHlAYgOHzR+jKWFNRibWpRKUaREWFEHPSxArRYaUhUeNvLjrszFO4
BYlL4AIkxEboypAQt9DH4sn7ne+ck9f3vWMgEkKI8io2hHMOGCISF0IuDS9C
uNAHu0y6zI86yGvzDzq8udRAhn3n8449871+c/9X/9BKun27trFrftJf/GaZ
ZtLsW/SNv/90x3lRl/hJI6l2TVrszbVuO8/rAnN85KVdt/sGcz1bzjM6yzQf
iMSEUKe1bLqP6hRf/bvTKlLsa7SaDfOETvLFm1utINm+Ut+zbr7Rz+7HdYy3
JNm/03LWzFfa782oFrJil0iZucj+VFedC3SEfHqdEyg1n2kf2eYcshgm3u6T
/yXmfXMPh5xwzBH/AZIbOCw=
            "]], 
           Line3DBox[{1324, 1871, 1556, 1505, 1506, 1504, 1749, 1861, 1325, 
            1423, 1292, 1362, 1824, 1361, 1700, 1823, 1425, 1365, 1701, 1826, 
            1532, 1326, 1627, 1770, 1817, 1677, 1507, 1327, 1508, 1872, 
            1755}], Line3DBox[{1328, 1744, 941, 1470, 1471, 1449, 1484, 1450, 
            1558, 1873, 1329, 1557, 1330, 1483, 1228, 1825, 1363, 1424, 1364, 
            1229, 1828, 1367, 1368, 1827, 1230, 1702, 1792, 1231, 1625, 1628, 
            1626, 1897, 1678, 1232, 1643, 1331, 1509, 1332, 1898, 1679, 1233, 
            1533, 1510, 1853, 1333, 1511, 1560}], 
           Line3DBox[{1334, 1845, 1472, 1451, 1486, 1452, 1561, 1718, 1846, 
            1559, 1335, 1485, 1234, 809, 1366, 1336, 1235, 1830, 1371, 1372, 
            1236, 1773, 1703, 1793, 1237, 1704, 1794, 1238, 1705, 1795, 1239, 
            1629, 1630, 1796, 1761, 1680, 1240, 1644, 1719, 1890, 1512, 1337, 
            1681, 1241, 1534, 1818, 1720}], 
           Line3DBox[{1338, 1474, 1453, 1831, 1489, 1242, 1454, 1473, 1455, 
            1369, 1797, 1488, 1583, 1487, 1243, 1721, 1829, 1370, 1339, 1244, 
            1729, 1798, 1375, 1245, 762, 1246, 1774, 1706, 1799, 1247, 1707, 
            1800, 1248, 1708, 1801, 1249, 1709, 1802, 1250, 1762, 1886, 1631, 
            1683, 1682, 1251, 1645, 1646, 1891, 1513, 1685, 1691, 1684, 1252, 
            1862, 1535, 1340}], 
           Line3DBox[{1343, 1479, 1462, 1833, 1403, 1443, 1569, 1442, 1571, 
            1876, 1723, 1570, 1401, 1320, 1402, 1788, 1722, 1400, 1319, 1787, 
            1399, 1271, 782, 1270, 1812, 1713, 1269, 1811, 1712, 1786, 1268, 
            1318, 1785, 1267, 1317, 1694, 1784, 1771, 1266, 1316, 1648, 1783, 
            1763, 1633, 1635, 1634, 1887, 1523, 1342, 1521, 1746, 1819, 
            1522}], Line3DBox[{1345, 1847, 1480, 1463, 1409, 1445, 1572, 1444,
             1574, 1877, 1725, 1573, 1406, 788, 1407, 1344, 1405, 1834, 1716, 
            1404, 1275, 1814, 1715, 1274, 1813, 1714, 1790, 1273, 1322, 1696, 
            1695, 1900, 1272, 1321, 1649, 1636, 1888, 1637, 1639, 1638, 1526, 
            1789, 1724, 1524, 1525, 1820, 1747}], 
           Line3DBox[{1346, 1748, 1815, 1726, 1276, 1651, 1821, 1347, 1650, 
            1348, 1688, 1277, 1772, 1889, 1640, 1697, 1641, 1278, 1791, 1717, 
            1816, 1279, 1410, 1411, 1841, 1280, 1412, 1413, 1835, 1281, 1349, 
            1408, 1350, 1851, 1575, 1495, 1496, 1464, 1482, 839, 1481, 1351}],
            Line3DBox[{1358, 1878, 1576, 1357, 1540, 1286, 1539, 1867, 1356, 
            1414, 1355, 1285, 1837, 1418, 1417, 1284, 1842, 1416, 1415, 1836, 
            1283, 1354, 1652, 1353, 1822, 1765, 1282, 1352, 1527, 1866, 
            1727}], Line3DBox[{1446, 1844, 1553, 1447, 1360, 1438, 1582, 1698,
             1843, 1552, 1530, 1531, 1499, 1554, 1689, 1899, 1699}], 
           Line3DBox[{1456, 1850, 1253, 1458, 1475, 1459, 1373, 1491, 1584, 
            1490, 1254, 1374, 1426, 1803, 1728, 1255, 1730, 1804, 1379, 1256, 
            1732, 1805, 1381, 1257, 1734, 1806, 1382, 1258, 884, 1383, 1881, 
            1259, 1385, 1807, 1736, 1260, 1387, 1808, 1737, 1261, 1389, 1809, 
            1738, 1262, 1739, 1810, 1391, 1263, 1741, 1854, 1514, 1392, 1264, 
            1764, 1855, 1647, 1515, 1687, 1692, 1686, 1265, 1863, 1750}], 
           Line3DBox[{1461, 1849, 1478, 1315, 1494, 1441, 1398, 1567, 1568, 
            1875, 1757, 1396, 1314, 1397, 1782, 1742, 1395, 1313, 1781, 1740, 
            1613, 1312, 1780, 1390, 1610, 1311, 1779, 1388, 1607, 774, 1386, 
            1603, 1832, 1711, 1384, 1880, 1599, 1310, 1778, 1735, 1595, 1309, 
            1777, 1733, 1591, 1308, 1693, 1776, 1731, 1587, 1307, 1865, 1538, 
            1380, 1519, 1306, 1857, 1632, 1520, 1341, 1518, 1856, 1710}], 
           Line3DBox[{1465, 1621, 971, 1420, 1548, 1577, 1547, 1289, 1860, 
            1545, 1546, 1419, 1498, 1497, 1288, 1883, 1622, 1623, 1542, 1544, 
            1543, 1868, 1287, 1359, 1528, 1752, 1858, 1541}], 
           Line3DBox[{1468, 1848, 1624, 1469, 1421, 1467, 1578, 1466, 1290, 
            1884, 1550, 1642, 1551, 1529, 1549, 1859, 1753}]}, {
           Line3DBox[{748, 1899, 684, 1202, 1203, 1000, 1150, 1885, 750, 686, 
            855, 1044, 1826, 752, 689, 1792, 754, 694, 1794, 758, 701, 1800, 
            765, 710, 1807, 887, 1125, 1126, 770, 1882, 716, 1128, 1129, 1127,
             774, 723, 1812, 781, 731, 1814, 786, 736, 916, 1841, 938, 791, 
            741, 922, 1837, 923, 1099, 794, 744, 1061, 1860, 1062, 1034, 1035,
             796, 746, 1848, 972}], 
           Line3DBox[{771, 1856, 1013, 1012, 1053, 1052, 714, 1879, 768, 1184,
             944, 871, 959, 992, 1850, 958}], 
           Line3DBox[{777, 1016, 1819, 1015, 821, 717, 1857, 527, 1014, 468, 
            469, 1586, 323, 872, 321, 1584, 466, 267, 291, 957, 1831, 991, 
            956}], Line3DBox[{797, 1070, 951, 1869, 1069, 1068, 1040, 1041, 
            1001, 1861, 1043, 1042, 927, 853, 1825, 857, 854, 691, 864, 1830, 
            930, 865, 698, 762, 707, 1806, 882, 1116, 1190, 1189, 1894, 1193, 
            1191, 1192, 1117, 883, 1778, 720, 778, 1785, 728, 1223, 1900, 
            1224, 1225, 1226, 1227, 1889, 1166, 1165, 1180, 1181, 1182, 1822, 
            1026, 842, 1028, 1858, 1057, 845}], 
           Line3DBox[{800, 974, 941, 975, 976, 953, 856, 955, 1080, 1846, 807,
             1082, 808, 1081, 863, 1829, 816, 867, 817, 705, 1804, 873, 933, 
            874, 1106, 1892, 934, 1186, 876, 1111, 877, 1776, 1215, 1216, 
            1156, 1159, 1157, 1783, 1176, 1177, 828, 1018, 829, 1789, 1020, 
            1054, 1021, 1815, 835, 1022, 1024}], 
           Line3DBox[{804, 1004, 1853, 805, 1005, 1171, 1890, 811, 1170, 812, 
            1155, 1886, 1153, 1154, 713, 1810, 892, 1137, 893, 1775, 1199, 
            936, 1200, 894, 1141, 895, 1781, 726, 823, 906, 824, 1788, 908, 
            831, 914, 832, 1877, 1095, 1094, 915, 969, 983, 839, 984, 840}], 
           Line3DBox[{813, 1818, 1006, 814, 1007, 1173, 1891, 818, 1172, 819, 
            1009, 1854, 896, 1144, 897, 1201, 1896, 937, 1107, 898, 900, 899, 
            1782, 902, 825, 907, 826, 1876, 1093, 1092, 910, 968, 981, 833, 
            982, 1847, 834}], 
           Line3DBox[{841, 1866, 1055, 1025, 837, 1023, 1821, 836, 1179, 1178,
             1163, 1888, 1164, 1162, 1222, 1221, 1784, 1220, 1219, 719, 1777, 
            881, 1115, 880, 1188, 935, 1893, 1187, 879, 1114, 878, 1805, 706, 
            870, 931, 869, 1798, 697, 810, 862, 809, 858, 1078, 802, 1079, 
            1873, 801, 1075, 954, 851, 952, 1074, 1871, 798}], 
           Line3DBox[{847, 1101, 971, 1145, 1031, 1100, 1030, 1029, 1867, 843,
             1056, 742, 792, 918, 1835, 917, 737, 787, 1834, 912, 911, 732, 
            782, 724, 1779, 775, 1133, 889, 1134, 1135, 1839, 1132, 1131, 
            1130, 888, 1808, 711, 766, 1801, 702, 759, 1795, 695, 755, 1168, 
            1897, 1151, 1207, 690, 1206, 1205, 1817, 1002, 799, 1204, 1213, 
            1073, 1870, 1072}], Line3DBox[CompressedData["
1:eJwVzTEvQ3EUhvFzi3SxiJA2BhFLWSR8D+kVi+jAZWbqUnwGq4Gwl0RS3Sxt
0kkstqLpIhFppOnQzeDX4cn7nPec+78r2enOSRIR23iaivhAE2XcY306Yisf
MchF1PGp29X1ZIoNfotfuweUeYo7u2XfDXWPqJhXzSPeRMLH8hl5/ic7qLrb
Mx944xCJ+UV/xI+RoWQ/o3/Tz/NZ/s4X+Bzv8wJf5F/8Sm6a67KIb13NO/u6
c3mGa31LtnGJJfOPuxKvuLuQa7jRNyb/Qxev+Aeyyyo4
            "]], 
           Line3DBox[{966, 980, 1833, 967, 909, 965, 996, 964, 1091, 1875, 
            1089, 1090, 901, 1087, 1086, 1185, 1874, 1084, 1085, 1047, 1175, 
            1174, 1855, 1010, 820, 1008, 1046, 1862, 1045}], 
           Line3DBox[{1019, 1820, 1017, 827, 727, 1161, 1887, 1160, 1158, 822,
             1212, 718, 1865, 772, 1110, 875, 1112, 1113, 1838, 994, 993, 932,
             868, 1803, 704, 761, 866, 815, 1083, 1797, 990, 1109, 943, 978, 
            942, 977, 1845, 806}], 
           Line3DBox[{1048, 1863, 1049, 1011, 1051, 1050, 1864, 1088, 960, 
            995, 961, 903, 963, 979, 1849, 962}], 
           Line3DBox[{1063, 1859, 1033, 846, 1032, 1060, 1868, 1059, 1058, 
            921, 1027, 1836, 919, 739, 1791, 789, 734, 1790, 784, 729, 1786, 
            779, 721, 886, 1880, 1119, 1197, 1196, 1198, 1895, 1194, 1195, 
            1118, 884, 708, 1774, 763, 699, 1773, 756, 692, 861, 929, 1828, 
            859, 687, 850, 1824, 852, 1103, 1102, 926, 1038, 1852, 1039, 999, 
            1037, 1036, 1067, 1844, 950}], 
           Line3DBox[{1076, 1872, 1077, 1214, 1208, 803, 1898, 1003, 1209, 
            1210, 696, 1211, 1796, 1152, 1169, 760, 703, 1802, 767, 712, 1809,
             890, 1136, 1138, 1139, 1840, 1143, 1142, 891, 1140, 776, 1780, 
            725, 904, 905, 783, 1787, 733, 830, 913, 788, 738, 997, 838, 1851,
             1096, 945, 1097, 946, 998, 970, 1098, 1878, 844}]}, {}, {}}},
        VertexNormals->CompressedData["
1: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
ENXn/u6CrU0ph1H/6SOjKKoP3jd2MlHfam/bpQHhW+TddYPvtltK4cfjwOzb
bl1wnvlbntoP2077jM73QmedNNo/WLp0auCZeOBbVhjVzCkl7idTN6SY/48+
/Ic+/NFXkj6TPD3wBUh58iyUul4KXYGv1/Md7IJUfjnR7s4c2Bm8Qg3XN/jN
j4m4Xo/jO9cNBWZAxex0nzUq5SToXhKPT1on9B2aJ4L6GWZvtHB9bwzlC6H+
LnG5UX25MfuvU32ojA4c8ab6vuZ+6koX02HFrMeDR1LKYGDtpJGcxk7w3KK4
i8YnqMEGQ4zn7MorhzE+R6Zte1FwvAiWCxU9X+lVSZ44rW91Cun4Wx/+Qx/+
6I/LX+kvqVII8bENF1I5FZCsfK0040sHxA6UjJ7TDdc9NcJzgZRrH0fP6dYz
TszA/ZOR5yEzEMe+9fz8iTgmoCdWfjKtHKwFhyf+kq0Gud2b3WbKtIPl/S+9
uK/S9GVHMOJk4fuWUTxccGlRcodVLYSYWB5v9akHfkbQPn2TFthQtzOf8hOQ
KFsphPzkucCTd8hPiibnAuWfwKugmEz5J3Su3OCC/LOuoV4T+aRr2PfTuM8Q
JrmaIG989tEzWr15j37Jy52pn6WaQLy4RNBdqB2Wy4pZUd4LBzhDpZT3gnRA
Te1dynun2D3WQ/7sd+ulIeXPcCFhly/y5yap6jfIz2sKW25gH+T8Qvk38vP+
DKWPeC7GTPE1xPcWBNY6teK5mEPMPB08//p5YaUtnu/kBEy/i+c7yYfjZ+D7
MOGGCXb43pTIp1cC+D7MLV0mE8/vrh70csb3ECwt1N/i+V3hnEfj8b2djFdl
H/B9p+uaXVb43k6JW48Vnj9+bA3Ww/cH/DorLuP5Y3OixlPcR/IwXnsceSac
Fx/tXx7lfZiN+2kOC2UMkV85e1a4IL9612fzHd+n6s/MLMX3gu7dDN+D4+c/
eNqK7w9sr9sJeO7ZwKuojeee3pIZYriPp6Z57jLyKEG3C1rIo/I4O8fh+2DK
Rozz+J7PBN35gjiv69UfY/H9hwNX8xfjeaXK/rxQPK/0Xf5eGPcPh9Q2n0S+
pJa5ZDbyJRvew5H4HsiEryxLPGf8uGtZG/pzTsMPKXx/w7Hn4E08Z3S9CF14
zuiyUsUK9y2V3NWPIi9a9jqOH/ctT92bYIz7nJOlGXeRn2Sd0ZdGflI1a0gZ
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
oz3jxG7MQr+tVAsac0u9DuT5q4+h33pu7b0tOZ5FHi6NX+GwlAUuxoKCbzXq
wObhTT+M54iU0GQabyDa1zj7X+IZ/iOe4T/iGf7E86F45VcYzyuHXN7i+HOL
Amfi+HOFQk5hPIP3iUIaz/DhSsF0jOdtvRbnMN8nVyxyoPkLycEdV7j5Lv9v
94sXzjeNx3yf/XnrCdS/dIbji/oCcWJ2mO+RZ3eso/kOQ0n+apjvjPZdiZjv
7plzcmi+g4PyKj7M97XZm4QQ30w672hSvIKyO8OjeDUyMrJqFN+494W9ufeF
dU86qCC+WefqqaF+k/n8a6j/XmzCZ8Q3ueh58hTfQCuK5yviG7V/5r/d/900
5aA94m1OEvymeAu/aiYGjeItDw/7/9/n/c29z5sbfbYnmuL5mSCe40mZLMjQ
utE+k+I5xf821D/Nxf9ELv5vXLLyqNEFNmgan23jecchYX1u5d2sPBx/Ntpj
y8X/ZVz8/56SPuM07Z9XxQp0iJxnkHPijr9+DbLp+DxG6Id1f+H8hCNTwkUe
FEHRiXzTD+fryfKXsVF6jW0wPDIyD9crnYvPylx8DteQmyFN1+t5v63Yy1PV
JG58/5jwiA4YbuObVKJXCWMlUtn3XerJ+BPQ7X2/FVSd3qZduZ9JDHUThH7k
VpENYuvDw3NG4yEH49D8L1x9aNO7cfAigXVE64r4zUryK2tBboJrJ8jwPz9i
GlcEFlfO3TlvVE1a+IUj+vraoS9/Xf8Op2qwUu4V7amrJ/ey12huTmwBCORp
L7zaRH56/Sq7I8cg8lH7AgVimXDkwqnJ3WmfiY9jh3LnnCoStGhO4ZBNB5hd
9tBi0nzZ6TfBX0uskgymjGV+C/rz3YM7/4OTa67aZhyj+T5zmRLH61w5KemS
Pb9qqBPYu76/OHAhF2yMRNcM0r7t2pS89zekOiHFzPCn1twyGO4bI2JwuZq0
p9EexrQd3MsZ5yuUWomT0oooKd5I0qXoO2dDMhP4eC6M4qEgFw8/cPFwx+fL
9tVlCbA7Lr528n1TwpYTaCtlfQXxVrGCtWM4ZIFma2wWH+V9BlrP5sUUwExf
ta6Mc3VE77Sox+ewBvDIDcgYc6eZOy///8Exr3u9zy98eQOii3ZPtBxfDpmZ
Ynskp3aB8x5bEYP12ZCWfrnG0rgCom1rV5482gkVsyrlXeSKoX27epyoyRco
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
+3DxEhAv7wHi5b1CvDzD3fOGqHdySUjKu5f7f3HJ71D4sCA487/OcQeeV6bN
SUEzeu411+IOsTzqlx43Atb++AB1siMTxCZxyYvCoWtiZ3JJt8awwwt982Gq
cDkPt648uA+3jivYh1tXjnh2ZYhnNxTx7FLSLcwEu7lQkHh0Z+VvLrRsvTt6
o3kmfBYtEqf/CzYe6btYHju3Z+5d9r/3Jn+WouuH4il3ouj64XXqvTNs/cUX
v1ixvPSNNpbPWV66YOWXQZ+mJMMaPjy4xYgHdwz9/C7o5z+Bfv4deF/G4H3R
x/syPHHEXEH6/hbPyAwfVlpF4uF+9fJjHDhbv8+Oyk2i6/3UhspN8vFVzLRz
VG72h782CunnkL4a6WGT+/zkZ7b0+cmzBvT5yQW6bglJUzt2XerlTy1l1ST0
k6gp8590905TNn9UQ+zUl45MKqTvxKFtGu4aFSBwu09fHY366gfUV8chbtpA
xE1TRty0PUN2p9BzhEALd3N6jqAx7/Yido78uLFfkM/T+eitSM/nwx0bjrhj
X/rBI9sbp+VWxqkGB62o3S9/ccgjBwWXZfLl0OD5NYj5/TynPYo2vVtDrnc0
TGZ+vOqb/gnMvydRnnqf0Z8Ii8oyeqjHGWByXFbGbgWTvxmJBU1M/vqNXuUS
R+0u//bliZtNuaSQo/112skC0HafaMD8mWcCX35rl+GQ1V4DhW4aVYCPycKl
1L4j8vntqdS+I/rZnM3Mvhsc4hVQNpJDKqOX/SNyjkPGvt8fsnpuKRyLd9/K
/JY7NX/XsHm+Ka9rYH7LDfWW7k0uVK/MX7cqnZ5j6nPZafOv5cA/6JeQQL9E
DvolGuv74j4dsX1xn1OP++I+l6ebch/nceF4pmwFy8MfUmp9xfJgFt1P+YEN
76vh6zvHzcd0asiH4XeiTK2qwMUm09/pcg30eOSafcuoIVqzh1bLeFeAgeuI
nUzvvfYwbCXTH2IdrWKY/jDVMcdUfQq1a13+6WxeyiFH1yRcWx9bCqno33uK
/j0t9O/tQP1cC/XzC6iff14t+9GC3uuFDWNepD7ggqWj3vGbL7Jhxo3bk1lc
oyu5sYbp4VpbF5syPfzFqbgZ9H+J/Pr10i1LOcCdNe86+98Ppu2twkZc0hjy
KeTXRi78jp54v9kuD6qO9HJYX5ezA7z3s74uHaePL2f+kNqQUDf6vSQydMF+
+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
0WX393jhgyZ23/cP//WU5WEufmQRz+778x1Jw9k6J3L0Uli8JkZhBC/f1WbY
pCK2/9EmchuZv7QyeNshtv8v0D/wg88/AP3kAzuiH8CMLx/4DdqJMWgnpqKd
WKQnvorlszVWzb/I8jbTvW6LsLy4VFOnUnbfb2aarmf5pWJKXdvZfVfkk+9H
Ub6/u3LzpU/ne/IoeX60zugisme13D+bhFtgtGHVRBv3OJLc4laXkp1P9kx8
K9t5/3/H8ZNRHytCfWwHynE5lOObUY4vL2n2uKSUTT6tPTxTZVQRrC2ds3+R
UDPU67/u3cVJJpOmFDhvupoPjosin76h8qhmYrX4bk4yvD9izqOP+SbJox8Z
6XCezgNtVwxnsHlGDv7iwuaZt1BaZ8KNQtie5xzjHlwKoweHvDpZ0AALZ7w3
2K5dAbljbku1eFbCq0fDR206VQvT0E65jXaKEdopKxR/ll26mE9Cbu1a/mJq
KTgb3Bk2blcjJKR6hZ8NzyA2iupJ8eWF8KjKNWj+uWbwcfMT6nB+S8o+pEod
TMmH6WuyRJWftIDJQJe5z6/ng9uKPSF2eqVw66uyo4RtI7zDfKFvfPlC6zBO
4YdxihsYp1CYvXzzHYX3xMuoQuekcBGIi08S3De8BazWS8j4KKQRsxKV5Yoy
pSAbd+FKy58mEC7vMKd0UK+8PZ/SiXKUI49ecEN+E6tTuMBXH6TU9fMynR80
74Zo0vnJJqMmATb/1wfSj0Yp0Xf1wW6zkN8l5JSzbO7CiU1wDO9RPd6jWLxH
q7DfRTD2u7iM/S5unmmYRPeBGNQvDKT7QNLvSO1m+3C1sGjnv9Xv3DxVZEb3
EwrM9EfQ/STHVHtF2H7W3PiURfcfcjYFxdP9J8oj5t9m+//GNVHW7Ug+vG45
K+azpJSYzFaZKOfYCI6Gb+bRcyebEqOH0XMnJ9PT5Ni5fyuYMovyCVGIufiC
8glpaMt5w/jk4sXNxxl/NsvdV6N8RY4+TOLx55SoAB5/2i4O3Uv5kMzbcYHH
h0b9yKkJvu95fCsUoMIbzx3bHM7Gv/tQwuNbcXNXVTa/br6HK5v/llYdML6t
PxT2nK1n8WSLGLaeZRZlTv9Wz2I5aKgzvY/QFB9US+8jhIQ/kWH3cV85Z9O/
1aF8ubu5jt5rsOhRfkPvNdgMSA5i95q/v/dQ1Csuej1W+c+6Ek2sK4kXe/T6
zqkqaPIUX31teA2J6vJauzKjGjxL70x4RPWlGOJ9cQ/VlwqLD4x90pLxX320
xqJc01jUG7mayrW1MXENKVSuLZS1l2Dj//azGoX9rEZjP6sNB9T96f8Sk/I1
u+j/gvKvYWbsf88Lr2lk+VROfPlUd4b49uQPySGSuT13q4QqiXeq7a3HAxrh
O/avXo79q3uwf7XNqhnKBUNyYKV2ZDAbn9eo6sfGSw1Unf5vdX822EdUg6+P
qDXmwQLmwcZjHuz9kMDgQMgh82odtqoXlZAbo4dlKU1p+q98m0uYb3PpnPfA
f/O78uexmGAei0D8qWg6P2ybNH0HnR9OaRensvn/9n2Vwr6v47Dv60WtZ91s
fzbcbAij3wsO8x77s+81OmqoxPbhmnDQQ0Z/Yr7Ph9GnY9+Pqs19fT+uYt8P
rEeGKXx+DGXsq9Bo0ddXQQv7Kpzvp0+pitn1+n+rJzo7UKYn7D/iaK4YR9MV
sPfV0awjPj7Bb7cO4ZKi0l8Xf4umQfuXXSn2urXE+Mn0y/Z0P0U5Ade1hiaD
Gsa5XmCc6yLGuca4ymbS8UCeaZyj42FtjWkAGx+1QMt+v2Yd+E2u7FAewoXH
9RLnuXT+e83OO5foUzt66AC3Qjpe5dWy+hsNH+CktF7eeP1aoqWiPLSH/u+t
zS6ljH6Ir49NHPax+b129GGXE+VEtGNx24LJNcT5xjfpcQEcmM1Xv+CD9QsX
1N8YMfl1XfiMOHvHVoacl2bvWK/OCvcapRpov/XFbyS1b5Ia9c8OyKyE6dY/
tmtSey31BL3B1F7L1nXXHRWaAQFiztZ0PFlwFCLoePD+c4433hX1PTfU99xR
3zOzHjdagfWnymoZl0z1vSSH5R9eR2fB+AVjHtP1g+JGta90/WAyXVWYrb/e
+kYwu6eH3wVasvdB01dnM7ungzBOHYlx6qMYp06Se+1zgeqlZeOFK69RvXT1
6poX336kQhn2L0rD/kU+2L9orNF7Dfae3yrMGM3keGPOKhm2D1/XHy9/Q+2g
hWuDhpb/4cKVtLHTJvtmgpqc7jP2XsXdSbBm70bkJisjtp4DXgN2sP1vNYn4
w9bv3xIyjK2fvx+sPurz0hiHXYtxWGOMw+Y+v1V0UJBLxD4dh9CNdWROUKTR
XucUkA2ek7ragQN/TC72LvSqI/+4bWj9pkTtduw3FYH9pgD7TR1H/2Qd+ifz
0D+5B+OYQhjHXIpxTP4+Swuxz9J7vjijPcYZHevrKug6YZnl5Pl0nZCc/ceA
rTMWcdM0ETftMeKm2faTf37k6OjB/1ZP+gzx1OpH9uGp3UU8td4/EPKfdXx/
+5z0Dj/Twe71Mb56vbABU98wvprbm1DN7oVU4VFxdi5//fy+6OfXQD//qIcn
lhr0VJNTE68N2ri6BqYWfZikPagKbqF/Ph/9827on/fop49HG+bbfMF8m2TM
txm+0HsrnR8sah3bzVfXkD0G+rz5/9ojm/nskYvYz/kS9nM+hP2cL6O/lz8O
dRv7KrS+7eurUIp9Fdywz7Mn9nkWHdnX51kO+4ooYF+RrdhXRA/7fKphn88L
2OfTt+a6Wb0HF9rvhsqPel1Lvs0ao7KiIQ30Hgjb5JrnELuUKRoKzSVQ7L8m
5JZCE/wvjWfEaA==
         "]], GraphicsComplex3DBox[CompressedData["
1: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
5I2TffX3qi/7Zd6ju175A3zvP69/886ug8of4BPz5ikzM1j5r/il3pemxn/h
vK8HfF3Xcyf6HnXe1wP+2r9thk1a7ryvB7zUB0+lrT/vvK/H7cEf7h/8eTQ9
GYbph3/M31ui1eocsQFnFb81b9C8GTlX6vdC/w1y8d/JJ00jeQDO8qB1ECQP
3B7f++j+nXzDU7IuMC7wp2ndAf+G1h23x/fCTiaLHsC4wFNILwFvJHoG4wI/
SnoJeCX3uwbm0f07eZ1T9UavHbDQOfcFPPXt0zN/OeK8Q6B4zhnvtdul7ykY
bo9xvfqHX/Z7UtzxxztlzVs3F78O/Xu1R97rmS5DIttP3Wfr+/Lghu9Fw/kN
2OEFYZ82Hx4eZ3FOBvZwgrynifMwwE/J+5s49wL8M3mvE+dbgBeV9z2RNwSO
90BxDgQ43g/FOQrGcW6B+0F+DTjeFUXdP3C8K4o6fuB4VxT1+sDxrugi1764
c64O54Lgrw3vtGlmzJY4rZ8AfqTHtqFv3kmyOOcDfN4vg59v1zQN/oHibXo9
M/KqTbc4DwP8eP6vbq6dlWGRfwSe+9CQq03upVucowD+U+u01RtD0lCfofj+
+ov6DaqSYnFuAXjMxYA+PwfG2+a+/SHFE6uVvjv53lb4E6p/nhgxd8KKr5Ms
zhEBP5i85fzZxajn3q34onI9R3a+k2ZxrgP4gTVJg/9YmmJx7gL4iP6hIWdK
JFicR4I+ecJ/fPvbyYlW6uQUf2vY8xVTO6VqHTzkv/223PPObA3Xcwicz0Md
P/CpLVZXzzfiAM47GV4vqGsH3vpg3M9ndq7Vcxdc94RzDsALyftxSwgv7sYN
48sJRz+oUwc+VerVcW6E661w3gN4qfllS/XvEqfnKICDz3JuRP2fY30DX9g/
N0bPq3B8hnpr4LlETlBfzu3vda91bNKD+AfyFp35XuE6e6n4/nHnH8Q5kIfJ
me8J7rKoO+c8HM4JsJyg3p3zXjjHwnVnODcCHPxfSngJN6725WnBQwhHP6jv
53HBf9iLoSJXOB8CHPKJumrgi0Q+EbcwvlviFu4H+SPgtsnPF1+svtV+I/v3
XH+H8yewR31kfSFviDxEXL6kNufK/Kn14lgvz/TNWPZVDucdIuDJYjdxfgby
/Ibc2/Yh4bjPDfum6OeHPya/Mra3vmOl8lx9eIGN2/6XqHXk6CdB3qU64YFj
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
8733/lrzfIr9PxZaaGk=
        "], {{
          {RGBColor[0, 0, 1], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnAf8V9P/x+88V4oU2qRSihQpQiKjMpIUhYqyFdlEslK2UhIiyQrZIzIa
EiKjssoKyd4j8/96ep3f4/94dHq/77nnnns/Z7zH6/0+32ZDRxx4UpYkyTll
kuSij+m/20UPEN2lSJIL0ySpL3q2yhuqv5B6te0m/lvRo1R2F/+d6Ay1vU3l
aV33V/v5oieqfWPxx6j+J/Hfq4xRfUfRX/XizcQ/I3qz7k9VeVjXv+m6meiz
oqv0bHPxq0KSvC2+vvhB4m/T84+LHyJ6iupfE3+e+G565hv1s1jXG+i6j+i7
quuk72vJt1dJ0lP8EarPRLdQX33U/m3xl6hcpzZbqc2eeuZH1b+qdoNVd57o
lqJ36l0fqH6gaFe1WSP+Jd27V9efiB8s+qLos6p7SuVQXS8QHaFn71CZK/4E
0X30riHic9Fr1Wa0+Laqv1XPTlN5Qtd/qP9N6Ef0YJUjVX+xrv8Uv6noHNGD
GCuVWioD1ddGql+m/g4v/ez74juL31D8UvE7qY97xJ+uch396nqE+Llqc5au
7xV9X99xl+r6iF6vusPU5jRdP6LnB4hfo/pvVc5XXTvRnfVME/ErmXPxI/XM
LNFJhb93O7X5W3Vtxb8g+o/K1uIX8Zt07yLx24r+q+t24l8UHarrC8W3zz0O
W4pfILpWfR7KXKj/nzP/3kdFZ6jdHPHHiE5Qm3VVd4Ho7yqHqL6N2h9Ce5WJ
uu6t62NEK9FLVabouQ6a98vF3yh+a/Fd9FvPUPt11e4a8aeIP5VvVJ+nMTdq
N4+x1b37RduqbKq63pXnkXp+wwrVjVD7R9kLqjtZ/Emq/zD3WD0tulD1bMTL
VFqKP4fvV5seunej6Dui2zBH4l/Xmm2iNnVSf9uDqn9W93fSe9uq7gI9O4Hf
LH60+CvZ12ozX212VJsFrBP2muijKh10//m4f6kfS5/se5WDuafn9hPdQ797
G9WNUZ9XqSxjjkRfEG2n+nqp39tN15NF3xJtz5rNfN1a/Cjxl4jfQvdGie7E
/lb92ao/V9ddU6/DOuLP1b0fRKfyfn3fvqL76vs30f2RiWVBe9XXFv2E+dX9
e8UfzJipnxtUZun6H9Yx38/aUJnEe0QvZo2Kbqs+H1bb/VU+1b2Nc6+xD/Se
8eI/Yv5Fjw+u/0ffNV3XDyGLRFshH5kL0R/1TD3VPy66va4fRAYgU/SuddiP
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
zqb8H1Y279o=
              "]], Polygon3DBox[CompressedData["
1:eJwtm3fg19P3x1/r3rcRTRENFQ1bsrUzSkalJe20s7OJMsqWLVJ9K6Psvbei
bEmikCiEjB+K+j0fPV9/3M/nnHvuva917xnPc94NB5/a7ZQsSZK5eZIU+j9I
/+vp/99qM0Ufr86K6P9T6yr6ppgk22hCY/FTRJ8SkuQ90Vto7B/iR6jVlvw6
jR2kiU+Lro1c/39Xe0v9I/S/ptpVoqcxT/K30iQ5VvxktRqSHau+Jfr/nPit
9f888c+Kfkzjq2lsd7XvRPdTqyXZX2ozRO+l6y+SbLb4abq3VzT3H9GXqv0j
eoX6zhC9j9Y6VvfXSHPOFf+I2gHqO0HtPc2/V/yXkj2l8Zdq3ieim2v8leJ/
kizXuD3ET4t+njfF/y26ieRdJf+M64rvrpaIDlqzm+hhWqeZutar/U/0BM2r
Ivne4t/W/1TzV4u+VbLdtX5LzflMc/to3F7iz1P/IpZU3ynq6662UPTRmnu/
ZI+IP0p0J7X7xA8Sv0by+ZozUPTb6ttB/BNqN4n+XX2HS7ZV7vv9Rq2R+Inq
76/rvZ9ZPlz/X1ffRrUTxW+n8Zs0doH+b6+1HlG7TnRb9X0vepPGtBYd9Dw/
i54q2Z5ar7r6bpB8d63TUvwM8aMzrzlS9Lsa30ryGuI/0pjWmtdD9DdqN4p+
MPN+uUVj1oq+Xn0niP9a7QbRO2p+e9HvStZO658q/n3xF0pWQ/wrWnOoZNXU
LhP9hK75VTl3N8lH6/+r4v9V6y35mOD3XeFdaWwhvpL6vLTgYIiP4h8Qv6/4
b8Wfre6Wmnu8+AfVv6XkDdTeF91S7TLJTxb/G7Ta4sTfcAJr6Bofi35Rffdo
rd3Ud1HiM/ms7rmF5Islf1n8J5JfpOtEzpb45qL3kfwjyZvw/iRfoLav+E+1
zoG6n3Ea80/qPXIx50VtvMYOVt8voodJ/rPot7lH0S9rXEP2h/7/rXaFxizh
fakdLHoPtYsT6wT2zB9qR4jfWv3rdS991baUbFv17aV7uRh9Iv508as1pqb6
DhG9iD3A9xG/s67/oWT7i18dvP7u4gdXrD9Gauxxic9cV62/UeMLteNF76dx
EyUbKn5d7u99ssZ3UN/LoleL/kX085LvKPnd0fsB2a+im6nvQsmf5PnUt7f6
PtTYncS/r3tZKvlY0SjNz9l7kqeiP1bfWsm/E71G9PdqO0g+Lvh98d7+T2Mr
WnOc1svQaaKvUf+X7Ge1NqKP0ph1kqdqR4g+TW0Xjb1dY/8SPVNtC8l2E7+f
3sdd4odIvi86Q3SP6LVHsl907aniB4vfRfzNop9Sq6H5B2n+AZo/Sv9/E/+7
2mjRp3Ed0X+rnSH6QrVC89dp/gWie2l+Ln66+Ch6X3RYYp32qvonie8sepna
ZNF3BX+bhzX3F43/VP93xp5obKbrd1DfkRwj9KL4Luw5jb+b9UU/qvkXamwz
9Q0UvbX6zhU9RvK6mrNBfedzrxqzTPT1kr8qfpj410Rvo3aB+NP4Jrnf4eWF
zz/vtqI5wyRrrL4uFevwNwrrO3R7A7W5mv+g2tka+7famannHBf8TSdq3Y8S
f+s/ecbM72CR6FcL30tftbty3/95mj+DMyX6JbWBkh2v9gz6ubA+HKP2jug7
tMZs0T+pjdb93atrnCZ6J/a76G+1ZhfRXbTeG6KPK2xL7xN/Qu5rcm2+Gd/v
vfIs9Nb/F9gDuenqnG3xi7XmUZr/icZMF/2i+gZIdozaE6Kf0f8dJOum/8+L
X6n5nTS+jfpeEf2p5nQWvxR7HGxTsIXHJ7Y1u4l/Hd3HGZT8mWj98zO6W8/3
qfi7NL6Oxh4pfl20DerIeY8+o2M19rXEZ/c40TO5ttY8RnPWFT4LO5TzfwjW
Bfuo7zTR9TXnPvFtsZMV78mLctsI9mquNkj0bbnte3f9r6vxZ/F9RP8m+bX4
G6J3kvx38WO4NvZOdKr1Joi/nz0p/i++F3tX8qOwhWrt8B+wlZr/q/hRqfta
iW6u+S+J/1V8FdH/qbXS2Js4M5JX131fzP2IX1P6XIux94l9sd/VNynxPeyk
sf8G695fNaaRrrdB47/MbDPPQabxX4jvzvqMl/wg9V0v/nz2M7Tkk8X/Ifrb
wrpkO/S81vtN4z8ofYT5oqPGfJz5TI8KtpmfiD8qsS1dpXntdW9fadwhmv+Y
ZFU5S/r/NPpW/W0kfxabxL2pHZzap5ub2Y5hz/A52oneRes/JvpbjZ9d6ucD
xF+tse+KPhwdIn6F5B1L/2eV6BbqWyL6Svws0ePxb0TvqvUeF99fYy4O9m+Y
u7f6FmPLg/VPE63VEXukvms0d8/UPuL+6r8385nmbDfSeg9L1lNrnKe5DcU/
JH45/p/4t7Dx4j/mObXecP1vIv4CbJLolySvl9qHwJf4QnxP0VW19mEa34br
8bxa73LJv8l8713Vt0r8Y4X9+t7iHy/sM+M7X4l+Ef2EmtjkIP1ZJvrx3L4E
7xD79jB94huJ/whdoVYfXaj5z3IGsEnir+B76d7qoq/E7yd+x2g7jj3fSu0h
0fXUN4frS366xm8jfpbWaqp766DnWc93UGsu+Zf46JozSvTZmrNFqc95fmKW
KoXPQ990sxuWVBN9aO7YYaz6/uF75PYHR6c+sw9F7+c/y/OHv9Y/9R7cW/QQ
rXGw6B/UN1T0YLUF4n8sefYt+/eFxN/nVbXPEutAdCHzGfuT2kLigtzfGh2N
rr6eMyV+vPg9RTfFJuOPce8V+4foqiHogNzxyok8Oz5QsL/WWPSg1DoT+9dD
tMhkveg7ctumM1LHKF8Gz/1Z99KvYhuILbyw3EPbFqbxqYnFeuUef4n6ahW+
R+61JnGC5tcozPMM9+TWrx8yXnRryesW/vYjNKae6FP1fI117VtFt5H8cI0b
IPmpkm/CV1A7mb3ANy2s99H/6DB02VbB/i1+7kma/7HWm5L429YVPyA6frq0
jFdY767ENroorDNPEf1vbl3KfsJ3OYczJfkKtd3F/6s1Kpo/UWPaiV6ovjs1
9wfx49gPmldH8svEd8jss06I1pH4b/hx6M4r1Dqie9Q3ldhRfNvMe2q86FWi
B4v+Tm17zblEfa0z+9t3aPyDnOvMe26A6Kc4A6WORFf2j46Hsb2F7udY8Rv0
LOfg+xOvFY63f+OAVOw/9M+8R2qIvk2tV+bz9yO2XvdwhfiWkn+WO97uWtp4
bH2D3M/PHsT+L1ZrIP5PYtWK/VlsFT4bvtvtWv9Eyfqo7z/xSwrHD3/hg2j8
B8H6/VD1h4r32zzJ+6AfNGaA5M+LP1n9UfJromPbVuq7mtgx2vfg/j4rvN+J
xydrfiPx1xbGH5rhb5X+zXXoxtT+zjCt/ybnQ/3bav2v1LcH96rxW2Af2Wfi
a0heW/xB2EvN/Q+diO+ADhB/oPh7iS203uvYXo3fRuOnBOMN4A5bV6x/8Bew
8cSkQ8AkxI9Uf5WKv/cq/HH1zRP9jdpeojdp7FaSd4zWJSjp9qL/lLwbuk/z
a0q+qfB+qi1+B/FHin8ytY07orAvenRie34g9k5rHKG+Q3knor/mjIveqL4t
K/YJPhdfNbevcFU0lnCY+iZF+wj4CttIXkvjJ+O/Z/ah8KXAi+aX+oRY/W71
vyn+2tTx6Xr0tWTV1b+d5h8G5iDZRvUdUvqK4Cej9H9+qc857/hY4EHoj9sT
+1Sp5MfjN4o+VbIn+dbRvgTn5QPJr4/2rauJ/7Dw9ztY/Fvi+xEbaM761DHx
WYXPEeeJvrOR4w9l3jO36d2cI74F5wV9HI3H/Mnzqo1F36FzUveBz5yrMS01
fn+N31P0VPU1Fd8b/SJ6Db585phlJ63VIfj50I31Ko6vG4lvoDFTNP5prbGz
6JsKx8Pniz9Q/AH4F9HxI/F7ljueHlFYV/2ivpHsV8lrafw1xB2SD47G28Dd
BuAviw6ZYxTiqysLxwbE0JeV52sguiszxsc6rEdMDp5HvEOsuGMZf20RHD8S
R/bFv9H/dyT/tbyfe4gJMmOM4DncLzJiYDCBs6LPMj55Z63VKVi/Yyvqa9JD
+t8qs87k/BD/ce3Rid/nxdFyxg3X+P6FsbBD1TcXf7Mw1sc9cC97aPwCXfs5
9d0crEO4fnP2cuH3vnOpf9bm3l8DNP5H/BTwJnwOyZeq78Ty+78jupvooRXj
pz0y2yxs10XR98I93a7rPZLbt9hLfdM15xbJe2bGNNZIPoN7zuzztRZ9o+Td
iZckXwpfeK+wZ8Br2N/gs3m5n8FHwBobSnYz+lNt18w+ExgD56ee+BtEj6xY
/xP79UttAy/FZov/V/y5GnM/+yvzmUIfogfQB2AIpxfGeMB6umT2P9HnzH9U
9IiKr8P1tk+MD7OfeX//Y69Kflth/wF7tT26ufBZ5EzOwXeJvj73Maxif5dr
YfPmqX0b7U+BteF//F04FkW3jBEf9P+s1JgMeMMsbEbmM3Wv5jQNxh+JmdCH
4I1fJdaBxE3gHehL4i/isC8KY7sT2GOa+3FhLB0M7yDwOrV+omvmxhvfLYxd
z1U7AV80GLvDhmBLauuad+L7i39A/GXB2BKYI04vODF48dDEeNPR+LCJMagr
RG8fjWc1zY33LAmODbph70VflRur6Vzah5vUtyHxnkVfXU3MkdiGgPdxv1VE
9yX2qvj5aoofSNwifi46Uu+htea/J3pXfLTceNqJ4j/h3Ip+Su0k8TeU/nCV
8vn/KvwueafYohuJEdBf+CJaa6n44YkxvM9LObkJfIgevJvMvgA+QR1sbPDa
XAPfe7La2sQYLlgumPSdud8ZWPUxatMS74lCz98oGFsBwwPfaRYcy+Hz4ftN
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
              "]], 
             Polygon3DBox[CompressedData["
1:eJwt1nmQz3Ucx/Gf3Z/fklSIxEyu0IwjRk2XnREy07H/aFCWlKsJu3KVMWZC
KEwzalAxYhIpNSVXzg73fUyUo12sa2NdQ+Ts8Z6vP177+byen9fn+H6+n+/n
t/V6DuxYmJVKpQqpPO3MpFLzlJ+US6WapVOpvJxUahnWJBvj6wgP4HcLt5FZ
JrtaW2O53/A+6nPoGn5I/nfsLX4uXcdOYrX1TfOd1fcZo5XMYqqGHTF+N7mR
MkNpn3pbuWfpb5mXsU5ys+iytsn8cDqoPhF7klbIDcH2YmP592lHJpk71vAV
35t+xdZRoXpXbfut5ZRyAzYY66ZehJXGcxsvBytQv4S9IFMXq4ANxf7D8rAx
WL45DnuOKTE3/4C9ualeKPOKtjVylWOzsdn6Npcdhk3AesLH+enaJpZP9rlY
fRXV0nZAfmz5ZI9ir6bi4/jWNBY7z9eQuc1vNeZIfhB/xdxnlduxUdhw9RvY
OWVj2XuxCdnJPsZ+Lpdrwfei5dhBuVzP0ZCvyffQ90Tscbw3bVWpUjw3Nh3r
YW2rsZZUjV9CNfQ9hpfQbT5Fo42TK9OaDvE51EC9Pk3QVoE/bszX1H/GGhjj
sXh+vKJxlmHvUVd+PF5q2Lr8i3Iv8aOoJPaU7xDib9Ln+j7Mn8lOnqMR3aW+
C+8gf8kYPY35oXI8VcF78flyr8st4u+X68Z/iZ/mF9A262zOt8Vn8Q+lk3f/
B3ZDfaD2W3y77OQcrJHboV6Xhsn/wh/IJN9e03TyTc73ZyltlPmImhtjYzC5
xvzTcjOxB/lLeIH6NTw3zg12BuuL1ZarRX9iQ7WtM9/6OHvqb8bz4+fMdwpr
KFeRr0+HsEkxD63kG9LRuCP4NrSa70e19SulR/S9h59L5/mFVFm+U5yNOJfq
/WUGUHGcHyzLOH35Mut8DvuJqmDF+hbRLb6UFsqMxncbY6Z+J7A5sa/YWmwa
9nXsgz6LaQmVc26/xa6rr6RVlIP9iFWKsfg9VC0nyUe/7vhC413ISs5u9exk
HbGemjnJ+u7D9vMHqDpWhHW0ln5xt+g71VoGYY3ie8YnUW9+NvXHNvObaFY8
V9wJ8f3hHfW9jC/AbvIbqAlWjJ2M82ePyrKTb/Fxfp7cRZmlsQ65HenkeW/c
eb/xns/yi6hqdnI3xR11TW4+9m98q1QH24t9g13h11BdbF862au7s5NnjWe+
xn9Pt9U3UbO4j+S+w27xG6lp3Afp5H1cvrPvsf9l/Azr3q59sPYhdDjuP/oh
1mSe5+Um8hfk8uQqYldpD1YQdwR2jp8qX8jvop3x/dI7+rbQryXV41vJfGbP
qstMwVbEWvGj8e6xq/GtYnl8Pdm/sKzY5zhj/Bd0HDtG09Q/TSf31nnl0bjD
lGPiHpc/qvwn7jvl0nRyR+XH+1Fvr32tch2dxtqZo705Z6STMzI4k9zRcVe/
rRyhbUucAfVX9d2i3EpnsKcyyW/TPH5unIvYA+MV6dOJ363t0Uzy2xq/sV2w
gvhG+DL1i1g/5XBscyb57YrfsGFxn2Lb4t648z32Ub6LbcJyqQRbEGeMTvGT
M8n/BR/zo+gI3yWT3N8n8RFYZ/6NTHKPfsCPoxL+CTool88PMsd6/hk6jHWP
s4Ft5P8HJg89YQ==
              "]], 
             Polygon3DBox[{{1711, 773, 722, 721, 886, 1384}, {1415, 919, 739, 
              740, 920, 1416}, {1367, 859, 687, 688, 860, 1368}, {1700, 751, 
              688, 687, 850, 1361}}]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stLlGEYhvFXTSHb5ELQoCgw3RSYSIsIOmwq0IQ2LQXBhZEzpqVlB03z
lGlpNeNZc3I8QNEiJUEMWriqVRBI/0Krtm76vQbzzH1f1/fMzPfOzImG5I1E
Tgjhg/mTG8KSaTV3TPSf80JI6gm9RW7gbH4IanjrKSmPcm36Cu8R0nqbPMaf
Iu7iQnxPHuc69Eq+HRfpHbKcP8s9xPfxEbnFPdDP8d24Uz8pt/lPcRf34Uey
Kt4r91gf0l/KjwUh5Nm9hGfxiPxr55V+kK/Fc/q4/Gl3jxvDN/G8vGw3rYcD
dnC9uiC/2r1mdxq/xo0yn1vUa/l5/Ea/JXf5Cq9/H+8rfo+mmf9hb1jP6M/l
d7zl827jDF6Uddygvsk34Xf6nKzhr3MDeNT0m6vclGtX+L54VvMsniGen0u5
1otfmB3uqbzAj/Hdeo/5xq9zXXGPfyIvylKuWR/UZ+QvZypxpjN4LX6OPG9n
Wi/my/Cq3iW/2D0d7w2X4hVZwnXqZfwkPqwvy998tde344n4G8lD3jerV/Kt
OJW7/3OETMH//+s/FFFS9A==
            "]]}, {
           Line3DBox[{1291, 1690, 1555, 1870, 1503, 1323, 1501, 1885, 519, 
            1502, 406, 554, 1183, 405, 1422, 380, 1852, 1500, 343, 403, 1743, 
            1869, 1754, 1448}], Line3DBox[CompressedData["
1:eJwVy8kuHlAYgOHzR+jKWFNRibWpRKUaREWFEHPSxArRYaUhUeNvLjrszFO4
BYlL4AIkxEboypAQt9DH4sn7ne+ck9f3vWMgEkKI8io2hHMOGCISF0IuDS9C
uNAHu0y6zI86yGvzDzq8udRAhn3n8449871+c/9X/9BKun27trFrftJf/GaZ
ZtLsW/SNv/90x3lRl/hJI6l2TVrszbVuO8/rAnN85KVdt/sGcz1bzjM6yzQf
iMSEUKe1bLqP6hRf/bvTKlLsa7SaDfOETvLFm1utINm+Ut+zbr7Rz+7HdYy3
JNm/03LWzFfa782oFrJil0iZucj+VFedC3SEfHqdEyg1n2kf2eYcshgm3u6T
/yXmfXMPh5xwzBH/AZIbOCw=
            "]], 
           Line3DBox[{1324, 1871, 1556, 1505, 1506, 1504, 1749, 1861, 1325, 
            1423, 1292, 1362, 1824, 1361, 1700, 1823, 1425, 1365, 1701, 1826, 
            1532, 1326, 1627, 1770, 1817, 1677, 1507, 1327, 1508, 1872, 
            1755}], Line3DBox[{1328, 1744, 941, 1470, 1471, 1449, 1484, 1450, 
            1558, 1873, 1329, 1557, 1330, 1483, 1228, 1825, 1363, 1424, 1364, 
            1229, 1828, 1367, 1368, 1827, 1230, 1702, 1792, 1231, 1625, 1628, 
            1626, 1897, 1678, 1232, 1643, 1331, 1509, 1332, 1898, 1679, 1233, 
            1533, 1510, 1853, 1333, 1511, 1560}], 
           Line3DBox[{1334, 1845, 1472, 1451, 1486, 1452, 1561, 1718, 1846, 
            1559, 1335, 1485, 1234, 809, 1366, 1336, 1235, 1830, 1371, 1372, 
            1236, 1773, 1703, 1793, 1237, 1704, 1794, 1238, 1705, 1795, 1239, 
            1629, 1630, 1796, 1761, 1680, 1240, 1644, 1719, 1890, 1512, 1337, 
            1681, 1241, 1534, 1818, 1720}], 
           Line3DBox[{1338, 1474, 1453, 1831, 1489, 1242, 1454, 1473, 1455, 
            1369, 1797, 1488, 1583, 1487, 1243, 1721, 1829, 1370, 1339, 1244, 
            1729, 1798, 1375, 1245, 762, 1246, 1774, 1706, 1799, 1247, 1707, 
            1800, 1248, 1708, 1801, 1249, 1709, 1802, 1250, 1762, 1886, 1631, 
            1683, 1682, 1251, 1645, 1646, 1891, 1513, 1685, 1691, 1684, 1252, 
            1862, 1535, 1340}], 
           Line3DBox[{1343, 1479, 1462, 1833, 1403, 1443, 1569, 1442, 1571, 
            1876, 1723, 1570, 1401, 1320, 1402, 1788, 1722, 1400, 1319, 1787, 
            1399, 1271, 782, 1270, 1812, 1713, 1269, 1811, 1712, 1786, 1268, 
            1318, 1785, 1267, 1317, 1694, 1784, 1771, 1266, 1316, 1648, 1783, 
            1763, 1633, 1635, 1634, 1887, 1523, 1342, 1521, 1746, 1819, 
            1522}], Line3DBox[{1345, 1847, 1480, 1463, 1409, 1445, 1572, 1444,
             1574, 1877, 1725, 1573, 1406, 788, 1407, 1344, 1405, 1834, 1716, 
            1404, 1275, 1814, 1715, 1274, 1813, 1714, 1790, 1273, 1322, 1696, 
            1695, 1900, 1272, 1321, 1649, 1636, 1888, 1637, 1639, 1638, 1526, 
            1789, 1724, 1524, 1525, 1820, 1747}], 
           Line3DBox[{1346, 1748, 1815, 1726, 1276, 1651, 1821, 1347, 1650, 
            1348, 1688, 1277, 1772, 1889, 1640, 1697, 1641, 1278, 1791, 1717, 
            1816, 1279, 1410, 1411, 1841, 1280, 1412, 1413, 1835, 1281, 1349, 
            1408, 1350, 1851, 1575, 1495, 1496, 1464, 1482, 839, 1481, 1351}],
            Line3DBox[{1358, 1878, 1576, 1357, 1540, 1286, 1539, 1867, 1356, 
            1414, 1355, 1285, 1837, 1418, 1417, 1284, 1842, 1416, 1415, 1836, 
            1283, 1354, 1652, 1353, 1822, 1765, 1282, 1352, 1527, 1866, 
            1727}], Line3DBox[{1446, 1844, 1553, 1447, 1360, 1438, 1582, 1698,
             1843, 1552, 1530, 1531, 1499, 1554, 1689, 1899, 1699}], 
           Line3DBox[{1456, 1850, 1253, 1458, 1475, 1459, 1373, 1491, 1584, 
            1490, 1254, 1374, 1426, 1803, 1728, 1255, 1730, 1804, 1379, 1256, 
            1732, 1805, 1381, 1257, 1734, 1806, 1382, 1258, 884, 1383, 1881, 
            1259, 1385, 1807, 1736, 1260, 1387, 1808, 1737, 1261, 1389, 1809, 
            1738, 1262, 1739, 1810, 1391, 1263, 1741, 1854, 1514, 1392, 1264, 
            1764, 1855, 1647, 1515, 1687, 1692, 1686, 1265, 1863, 1750}], 
           Line3DBox[{1461, 1849, 1478, 1315, 1494, 1441, 1398, 1567, 1568, 
            1875, 1757, 1396, 1314, 1397, 1782, 1742, 1395, 1313, 1781, 1740, 
            1613, 1312, 1780, 1390, 1610, 1311, 1779, 1388, 1607, 774, 1386, 
            1603, 1832, 1711, 1384, 1880, 1599, 1310, 1778, 1735, 1595, 1309, 
            1777, 1733, 1591, 1308, 1693, 1776, 1731, 1587, 1307, 1865, 1538, 
            1380, 1519, 1306, 1857, 1632, 1520, 1341, 1518, 1856, 1710}], 
           Line3DBox[{1465, 1621, 971, 1420, 1548, 1577, 1547, 1289, 1860, 
            1545, 1546, 1419, 1498, 1497, 1288, 1883, 1622, 1623, 1542, 1544, 
            1543, 1868, 1287, 1359, 1528, 1752, 1858, 1541}], 
           Line3DBox[{1468, 1848, 1624, 1469, 1421, 1467, 1578, 1466, 1290, 
            1884, 1550, 1642, 1551, 1529, 1549, 1859, 1753}]}, {
           Line3DBox[{748, 1899, 684, 1202, 1203, 1000, 1150, 1885, 750, 686, 
            855, 1044, 1826, 752, 689, 1792, 754, 694, 1794, 758, 701, 1800, 
            765, 710, 1807, 887, 1125, 1126, 770, 1882, 716, 1128, 1129, 1127,
             774, 723, 1812, 781, 731, 1814, 786, 736, 916, 1841, 938, 791, 
            741, 922, 1837, 923, 1099, 794, 744, 1061, 1860, 1062, 1034, 1035,
             796, 746, 1848, 972}], 
           Line3DBox[{771, 1856, 1013, 1012, 1053, 1052, 714, 1879, 768, 1184,
             944, 871, 959, 992, 1850, 958}], 
           Line3DBox[{777, 1016, 1819, 1015, 821, 717, 1857, 527, 1014, 468, 
            469, 1586, 323, 872, 321, 1584, 466, 267, 291, 957, 1831, 991, 
            956}], Line3DBox[{797, 1070, 951, 1869, 1069, 1068, 1040, 1041, 
            1001, 1861, 1043, 1042, 927, 853, 1825, 857, 854, 691, 864, 1830, 
            930, 865, 698, 762, 707, 1806, 882, 1116, 1190, 1189, 1894, 1193, 
            1191, 1192, 1117, 883, 1778, 720, 778, 1785, 728, 1223, 1900, 
            1224, 1225, 1226, 1227, 1889, 1166, 1165, 1180, 1181, 1182, 1822, 
            1026, 842, 1028, 1858, 1057, 845}], 
           Line3DBox[{800, 974, 941, 975, 976, 953, 856, 955, 1080, 1846, 807,
             1082, 808, 1081, 863, 1829, 816, 867, 817, 705, 1804, 873, 933, 
            874, 1106, 1892, 934, 1186, 876, 1111, 877, 1776, 1215, 1216, 
            1156, 1159, 1157, 1783, 1176, 1177, 828, 1018, 829, 1789, 1020, 
            1054, 1021, 1815, 835, 1022, 1024}], 
           Line3DBox[{804, 1004, 1853, 805, 1005, 1171, 1890, 811, 1170, 812, 
            1155, 1886, 1153, 1154, 713, 1810, 892, 1137, 893, 1775, 1199, 
            936, 1200, 894, 1141, 895, 1781, 726, 823, 906, 824, 1788, 908, 
            831, 914, 832, 1877, 1095, 1094, 915, 969, 983, 839, 984, 840}], 
           Line3DBox[{813, 1818, 1006, 814, 1007, 1173, 1891, 818, 1172, 819, 
            1009, 1854, 896, 1144, 897, 1201, 1896, 937, 1107, 898, 900, 899, 
            1782, 902, 825, 907, 826, 1876, 1093, 1092, 910, 968, 981, 833, 
            982, 1847, 834}], 
           Line3DBox[{841, 1866, 1055, 1025, 837, 1023, 1821, 836, 1179, 1178,
             1163, 1888, 1164, 1162, 1222, 1221, 1784, 1220, 1219, 719, 1777, 
            881, 1115, 880, 1188, 935, 1893, 1187, 879, 1114, 878, 1805, 706, 
            870, 931, 869, 1798, 697, 810, 862, 809, 858, 1078, 802, 1079, 
            1873, 801, 1075, 954, 851, 952, 1074, 1871, 798}], 
           Line3DBox[{847, 1101, 971, 1145, 1031, 1100, 1030, 1029, 1867, 843,
             1056, 742, 792, 918, 1835, 917, 737, 787, 1834, 912, 911, 732, 
            782, 724, 1779, 775, 1133, 889, 1134, 1135, 1839, 1132, 1131, 
            1130, 888, 1808, 711, 766, 1801, 702, 759, 1795, 695, 755, 1168, 
            1897, 1151, 1207, 690, 1206, 1205, 1817, 1002, 799, 1204, 1213, 
            1073, 1870, 1072}], Line3DBox[CompressedData["
1:eJwVzTEvQ3EUhvFzi3SxiJA2BhFLWSR8D+kVi+jAZWbqUnwGq4Gwl0RS3Sxt
0kkstqLpIhFppOnQzeDX4cn7nPec+78r2enOSRIR23iaivhAE2XcY306Yisf
MchF1PGp29X1ZIoNfotfuweUeYo7u2XfDXWPqJhXzSPeRMLH8hl5/ic7qLrb
Mx944xCJ+UV/xI+RoWQ/o3/Tz/NZ/s4X+Bzv8wJf5F/8Sm6a67KIb13NO/u6
c3mGa31LtnGJJfOPuxKvuLuQa7jRNyb/Qxev+Aeyyyo4
            "]], 
           Line3DBox[{966, 980, 1833, 967, 909, 965, 996, 964, 1091, 1875, 
            1089, 1090, 901, 1087, 1086, 1185, 1874, 1084, 1085, 1047, 1175, 
            1174, 1855, 1010, 820, 1008, 1046, 1862, 1045}], 
           Line3DBox[{1019, 1820, 1017, 827, 727, 1161, 1887, 1160, 1158, 822,
             1212, 718, 1865, 772, 1110, 875, 1112, 1113, 1838, 994, 993, 932,
             868, 1803, 704, 761, 866, 815, 1083, 1797, 990, 1109, 943, 978, 
            942, 977, 1845, 806}], 
           Line3DBox[{1048, 1863, 1049, 1011, 1051, 1050, 1864, 1088, 960, 
            995, 961, 903, 963, 979, 1849, 962}], 
           Line3DBox[{1063, 1859, 1033, 846, 1032, 1060, 1868, 1059, 1058, 
            921, 1027, 1836, 919, 739, 1791, 789, 734, 1790, 784, 729, 1786, 
            779, 721, 886, 1880, 1119, 1197, 1196, 1198, 1895, 1194, 1195, 
            1118, 884, 708, 1774, 763, 699, 1773, 756, 692, 861, 929, 1828, 
            859, 687, 850, 1824, 852, 1103, 1102, 926, 1038, 1852, 1039, 999, 
            1037, 1036, 1067, 1844, 950}], 
           Line3DBox[{1076, 1872, 1077, 1214, 1208, 803, 1898, 1003, 1209, 
            1210, 696, 1211, 1796, 1152, 1169, 760, 703, 1802, 767, 712, 1809,
             890, 1136, 1138, 1139, 1840, 1143, 1142, 891, 1140, 776, 1780, 
            725, 904, 905, 783, 1787, 733, 830, 913, 788, 738, 997, 838, 1851,
             1096, 945, 1097, 946, 998, 970, 1098, 1878, 844}]}, {}, {}}},
        VertexNormals->CompressedData["
1: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
SVvlYVeKeyTSrnU1xT0yOHwnC3Hv0LGRNIrPJF0g1ITiM9H5+oaN+CzOs1KX
4ip5V3b/OsVVktwW1YK4Otfm16LU+zUk7sTAybNRTUTN6OztJw0t8PHapFMU
t0nA2y1situks33/dcRtmUZxLVovyORdnn20XhDrn4dUsV78PjXPE+vLuqqx
dRT/ya5n67ch/q9rX1KNdWFllfBnlBdqZ5qifMeMKVm0vhBhl+VvaX0hXU6y
Dlhfwp6GjcnMKiKXchQ9Jjc3EeHPcs08PO3QFKb+hNY7svSrTh+td4T/0MRX
WO/cz34rxHqnIGAiRusdsejtssZ6Z9YwyZbWTeJj/XrkxS8WGW5tysK6KSkc
Wox11pp/bxKts2Ta3lcuWGd1zovfycgqgrqWGRfoc6HjrGc7PvfZjNCp1D+w
zTHvKPUPKA7eiET/TI0Z63dTyyxNoW5nTVt3PdhdjhfJNu6ECSu99R9EFYJ/
cJuAjEgdHIsZV7M9vwOa94TMpXECgV4O6TROYGbp5z6MEyed6yU0X2BLlUUf
zRcgw3bTMV/SZXzzaJxD150vvTTO4aG29HiMc939t37HDleDm08I5iNsvLlp
Aeaj1zv+5slPauC+yVoD+y315N67Z4sGZrbBg19jQvtVysF5p8OyRUurics2
s5rD9zvgiffeZjHNjzBloljSeYNKMq9+xE1lXhc4ijyri3z6HqYuuDRvYHs5
ESl6dEtiYjcs+ZAn0Sr2EPj7up5nHS4j81f2s8af7YYzvdbXqZwkf387Kt8A
0aNy7jjk73Guqcwcps8l29t6E/G568V9XPG5c5XinlI7ScMJljbaWe7jWYV2
Juou6KXzIrUN0wDnld4voYHzenxnoz31Mxkc2jyZ+pn8mhVUjn62sy71wXW5
usaGTdeFhCzOEMZ1SVz8/PjhDTWwVfHOoFoHG/oXlhvsXsEE10/JJ3buZ8Fe
od8CzbQ+V/arnIxTqgXFGiXTRHcWnGQMNGnS+rm+85XZ+9gaGJ/24q005TEB
jqDcEcuCCXndrPhtNTBzkLdD7j4LvkaK8ObEs2D23vHBJ2fVwBn3IpUEmred
wxk/hJ6ySO1AloGuTg0kBi2zHvBjEeWl1ZMtHrLIlU1qWxacp+ML8RXusKd6
X+TDj1K81E/fSrY310CPONFqM2YRnsu5Yr4BLFIp2TVw2rsWjtSkqlA5CE1b
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
lCkaCs0ltNhvbfBthSbyvwA2dmt3
         "]]},
      AxesLabel->{
        FormBox["x", TraditionalForm], 
        FormBox["y", TraditionalForm], 
        FormBox["z", TraditionalForm]},
      BoxRatios->{1, 1, 0.4},
      Boxed->False,
      ImageSize->Scaled[1],
      Method->{"RotationControl" -> "Globe"},
      PlotRange->{{-1, 1}, {-1, 1}, {-1, 1}},
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[
      {Thickness[0.05], Arrowheads[0.5], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
      ImageSize->Scaled[1.]], 
     Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1:eJyFXXVcFsv3BiRERWxM7O4uZBewu7s7sLu7u7BFr90Kol6DXbswscUuQFQU
FBSV3y7znMP7zvfy+d1/+DifuWefeeaZM+ecmd03f8+hLfvY2djY/E5tY5PK
+LsiIdH4z1VtFbJid1P3YM/iN8y/mz2nvU2bpWxlV7WHW9zRgd3OeOZts+bs
2QtPlZ7NErOF/06nuvZqFr24/ilP+4KtX563j1BC622NOnHZWe2x6cHPXT4n
PDPm/11wY4UvSupj2x/Vreaobl6vXb8RcdSz3JSunzcY7bvah//rliqV+k//
6i8/vD3iaX8uR0PTzubWd+7cvmajFli0pmu2jYc8B/ce5Kobzx3928SZqAh8
Bz2dOmepWGTnVg+5/wDRX5Pt2wn7miPwbASesgKPdhv4uwJ/ZoFf647xumC8
LmK82hTw0w38qIIfTeZz0pq6eww+g538yzY/fS+d2rG12S9BIZ4bVXUrZ+ue
Th2T9/6Qc1kSFOK5U2CZUrbuadRFM/b22VL0p0I8zw4vdLBQDSd1WO2nvk7d
fijEc63u1Vd/t7dXSxxfbperfoxCPF/tsjd/jvy2ap0+TzLPmBqtEM+p3ev3
qOD9V1kQqFXXC31SiOd7STh/A8dHhXiW+xPPsn3iuSbwFAMe4nkG8A8BfuK5
A8a7AOMlnhuCn1Hgh3iW+SSe7zX402lLTCq1VQHz/3dWiee6MakrlxqdSi2Z
esCoCn1Tq8Tz7TYxK59mslNvVWrX7f0eR5V4Lt5i8tanmWxU32YXar0oaq8S
z61LnptbPChBCXt0q3fdbrYq8Rxftd2R4kFxyu64PWunnPzDPEefbjp/XnSs
ssmr8dL3Xr+Y554NTZwxmNefzLPcn3iW7RPPLYDnKfAQz0WBfwDwE8+3MN6b
GC/xXAf8FAc/xLPMJ/GcYW+Wa0smRimV8pl2XZnnk96rXqS+/FFZP6h9wkvf
9Myz/7tF86vdiFBmnBw64rF3umSeD0TNafztvbLT9Y6NVwFn5vn7vaiRzpff
KM8zhyfs3uPAPB/9tXNinqiXSo1BW1ZnmG+nEs+fQ5cMW//2mbLzQpH8zt1s
VOL5SRLOMKyTROZZ7k88y/aJ5xjgCQMe4rkI8G8DfuJ5E8Y7DeMlnk+An7Xg
h3iW+SSeO489OnrFxCit1WTzeck87zoRPTLd5Y/a43XpL1vyvPH1ybCaNyK0
My7PvSx5buwQObHZt/eaT13/+6oFz04lutmku/xGazXgwANLnr33h+/JG/VS
+73t4mhLnn82CGq4+e0zzauAvYMlz0XGmTjDNPH/J/Ms9yeeZfvEswPwtAAe
4rkB8KvATzyvx3hPYbzE8w7w8xD8EM8yn8Rz/1Vds2+NSaW3OmviSPYbNxvo
Uca60KeEvH9V3sJvzGm0zjMsk52+5a768J2F38iS0at6WCYbfUSWMxeeW/iN
WfO6Li4RlKANnDn1dx0Lv+FeouzyEkFx2tn1Rd9PtvAb/T+najY/OlaL8tv6
9Z2F3/iRhDNGE/2S/Ybcn3iW7RPPM4CnP/AQz5mBfxjwE8+zMF5/jJd4vgF+
JoMf4lnmk3husOPkCcNv67t7mfiS98FBO9L6GX5eP/ej/2XdYh98tfr1AmNf
0L/t7hy22WIfzG3X1a5wDSc9T4HMro4W+2CDW7efGfuOvjTG7X4Oi30wnf3l
bsY+pbdq/z7jdIt98E0rm1vGvqZtqZxlRLDFPphtp4nztyb+nbwPyv2JZ9k+
8VwPeBYDD/GcA/hzAT/x/BLjjcZ4iecB4EcHP8SzzCfxnCcpXHLVF3QycZ/1
IJ6/f0iKW/Q7Dx4UbVjlrAfxvLZlUpyjJ+ZZFnTqp+ZBPB9smBQX6fkcdxWJ
HHrag3ieciIpjtKnbbhZft6MEx7E87mOSXGXPinjyUPH4o96EM8T2ibFafr1
jKdKPZ8d4EE824j/dMHvEQ/iWe5PPMv2iedJwDMZeIjnfcCfB/iJZz+M9w/G
SzzHgJ/b4Id4lvkknhuC/+2Cf4149sV8BYv50ojn15jfz2J+NeI5D/SQU+hB
I54bQj+LhH404tkFemsu9KYRz2+hz41Cnxrx7AY9Cx4/asSz3J94lu0Tz/WB
ZwHwEM85gd8N+GU9f8J4ieeB4OcM+CGeZT6J5wHwJy2EP9GJ51vwP5OE/9Fl
/wx/pRPPWa39m048z7H2hzrxnBf+M1j4T+Z5IPxthPC3zHMc/LPg6yfzLPcn
nmX7xPNM4OkHPLJ/HgL8xPNsjHcTxks80/41EfwQzzKfxPMo7I8txf7IPAdj
P30k9lPmOQD772mx/zLP3bBfe4v9mnnOjv29pdjfmefm1vGATjxnaijiB1XE
Dzrx7Il4Q/CSyDzL/Yln2T7xnA14mgMP8dwF+BXgJ54PY7wnMV7i+Qz4eQB+
iGeZT+I5fI+I96qIeI95Xon4cKOID5nniYgnZ4l4knl2Rvy5W8SfzPNjxKsv
RLzKPG9EfFtTxLfM8wXEw7tEPMw8ByB+FuNP5lnuTzzL9onnh8DzDHiIZ0fg
3wH8xPN463yBeV5unV8wzzKfxPNV5C+dRf7CPNdEvlNJ5DvM8yXkR49EfsQ8
50M+NVLkU8xzbeRfr0X+xTx/RL4WKPK1ZP+M/G6XyO/Yb7RDPijGmew35P7E
s2yfePYGnlfAQzy7A/9w4CeeL2K8DzBe4rkG+KkAfohnmU/iOXGzyMcninyc
98HayN/9RP7O+2Br5Pt7Rb7P++AU1AcWivoA74NVUU/wEvUE3gcvoP7QXtQf
mOfEPKJecUDUK5jnENQ3xHiS90G5P/Es2yeeKwOPAjzE8yTgnwf8xHNLjHc3
xks8e4OfVeCHeJb5JJ6pvrTTz/x3cLBcrys/ZGfQwG5nguV6nbPXN7N+FSzX
61aO7vdrl8+JYLle92G4R8iNiKPBcr2uYI3tZj0tWK7Xja/Vulu2jYeC5Xqd
wH0wWK7XUX+5Xkf25XrdO+CR63XLgF+u1zlhvHK9riz4ket1xCfxbN9yS6dF
Nq6qT9ZVWV82iVJGdZ7VaNXEEOXGymMDbKa6qBP2uQ579SlSWVtt6ZitMW+U
c0r9a5vCUqvzogN3bwpNpVL/RnuWhpp55t5O5r+jON+ZkU/TynmlV+eGBpe9
OP60J9n5UW1fxzpX0qhPvHvpG0aGK3eL2Hw6fS9KaZKp/Nohu5zUzP+4b0/3
zE6l/qX3Xnu/Zlxa9eKloX8yPf3Xk/r3Pdv0bGwfJ3XEsHt5DnV+p4j49Yty
+OCrV4mJTuqh4llfn/Q75kntb9zPl96eyl5d8HrVtHN1XitnC46eZdpJfffL
635z7dVHL9qF9GwZ6EntK3ukKhvR2FYd4b5C++n3QqkZXfrkFgOPh1dAzlvB
tuo99wt7Dgce9qT24msb7Tnpl6g8HjjP//eDMKXuirf+ywx+Oi9+vHyQlqA0
K7sh6lq+H2wn696jf9pXtFHnZFl2+ceUg57UX7ZTS7RrazcObeXS5qcy5dUS
2z0VY9m+bIf6y/hriOf+jx3qL4+L+su86YIfTR4X9Zf5pP69MV/DredLO4j5
OmA9X1osdPIIOnkk5l0rCT2chx6o/Rp0Oxa63SH0o02FDmdBh9SeCvr3hv63
CT1rjaDDjNAh9bf/8CZ2Z4irumbWmEW/Pp3x5P6S/ml90XqZi/VC/bfs37HW
rCOMitlQv7Sx/5Afs7fTupdbm6AkLqqyc/zOdLy+gpf8/nvO3llNk4QjFddt
Ors3LNxkgoN64ma6pXo+W5XWxftRjys5eP1Svn66Wby0d1peRze9jxRdcd5O
9a5ZP92IT394vazueK7Mw3Q2qnPBD7a91v3kdXFvwPtFZj2lev5ctiWNfZj8
YS8l5B+z/tJ/9vMjRrzP9YSzz9zjK4R8VtIdDiob9jORdT50qYn/J/xIDNcZ
crz1vBaWJ0qpXNy3p0/5P6xn2T75T7k/6VbGT3qT8ZA+b4AHxZoHrRP4PAY+
SVfb/SuvNOtBL2pHrTTyD64L+WMeR2Ieyd++Bf+fwT/pR55H9sOY97+Yd9JJ
0ZcBMVqWBKXwE4er5v5JOtl3VjX0dyB4d4TQI+kksX+bKtqFBMUhCXc61snC
7Mtidj6IUxal9khdRE/NOil7YKGxHvYHOxQU64N00qnZpqZLQ2OVw102+S32
d1BJJyODHh4ce/urUsmva4nvU+xU0smE5lHLpk2NVs62uT/FjCNIJ56jPJec
KfRJaeIb5lDRiDtIJ8vcdxr+ZUtwkLfwN6STCwNM/B+xH/xmnZRo0sHwa5uD
B+8Tfo50Itsnncj9SScyftKJjId00hE8HLTmQZsPPheAT9JJ2pNBbmY9K26W
x0kzDiKdFMY8FsI8kk5Kg3878E86keeRdLIX874L8046mdf63NGB3Q4EZxd1
HdbJlnoVMlRYm6D1bNjK09Kf+AV0Ns8Xg2v8FXEB6aR0Gy/Dn+4JHr1f+FfS
SZFi7W45GnH5sK1xl0pZ+JMeflGvTvrtDD54WPhv0smDEpUNv78t+HSo2AdI
J3lr5zDinq3BNUV9i3Wy+ULXrtk2+genEvUwrrdva7rrcaWQz9pt9fyppxb+
xDfQxE/1v+Q6/J0KYdOf54nSVu1YHu9t4U9k+6QTuT/pRMZPOpHxkE66g4f9
1jxoJcHnSPBJOvne3d2I2/YFX2mBc1foZA7mMRvmkXRSEPwPBv+kE3keSSf+
mPcemHfSyfO0eTecNeLvAkMz9rL0J8NXLe+2OSy13vfLtE8bLeK6K52nh5v1
qdgC5viT/Ylz9wb9dz+I0/pfmHSwsIU/afS0epGhu5z0nXtSfUtrEb+tr+25
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
6S+bNOrozhHuPeM+cTzQYFf2C+MP/1Ui++pt5/hG8P5+4J/BzVo3t1VPTd5w
5HzNcN7f/du1zHnR3V6tFrds9K6yH3h/v1psj+e9SHt1fEL8BNf+ThyP7Y54
qoyJt1e/jgkqNdb4S3iKtavgvrG0vbpsYUytuqntOB7L86in47gCP5S3A1cX
vXohnvGEpi8fHxX9U7nWskyez8ZfwnNhiePz/dUTleG779mv+ZDAeApVHnyi
Y4+vysXpa8ekLpEcD4+aMb9geoOXd//8uGDyRHjsA0d28TLWUemVt070tnFm
PFf3xxRs3Pu1MqtpnwHDPiYynhyLBmzTDV4WLn2y0uSJ8Dxvv+b2MsdoJf+E
VPlrtU/F8V6tOe+X9kn9TvtoE5Z+2bdkPL+zjrjnu+yJ1szmzbyB41wYTzv7
zC2y1ruiNXJvnv+BfVrGM2lR87CzXg+0Qku23L7TLTnePnW48LwiQ25r1b6u
XtSihh3jKX+8TPenV85p6Z6NvXHvQ3K8vfZb3BafEnZ6+aVr/T+vc2Y8G+d+
mLxgSaJ28kTzq6NzOzOeX05fFhct80tzfD7pcvNDTozHtfHnNu+rxWhRV88O
6eSWwPwEOL+fenBWjNaz0pWjJTMk8nyVq+hW8l8vY//NudJ/cCs7xlP/SP5q
vcan1Qdvi600pOtf1nPOc8ftx+R21nPfDtXnL0lkPQdrY0b+yeiol+iV3vV8
i0TWc9wUvc7xTH+0fnPq9xueMZrxdAr0+Wvg0Cofj0lj4GI8rlemlPfPbKsX
9W3psadmPOsnPs3gkWPauer9JnuW7V88hPE8qdtrtTFP+sEhjzoPWPaE8Wzw
mzXyyYE0+obE/rnP5n/NeLY3c95ZabWN3mXt68O/Qs4wng0dW6wy5kkfH1C0
V6EhtxlP6jE5Bs7dbq93HNHR0cE1jPHUPv9qi7He9a25NzRf7hjP/jZr42xb
DB3rAwc2+2Homv1tPo+fmRNs0uirHx137Rb3if3thqhbBScc/qtNrLh23izf
CPafr/3STjZ0rMc8K7T7bM1w9p8n1sfVMda7fifjKrcdZT+w/2wa8/6zsd71
qbXHP0vf34n3u1QNzj0z1rsemePWEvMv4elj/3OHsd71Wyvtd9ZJbcf7XYM+
r3VjvWulynycduVCPOMJXzHr1Kfon9rqO086mH8Jz4Z3BQ4fqJ6oeU05nsPv
QwLjSX19/5TOPb5qXiuKVzbWO+Pp0yLrVVeDl8CYyhNNngiPPir2vrcRB5bd
fn+gsd4Zz6eYf+yb9n6tTZtWtJCx3hnP8jIv958zePHa5NHX5InwDM0QHrPc
MVo7U+DgW4/2qXg/fRFw62OP1O+UTCtHVjHWO+PZdNHzXR9DNxcXvtlq6ojw
dCmWan3qeleU0VGnSxnrnfE8ffjLNtjrgTKk7sp3xnrneKZoYHHPAoZuEs6l
22jqiPCUWrNx/p0r55Sb75s+MNY744keV/Gldwk79XrxbsW+rHNmPGey6anM
dZX3mrtqrjPCk7O7d/EiZX4pHu4uJVoccmI8NR59nf+uWoxSreSURGO9Mz/L
etn6HTDW1e5yWr1SxjojPN0yuLud8IpVBjd+8NFY74yn+qyQiz3Hp1VvXzxy
d2jXv6znTwciFpt+Z1KthBoLDT9EeLwmLv7zO6Oj2mvfwE4XWiSynntHng85
lumP0rRkee8RGaMZz87AxoNMv1O606NY0w8Rnlm1fB5szmyrdp45sdbemvGs
n231S/U11rvafnbWL2OKhzCefCd6TjL9coPTaRsPM/w04Sn4tWcLY72rPYt/
VS7kf814Aio5+hvrXfVdPa5xmhtnGE/onCezTL/c5GDBA8UMP014fl0/3MxY
7+qiQTdeObuG/Q8eB4GH/U8B4Pl2KgkP+x9v8HlE8KnI8Uki6oTUvzDwewv8
7K9+gP/egn9Fjmdqoz5J/en7Rb7S94uofZzU/gfjVcR4uc5AcYUX4gpqvw/e
sgjeFKrTHkR8chrxCbUT/w6Cf4Xqt3KcQ+0B0Im70AnbuYd44zrijZTs0/wO
gQ49hQ7ZvhzPULtcZyY79zDezBgv6US2L8eNJVHHpv6/wXNj8Ey6Oozx5sF4
5TiT6ufUvwB0UhU6oXj4CeLJSYgnqZ3WSyT0SXXpy4hLKyAupfat0PnbWULn
VK/2QnwbjviW2mOhz+7QJ9nZKcWZ1O6FdbEf64LsXEK8OgHxKrV/Sed2/eWC
1Krvnpuzhhj5HMdp8J/nhf/k9gbwS82FX+J1dAt+NYfwqxxH3cL9f1X6fhF9
16iO1L4Y/qqB8Fe8Ls4h7h2DuJfaneo/W2HWH9N1OVVmi5H/kW7PZTztbdYr
P2xrUcvJiHNJh/7w21uF3+b+ORHfLkJ8S+314P/LCf/PduQ4mdrl55JuZTvU
vhDjbYTxkg43A+cW4CTd1gP/DcA/6bAw8oulyC+o3T27ttKsC29bF5m41cjL
SSefMO8DMe+khzuYRzfMI/UfijziDfIIak+ATjTohOzkRT5yAfkItat6tt5j
ayUosyNbpKlv5NOkK8dAET9kFPEDtxfHvlxN7Mschz+2jitYb11T+A5Se7Qf
kb+PhP16gNivue79BHlNAeQ11D7JMa9vyP0vyu2+q1ab+TfpxPXX7YCmoVFK
s8S783YaeiY9tLOOW7j/aeQv1ZG/8HncI6v4RyU7ch5E7fJzSVeyHWofLI2X
67fA+Qs4SW/Ef2XwT7pKDBD5Y0nkj9T+edSEMdVOG/vItoW7zLoI6cQT8z4T
8056eI95PId5pP7O2USe2Bh5IrW7QCfpoROy44N8MwL5JrXv2GlXadXCA8Gx
GUU9g/3bNRE/+4j4mduPIC4dJeJS1ltPxNVHRVzNeuvpt+g/v6fUw6/x6/9q
34949ZaIV1lXnZC3uiBvpfYynmOMfW5rsIeox7NOCnfab+yj/sF9RP2e9TAf
cbuPiNu5fyDy097IT6n9JeL/GSL+Z93KeS61y88lXcl2qH26dXzOepsHnN7A
SXq7Cv6Hg3/S1TDUB+qjPsB1uW9/Fp2K2Bd84qqI+0gn2zDv3zDvpIcu1vkR
91+POsAJ1AHYv12zyrPYzhrUE8qinkDtvRYkupj1wXaVL2yrZ+HfmiB/nC7y
R27XrPMy1psd8sqPIq9kvaX0XaaU2vsjX9NEvsa6qiLVJfi8oMrLLjfvf9Fa
VNvVwdK/HfWcObp5aJSWvkeT3Jb+jfLWtSJvZV11Qf2hCuoP1F4f+W8Zkf+y
HbmOQe3yc0lXsp1k/2aVn7Le3gOnH3CS3k6C/9Lgn3T1B/UfO9R/qL3Slaep
zTpvraa761r6tx6Y9zaYd9KDDeYxAvNI/bOjzpMTdR5qb2xdZ2A79VAvGoR6
EbVXWTG6q1l/z50nVchgi/jNB/WTHaJ+wvlRb9Ql7oi6BOstC+oqQ0RdhfOg
lL7vlFK7H+oVDUS9guO0jKg7FULdidorXnRTzHp9i13n2/pbxG+7yx98bp5X
TX17YbyjRfxGdZufom7D/TdK9SVqX4/6z1RR/2E7cp2K2uXnkq5kO9S+FuP1
wXhJb6+AMx44uT4g8U+6Oo36XhHU96i975Cf7uY5SvS81i0s47dKmPdcmHfS
QybM42DMI/V/hDreAdTxOF+ATrZDJ2TnB+qBfVEPpPa+mXfMNM+3KmRoVOJm
9EfWFdUP64j+yfUE1OU2i7oc5wtPgcdf4OE6Q0rfiUqpnep1r0S9jnWVBnXF
uqgrUnuY++DG5nnYr/WPnh9p9TI5z/1nx0jz/Gz30PQ9sy5/xnogXQ0TutKo
/xvMbyzqh9ROuqoudKWRHbkOyfm49FzSlWyH2mm8DzFe0hvVV4cCJ+ktD/hf
D/5JV+tQv12E+i215656e415TrnmXJaPO/tEsk56Y97LYd5JD48xj5swj9Q/
M3Q4AHVaaidd+UAnZMcbOtyCeq+st+LiuayrBvCHA4Q/5PaNGNcqMS6uU+WC
v80u/O3/6E3+3lRK7aQrD6ErPqejeQlD3VjW23ehN03Wm7+Yd9ZDV+ybFcW+
yf0jsH+tQX2Y2uOxb/YR+ybbkevMst7ouaQr2Q61U32+KcZLeqP9vQJwkt5I
V7PAP9/Xgg5XoD4v622p0Jsm660o5p30kAPzmA3zSP1tsc+Gow5P7XTO0g86
ITsUj01GPZ/aq1n7Va4br0e8V07Ee9yuWftt1ttmxJP/iniS68wpfbcqpfZM
2DcLiH2TdUX7Tl2cC1B7ZeynzcV+yjrZi31titjXWA9HkRf0EnkB919hHZ/r
1J4JecFHkRewHfkcgdrl55KuZDvU7modJ7DeKH/pAZyktzPgvyD4J131wD57
G+cv1N4P++kXsZ+yTiiOyol5Jz3Q+eBxzCPrE3nEEZyzUPs66KQMdEJ2nHBe
o+C8htr7IW5sK+JG1lVr5LORIp/ldvvUIi61F3Epn1NUQ77cVOTLrLeUvn+V
Unsl67yA710MQ1wdjHMfar+OfKG5yBdYJycQt7uIuJ318Mi67sH9i6H+8Bvn
O9S+yrruoZMd+ZyI2uXnkq5kO9ReEeP1xXhJbw+tz5f5vMkW/NuCf9LVGes8
gturIV/wEPkC66QP5r015p30UNW67sH9N6BOch7naNTeCjoJh07IznOcx2XA
eRzXmR87VLGoh7CuMqBed0XU67j9lfW5POutK+qBEaIeyHpL6TtaKbXPta57
sK5KW9dJuN2v0bb6FvUQ1smM+Tf6WdQlWA/2qOsuEXVd7r8c9dU9OL/jPBd1
3bmirsu6lc8BqV1+LulKtkPtc6zvJ7DeUgHnYuDk+xXWdQ/WVSfUSUbg/JTa
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
5/+tAzxH3pS2bFLexDyURJ5VFfk7jesZ+qdBf9Y5nvsQz6VxTWw4a8qgZS7q
wjIm7vjk7+0UP/5+0xZH9XsDE7cj/x5ck6O+y14Z/b6sNP9/F26/PrXOf/5+
ZdvBe7/813dc/w33+c/vte4v5vWf32vVq9548V+/O+k25FGX//rdSd/AsF3/
9fuScn/6/rNsn787Cjzy91qPAb/8vdY2GK/8u5BXwY/8u5B+ASbO//39x0kl
ok7tfh2nrc1S0Sbt/eTfeawWW/Pt8bI/tGzZ6sY4XEn+jqvqXDyh8qkYrd6p
KVk73En+XmuZP+1DNtt+1cpeLF21/tzk77VGF+34qHrOT1rNQYV7b1iW/PuM
9f+kb9D+aIS2JG/J+6WcEvn727ectjV5Mzkc+vvDfMr9iU/ZPvFZCnhKAw/x
6Qn8tYGf+KyK8WbFeInPCeDHD/wQn/mTcMZr0f+aOF2Yz+/zan+qlNFR3zCg
3HrjL/PZeOag092m2uv7K6tDjb/MZ7p7LacE1bDTl208Ut34y3xOu7+i1zDf
RK154Tqfhvom8vdFo2bdi8v15pd2yWbDCuMvf8983LxLgcO1OK3drq4djb/M
Zxovt+Wbt1A99wfzKfcnPmX7xOcU4GkCPMRnGuBfAvzEZyOMdy/GS3zGgp/1
4If4HKCaOB31zZVNnI7M56qmxUsbvOuLX4e+3vU6jr8nf2iVcx7HK2n0cmGr
chrzxt9xfZJ3Ww1jXvW8Y+7WM+aZv9dq61C+naED/fa9S+UNXTCf2ZfPn2ro
Ru/58sGtajk/MZ/BsYsdSjslar2yDOnW7mgE87my2L9PDF3C74czn3J/4lO2
T3wm2gs8t4CH+HwE/HmAn/g8gPGWwXiJzxXgZyH4IT7PFjVxuuj9nps445N/
ZxztvUQ7f2dsIPjfJPjn3x8pDZ1/FjpPbl93ytl83t85eTuaz6d5uXPuU/Nj
Br47GW/UNfHy9yFfTVxVyRhP/pmXu5njo3nx3VdpzSZj/Ed9Ko01+aB5ybym
1eWqBl82xz6tN/mjeflW/Mbotga/HleiK5t807y8StovKO/6w78HIfeneZHt
07wMAp4A4KF5CQF+d+Dn7xZivLcwXpqXUuDnN/iheamIfe272Nf490ES6ueu
Z66Hwrvaq5WN9UF8PnufpYC5fh7c8nPubqwn4tOpd4bvR431tjxN7Dlz/RGf
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
THz6ov8J9Kd4Xs6vic/peK4dnkvx/Bvky+VFvqzI+XJnjIvy5dWoq88XdXWu
H8r5I/2uRxPY6YS8m/jJjfXyAnko+ZkcOBfoIs4FuH6o4RyhmzhH4PrhKpw7
iPuvyfXDDvAPL4R/0MjPyHYojpLzbvIzNC+BqGMQz3L+Tv6E5jcxr6iHEM8H
cU5RUpxTcL1xJficCz4p/pHPIyieKQB/0kP4E538yQ/r8yOuk8t58WPEM42x
XpajPkB+4571PqVXRBzyCedfF8X5F8/LeJyXtRXnZTwvJbH/vhf7r94acUVa
nLuJ8/Lk+nkxxANZRDygUd4k26f5kusJAxFXyPUW8jNyXYLyJvKHra3rNnxO
t0ec03G9nc4x14Fnmq+r2Pcbi31fp31fPj+iefTDvr9Q7Ps65U3zrM9VeR5f
Wu87ek/s14k4560hznn5PKg1zoUXiXNhnpenOEcW+U/yeZDcn3iW6zy0n3bA
vtnRui6keeO8OLM4L2be5mBcqzAu4k0+RyN+NiHfDxT5Put2KPLNayLf1Asg
Dq+AfP+LyPdZt/WRz34R+awegPh5C/L6ZyKvZ316I7+uJPJrrl91QF7fWOT1
rM98yN89RP7OdS25nfQp21mLuFd+LunTHzjDgLMl4ti6GNcnjIv0Vg48fAYP
FGcOAW9XwRvpTeaZ6maDUQcLFXUwneLMTqjbBIq6jU5xpnx+R/vjAOTvl0T+
zrrtjbpZWVE3Y/+/EHllO5FXcr1xE/LWtCJv5XqjI+pXb0T9iuuoGVA3Wy3q
Zuz/r6E+5pgjqT7G9VW5nfy/bIfiTBkPrQsZD+0L8zGuNtbj0najnn9L1PO5
/tkPvF0AbxRn9gRvpcEbxZkdMC8BmBfaF+R5pDjTDXXRYFEX1YYjzpHPDWke
A1Bn+yHqbLxfFEIddY+oo2pnEOe4oB5VRNSjuB5+HnWt6aKuxfXwnKhnJoh6
Jp8L1EddNMOUpLoonwvI7RQXyfbJ/8v2KS5K9984tU04J+ouzom4rn4YPMSA
B4ozC4CHXeCB4kyZZ4oz5fNE4nkw6syVRJ1Zy4l4qTvqscGiHsvnLO9R110q
6rp8zvIO7YvRTnFLN9g5AzsUn5zCOeBOcQ7I5yYDgac88FAcmOqxOCctKM5J
+f7JsBy1XRO6u6gujWN7rGkbz7/XbOcnzlsziPNWvpfy4PHpEv4xadXj+RdF
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
       "], {{
         {RGBColor[0, 0, 1], EdgeForm[None], 
          GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHUcFsXXxXdntkDsAhtF7EbFFsXCxu5uFAvFREHEQEFBDFDB7g5sEFRE
RQWkTFBsDOx+z5czv8/7xzx7n9nZ2Zq599xz72zbI7t3PSVkWXZ+lWVR22/0
c2iZZbMkj2iy7Nw6y/7Js2xflW1U9lL9JNXNUfut9X9/lc4qe6t+gNp3Vjml
yLKL1OmBqt9H9UNUt4yOOUP/T9O+G9T/IZKvVf32nEN1vdX+YM6j9tepbmeV
y1T/vo4rVfbTvoP0/3SVnSTvru2xKltK/kL7l1c5R/JRKnuoHKx+Ttb2AJUj
JR+j7a70IXmg+p6v9vkOUR9nqOws+SPVza9yuOSp2v5VuX6K5D8qn3dPtT2u
8L1/rPoFVY6UvJTu6TTJP0l+V22fV9lI55qhuqiyD89CbX5XWVP3upW2v6ks
KnkLbfdWWVjyoTruOrV/W8ceLvkqye9KPkzyEMnvSG6h85+k9pn6HKP6x1XW
0d+/Vfeo5LUlr6Q2Z+t/a7W5S8fdr/qlVD9B22dVNpR8gLZ9tW+85CMkXy15
ouTfNAaO0rHfSb5RdSO0bxHJP6n+CNV/LfkXyUdK/lbygdp/qdq9IbnWeU9U
/b+Sb1Pd3drXWvKfqrtF8kKSr1f9rZIXljxc8p2Sl5R8h+R7JbeR3J13xfuU
fLWey2mSj5a8uN7dkWo3U//HaztV7Tuq/kqd93ad40zV91ebX1S/neTX1Gay
5I3V5i3JH0heX/VXqc02KofruEu1PVDlLcm/qs1aKteqze/arqNyneS+2n+A
yhtqc4W2B6vMZiyq9NN5N1Wb+VS3g9o/KXlj1e+qsprkK1W/H+9U8raqO0Cl
g+TdVDZS2UXXtqPqvqjcz86SL1Ofm0meX8fupGOfltxJ9fsXvv63Vfdx5X7G
Mi4qn+tlyW9JXkXyRL2jffkv+SQ9w47abqVzbajtiipbSv5H+zdUuUX/e6nv
W3TeEyTPUt0SKt0kf6rtkiqnSL5Z17OXym1qewLzvPDYvlF1u6sMpg9tV1f7
K1S/GM+Ya5X8ubbLqZwt+Ri1G6RzdeXaJF9ceI7303Uey7zUtU1U228qz/Gj
tT/Ubl+pz60lPyC5kLwl40byf9purDKc56N731Pyy7wLleVVtlCfu2i7CbpA
8uU69iCV6er7ApWbdT3Ha986ks+XvJLky7S/i/oZKfkcXdvuvDcde5TaXKs2
e+r/89r/qq5zXdU/JfkF3oXkJyQ/J3lVyX3VfmjhZ9hH25sKP9sbtb1X/VzE
s5X8hEofyddre4/qe0leX/20V7lI/XRO72uA5Cxd27USt0/3PlDyv9ruqHKN
5I0rP5/rJXfQdlWVi9GxupcL1Hc3dD/PV+VEybfqvE+q9NX/NdV2JZVzVX+N
6u4urGMf5zp1bddLvkTlVPS62jyq+sdVP0T/bwl+/2eq/lxtj+M9S75U29Mp
koepzWWSz5D8lc6ztsp5kseonxkqd+Z+N2PV5zOSn5Y8gWcneaHKY2NbtV+4
sj3qLHkBbXP10wldUVnP7yh5wcrjZ5vM9un60vapn+Thhe+hZeU5tbnahMrz
qIPkWHl+oTPRF9eUHgdttd0YnZ7e124acyerzU6q+1llOd3fXJ2zo0qfzLrj
RdU/mFvXvCT5Ick/aP9GKr3RvdpuxdyR/JLaPKM2t6nNvZJHqVyNzdW1XKs2
rzOXJa+A7ZO8RdJXl0u+X21HqwxEx1TWaZfRXnW7FNYPd2r7kPq/EptZe07d
oDaTdd2fqe5hydO0HYUNkTxH7aPaj0c/qExQeQgzpLr3VD7gOegZ3FAbP0zB
PqncLXnv2rrxFslfqJ/xav+K9p0t+arCNvQTlTdVHlSbfWrrvVvBJMx9tR/H
HJc8WfL7kv/SdrjubXm1eUTb23gWkp/R9j50oOSntb1HpT36X/c1XcfdI/lB
9f2Y6ttKXhJcob7m1779VHeN9o1TfQ/V9y+MBwYG45djGFeqO03tW+n/T5Lf
lvyO5AWSnh+hNq0a697hvFN0KHpC8vdgC5UneZ7azlB5SvL76v8HxrjkP7Sd
rfKC5Dbq+2OVufpfartMaV1aNtZvN2a2Q6+rfqzqa22XLW0fl9b2k9KYZJb6
/0vbF9X+s2BM9xLzTnKt8irXqX4WUPtJ2B1tZ6h8IXmK9n+u7SPMNdWtCgbQ
/1W0nY2tRyerzXfYIrVZVHWrgQ30fwPaqrTQ/gHq/67C+n9D1X2j0lL1hcqP
qnuFe9f+BRlPvAvGhuTt0Rdqs62226tNe9WdV/u8g8Bu0brlU+wyuE11y6lN
F7BOZt02OFi/gdM2Y3zw3NT+aLVvgf0ujYfGp/63kfxo5nd+DTZJ8pdqfxY6
UftXR/erzWjVL626FStjV8bzndgRdHJpDAd++1PHHqt286nuD8mHgqsLY9A+
6n8/tWmpusXUfgfJu6rNSpXrsUlXqM1hmW3urfSbxucdko+T/LPa/6T2+6ju
J8mf0w/4BOwteY/Mdna42h/BHFR9N51v8dIY+apgnNxH9fs01jfbqawVjROw
nycG29BP1d+/pe0d51g7GleAKboFt/9BbcqEu45Qm47RdhP8fB12P/O1bhD9
TnvpnF0b28DVVC7hPWXGQzgo6PM1sDPBer6Nrr1tZf/iBnCXynmF9fn20bgR
/DggWD5Z9ZtH+yn4Mb2CfRn04eWl7cJeYCu12U7yXPX3o/rfm2eAjQquB9dd
UdruDFObXVQuL4wpzg3GFT+qboqO3Yxn2NgOYYPeiLbN2OV/1bbS/2W1HRtt
m7HL34MRovXeP9pXSi5z69yxwfoTbFOr35sy+zSXBvs15+jYTtG+z/vavy2+
A7ZU8uaSX5G8iLZLVX4XfzP31L5j8PUEyZNUX2v7n/7PlDxC7W9X+x8kbxRc
v5TK/eAvbGruuhjd/szCfhQ6k+vPVb+g6sdF2zbsGu05x8bB14DjqebZLdo+
pDZfSp6qa95A8jPq7wPJ20meVNi3uyz4Hj9U/a6q/7Aw1kX/onvxRy8Oftcf
gUvBn2rTXWWL6DHzneqn6fq3UN23je9lvsI+5o16v/vzLlQ/Dtupuq8bP4c/
dPwcya9LXo9xqrJm5Tk1UfV17bHWaLto5bGNj3kT84x3pzbfVx5ro6MxFvjq
eP1fVvV7Zsa64BjG/I5qv7Tk3bFfkmdWnpcDmTuV9cwPqv+McxXGWUOC9eGW
Ouf3Kovo/7tq84/aHKY2LSr7QcyvbVU/P758Zp96cOlrALvdquN6SF5N17hu
ZdsHdrs5GL+BLUZI7in5LvVzJforGKMM1/Zs7L7q16usP8GyN6j+FMYV7zK6
n1XALZX9O2zEw7qGsyTvoWNXU/2hkttKvhBfWsffrjZ7RuPGZVV/Zm0M9jxF
+69T/W3oWJV11VcbbU+sbY9WkHy+5Dx4Prxauv2dqj+q8TNr19gvnh98qvP/
JPkStblX9cc1xncvYp+1f0hm7Dg0GAPvie9TWVeD8+9T2+6SH5a8bzS+ba02
x9e2oRdVxr7UXwymlXy+5MHad3swPu+t+m9Vf4HkfpIv0vGvqq8zg31c7MVW
ufUjurFTbp2Fvro/2B9Ct4Cb79b/Xplx/lOl5RcY99H4E9x/U7oXfJb71ebU
zD7JjcEyvsAjpd/vCNU/EIzzh4Gtgv2USyvj2t7pmucmDAy2f0XHDpb8oOR9
osf/c5IPjL7OW9XPfcHvF//q/GD7tYzu+3T182tuf+zZ4D6vA9NGP6tX1OYV
nW8N1T0t+S5sVbTueFPnvRk7hR9U2cccrTajwIo8D8l3SP4rWu+MVvur1eYB
cEJjzgYfZJS2V6n+ZdW9XNlePQqmC26PL/+f2qyX2We/WvJOmd9Vj2BbwDzc
ONpe/Kc+WlW2oc+rz6ckL12YKxgAjmF8qu1Ltft8Vm0eVJv5C/MHPYM5hBdU
P1L1y6r+Z22rxI08p/qHJS+IfwbeDPYf39P/o6N9xnvU5jDmKv4J86UxX/Wp
2pwYjTOnSj4m2n4NUX+N2gyV/FBjzmpt9XuN6vFL8UmxPW+oj2GSr8UvU/0g
yTNVf0K0r4F//lKwXQDfjwl+R6s25r5a6/9qjbkp7M5TvPvgcXWV+vxT9f0z
+x3wSnBKr6v9JO3bBPyOzlb9lZl9oud0PZdm9i0fCpbvxteR3I82kh8Nno8r
N+a1Fgy2TfgM+AuvqZ/Dov2s1/EPoq8fe44dxYY2Ou9v8DmSl+D91h4Df0ue
VttuY6ufTPb6E8ZpZXw1G1tUGUeB17Ax2JdN1PbRaFuwhOo/Ku0zoMOvhhdT
u220/6nosZ3pPNNr28y+wVzmgZn5lL1zY7ALgv8jo3fvKax7v8mNwe+UvJv6
Xr8yzmyh/laobFu/yu0r3IG9UN3PtXX/hWDm3DYIrH9Vbl2BzrivsAyPMCC3
7bhSx/5S257cFsy94c921X2MitYtU5MPclvmOXFw4XnRAcwQrQPBZXsUxmYT
K/vt+OxztX2vNi4Al4Lr8CXAAo8nPACntmPuPvE3dsj9vi4J5n2x3XBeD5bm
LFpqO720n4zNxH5jNy8M5obBlu/pPEVlHhjeaq/cbTavzBXfL3mLyvzYA5n9
klNr+yZf5va9bpe8XjQmAA/A93VR2Vnyd2o/uTaeBds+lvAt+ubAwtd/ZTA/
x/hhbv+k0gTr59/RldH2/PLctnhR9bdK5TGJbT8nvSN8GjAHeGOebU/vFL+9
p8oJkg9Q/ZKSl5Z8eDB/tlJm29gvt01ZCj1RGZODEc/K3Sdj7FfGcbIDY5Mt
gM/tkXvs4RNdr3JFYZ+LuAL+WXuVhVRWzuznnZfb1wMjvJRwQpvcXPgy6Rpm
18YyK6u0o2TGIy8mTNJa+z+rbdt3ij4PGGZHyc9GY6E+uo911eZC+tT+qLKs
5N15F4VxzlqVuVN8q76VuTzs4wDsTG2bzPUOSteMTR5Z2C6jY15LegYcdSv2
qTAeg2MFo8Hd9M89Z/FDHih9X3tF7we/8eyHpuc/UOf9u7atBm+cr37GqO3C
OnZ1cGtuHuuRwlzWMvpfqSwn+Y5gLhx7jc4bl/TeJWDh2te8qI47V9cwn9rd
G8wrc79rwkXjJ2Ueazen8fak2j5V+Bmuqe15+t82t92ZWJo/wpbB6WM/N4ze
YkPx/R8o/PzAAI+W1j0PSX6sNIbqUDk2xPgEgz1f+h7AznDRjD3wKXw17/fG
3FgHnHNDbo4T/Ib+W6P2OLwrmOPk/fJc+6Zn+0QwtwdOezmYj+mf7Ox3heMC
2IvXSnPX2JFPCnPX2Na3SvP8rwfHCrCVP6h+QmkO//Xc9hvbPUv140rbz9dy
4w+wx6u5eTXwycO5+UWe7R25dTNz9q7cupZ5DQZ7tbDOhS+5pDZnsm1ljuWx
zFwIcUD4kJ0rY7DnJO8kuQ8+muRdKuNwOK69KmP1MZk5kv61eZJ26MvSPNQ6
2u6oUupeu1bG5C+rTefK2PhxydtVxu1PYIvV9juVv3Xs87rekaVx4u25+VHG
/zjVv1Dahj8YjE0Z//gazxaeB/gOT5ceg+/m5u3Aokuq7svSPNQLuTEBeAD/
4avSHNnE3D4G/sLk3D4A+H9VbRfJzTE+lntuMeafy40zwBiV7mP5ynaBOAex
SXQCmLpbGm/Y6zaVMeHfus5JpfnKLhr7v6j0Vt2HuXlWMBVcQVOaM/1R8rTS
nCzxmxNzc0To/pOS/h8UrK+ZC/BCg/GpCvNnzyUODW7mxMJ4APsCt45PgU0j
Bsz1g7WfT3j7nWAudmiyHTNr+6BgvD8Lc8cLqe6T2jwc/uwgfLDCWGjh2th1
W/X3dLSvh698VmGbCycM9wHvsaX2PxHNs4FbxyfsSiz50Nw+O7b6sNzHLqBr
+zN3XHLLynFDuOXl1f9Gpf2I54J9Cfw7fJDJhXUWPtHLpX2nKZLHlMaez+aO
RfRV+62i+Ts4OrDVEbnx1bXBtm0eB6g2IxMftQN+RbSfC476sDZHBT5ZpLK/
xjj5oDYn1z94rDBOPsqNj8HG8BPwLNzvI7ltCLoXrukalVML+3CnJL0Er0jM
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
             "]], 
            Polygon3DBox[CompressedData["
1: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
xDDGLu6ZlFs7tE59Qo5N7kP+Qq24HIh6SfWP1ib1aWq95RTkEpYdxFfoMxbB
vmIVPYyaHuvL1pnVWsspySXNhu3sJjGTsZJ7OOVO5FfUgsuh+PdM04ZLsfZp
7G2+rjbcGNy9HNO30XtaS7ytjh7TWukovN9lTfQvciFLdXyRmjD1Geo0/H2n
a6M3Nca6vEmMamzqnjTnsnNaPeVFZXyd66e1NWtIPl99prHUBWW08PJdauXV
xLsXVD2ktbnLymjp5Z/UA6sLNrYyxlJveWmZWM6Yzr0As1WJHV3P1YfOUSXW
MOZYvJeakHtF1Wf6fS/vft8N2+gL1LRbq9I/WFuzZqUezPzJ+oJ1Bv2Leklr
XatX0ZuZj1k/sI5grDY0Zuul7nJklw9ZP7COYP65XBt+31jK/ET+7kHwdIPk
8+o7rcUtXcUf6V+MTZevEivpH9wbsWCX75m/qx+pBtHyb95GL6KmX+2+fMqj
vejw5QfMT9X/jDrI/DcnmAh8TplcwPXJvdrWyNy7sEkbPYd7GMyfzP/Vp9SD
jOct2uhRjurm+1Zt9CjucTH21P+qd1y4yl5g9bjWdi8ukzuYQ/j/R7CmKX+w
VJvYx1jPvSHyk+q11W3Lrwypk8tYc9ffGoMay65dZa+OfKd7Sdyz414A/aH1
JOtK7n1QQ6Z2bJZB9GZq2NTLHNSNr5na1E+N4R2PM7epr1o7d/+IMZixlz7H
evWHdfZmD9UEt/HH1rOGdPzFIm1qp+YW7lU4ug5/7Z6F25rovdRKu0fLvSk+
w3vr156to1e2lj9Vkf3kfi9zt896mW8ztNF/6UPdf+ecdi47R92f5XpoLuSc
d2+Me2T0v/pha6fyZUv0UkN9u47+WC3BrEX216hXtfZvDuPeB+PDg3vZAyF/
smSb2qqxq7VK/ZG1UGuW7j0xP/f/fbJX9/erIVU7+kQZf6p+0/rCs2XiGzWn
1n+tAxt/qiG1PmKdRD5msTa1XnMZ94KoObUeYl1EvmfdNny/e67UM8oHqH3a
s+OLVm1TfzO3NRczPnB/1K5dfGYO436n/1Thp1ZsU99ZtOOvVmr/P/cydzKH
cn/WllXG1wZt9EnusVG/KZ93eS/7MswtjAc27qVm7P7hP+gzTBEf7PyYsU09
V22G+5/Uu6v9MAd2f69jwrHgGHX9e7pO7Lpst/49VydXMId275T38FrzaPff
u36amzqmr2/CGcgVuAfTvVXusTKfNq+2vUcd7YDnHqijz1fbMh7HtXXiA/dC
DYrsBVIzql5K3ZTrkZpMtZhLDzL21PurpXEMyp+r4VQvpW7KvTrmI9aP1+vW
H2sa1jIWHIT/37xOLq9Gx9xIPb3aEHMk9SjGnMaa7hmQW1Gfr3bDHNL9n38a
RxaZMx/U2T+glmTOIv5hljb5vloV9//rz4xN/SZqp9VQm++b97sXQh+vbzdv
1SYnIxdjH/Ut6j/dC+AeAPe37VNHeyGH8Hcdfb9akeWLrJfv1MllzNndW+ge
Q/kOeQ/3ujknnYvyCu7VkX+7sJc9O/qH/9bJdcypvdb9DWphvId763wHny2P
8X/M+YUi
             "]], Polygon3DBox[CompressedData["
1:eJwl1nmwjlUYAPAvrnuvjEqRVJRoCtmV7MquRLhIt3BRti7SoEJFG2OUJnVD
xNWlImuWjC17CMlStK+WGaJspen3zPvHM3Oe33nOeZfvvOd85XMGd8wtlEql
XhRFRJPMVGpRRirVET4JSqelUkvld/D3CqdS5USWvk9YVTZLfpPoyhrLF/IH
tYcaW8rYz+Q701OpOtpjWC99m9hudhd7juWwe4xdx3toj2LV9TVlK9hDbASr
wJrJi/KNbAfby9aw6myO+6goHtVXy/wPsEn6C8TEy1Kpo+qe55+pWWxsvroK
8nbqJqjJZ5NZS/kNfLz2dPaMvuasJBvL3ma5aUlNaz5K+90iSX0V1paNZVPF
C677veteIYaHqXtJXSl1LdQNYXlsHCvOmrEc9gZ7llVmD7I89gHLYxfMNZFv
9xxr2FJ2ir3MNrMV7EN2mr3CtrCVbD6rKe8c78p8H7OZ7EbWho1hM9gEdtzY
F/hGY5ew91kleQd1b6mbx95mbVgvVkd+XJxgB429yLPVvcZGsHszk+eLZ5rM
euprn5nMGfPMZW+yA8aeZ921J7Hh+lqpu51N0S6I96Kvg7wvbyo/Jc7oa816
slryY3E/7FPzVWP5nqOCyGbd1OWwu9W0FxXZffJb+Ovas9mrrnE/q86ms/nx
+7JOrAabwRaw2eywa6SJAdpT2Bh9XdX0V3u//Kw4z7pkJu813uVStlh9F3X9
eFv53+JcjJWfUFegvSx+X3WPqhvIu8gviH/01WePsOvk34tvWQ/2GGsu7yZq
sS/NdSy+B/OMZ4PZADWPsIva51mW2KfuRPzG6ibIh+hrqG4ubxNjWIa+Rmwe
a8sGsqLx7cgr86necQnRQt8gdj37Rns0K6W2nnwab8R6xe/G67PprDHLiffA
hsvL8R/Z2PjteAP5u7wJ6x3viheP31Hs1R4stuorKe8Rv4maA7FHsDnyfp5t
mpp+rCUro64/v1p+RHzNirG6Yo+6XLGZXSd/XN1Vag6LQ7Ee5FXiftSUEQ/E
Ny3vxdPVHBRfFkqetbfrvqOmZ5HkuR9jpdXu136aF+Pb1KzNSPau2MOqeqeb
2eqMZM3G2q3C9sX3HHOy21m9WBvya8z3BXuKXWLZ8VxsJxvG/olvK/YM3je+
ZdaAtZBfrm4T2xlrgNVm/4rlbANbxfrIr1W3j400tmi8f/OdFV303xG/o/Pj
N/letYPUVWOt9F1ih9hIVpf1YBnyI+K5WGPsidgP5CVcYwfbG2uatYv3zj5n
e2KNs6Pm+yP2We3bjK3tuj/K98Q3qK5qrD9978hzeF5cM9aPvjPy/XyYdu04
y9SdZF+xoXFusE7x7uU1XLegcPKe431nyzPEBu3t5vtV3UOZyX4ce/BatoMt
N9+GjOSsizPvBvYVqxXfjbkqi7rueWXsrxnJ+RfnYFl169nOWKtsHLuN/cJ+
FjWMudXYlizLXPXU5Ttf1sfZEGetmi9Yf2NfNLYSW8hWsYdjrbEr2Z/sVHpy
D3EvnWMNZSb7Z+yZR9XVELuN+47dm5bMF/PuYodZ07Tk/uI+uxl7hi/QXsXW
6dsmrxl7R+FkrcWaO2Tc6PRkncR6aaSut5r27LT+k8Y2Fh1jjzU+z7Mti7NV
LFCzknWP9aemOJvPPmLtWC4rxsobOzr+r8h/j9D3MLtMrI7/HvGdq0uX3xXf
jPsYINbrKysfZuzNan4SP7A0dqfYpaa/WBtnULzjOBfC1LVmZ1ltdVtjrYlF
7BKrE2tX3ifO5ULJ/6NcY2fKhxRJ/is1ZIXVrdHewjbHGoo1qm527IWxl+vL
l8/izWIPiXMgrmVcVnyHsbZZTfF4ZnKuxFnyl7yNmCNfbGyn2A/i/DC2gC1h
nWPfYP+x7sZeZMvYOrbLvWxX93R68p3F91Yz9gN12eyCunPqmsSfRzY51q+a
jfJP9f0P/zlXOg==
             "]]}]}, {}, {}, {}, {}}, {{}, {}, {}, {
          Line3DBox[{779, 1010, 1377, 1011, 2157, 780, 1044, 1393, 1045, 2165,
            796, 1070, 1404, 1071, 2170, 806, 1096, 1415, 1097, 816, 2190, 
           1122, 1426, 1123, 826, 2195, 1148, 1437, 1149, 836, 2202, 1174, 
           1448, 1175, 846, 1200, 1459, 1201, 2173, 856, 1226, 1470, 1227, 
           2181, 866, 1252, 1481, 1253, 2186, 876, 1278, 1492, 1279, 886, 
           2208, 1304, 1503, 1305, 896, 2211, 1330, 1514, 1331, 906, 2218, 
           1354, 1525, 1355, 1358}], 
          Line3DBox[{781, 1012, 1378, 1013, 2158, 782, 1046, 1394, 1047, 2166,
            797, 1072, 1405, 2285, 1073, 807, 1098, 2246, 1416, 1099, 817, 
           1124, 1427, 1125, 827, 2196, 1150, 1438, 1151, 837, 2203, 1176, 
           1449, 1177, 847, 1202, 1460, 1203, 2174, 857, 1228, 1471, 1229, 
           2182, 867, 1254, 1482, 1255, 877, 1280, 1493, 1281, 887, 1306, 
           1504, 1307, 897, 2212, 1332, 1515, 1333, 907, 2219, 1356, 1526, 
           1357, 1360}], 
          Line3DBox[{783, 1014, 1379, 1015, 2159, 1381, 1018, 1048, 2230, 
           1019, 1395, 1050, 1074, 2236, 1051, 1406, 1076, 2238, 1100, 1077, 
           1417, 1102, 2247, 1126, 1103, 1428, 1128, 1152, 1129, 1439, 2293, 
           1154, 1178, 1155, 1450, 1180, 1204, 1181, 2175, 1461, 1206, 1230, 
           1207, 1472, 1232, 1256, 2267, 1233, 1483, 1258, 1282, 1259, 1494, 
           1284, 2271, 1308, 1285, 1505, 1310, 1334, 1311, 1516, 2299, 1336, 
           1359, 1337, 1362}], 
          Line3DBox[{784, 1016, 1380, 2282, 1017, 1382, 1021, 1049, 2231, 
           1022, 1396, 1052, 1075, 2237, 1053, 1407, 1078, 2239, 1101, 1079, 
           1418, 1104, 2248, 1127, 1105, 1429, 1130, 2254, 1153, 1131, 1440, 
           1156, 1179, 1157, 1451, 1182, 1205, 1183, 1462, 1208, 1231, 2263, 
           1209, 1473, 1234, 1257, 2268, 1235, 1484, 1260, 1283, 1261, 1495, 
           1286, 2272, 1309, 1287, 1506, 1312, 2276, 1335, 1313, 1517, 1338, 
           1361, 1339, 1363}], 
          Line3DBox[{8, 578, 1952, 23, 273, 1719, 38, 296, 1742, 53, 1539, 
           319, 68, 1553, 342, 83, 1567, 365, 98, 1581, 388, 113, 411, 1842, 
           128, 434, 1860, 143, 457, 1876, 158, 480, 173, 1598, 503, 188, 
           1612, 526, 203, 1626, 552, 218}], 
          Line3DBox[{253, 252, 2161, 788, 279, 2168, 801, 302, 2171, 811, 
           2188, 325, 821, 2192, 348, 831, 2198, 371, 841, 2206, 394, 851, 
           417, 2177, 861, 440, 2184, 871, 463, 2187, 881, 486, 891, 2209, 
           509, 901, 2214, 532, 911, 2222, 558, 561}], 
          Line3DBox[{789, 1030, 1386, 1031, 2162, 790, 1058, 1399, 1059, 2169,
            802, 1084, 1410, 2286, 1085, 812, 1110, 2250, 1421, 1111, 822, 
           2193, 1136, 1432, 1137, 832, 2199, 1162, 1443, 1163, 842, 2207, 
           1188, 1454, 1189, 852, 1214, 1465, 1215, 2178, 862, 1240, 1476, 
           1241, 2185, 872, 1266, 1487, 1267, 882, 1292, 1498, 1293, 892, 
           1318, 1509, 1319, 902, 2215, 1344, 1520, 1345, 912, 2223, 1366, 
           1529, 1367, 1369}], 
          Line3DBox[{791, 1032, 1387, 1033, 2163, 1389, 1036, 1060, 2234, 
           1037, 1400, 1062, 1086, 2241, 1063, 1411, 1088, 2243, 1112, 1089, 
           1422, 1114, 2251, 1138, 1115, 1433, 1140, 1164, 1141, 1444, 2294, 
           1166, 1190, 1167, 1455, 1192, 1216, 1193, 2179, 1466, 1218, 1242, 
           1219, 1477, 1244, 1268, 2269, 1245, 1488, 1270, 1294, 1271, 1499, 
           1296, 2273, 1320, 1297, 1510, 1322, 1346, 1323, 1521, 2300, 1348, 
           1368, 1349, 1371}], 
          Line3DBox[{792, 1034, 1388, 2284, 1035, 1390, 1038, 1061, 2235, 
           1039, 1401, 1064, 1087, 2242, 1065, 1412, 1090, 2244, 1113, 1091, 
           1423, 1116, 2252, 1139, 1117, 1434, 1142, 2256, 1165, 1143, 1445, 
           1168, 1191, 1169, 1456, 1194, 1217, 1195, 1467, 1220, 1243, 2266, 
           1221, 1478, 1246, 1269, 2270, 1247, 1489, 1272, 1295, 1273, 1500, 
           1298, 2274, 1321, 1299, 1511, 1324, 2278, 1347, 1325, 1522, 1350, 
           1370, 1351, 1372}], 
          Line3DBox[{913, 997, 1352, 1327, 903, 991, 1326, 2279, 1301, 893, 
           985, 1300, 2275, 1275, 883, 979, 1274, 1249, 873, 973, 2261, 1248, 
           1223, 863, 967, 2259, 1222, 1197, 853, 961, 1196, 1171, 843, 955, 
           1170, 1145, 833, 949, 1144, 2257, 1119, 823, 943, 1118, 2253, 1093,
            813, 937, 1092, 2245, 1067, 803, 931, 2228, 1066, 1041, 793, 925, 
           2224, 1040, 1005, 776, 919, 1374, 1003, 1373}], 
          Line3DBox[{914, 998, 1523, 1329, 2216, 904, 992, 1512, 1303, 894, 
           986, 1501, 2297, 1277, 884, 980, 1490, 1251, 874, 974, 2262, 1479, 
           1225, 864, 968, 1468, 1199, 854, 2295, 962, 1457, 1173, 844, 956, 
           1446, 1147, 2200, 834, 950, 1435, 1121, 824, 944, 1424, 2291, 1095,
            814, 938, 1413, 2287, 1069, 804, 932, 2229, 1402, 1043, 794, 926, 
           1391, 1008, 777, 2281, 920, 1375, 1004, 1006}], 
          Line3DBox[{915, 999, 1524, 1353, 2217, 905, 993, 1513, 1328, 2210, 
           895, 987, 1502, 1302, 885, 981, 1491, 1276, 875, 975, 1480, 1250, 
           865, 2180, 969, 1469, 1224, 855, 2172, 963, 1458, 1198, 845, 957, 
           1447, 1172, 2201, 835, 951, 1436, 1146, 2194, 825, 945, 1425, 1120,
            2189, 815, 939, 1414, 2288, 1094, 805, 933, 1403, 1068, 795, 2164,
            927, 1392, 1042, 778, 2156, 921, 1376, 1007, 1009}], 
          Line3DBox[{916, 1000, 1364, 1341, 908, 994, 1340, 2280, 1315, 898, 
           988, 1314, 2277, 1289, 888, 982, 1288, 1263, 878, 976, 2264, 1262, 
           1237, 868, 970, 2260, 1236, 1211, 858, 964, 1210, 1185, 848, 958, 
           1184, 1159, 838, 952, 1158, 2258, 1133, 828, 946, 1132, 2255, 1107,
            818, 940, 1106, 2249, 1081, 808, 934, 2232, 1080, 1055, 798, 928, 
           2226, 1054, 1025, 785, 922, 2225, 1383, 1020, 1023}], 
          Line3DBox[{917, 1001, 1527, 1343, 2220, 909, 995, 1518, 1317, 899, 
           989, 1507, 2298, 1291, 889, 983, 1496, 1265, 879, 977, 2265, 1485, 
           1239, 869, 971, 1474, 1213, 859, 2296, 965, 1463, 1187, 849, 959, 
           1452, 1161, 2204, 839, 953, 1441, 1135, 829, 947, 1430, 2292, 1109,
            819, 941, 1419, 2289, 1083, 809, 935, 2233, 1408, 1057, 799, 929, 
           2227, 1397, 1028, 786, 2283, 923, 1384, 1024, 1026}], 
          Line3DBox[{918, 1002, 1528, 1365, 2221, 910, 996, 1519, 1342, 2213, 
           900, 990, 1508, 1316, 890, 984, 1497, 1290, 880, 978, 1486, 1264, 
           870, 2183, 972, 1475, 1238, 860, 2176, 966, 1464, 1212, 850, 960, 
           1453, 1186, 2205, 840, 954, 1442, 1160, 2197, 830, 948, 1431, 1134,
            2191, 820, 942, 1420, 2290, 1108, 810, 936, 2240, 1409, 1082, 800,
            2167, 930, 1398, 1056, 787, 2160, 924, 1385, 1027, 1029}]}, {
          Line3DBox[{1530, 1694, 1944, 919, 1943, 1695, 1946, 2281, 1634, 
           1945, 1697, 2156, 1635, 1947, 2105, 2157, 1636, 1948, 2106, 2158, 
           1637, 1949, 2107, 2159, 1951, 1638, 1950, 2282, 1699, 1953, 1639, 
           1952, 1701, 1955, 2090, 2225, 1954, 1703, 1957, 2283, 1640, 1956, 
           1705, 2160, 1641, 1958, 1707, 2161, 1642, 1959, 2108, 2162, 1643, 
           1960, 2109, 2163, 1962, 1644, 1961, 2284, 1708, 1963, 1645, 1710}],
           Line3DBox[{1531, 1696, 1964, 2091, 2224, 1712, 1698, 1966, 926, 
           1965, 1714, 2164, 1646, 1967, 2110, 2165, 1647, 1968, 2111, 2166, 
           1648, 1716, 2230, 1700, 1969, 1649, 1717, 2231, 1702, 1970, 1650, 
           1719, 1704, 1971, 2092, 2226, 1721, 1706, 1973, 2093, 2227, 1972, 
           1723, 2167, 1651, 1974, 1725, 2168, 1652, 1975, 2112, 2169, 1653, 
           1726, 2234, 1709, 1976, 1654, 1727, 2235, 1711, 1977, 1655, 1729}],
           Line3DBox[{1532, 1713, 1978, 2094, 2228, 1731, 1715, 1981, 2095, 
           2229, 1980, 1734, 933, 1983, 2113, 2170, 1656, 1984, 2285, 1737, 
           1657, 1738, 2236, 1718, 1985, 1658, 1739, 2237, 1720, 1987, 1659, 
           1742, 1722, 1989, 2096, 2232, 1745, 1724, 1992, 2097, 2233, 1991, 
           1748, 2098, 2240, 1994, 1751, 2171, 1660, 1995, 2286, 1752, 1661, 
           1753, 2241, 1728, 1996, 1662, 1754, 2242, 1730, 1998, 1663, 1757}],
           Line3DBox[{1546, 1759, 1999, 1758, 2244, 1545, 1756, 1997, 1755, 
           2243, 1544, 1783, 1782, 2250, 1543, 1781, 2188, 1780, 1542, 2290, 
           1777, 1776, 1541, 2289, 1750, 1993, 1749, 1540, 2249, 1747, 1990, 
           1746, 1539, 1744, 1988, 1743, 2239, 1538, 1741, 1986, 1740, 2238, 
           1537, 1769, 1768, 2246, 1536, 1767, 1096, 1535, 2288, 1764, 1763, 
           1534, 2287, 1736, 1982, 1735, 1533, 2245, 1733, 1979, 1732, 1762}],
           Line3DBox[{1560, 1787, 2007, 1786, 2252, 1559, 1785, 2006, 1784, 
           2251, 1558, 1804, 2193, 2117, 1557, 1803, 2192, 1802, 1556, 2116, 
           2191, 1800, 1555, 2292, 1779, 2005, 1778, 1554, 2255, 1775, 2004, 
           1774, 1553, 1773, 2003, 1772, 2248, 1552, 1771, 2002, 1770, 2247, 
           1551, 1794, 1124, 1550, 1793, 2190, 2115, 1549, 2114, 2189, 1791, 
           1548, 2291, 1766, 2001, 1765, 1547, 2253, 1761, 2000, 1760, 1790}],
           Line3DBox[{1574, 1807, 2015, 1806, 2256, 1573, 1805, 2014, 1140, 
           1572, 1821, 2199, 2125, 1571, 1820, 2198, 1819, 1570, 2123, 2197, 
           1817, 1569, 1135, 2013, 1801, 1568, 2258, 1799, 2012, 1798, 1567, 
           1797, 2011, 1796, 2254, 1566, 1795, 2010, 1128, 1565, 1813, 2196, 
           2121, 1564, 1812, 2195, 2120, 1563, 2118, 2194, 1810, 1562, 1121, 
           2009, 1792, 1561, 2257, 1789, 2008, 1788, 1809}], 
          Line3DBox[{106, 660, 843, 107, 662, 844, 108, 845, 109, 846, 110, 
           847, 111, 1450, 665, 112, 1451, 666, 113, 667, 848, 114, 669, 849, 
           115, 850, 116, 851, 117, 852, 118, 1455, 672, 119, 1456, 673, 
           120}], Line3DBox[{1588, 1823, 2023, 1168, 1587, 1822, 2022, 2294, 
           2126, 1586, 1835, 2207, 2132, 1585, 1834, 2206, 1833, 1584, 2131, 
           2205, 1831, 1583, 2124, 2204, 2021, 1818, 1582, 1159, 2020, 1816, 
           1581, 1815, 2019, 1156, 1580, 1814, 2018, 2293, 2122, 1579, 1829, 
           2203, 2129, 1578, 1828, 2202, 2128, 1577, 2127, 2201, 1826, 1576, 
           2119, 2200, 2017, 1811, 1575, 1145, 2016, 1808, 1825}], 
          Line3DBox[{1589, 1824, 2024, 961, 1836, 1827, 2026, 2295, 1664, 
           2025, 1838, 2172, 1665, 2027, 2134, 2173, 1666, 2028, 2135, 2174, 
           1667, 1840, 2130, 2175, 2029, 1668, 1841, 1183, 2030, 1669, 1842, 
           1830, 2031, 964, 1844, 1832, 2033, 2296, 1670, 2032, 1846, 2176, 
           1671, 2034, 1848, 2177, 1672, 2035, 2136, 2178, 1673, 1849, 2133, 
           2179, 2036, 1674, 1850, 1195, 2037, 1675, 1851}], 
          Line3DBox[{1590, 1837, 2038, 2099, 2259, 1853, 1839, 2040, 968, 
           2039, 1855, 2180, 1676, 2041, 2137, 2181, 1677, 2042, 2138, 2182, 
           1678, 1857, 1207, 2043, 1679, 1858, 2263, 1843, 2044, 1680, 1860, 
           1845, 2045, 2100, 2260, 1862, 1847, 2047, 971, 2046, 1864, 2183, 
           1681, 2048, 1866, 2184, 1682, 2049, 2139, 2185, 1683, 1867, 1219, 
           2050, 1684, 1868, 2266, 1852, 2051, 1685, 1870}], 
          Line3DBox[{1591, 1854, 2052, 2101, 2261, 1872, 1856, 2054, 2102, 
           2262, 2053, 1873, 975, 2055, 2140, 2186, 1686, 2056, 1255, 1687, 
           1874, 2267, 1859, 2057, 1688, 1875, 2268, 1861, 2058, 1689, 1876, 
           1863, 2059, 2103, 2264, 1877, 1865, 2061, 2104, 2265, 2060, 1878, 
           978, 2062, 1879, 2187, 1690, 2063, 1267, 1691, 1880, 2269, 1869, 
           2064, 1692, 1881, 2270, 1871, 2065, 1693, 1882}], 
          Line3DBox[{472, 448, 1274, 470, 451, 1490, 717, 473, 1491, 719, 
           1492}], Line3DBox[{491, 469, 1295, 489, 467, 1294, 488, 487, 1498, 
           727, 486, 726, 1497, 484, 724, 1496, 462, 482, 1288, 460, 480, 458,
            1283, 478, 456, 1282, 477, 476, 1493, 720, 475}], 
          Line3DBox[{1605, 1898, 2073, 1897, 2274, 1604, 1896, 2072, 1895, 
           2273, 1603, 1915, 1318, 1602, 1914, 2209, 1913, 1601, 1316, 1911, 
           1600, 2298, 1894, 2071, 1893, 1599, 2277, 1892, 2070, 1891, 1598, 
           1890, 2069, 1889, 2272, 1597, 1888, 2068, 1887, 2271, 1596, 1905, 
           1306, 1595, 1904, 2208, 2141, 1594, 1302, 1902, 1593, 2297, 1886, 
           2067, 1885, 1592, 2275, 1884, 2066, 1883, 1901}], 
          Line3DBox[{1619, 1918, 2081, 1917, 2278, 1618, 1916, 2080, 1322, 
           1617, 1932, 2215, 2149, 1616, 1931, 2214, 1930, 1615, 2147, 2213, 
           1928, 1614, 1317, 2079, 1912, 1613, 2280, 1910, 2078, 1909, 1612, 
           1908, 2077, 1907, 2276, 1611, 1906, 2076, 1310, 1610, 1924, 2212, 
           2145, 1609, 1923, 2211, 2144, 1608, 2142, 2210, 1921, 1607, 1303, 
           2075, 1903, 1606, 2279, 1900, 2074, 1899, 1920}], 
          Line3DBox[{1633, 1934, 2089, 1350, 1632, 1933, 2088, 2300, 2150, 
           1631, 1942, 2223, 2155, 1630, 1941, 2222, 1940, 1629, 2154, 2221, 
           1939, 1628, 2148, 2220, 2087, 1929, 1627, 1341, 2086, 1927, 1626, 
           1926, 2085, 1338, 1625, 1925, 2084, 2299, 2146, 1624, 1938, 2219, 
           2153, 1623, 1937, 2218, 2152, 1622, 2151, 2217, 1936, 1621, 2143, 
           2216, 2083, 1922, 1620, 1327, 2082, 1919, 1935}]}}},
       VertexNormals->CompressedData["
1:eJxkvHk8Vl/3Pq5UaFBpRiopGkWGUt3HmGYkzaWUWaOKDCFChUQkIkSlwVwi
7oOUSqaQqcFQJGVuVHzPtc/R5/38fs8/79ez262z1rWvvda11jl3M0wObTQd
LCAg8EdYQECQ+W/Nz37mf+20w1/mPy4R/N1YFIjgR2qe0M8s/0IPCk+pr1IP
4y/6eiQ7J6+W/iz4YFtkdyN9Q0xe4fjXAP6NlbMaHg9poZtTxt7xc3xJL5rw
aJDjWEf+qxk5s64qttMCgUbnAhxfUgYLJwnrtjrwHs9S+BrGrFvZLZse1d1I
df80snrUGMAz8CrXgp0z67dlMc+lrj6zuuNhH8a7n77sD808d9cf4icFNxk/
eYNEBx1cZLyJd/OiWjL2W+54FYn9mUZWc7Pzailf08sjYH+NQsFm2Nc5tGYT
Y5/acJU/D/58CEyKX8n4M6MuuIvxh5I+mzj+AuN/NCVhBv/XrsyYxvhPjTsW
ZYN4ZzbP0EK87Y9Fy2AnyefGduAjMN+oFfgcvjIjmMGHOv2LxVO8j8XTcijv
sI1oGE/hx8cN2J+/o+MpcMyPd99ZMiac/ypLtqz4VwudbtHpkDekmt4xXTwJ
fx4VJsAv/lVPb9vrZbBcv5TWn9tdD3zy11UNsot7TltNmBa1N+0hfSO7huB8
Kd3V2SHuOSWXlCdgmvaQCnuykeB82OPbwZJf9ZSrrnofY4eyy/uiDTs7NETk
S361UBk6rW+Z51LGkTMEGNzoOb+Jn9T13cRP6s/Z36e07xjxEiouzsZ+j4eP
K7Df3FpOFjhPtZq4C/av54l8hf22jXyCc8BiybnwpyPj9739jD/Nt6IJzp3R
iSbwv7zMtA/+Twh+SHDeGzuhCPEWpw7Zi3g7RdMIzopBNyuBT1P5bU/gUzMs
NQh+BXB4ztrJ4nn82ZDphgphvMu1uVtwXk6bUhoR52opGcnwP+H8nT5Rj2A/
Tl9S6dS5JrqxeXou/l7doWcHxeur6K1bqjLCFN/T8jcbCM4Rllb3lHNzaIGt
3jpPtJ/SOW55BOeK9ADxJbk5FG+xzrpn2k8pZXkJgvPOuRrmEvVV1MGxN9qu
Kr6n5FXlCM7iQvL9zHOpp27WZ5nnUotlVfrA56dviZ/U0i3ETyqwWOlO7dqN
vO9GVT+x//UDezfsr68+KAecXze+XA/7O1syimDfxvsQwVn0Rft7Vcafw2P5
g+HPkB/2BOfZChE98F9du/YS/H89MZngvGvqfE/EO+XW/CrE+2nf11eww4/d
lQd8zIQPqgGfDZJ9hM+D37B4DjZi8dy6KsvIvzOUVxxzNAX3/V36SoKLuMzo
6IdJEfy9J2WH4XyFjnWdTpD4Qlel2OQA53VVk9LhT0uqsvFF20Y6PazhPewZ
vTF/MnF7HB3qu1Gdn1dAJ1rQxF7B5xIV8e1x1CV/sWG5eQWUSNBSgrN7S4ml
ChNvusSQqQG2jVTg2ZME5/rNotbMc6kV6TdamedSK2PnDwafJ9wiflJHs4if
1LnKVMqvbxNP4WQQeEgdnmrcgP0BxqlzgPMg756tsD9U12c47NuVXjIEPiFH
yxqmMP4scB93O4fx58SfMIKz7o7rMyYx/g/N2xoL/w2zKgjObUMs8hHvvDmN
BxGv073RhM8mvbtHAx/DuuG+wEfa3prg7B3L4nkrg8WzRXavvKl4GG/2yHkX
kK9un/n8BfFbjNl7DTjrVT07h/s17q6MIezEvGhKBs7tmbpTwc9LkeaqeO5T
j7vk3LzC7ykBT3OVScPh582lv8hzNtYZ3ZzK+O+4e0Qh4jJRDiU4Xx50r4ix
Q39vsf/N2KHWRMsQnBX3nf/CPJfW9PiVAdycFrX8AJ+tRhM/ad5Z4ic11my6
FnA+WnW2HvtTzFvjsd/IV2secJbnuWfCfm5bYBPsC4daET5327tvgz/etIc9
/BFU8SU4J1TdCIb/0ovNj8P/qM1JBOek2ih5xCsd6LYW8d5RW0ZwXuB70h/4
BC7bsw34nO7ZFgKc33F42nqyeG5c4UFwLrJn69Epd7YO/aoWmIC8EW257zDy
m3Dchlhn5l6s083NAs7b0qda4j7eXnS0I5S5Rxs20qQOii7T2gf+bH/anJrH
3DvhEdkE53F3hYoRb8GB7Mx85p46PZxIcL6qNthEkrmPnt2PZHGv7wuwz38W
anSfeS59fX7UL+a5VM66w7+Ac58D8ZNe4Un2Uc2+CRHIGwuy0u9h/+/IiR3Y
P+u71HzgvH/yz1Ww79xkJAz7Pw9VEj4Pbw0OgD9DVL8fhj8fH0cQnKubp92E
/+GUsDDyhmd4JJufP1e4It7g6JgxyBuV8iUkbwzffNIe+EwYmXkH+Nxo6w4E
zmonWTyHerDxNLjbb0besNnA1vdtqWxdj00Zvw11MOT9OyXUF5v9Gg25TJ5P
sUtMIXXQ+dZg2D9XqqayDHVwdDTJz28nxZnj/u49FzxyD1NHrqVHEpwVj/g3
gG/fx64w38fUnaFuigTnki0XUoGPp8+TesYOZSYuTfg87ubqS8xz6Weepsse
M3Wtftw2kp/3GRA/aaU04ieVOfecH+qg6dTGc9g/5O4WReyfPjGe5I189eZo
2N8klFcC+1N/5BKcE5aVn4c/oRIp4+DPodxEgrP1iqRc+B+20Mcc/odZvCI4
D6nfNx7xVrvm6CDeZXVKBGf1W+VqwGdsd18z8Bm3SZXwuYDD8z6HpyhPidRB
B04vrVjndvbPiW28yQKsrjuykug6aoL0kXw3zy28xM+srjstRHQd5ZmnlbnF
R48XoMPqumkZRNdRV89N+drgpsK7yem6hVeIrqNfhbk7uVSr8C9zuq6f42eC
wQLzZGF9/nKWp/R+Ds/XOlo1694Y8ZVZXGniJqOXDDcQP/nHR7C6ziOI6Dq6
/EV5KfarGbK6bqYl0XX027LgzbC/6CCr6xyiia6jL6ZGLYI/396zum7bBaLr
KPu/F9QbGf+lOF13247oOmrC7oU1iLc2l9V1bv5E11FXD+UUA5/2YFbXSf9l
8XzM4Wk5mNV1PgGs/tytz/qXqHiA8Hmw1f55OK8NQREi4Ekqx2f+VLu/qO95
1iGG4MmnyFV1wMdy3EQj8GFUXNNChg+U1RG52QRnQesq8GeY3p6LDH/oAT6v
Py0dD75t39/WD548netNcHZv+XEW/Jz0Qt2MeS79juPzAJ4cjvSlKb98wOca
44uu2K/VrrgL+wf4vN/tZRjsl+zSaYN9CY7PNxIUPOCP1FkNdfijMcKb4Gxz
yusR/Ddq/uUP/4eY3iM43wk1Hwk+x7htN0G8cZL9hM8vRewUgI9m0ffRwOf3
GPXLwLmVwzODw3O2nTzh84FesZHIJwrvmokfJy8/JPm5wTnRGPb7C64lI++p
c/nZz1jECPmqUaRpJJOvqAzfd++Aj5jBr83Ibwn2Q54z+Zly1VlD+Gw1oTID
+dAyL+85kw/p0g5Wb9z+E0jyp2ey4HImf9KpXH7+OSuP3HfditNC0Evqs48S
Pl/9S/yk2+uIn7Rqbec15OfAc10Ezz0t3/qQJ4cGviU4+2dULYD9TZ6nxGF/
38EvhM9TXaXc4I+0SI4r/PE+c5bgfE+hOIDonxTrCUx+pqQzswnOc1brEf0Z
uk1cGvHWbmb1c7KohSnw6czsyAA+A/m5msMzncPTKdGU5OcJV9csQH3s0nIl
z5MYFUv0hrNV8CLU09Rla7aijl/j9EaWkHw99OfcUxVqqON5nN4I6EusgV4S
Tl06mqnX1IDe+Niro4f6/jm+sJqp7/TeMfMJzm933b+IeIe7dv9FHV/N6Y3q
494B4JvAbsls1HF7Tm9sv0b8pD11iZ+06vXnmtAb6q2eXth/WEM0FfsNOb2R
PN3WBfbP3u9ugf0x3q4E5/7xO3slGX8kJT84w58BvXHA23Y59EZSsY8D/I/k
9Ea2W1g34lXwEdRDvNLP5hKcM/ZPUQE+iubeu4HPKU5vFHJ4PtJm8Yx47Er0
xvGzrRPQb65bfYvYnc9/EQWcpf/OM4M+PPfOzhl2Kjj93BvN64Se1ClV2oTn
mn/v+gh8Pl6eJQX9KR15Rw1+tj/PJzhPa/0bCP+TDzoLM/qZHna4gOidpLmb
b4A/fSP9pzD6lvbn9LPTr6CnuL/f9bM/ATdq3JOfwPmRD/GTalhH/KT7ZoxU
B85ZU6dkYv89L6232O/L6efr5S8DYX/PHs2hsK8rM8EI+OQbrFkKf0IcZGKB
84B+3uCx0hn+dy6ddB3+l5vdIXh02SkNY+zQJmXrrRGvI6ef53afswE+M96m
ewGfaZx+XniOxXPSGhbPyJv7Cc6vZfpI/77odR7JO7khJhLIGyVT9hej37mv
sV0GfVYR1w+u11d2R3+0c/a3UNyjI+fpJuAzOMT7MfC3/PRhMe5dNtcPrpcR
XAT9ebdYg8f0X/T77z8IzrmHNrnhPto8rKnGvV7A9YMdCXnjcB8dFNpOIm8U
rFfqBc7DZImfVHsV8ZOevK0+DnkjJvM6yZ8vn/49jP1NyxPZOjinjtz3o/7t
6bBvxfWDUVuP9YCfn9bu7ULeGMr1g5/5ewmeOmmJnvB/oB8MDgmMQrxyAhtz
EW8T1w9qXDxaAXys6KL5wGc11w9qzGLxTOPwHDK1lPSD2zv3knlIrQeP5PE9
a+TIfCPmtBfp3w1lCzdgbjDKzO0ZcD549DrpN2VEfipjbrCem2/U7C8di/ON
v73OZS9TRzIe2BKczbLc/HC/Vqjq1OzH3KP3C8F5stHlk8DH0XPQB8wNNL3K
NGAnLuvAMtSXV34rEzA3ODznOcFZv4f4ST3wIn7SfvwQV9TBqF96pB75LfWO
xf6APLb+uIxYsh/2H9RYF8P+F26+8fXYdiX4I2R+2B3+DMw3bN+OIvzcMza5
HP4nuOQQnJWdHpYjXredx3UQbzs33+i45dwAfHR747YBn3JuvpHO4al6hsVz
5EMRUgdjuPnSkPXp1KjfobzN3LxutRY7r7vNU+7yMgrhzeXmdeZD2HldrdG4
eZdK/Hkx3LwuKpWd13U9CpriLmDPG5jX3eHmdcH8Wbpvxez5A/O6Om5eZ+py
L8/xnT9/AzevW87pT20Bd/MGgxB+PDevm83pJVU94ie/axSr63Zx9f134ozd
2H+fm9cNNWPndeEVS1NgX5Ob1/3i5nVhcxf/eMP4M52b19Vy87rykZePwv81
nK7z5+Z1BlpDlyHeL9y8bpsvO69bc7/oN/Cx5OZ1636zeF7k8NzLzetcvKi2
XVZt9M4FcmcfM/lKtaM+6BLzvC0zvOYs3P+JPq0p0IL7ntfZb496L9arKId1
6sUfdeS9hj83DmC/4iybV8BvpuBJY/z/0+elIpDn85Yv/ZWL+UffaD+9i5f5
NYufO8POz8MuDe5itbTx5SR98Gpbt9wX+F2328r4yAWmbmlpb8N91yrtc8B+
lRVjlxO8tcbvGrfqHF8sLaKV6OYun24b4Qs8n+XhimONbHiCnM6ObG80flR+
gddw8nTaYjfeioF1x5i8S2fEaqk44YAGzA/lvpa7ws6TCPM/OJ/Qx0/fHdtz
jifudtsF67bRn58w8VKFbnutnjP5ZN+K54nAfb7JyzDgnXpeO4z+cZknfPxL
EtY9DjXL7bZqo1bPj8xj8KRsStOP+DN4zLvxqpaJizIY7jkrnMk/yzcvJPtn
rpk+EucZkjn9wfLqcN6elco22D91SrQ07HScbeLDjpSkbQOzTvUUeBrBn51G
DaaY23wfdPAA9p9MXjcUdi6khSTATvfEqkbsNzUYfB/7/9Z2bof/N3Z4P0X+
dcoT0sd6nJbrXtiRXh31Cfs9VaTOI65Lj1afR1yzJ1SS/fQaF0vgFhw/5hFw
SyzyOA9+H75RWYi4ZqYvHY24HoSF5mO/e4fIc+C5Se7PPeAp/UzYB/ujv72P
PlfmzZN5XWBx7LYZz5g9F2rO17zwPyfO8m5mO9XtNF+yYmBdnSof4sHw5K6f
yGHwpGBtfCPsjG9x3wk+TJ/6whF80A8sIusLDzUsAT/fHRn6A7x9ZE+Z4r79
TFEfhXssNbEtEjz0vHhnP9YvBev8AP+PKJleBP8tn9ztDmRw8FtcZQMeGtok
HAQPQ38cI3bckuyrwPOJxXqb1L+E88PPn/iG/b0c/2s4/vc+vETqcvQn/jz4
s/ZEli7uS53ESmLf4tFMM+hj/71Pc6GXR5t530ceUzs45w3uhbX16FLojaWp
nmawF2s+vxf3aJbmFkfchy1muWNR3zePOrW48n4FbeaS+RD9y0g9LXIvZn/r
mY/1ZAHZOjzn+N0gO/y9A2MMutsavHlhUVmGN6vc/92Xnj0+AVX3K6jym5Yl
yNvf++QJ/7/WlRehXnpcuF/K6Hfq+58nJB9+fWOQBp1dojNBqJSpG2bjx/7F
eSxeY3WfeS61wnHpAdRTebkJKeD5PiviP2WkTfynFlb3haDu6w+VGMmcL9W4
7PrQREbnlOuKHQWf+84mx5M+56+SAOw7a74j+dNb8/Yw7BeX/9sPXSQwvOs9
eLtYxM8c/iuZTI+H//PTDhC+pQv8uQl/eq7rGsOfBVHOhM8SibUm9Cd33vuR
TuIjc1z+8fCLUt0a4MZvW/wSeIos6yC8GhLqdx/zL0Mlny5Gj9BTzTuILqCd
51gB3/tX7j3HOaYVhJB8G3v85FLYmTh19lf8ebWwC+HPfAv2HC9y56h0pZD0
IymDltfh3E9fEqnEuf/acPsn4Ylb8SLMQTLa9pigf10xeFUceDJJQkUsNtSP
F1SbUEL0gWmjM3iiVqWniHPQG/HzK87PIu/iFugTjzdOuzMnP6M/2tzKgr2t
H49/xp87aC9vl+V784IoNk+/VmTz85pLDWsWX3PkXb9rysu55/OPJ1v/nK/N
mvyMsls2TA913N/MkfDkYJ+CGfreqtKhFdARvrKLNMGTVaYdXszzKKNtBtnQ
HcMurSL6JFC6Pvn6jLP8MaZsHh16jM2fE2uJ/5SuKPGf4vP3BUG3PFujtGns
DT/+h3VsvpymzebJrP7rzrBvOz7yPuwLiAeQeWCJrct67Fe7z+bF5PFsPvTv
678H/59IZk6D/ylFUoQnTg+mRcMfy6Vs/ps5ns17S9NmTfk++QTPTH/rHfNO
z388MVGgTgDP4pOGr4HnrAXvCE8qhYzz1RjezIz/tQh8UDznTepyzJJ98tin
5p1ljnP00nUlPDFWHiEox+D/4gGbn9z92bwUzJ1jPHeOstNXE10UKlw9Bee+
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
ii83NUofNuPFFi1eXBnvzR/IV8XHvzXCzwfmgvMRb9loPok3Tth/PHgVpDDx
Bfi8ntNXL8yOPoS+6l+c3gA+N+x6QPKzeOm0/dAtfBHhsagLK00KSLzm8y3L
HRvdeRYNJdLDu73/ne883z+p0EViM9s9wGc9eR8Sr9vZlWtxj4I8X4gy+orW
Wr+N8Nnlff8Z3CM1vZh94PNQkUoS78moBY6wsyZ5wx7YGdBXdN2CXcfvuvDm
zbE+N/jt//G5uzDxBvyslmlTg5+3OH014W5PNnS+2sdVfEbnU4pLPd0R76xF
GZbQ+e2JXe9RF4wkE0i8PdHJ56Bj48IkdVAXlmzbTfLVjc1mg+eF+/DabAY/
dfJ25A/k5yN6fouh28dtePOW0c/0TIdfHtifOjNuDPKkWor5CEaH002dqiTe
NAvpPuTJD6tXH0J/MYPT4Rl2XUNhZ2daWxLsGHI6/NAla4WOck+e9yaLucsF
/y9fXVVJT4Gfd0RlbOCncTF7f2+FkXpEO+y63TOxK4T3PIqtR7IlpB7RkqfM
D5RNDOTZRLP1aO9Uq7cXmD/f/ZjfsvKmB6/6j9cb/P1ST1JfqF/W5Zl+n0L4
wvZsfbFeR+oLdSHi693SKYF8gTlsfak6VGuPviZpfmBtdqoH/1TsSi/8/Zn6
1tcFNrXS4i8X8SQPvab1BsssbwitokMzBI+vNPlIy7V9/+Sc9pJ+syUpLzK5
idZQ6CjZHF1J963pSNOsekivPXZGZjOD51Bpo07GDnUj9u85xg71997PsLrQ
Kkowq2akrslHasLMvuxTaS+p8p0XZBg7lEW7966t0ZXUU7HrvtpVD6n+3mnF
Rgw+JeIGJzVzGumx90TFo79/pB8tKNeGPwmlvzwyZtfR6/Uz9Wacek+vl4h/
An/UDC9f0bryivbvnKjllFJMiwh9mQl/ygoUkxk71E/n3bsYO9T16OJw+PN0
aOY3xg6VfE17ifSp91RG/TPiz0LJq8+0r7yilGOPmZ5KKaammMUTf2x0M4oy
zpbQNs6iruN3fqH75H214I/3nh/OfXXMvbMwGFKr8JGee0X4Mfy50dy2xDD3
Me1Lt0/O3Paazs3aS/xZsLniD2OHss0vLmfsUEGviog/nz+vXtdfV0S9leoJ
Y+xQR/d8nAl/FmwRtdiU+5iyWJtzMWvba+qTpzfxZ0akmJSS9WMqxM5i66WZ
TJ6606kGfx7cKc9R+ZpEpW7OWvD3SBO9Q7YxH/5IXNou+cbxLOWepnPdzobx
O2wpOS/ltOI9jB3awfbUXcYOdXnjsWvw53LxE0vVr0m07qvuEsYOFffBiuDT
c9BW7b3jWVqratKKkzZV1O0PR4k/2+a0BOoPqacmxIupRMz6RDdS3eS8NN6U
lL51r6S2HSicNVq9kVbJan4Of3YJT742MuoptcVYzOfVrQq6Once8ad3h9Rz
xg7ts6vTkbFDySc4EH9Wn1zi+c69kp5ifyuJsUPNmnSR+BPnt1ZRNOop/WxI
SlfZrQpKvFaN+HNsX+v7QcUtVF1wZeA1/ht6wiBTVfgj52PpO7qrgdJoGblf
2qmKjopXInxebXTE3+lyGWWorbrns3IhfbjJlvgznFc9b3BxC23orFDP2KHG
ZxyLgD/Uk46JY7oa6HM3S0bMdKqiNqyfR/y5mKBc73y5jF6QnL/0i3IhJfyF
xUdXPrtjivNXqtVjSfXOIXfpc2P6VsOfnxPHjgrc20Qd9koKu+fwgB5Zfe8Z
/Nl0xOnX2L+V1KQZ137KRyfT3qW1hD8JVPxqceevdKRAz+RdQ+5SRcXexJ+R
MVeSGDv0tMFGcvEODyjLRC3ij+XLyX7j/lbSz8fHD1aITqYa2hWIP3Fav7pw
Ty0uznwgztzT3pY56vBn6+boWOa+U+piKq6OzD0VG3eL8Ed5eIXAFuaelvsX
jlBn7umqsjbizzClc5qDmLzRaTjiL2OHNsocRvwxzrqqztx3epEnz9iJyRvr
LQSJP7Fzfc4x951ef73mjQaTN+5umk/8menbPFmLuafd6ZN9oph7erVfnoI/
6wy2/sQ91S9/Zz2duadpYyJz4c/PmjXDcU+/NAxRdmTuafObteS8ZuwabcDY
ofc2axYxdujbb0OIP5bb9M0fMXnjTnLHeuSNJXzeLPhzJ71DTYfJG33Vdtud
mbzx/fll4s+r/rx9mcw9tdl4ZiXuqV7aRZIPjZ+erhCoL6KKH08uqGHuaX27
E8k/J98IHMc9deutLH/E3NNe+5EEn+kyFhcZO7RZaPgV5I0P5gXEn9AQjehB
9UW0Z3/XfuQNCXH2fq2oM4s1YvJGhejdtcx9p4XrzhB/bLeKvV3E3NNX0x7Z
454qVi5cCX8CetqyFJh7alN0aDnu6bpQRXK/9ukfoJ4y9/SV7PY45r5T6xJn
EXyy835LKTB5Y3yIUzHyxqt0ZeLP8Z3aJopM3qjM8qtD3pCue0/8+ZEtsfs5
kze656ZqMvedyWN2xJ/5/DfNesw99chYmIB7GmLnpAN/lsgaZL5h7ulo3R32
uKfDNz0ugD9uxgE2I5h7OnaXUx1z3ymrTGOCj/zQvZLIG6dfv/2GvKE/5xHx
p6XkxxHkjYsvEoeOYfKG4uhq4s/8p7N/I28s6dmhWc7kDSGHAOJP2+o1J5j7
Th9NcO2PZO6pvF0muV+jfk1dzNx3uuTNR2vc04XzrMn9WrVefx5z32m5M34O
rcw99Q97QvzxvjPzCfKGgcwngygmb3RfiyH+iKdG0cgbR7zWTJZh8kadRAzx
R1Wm/iRz3ymL2Ln6X5m8kXB4D/GnQ/vmB+a+05omGqOtmHtqvaZEF/50FHz6
E8Dc067Itthk5p6emB9L8o+bu24Fc9/pe5P+Riky99RzwSlyXksv9Cxn7jtV
r6yqztihj46OIvkwLutcOPKG96M/s1OYvOF3SYP4s2CT+gHmvlNWgxYkLGby
xpe2qcQf/9mijfDH8PuTa9aMHZlN21bBH5/WJb/hT/QVcXXYkUr9RPwpcA0+
CDwzZCLmAge9P/Ekf0YXs/rkwOQEC8wJD3L6pLRMtBT+Vx7Y+5Pxn6687EL8
P/41ah7wNzKa58vgTz87nETuyzNJVs9E62wOx3yyhtMzAgJjyL9fdOz/8+8X
CQhMJ+sCAtkK/13farMjCPHmTRWSVWJwe/C38AkTL+06Ks0bumL8OL1s6AqR
bRVkfZjQ6XjgVqF2PZeJl5LWlhoLf/wFwqWgTyx0DtVAn/itKCXrDe9zdIC/
7FedLgY3Kurl/QMM/vR8qdhfyJ8tGrMDoHPu5bkfxrpNWlseeHIiqXcdwxNG
5w0Sg50p0/YIMvmHsjLsMoTeiJntQOwPWnhhGew/mrbhC+wPcUolfDu95Ek2
eCg41Pksgz8VfHw4a/9ezEPomYyK/P3QMzstbhzE+jhOBxrvkb2MOfMYTgc6
q+wNQ7y7K+qSEa+r8lLCE6n8wIewv00lzhX2G25kXMVzq9eyuvFO/8aLmGML
crrxT+4zC+A8LkBBBDjP+C5NeBVVF5OKeL/uzFuCeAPKR5G8yuN0pqL9sEOY
n7twOtN1otBP8ER17rvR4Ge6wy5JhifU4+UF36EnxTIKm6Anfb9sIeu+GXdH
oK49r7HYAH5GnHdIgf2WM+POQJcubWjvhy7le/PJetzt8q/guUhzxS3w/EGr
13iGt1QDb/lt6NuXQcKroW9FOn6Ow/raU/lq4OfZU9Miwc9lRh3EztwxlReh
MyOk7luiXtgc8CDr5zedtMW9mJnmo4p7sWHPOGJ/wdRWV+hVc78b06FXl1e+
J+sz1a4Pw1wgVXiQqDPTz+1sm0L6dLGQz2XInz6z7mYh761LeEb0pO0PXSnk
peUWt0KZvETbVXeRvDTLQiEWedU3NtgbOurN5j9EZwoI1HXhdxACAt7/8+8X
CQgIdLPre/5n/VzlusvIV6cit91j8hWVFpydh3vx0fdyB+qp4apfd6B7s97e
IetDDVNr0GcGJ+lKrmL6P9l+Hnmv0TMiWw996fCP8muZuKiEoTI38b4heEKk
BfL2+WILKSZvU+I31xP+i604ZwJ9K2t6+C70ra3qVbKe1Zs8Cvn/6/NdI68x
dWT66SGHwOcNdNCgR0z9Xe3s9xb1d3n92qNYT1NOwHyWSlqRo43nKsZ8JTx/
UjNWGHZqe9OGwE5e0lXC54XBCjaI96Jw20HEu9uDT3jrc6dtE/wUb9ccDT/n
aauTe/FZunoZ8Ff/ZPIY+F98eJbwcPnC9hT0F7de/rZFfxG6xY2s54mJ7cRc
ODm2Sw/zHsd73eS9SUXX3+E4d39lagLO3biwjrw3MdHen4ZzvHHxajDO0Vdo
L+GV5aUpAegjbh36LQY9MLgqiqxnymrUgiexq7XzwJMVv0ImgFdH9HaWoR9J
lrQ4C10hdHITWXeIFfOXYfrYSVtPr8ccbtSWEgvwLTQxyhn6oXbvIyfU/TKP
0UQ/1F5+vB51WfMX/xN0+K8MI8K3r7WWS6ArZLSvaEAPFN3MesLyTZ38O0gM
v/7n30ESELjFrdet+O86z/yIyCimXs/x+GnP1GsqP7KS8KrEo+oC6WtGzc1B
XzNG7TNZV9l8qBhzyeStU+x/Mv23tKAy4duXRod3TFzUOcMV0ejXv2npkfdo
wt9rPjJ+Uh+Fpn6D/rknN4HwyqZviRP6l3Vn/RqxbvvuBcm3B2a9eMHgQE2o
PPgGOurp6lNHwKs7yZQl+qDzR1zTsP5OLNYS65tXGVbgucdHZobguQIiS8m8
a95LiTzYeRu5qgz7/w6SJXk7J2VuFfTJ5rKGtYi3uM+W1QOyt8vhZ1y9HPGn
23kk4dsZUd0jwP+ooPBQpn+hR604TngVGGuij/6xOahDFf3jJf/zZF3gq6EG
5vJNc9Z8xFxE0nVDJfgme/gaOXcFvbuGOHfJ0kPrwTenSwa6OMcYfYVNOEdz
+3mEV0MUYsrRJ6r1btPE+vlnOmzeW9bpAZ7I1L32BE/mT8oiecxgX4c0+s0T
+V+NsR7tsWMi1q/FVTRvMPflZYSz84wpkewc42NmMXQvpTK5kAI/l64JJfr5
j7zIy8eMLjUqFL2NPlRhoTTRCa4/y0Yzepiaftspuwb8f3HoBcs3AQFX0UVZ
A+9v/5PfBFyF/v/rTVnn1uczevWNYNFx9KeyB4VI3bcf0eWNvtWxP+kg1qvF
Fch6XoN2cmWGJ7+dYt/fnlFh39se33BdW2iqL/97N/v+9tEj9r3t37iCPuj2
7VYnDiOPpfsUEF6lFjwNRX964WZ2DnTvlZzLZH2k/Kwn0P8PckLCkcfa5G4T
Xg1TjitGn1v3mO8B/Wx0scwK66dHuarhuR+82Xq+7QRbx+8onKJJH6HeGAA7
Y+a9Jnx7OLflJ6PzKceRhlqIy+g7q8/HHv/5EX7Kj6N2w8/i458J366Iecjl
oX///bcI+KvNcSa8mrHf9xTmA+byXc+wvnLxAbI+Mz+4vnO3Jy/tOvt+eCj3
XnjvmvedOHd6Kft++O1l9r2wcqX2QpyjxOKFr3GOsqaXCa9Wjrr2Cfn22+kj
S5H3xmluIevP3XcGgyeyw/bogifz50cSXvUEmoQhn++RtF+BvFe+YgWp1516
sfMwH/y8M+Uj5oX8LF3Ct5VzbOagf8w7qOaMvs9xlRrpHyPXFQYiz0zZF5bP
9GV0kq0W4dv3VjWix+LsD+oxfSUtfZqfx+U38u8yMTr0f/5dJiavDWXXF/3P
+sOo2R3o1w7PSD+IPLY3OJ/wStEhyxhziSGboiSQByLG+5P1zoQaUcwT/SyK
5yC/zfE5qgy+Kfx2csX3DUmFViuQZ3g9o0g9fdyzyw196+zHzgaMDqEKjp4k
vNoh9mg25g9lSwymoa9xfJVB1nV2pVii/018U/EUfXTkut+Eb7aG+UqYYxSe
e/wZcwzLoiKiY99VvLbDcxO7DinhuW+SZcl82ylO3wR2pKM0+bBT7K8fCb7d
0u9+iXirL0VoI955akpsfzpO5Rj8XGOfpAI/Ha/MIHwTHRd0F/gLqD//DPzr
JYIIr9b7PclFnsz1VL+LuqOVEkDW73wucMOc96lLUAjy25SID4Rvpb5fFuPc
exLWtuHcJ75YoQe+mf76OxrnSMVMtsA53jgnQXh1ZZB4OHRp8LuFxzDnibTI
TcZ6ZNybReBJa/gCd/Ckf/0kMfAq2U+qCXr4B3UzFPOi2dk2pJ4GThC9DL3x
9Iy1Eebx586HEr49Px/SC/3fVTveB3OPqduUyPwk26B0AnSU3OkZkxwZndAb
7ET4Fh145zbmKpteLlZzZPRqfMzRZyzfFpF/34npb/7n33di+Metr/qf9YfW
GjaYV6y7b+jqzOi095nrCa8Wf/8rfIrRLR/djI5i7rQicjdZ/1w5ei3m9c4X
eYMYfUI9/RxN8ttqtdhG8t2G1o4AzPtVtbRiwTfFVyJbMbcZJLdF1Ynpgx4s
m0J4lazZmQcd/l38xBLMl46v6ByD9fDq1E2Y/8hdXFuFOdKCv69IP6Ig+s0Q
c6qXK6WmYU61oUSO8M1s15JaPFdo6fXzeG7bF21ST39eSFoLO65aDiWwI7Cu
j8xFeXuf6yLee66qFOJdP/3/1fXm8Vxt3//4yxCRUKKUCmkgFYrKdEopDYaE
BpJCoZQSkYQGRCENiEalVBSijEdEEjJU5gZDoQwlRNTvPLfT+3663/u7/7we
7XusvfZazzXufc7eQfBWPVphBfjctbVxMvhUs+gm/VLZ9lPzIX8T69o1kH8V
k7cCV0IHJiWgv7dELTAQ/T1lK0sy7rZ3ZDHy25PptOoKJn8bfBJJ8Na2WOoK
9L745CVz6L0q9AzxbyJ7i2jocb7lElPo8YjJToKrCq16WdRZeupHE9DHmzy5
mozvVn7Pw6yLuqR+IRQ4URw4THCVV8s7iH4gR+FEI/qBfeqFxL8p7Z1liv0t
7SfrhUYaFdL3ls4OAd6WPDLpxPMz53lttGTkKVcyQPobLxqm8aEv1/OCO49C
H16jmORvUa75guDn90UHRehLpT+RxRuHfCeKwZvJ6L/q665pGI/51/ejOqSC
0tGvO98clbeUqaN1RjwguJJT9UpHX/G+5nIZ9BVVZYfHw8v0cB6F3rTddhX2
IQ9fnUPwJrJB7BH2zzi+NnbMuiiPB/Qd4E07rj4HuFKVm5bN8ElrdDQSXD07
+8IY+q1JMnRH/9BkQzkZr+ePMgau2rbH+TNyoL2FlAiuYjxPE/zEXqvjncTI
2cuxluCwNs8zHvO+mh9khXnHtGqRc1bmi031QGe51LGjoMMlFELiqf63mcFY
75A6XyjW+1FMk+AtQtj3Pvj8KMj9AHzO3aZG/Nu6L6dmQv5BZ2S7IP/My8EE
V+dGJkiNZerlR/O/CCkxda603AkyvvzrXFPsU856MOtx67SntN5EW4K3eTnO
1tD7xCtWktC7yzz7VcDbgUuh0tCjjYGGDvSoq/WW4Eqi1SsVOCy7GH8Rfdpw
gWG8OWZEDAAnRt9ObgdOfDzyCa4SPU2Jv3oyQjQT9mVwKJnkdSv9rhtiXrm4
PqKXY9F6Z0g8dfjyCv7w0YBhOuLFTuNdw/0f+z296EvzTOXVYdZFiex5QvDm
Y//rOPztjfWjfRh/S43Tt2frU1Hyvan8f31visHflGEcWj34v+MFtXWPgKvv
Fjt2M7iilZ3uE1yJ/YxJgV4c7GpF0B84uCaBjNsIW3cCbyXrkk4zeKP/4G15
2fsE6F1C5lAu5PkHb17nrk1G3BT71qWJer+Z24z4NxGtBS6IXyPa1zig3m9x
9CXjO+2l5RE3v3+MGXeViQsqN3II3ibf/7wB8ZG/X+EN4kiQselujIssWROL
eYtLotMx7x+8cZuoSIOOQ/W4UaDzNtiO4E3U2TUA6/VcUKqP9b7VGu7PNwwo
jAafMxUvzAKf62YO73fMfK8rCVxJm303hfw7Th0huLrqt3AacCjyiVqE/rx+
5yEyfr137jrgTXeszi/sV//Bm+DpKZbQe1DTVFfo3V7yIsHbZNubodCjgE9D
KPTY92UBiacTBSaSfMleY5YP+vCVZhfIeNaIebXAye2Q0znAydt3CQRXuoLX
piDOjq8PPov8IThlOomz3Onp5JyT8rcR9vD/S0dL7QPe9n+09kG+VyY+cRny
4ZYlgqSfPN5G/Tj89lHbE56M36Y6bt4h8bTzzo1U5JMbJkapIt9ucs3JGcbb
A/fhuHn1r+9WcTil7Lj3X+NuyuUcxE1u++ZzTNykVd9eIHUox6VqO4k7yp+v
Yl8g5FgEGS+6JroE8dTfb8kk1PtbNkuT/G37ufDXiGs71/VHI16osfE0w4Xy
QF0wfV3EC+S9PM52BFd7pEPSkJ9f4WlzRb0ffTKUjAtMu5eOuoDXXz0UeW/7
HmWCNycZkTDk/6mT1t9Anpxje4XkdccezS7GvMIrl17CvO1sPFXXuZMMOqYa
EgGgk1KRR+Kpj+C519ifyve7bob19oiEE7zd/KKyA3wafVuXDj7zPO8QvEkk
KcRA/k6D9bGQfxOPIcHVMclfMxBnn5rY2mH/5dbd4X7dxpAbTxBPFxw1MsZ5
gT/xdNSbzhDo/bONtSP0XsnGU7+Jz55Dj/yalA706PK5juDK61rTZ+yzLHuz
og77LDmfAobr008L/YATt5wHa4CTbcXziX8rvp1phzqiIYfPAPVR3+MrpI7g
TePlQt74ob+3k8kbqXS2XvgqK5Y7n6lnL75Qs0D9XnrsLdk/rasrO4q8dHmi
TCT2KVoEnsoCb3km1xehXrYScZ2H+j039/0ztv/2egGpC7Kr/u/3rzicRW+G
x6/+NW41U0sLdUG4A9cs7F9McvhGcLXKcHIx8ur42l+HsO+jfeoLGVc/d7ID
56V6hbfNx/mpXt0384G3/TNtTJG3r7F8sRL1vgZbL3SWBH5h+KSnZZo0o65P
vPyS4Op2t5gL9ne81TZ1k33hwyKkT1J44fdo9D0+ZRmlo67/YXSe4Cr4mfBM
7BNt051cg3G/S7qkPp3Lk7UW8648VqqNeavYesElMngE6LzKNniA5xNCbMg+
xemzOkJYb/NC4Z/obwRXHB/ej+jh1IDPbS/iysHPef7DBG+3t727BvnHbjia
AvnzP1xOcDVkJhWIOmJyPec79tdGTdIi4yXbv1ihXlCaX3UF5zU+3vEg/RBT
5VwB6D0rbP8P6F2MrRdeRxxbAz1+fzdpOfT4baI6wZVTpE4F+iTcSg7GGPfe
O5+MT+WUPANOcqIzrYGTMUMrCa6ONak2oE/Sxd95FOMVrm+G/Z6n3/xVwX7a
Iux5Q3G2HyKVU4F9f/q9CL878NnJ3U/2x/d3ptyqZurul8lt2JenRu0Y3pdf
NjSQhH7gdcqrF/h/kbnxxZ9+CMdA/k/fI+v/9kM4Fv/v+PzDY2XrmXp/4QkN
J+zf7e7nkLiZEro7Fft6Uo5Crhin5asJ3tKcfK/HCx7NWrCE9EPo42w/xEd/
u967IL+sFd9JP4R+zPZDTvV0Xkdf17n00C34sdChXII38e/VvrBrl1oBCezf
3Rwa9m89V8/MRV93TsDNKvgx9auJBFfTdcNlYdcfKpf9gr9yUTpD4umUa/OW
YN4F7DnKDWw/JFVFQh50vloYl4BOx4hB4t/WLzteXMes12FcLs4n0ON+OhG8
3XiVcBJ8Zq3pOgc+g2IXk32K7uREgRpGDiEnwp5D/lEduwmuTs4svIz9U8uA
++iTUDftd5HxtQ5eN46IHdXuHe6HULxsP2StabAG9D5OnfRDqGq2H2JmIV4O
Pc7YvXA0+jBuB0KH4+mi46/RBz5StOo0/J5avQcZ39/ym8Osi9byyDsKnNws
1Sb1AuegQzv6wNqnXR/B79n0XyLjquJu99H343Q6LUH9bhySS86JfRjQOYX9
iJCxIwWwTxS67hnB2/vjjzegr+i2cvrYDMaO7osPn0upWXMkCPsdr977KaJ+
n+s9hcXbLLvhvu6Sv77Hxfi7ncPjVn+Nn2woTIKdJj82SIcfe6t1guBqR22f
IvrAabUT9sHvNeaeJ+NNllmf0e9VNIl0gn8b9amU4E1njxYvzq3O2aoaAT9z
zWQUwZvMN5kxyEMsLcMXyjJ5mtntEwRXPMHaZchbJoUHz8H+7PXZC0i9UH1f
swj7ZVPuX1yPfZkN0aNJPG2LUClB3lIet88c+zj06yNkfO2I3wPo9zrtigrG
vPtbnUk8lcw8nAc6fUWpa0DH1K6O5G8mn/QDsN6sczEnsV7FndcJ3rKF8km+
VB1hJQU+FSa6Ef82Wd10L+T/m3NaGfK3zxnu9xpM7Q9CHzghTmkIfu/XQncy
Hn5fbCv6vTKCBW/h39Y4PyJ4S9kjkwa9H/hovRp6f3Jlw2rgrd65/zL02NXk
bwA9iqeGE1ztMDFfjn2u3VZSR9Evynwl8BDjSoVeocDJ+mMvRIGTyio+gqsN
N2Z4Y5/r8g9RQewP3qgZQfzb9fKGscg3Rs116kccr0t5ehR4M3SbHov9tThO
jDD2QzdqjzIA3u6Z7L2FfZMzF+pkDzN5QuiZTwRvm37JeGD/rktZ/7rnI9zz
c5ztv3UNDe9bdS269Xf+xo6L/vW9r6g5Fj+Rhyj5yPgfYfK0DKVtxL99LPO4
hn0fh9Wz/bEv/9rOgoy/0Xv5EflJ2vZNg8jfnuzJIHjTHaNuhfxk9KxRC7Ff
w2d5nuRv7vLz5LAvbPQ9LvwIU4fuSX5K8PZsVjfZR9YeypuPfUnju00knkZI
cI1Avb/686Ot2GesecJP/Jj78ksrsc8rt3rDSuzjLzTfScYzt0tsxLzH3E8r
Yd61hhUknqq5yZF67bKE6gbQmXzwIomn8n7nKrHepv7PK7HeDhsDgrcfPoFj
weeTBY88wadC8XGCt+Oy655A/spyfushfyG9swRXHn0Ketjnql+tfQ3nH47/
uEjGjRY/2Yn9LNOz2iroF22+LkbiqfaYn5Og95yCWxzsu+25kEHw5mhfEQg9
ar1/9Bh6LDDjJXj7OeKHMOrlMVP6E3HO4Vj+dVKfpqeqPARONI8ZTwBO7qVN
JbgKX2aK/gbtnSM2Aeclfvu5kPFdjcdmoZ7aGbRfbxRTp+xuaSDnQpWXyVRi
v3izhJktUw9SzZssSdxk/FHH8DmBq89F/6o3jcj40399B6zYfjXqfWrCzxF2
y5m60ulhHMFJ0FB5BPa7XU5xF2Of2qu3gIz/8x5Zqf7//Q6Y+qUunHumeBWi
nnxh6tAz/U4EV17xw++R1RY48T15eDxLlX2PrDJ7qz/qr0MdS68y66JjA9bE
Am9p7HtkSgJFGTi3uYd9j6yRfY+siNcnD+c8d7HvkVXMF/QCnUCTjDDQGTPJ
m+BnweZ11lhXtrLtAqxrvKQcwcn5kUaDkNsnx62hkNvtbZuI3q1zNw1iX36y
25lUnD/JCDYj4worVyujvuZqWq3ErIvK7l5E/E8B+36ZQ84qgZW3jmu7se+X
LbhWNh/6inB7agx9JQd1rAFOPK8N7x/IV84/gnOt7WzcjFs4vH8QLqk4hHOw
gez7ZT0Xh/eTBGbdeIP3zkrY87GyraUyoO8+c2sG1psZqHcc4x2hPyYQPq2v
OEH+mfabybmUcsERQWsaK+nqu3zRk18m0xeVXvx1zoTDUfrrnEna9LEG+o2V
VNpRzyVTXyZTcxOPeeJ5VaqLvHe0YkXYqHZGDh1j1IleakrfHYP8tz5IHCHE
rDfzhEY05GLesIgf/f2LQw5X8R6fEtdIUicOmswRhr/evstYB+/9XTx6guj9
/rPdbqDjlar9E3KL8m6phR7HjBz9mPSLKjcOQP7K14ffIxAyTZUBnxfucCaA
T+7LXb6QP+3+NgnrvbEuOQ/rdd9DE70Y2TkqQj4rnm4/Cvnc9RzuAzwJVZsD
eT5ryc+HPJcW1BN9feD7dQD99zvTJcSxX2HwkIv4geK7SuSc9gVRj17UAcdi
eYm+Pp9RNoTfsGq204BfbRfZ/QnrXThwOVd8VgVNh1y7k3O6hH7VvIWVfxd7
bsHpr/MJUiJv5oyfVUENaX9te3q6hLLf40Ls5fF0SW/Uk6v2dnni/T71yClE
npkxulqIQ2bGNTPwPmC2XSKpg7bsCH0BP79lUI4X5xY0O4flNitRhhf0b3Ec
b4O+D88xci5lW/Svd+BTypO7CnzKZL0hcvN8H5iM8/Z1okkc1P2cuXOJ3Hjv
/hyJentN3fv38IufJwqT/Vbza8YqiNfczcmvIT89uQjyftybrWupqcvy6KTH
oSu3izF5Qvr92mE5OLH75l1/7Zv3O/kWSi/Lo5acVvloLfaGenzkGJFD9qGN
gujjdP1I4bVmcNEr1ElwmCX9uAjvCT6v8SsBjpaqtJF+190faVnIr3ZbPNkB
PBrxuRA5mOy8GwX6Jb89H4G+reUaIof5eQfMweetMxdswaepShmRg/bK6554
zyJFT3wncBT8yYnIIdcu0APvZXy21TsEHPEZTyBy8Pn0sRj7htvKh8+LHWPf
q3J6cfxa0HY37cPSw+e/vP937suI3Jvz7/3cHJPvixspt6zLCawf7R32n18H
5QvxvsnaUQfqYB/rqGH7Svgptw3vDy6wKI+EHKqdDhJ7tJGzuYJ93isGw+eb
JGcNn2t6+PU1P+j37h8+ryTHnlNaKpyYDz6bAob93BTWv1W/T1DF+4/PP93V
hhy2i04hdiE7eY0I3pdc/uiCLuRwfdxsUm9OreXeh/rUJnuHL/DwM7KNyGFM
zfTzkD/PoT1d2xg5G3lfYOXAYfcfpf/aZ3RWuDxdltGLd9rxIOgrP2ol8Usf
dF5Fwt6yevVHwy52xKcRPOSMPdcHfAq8EjlLzuk8y7yBdRQWfP2FfsK7e6sl
gYc4iQIihwv23wdlGPoZH6bZgP6XDl4ih5hO5STweSmdayzwcHHsDyIH6/Gl
pbBH7ld6wbD7FT6BBA/cXklPYI8T1JYYELuY4EnyhM9Zatmwx2tRWdOxz3I4
83IzyfNtx2tIMPaodznK5Qljdx/X9LNykGb3v5T+2v8qS469wdgvrf72XEou
Y7+G16WJHKYJHjVF/ZAx0nAL5F03KZzIoYvWdEEeH3hlbDjqCcW4e8Q/vKlw
0IQ9Z0o0tmIdhRKWRA7Vp68fAf3Xpe3uoF+bu4DIociaSTUYPhNFZWPAZ8PI
FCKHbr7mXOTlreadpbB7dw8tIod1G5RnwM9HH2pbi/fgfK+MNoAcvh0VXwK8
ths330D/X8xJgLzPkhw6OYPx25RpU9jNiYzfLhEx+OMnpw33yUP+2q9RsTlw
iPH/9A6FQC0pxv9rbttL5NDN1u3+AfmWeK9Qja3ff7B1+/asZxZ4D1Gerd9/
h79/DxxPXBK2CPs1xiNFiBzGF1P6oM8dbjwO9NvrBIkcuCNV34HPoI5r+eDT
4NZrIoeHN4br4aIrcWPxHuWj0uH4nsfWwyI6u4Xx3uVqti6+4L1CE3IQcpj9
Gf5sn2oleQ+xqsjpMehLtYd3MPSppfEL/sRrdr+g9K/9gi3ai13BZ6Rngh/D
J/1HDsEzJhkADzfWHj8CvJ8WFSFy+GZe7AA8iE6blQu9eER1ETzMSOmAH6EL
Jtccxj7Ci4OTiBwsN49YBfqzb++2BP0/cujYplYLPj3STglPYvgslC0lcgjp
uJ5O+lB3Fb7C766Tf0DkEFuhIgU8zFsjexA4DHxnQPyktoNYCuxC2Ws2BRy6
s3Zx0lJFCXjbz//jLIM3qnXKM1YO2WwfO+SvPrbc2kVRwG3f1ZtVDG7piS5r
iJ/UrZ/vBf+QIfp4AvBuy/qHDz/PNME/dHIir8FO1eJEiBw+9+9XxnOVz7t4
8Hf7pMqJHIp8lu8HfSVd//Ogn73Akcjho89iQ/CZP1CbCz6TNt0mcjC+cvIh
1rN216cIrK/4nDDxk1nSs+PhHzytz28h5/hq7Ui+Ufz4zXrYrYS9aCjkdyM/
4yPJlxz2u8L/8F/c/Ivxk9QNB0s2bnLY/uqDv/qrvtLG3PCTI1ozIhg/RktE
5BE5HIrvPYp4YS91nODdkI0Xz8rfj0C82BbAfw1+u5KNF5ld8fXAjeSGDzLA
0QhrHSKHm6d/vYafjFJ8tAv0GzTNiRyer5sYCj65w79MYvwk1d16kcih/ANP
N+zqtLH+MuCde8BwuB+uL5GM9zcf22esRpy6zMaLjHVh59BfujocN6mjbNy8
WmM0wtDHWTt3OG5S/8RNb/Jd/X/3/QYKxWdZ+TpnNQ3HTfpP3Hw5eM4E9rbQ
3ZHD5A/0hJc/CR6KJpvPwnuODUavCiEHbv00Igd+8eCz6Ac2DcdNejwbN4Wl
on9vZehrOpO4SU9j4+ax79LTwKdiIImb1J+4OTXrYy7yh1HVY60hh9Ns/vC1
830V8odonp4DkAMvmz/4l25eC3/60u77c+DhfE1AO+Zfa7JwC/KTvCmxSyDn
npJrLB662H6U0V/9KPmuwC/Qi/td6i305fHuIJEDpSV4GficO5CyH3iffSmY
yGFPbsM64LPn6LjxeP+Rv30u6QPY6EyuhT3fNt2wlfThUweG8UAVZIF+9eP0
eNB3cbAlcvBZ0OEOPg+KL7EEnyZsHrX7xK8K5JPLpTq6YReree4ROfDH3JwI
e5y56FQ57CKpvp/IYYfbog2Ir7HS28ajHo/usiLxgqpoL0W+mnlw6UkmX6Uq
/pdXv2f7JJy/+iQd+z0WIe893eWfz+S9tOcPceInD+WeEEUe4Dzntzfy/Dvf
DpL9hXDn75LwV/dNzcfhvciDmntJvLBcElQFvg0tLzXDP8in9pHvEkwb6zoW
9J1XFJ8Effnps4kcol90fQGfhws7ksHnCouvRA6Dh+w9kQ/NX9XyDXaf8fk1
kUNJj+4L1Bc7EpwL0L/3ZOuLKN2RU2C3z5e+m4o6qEKllbzXPFjVGop6R2TK
Mn2m3qH+qe+M2D6A6F/1/m1ejfWom6ZNHPNxCuPPFdn6zrBdJwO4fBcR9AD1
0Vy2znorXz8Dz1feDs7E8yoPvpI6q+TsvFTMy1Mz1wnzhlQP+719MwaNQI8n
ov4I6tIHX8Un50Zdylopd4PkwavXDNel51vWTFWacznLb8a7N8iDfUY11uPv
epxCJ+J5xq+1/Nf9lRzOkv/8jisTF2z+63utzPr/83utXJzSUnxndSR77+RR
9n4N5vn/vHfyj3/59/2STJ72n/dIMnT+8zuujJ1G/df3WrmYfBf8Z7Dfa/3z
/TEGx/95LyQX5/03yOcgey/kGfb+i1+/t5L6YQZ7/+Ms9p4LheqEKxuF31C6
PyQD10e10QH21WsE39fSbbeVX80+WELVX9tsWGvVQKfH+h70Fm2l67f+VBuf
kkzR4nRAlXIh7aqvoOm2oJO+aTVXcWJKMv3B9JdUnXIhNTW2jwfjxVvTfyoe
LKGt7CO566waqBf7o+u9GDq5p3S7mXlpsR+LO5l5KbFp1oEjmXmVNsnHwm/m
rF0O/FGhpTmD0y+aaq8UpNvwvE1EXhOep5pGpzHPU7mxrW9B/4Qw71eGT6qw
P/ULQ59aJFDZKMnw8y24Ka+W4SetyliA4YfKf/DQD/wvdYr/Av7FVsxQw7iG
3c02rHeWzxxLrJc60O3ArJdaELImBvLJaCsIhXwWBK2SZ+RD9ZkRPimx1YRP
2khwsOXE2kjt6yMrzLIsmqiZQlN/Z1o00ZJzDfYtaK2lL6a8ULWfVEfp75mb
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
        "]],
      Boxed->False,
      ImageSize->Scaled[1],
      Method->{},
      PlotRange->{{-3.999999999999899, 
       3.9999999999994964`}, {-3.9999999999997984`, 
       3.9999999999997984`}, {-0.9999999999999748, 0.9999999999999748}},
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}]},
    {
     Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
U8/b2of8d7k7dDi48Y0U+j+KSwg8
        "], {{
          {RGBColor[0, 0, 1], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnAf8V9P/x+88V4oU2qRSihQpQiKjMpIUhYqyFdlEslK2UhIiyQrZIzIa
EiKjssoKyd4j8/96ep3f4/94dHq/77nnnns/Z7zH6/0+32ZDRxx4UpYkyTll
kuSij+m/20UPEN2lSJIL0ySpL3q2yhuqv5B6te0m/lvRo1R2F/+d6Ay1vU3l
aV33V/v5oieqfWPxx6j+J/Hfq4xRfUfRX/XizcQ/I3qz7k9VeVjXv+m6meiz
oqv0bHPxq0KSvC2+vvhB4m/T84+LHyJ6iupfE3+e+G565hv1s1jXG+i6j+i7
quuk72vJt1dJ0lP8EarPRLdQX33U/m3xl6hcpzZbqc2eeuZH1b+qdoNVd57o
lqJ36l0fqH6gaFe1WSP+Jd27V9efiB8s+qLos6p7SuVQXS8QHaFn71CZK/4E
0X30riHic9Fr1Wa0+Laqv1XPTlN5Qtd/qP9N6Ef0YJUjVX+xrv8Uv6noHNGD
GCuVWioD1ddGql+m/g4v/ez74juL31D8UvE7qY97xJ+uch396nqE+Llqc5au
7xV9X99xl+r6iF6vusPU5jRdP6LnB4hfo/pvVc5XXTvRnfVME/ErmXPxI/XM
LNFJhb93O7X5W3Vtxb8g+o/K1uIX8Zt07yLx24r+q+t24l8UHarrC8W3zz0O
W4pfILpWfR7KXKj/nzP/3kdFZ6jdHPHHiE5Qm3VVd4Ho7yqHqL6N2h9Ce5WJ
uu6t62NEK9FLVabouQ6a98vF3yh+a/Fd9FvPUPt11e4a8aeIP5VvVJ+nMTdq
N4+x1b37RduqbKq63pXnkXp+wwrVjVD7R9kLqjtZ/Emq/zD3WD0tulD1bMTL
VFqKP4fvV5seunej6Dui2zBH4l/Xmm2iNnVSf9uDqn9W93fSe9uq7gI9O4Hf
LH60+CvZ12ozX212VJsFrBP2muijKh10//m4f6kfS5/se5WDuafn9hPdQ797
G9WNUZ9XqSxjjkRfEG2n+nqp39tN15NF3xJtz5rNfN1a/Cjxl4jfQvdGie7E
/lb92ao/V9ddU6/DOuLP1b0fRKfyfn3fvqL76vs30f2RiWVBe9XXFv2E+dX9
e8UfzJipnxtUZun6H9Yx38/aUJnEe0QvZo2Kbqs+H1bb/VU+1b2Nc6+xD/Se
8eI/Yv5Fjw+u/0ffNV3XDyGLRFshH5kL0R/1TD3VPy66va4fRAYgU/SuddiP
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
zqb8H1Y279o=
              "]], Polygon3DBox[CompressedData["
1:eJwtm3fg19P3x1/r3rcRTRENFQ1bsrUzSkalJe20s7OJMsqWLVJ9K6Psvbei
bEmikCiEjB+K+j0fPV9/3M/nnHvuva917xnPc94NB5/a7ZQsSZK5eZIU+j9I
/+vp/99qM0Ufr86K6P9T6yr6ppgk22hCY/FTRJ8SkuQ90Vto7B/iR6jVlvw6
jR2kiU+Lro1c/39Xe0v9I/S/ptpVoqcxT/K30iQ5VvxktRqSHau+Jfr/nPit
9f888c+Kfkzjq2lsd7XvRPdTqyXZX2ozRO+l6y+SbLb4abq3VzT3H9GXqv0j
eoX6zhC9j9Y6VvfXSHPOFf+I2gHqO0HtPc2/V/yXkj2l8Zdq3ieim2v8leJ/
kizXuD3ET4t+njfF/y26ieRdJf+M64rvrpaIDlqzm+hhWqeZutar/U/0BM2r
Ivne4t/W/1TzV4u+VbLdtX5LzflMc/to3F7iz1P/IpZU3ynq6662UPTRmnu/
ZI+IP0p0J7X7xA8Sv0by+ZozUPTb6ttB/BNqN4n+XX2HS7ZV7vv9Rq2R+Inq
76/rvZ9ZPlz/X1ffRrUTxW+n8Zs0doH+b6+1HlG7TnRb9X0vepPGtBYd9Dw/
i54q2Z5ar7r6bpB8d63TUvwM8aMzrzlS9Lsa30ryGuI/0pjWmtdD9DdqN4p+
MPN+uUVj1oq+Xn0niP9a7QbRO2p+e9HvStZO658q/n3xF0pWQ/wrWnOoZNXU
LhP9hK75VTl3N8lH6/+r4v9V6y35mOD3XeFdaWwhvpL6vLTgYIiP4h8Qv6/4
b8Wfre6Wmnu8+AfVv6XkDdTeF91S7TLJTxb/G7Ta4sTfcAJr6Bofi35Rffdo
rd3Ud1HiM/ms7rmF5Islf1n8J5JfpOtEzpb45qL3kfwjyZvw/iRfoLav+E+1
zoG6n3Ea80/qPXIx50VtvMYOVt8voodJ/rPot7lH0S9rXEP2h/7/rXaFxizh
fakdLHoPtYsT6wT2zB9qR4jfWv3rdS991baUbFv17aV7uRh9Iv508as1pqb6
DhG9iD3A9xG/s67/oWT7i18dvP7u4gdXrD9Gauxxic9cV62/UeMLteNF76dx
EyUbKn5d7u99ssZ3UN/LoleL/kX085LvKPnd0fsB2a+im6nvQsmf5PnUt7f6
PtTYncS/r3tZKvlY0SjNz9l7kqeiP1bfWsm/E71G9PdqO0g+Lvh98d7+T2Mr
WnOc1svQaaKvUf+X7Ge1NqKP0ph1kqdqR4g+TW0Xjb1dY/8SPVNtC8l2E7+f
3sdd4odIvi86Q3SP6LVHsl907aniB4vfRfzNop9Sq6H5B2n+AZo/Sv9/E/+7
2mjRp3Ed0X+rnSH6QrVC89dp/gWie2l+Ln66+Ch6X3RYYp32qvonie8sepna
ZNF3BX+bhzX3F43/VP93xp5obKbrd1DfkRwj9KL4Luw5jb+b9UU/qvkXamwz
9Q0UvbX6zhU9RvK6mrNBfedzrxqzTPT1kr8qfpj410Rvo3aB+NP4Jrnf4eWF
zz/vtqI5wyRrrL4uFevwNwrrO3R7A7W5mv+g2tka+7famannHBf8TSdq3Y8S
f+s/ecbM72CR6FcL30tftbty3/95mj+DMyX6JbWBkh2v9gz6ubA+HKP2jug7
tMZs0T+pjdb93atrnCZ6J/a76G+1ZhfRXbTeG6KPK2xL7xN/Qu5rcm2+Gd/v
vfIs9Nb/F9gDuenqnG3xi7XmUZr/icZMF/2i+gZIdozaE6Kf0f8dJOum/8+L
X6n5nTS+jfpeEf2p5nQWvxR7HGxTsIXHJ7Y1u4l/Hd3HGZT8mWj98zO6W8/3
qfi7NL6Oxh4pfl20DerIeY8+o2M19rXEZ/c40TO5ttY8RnPWFT4LO5TzfwjW
Bfuo7zTR9TXnPvFtsZMV78mLctsI9mquNkj0bbnte3f9r6vxZ/F9RP8m+bX4
G6J3kvx38WO4NvZOdKr1Joi/nz0p/i++F3tX8qOwhWrt8B+wlZr/q/hRqfta
iW6u+S+J/1V8FdH/qbXS2Js4M5JX131fzP2IX1P6XIux94l9sd/VNynxPeyk
sf8G695fNaaRrrdB47/MbDPPQabxX4jvzvqMl/wg9V0v/nz2M7Tkk8X/Ifrb
wrpkO/S81vtN4z8ofYT5oqPGfJz5TI8KtpmfiD8qsS1dpXntdW9fadwhmv+Y
ZFU5S/r/NPpW/W0kfxabxL2pHZzap5ub2Y5hz/A52oneRes/JvpbjZ9d6ucD
xF+tse+KPhwdIn6F5B1L/2eV6BbqWyL6Svws0ePxb0TvqvUeF99fYy4O9m+Y
u7f6FmPLg/VPE63VEXukvms0d8/UPuL+6r8385nmbDfSeg9L1lNrnKe5DcU/
JH45/p/4t7Dx4j/mObXecP1vIv4CbJLolySvl9qHwJf4QnxP0VW19mEa34br
8bxa73LJv8l8713Vt0r8Y4X9+t7iHy/sM+M7X4l+Ef2EmtjkIP1ZJvrx3L4E
7xD79jB94huJ/whdoVYfXaj5z3IGsEnir+B76d7qoq/E7yd+x2g7jj3fSu0h
0fXUN4frS366xm8jfpbWaqp766DnWc93UGsu+Zf46JozSvTZmrNFqc95fmKW
KoXPQ990sxuWVBN9aO7YYaz6/uF75PYHR6c+sw9F7+c/y/OHv9Y/9R7cW/QQ
rXGw6B/UN1T0YLUF4n8sefYt+/eFxN/nVbXPEutAdCHzGfuT2kLigtzfGh2N
rr6eMyV+vPg9RTfFJuOPce8V+4foqiHogNzxyok8Oz5QsL/WWPSg1DoT+9dD
tMhkveg7ctumM1LHKF8Gz/1Z99KvYhuILbyw3EPbFqbxqYnFeuUef4n6ahW+
R+61JnGC5tcozPMM9+TWrx8yXnRryesW/vYjNKae6FP1fI117VtFt5H8cI0b
IPmpkm/CV1A7mb3ANy2s99H/6DB02VbB/i1+7kma/7HWm5L429YVPyA6frq0
jFdY767ENroorDNPEf1vbl3KfsJ3OYczJfkKtd3F/6s1Kpo/UWPaiV6ovjs1
9wfx49gPmldH8svEd8jss06I1pH4b/hx6M4r1Dqie9Q3ldhRfNvMe2q86FWi
B4v+Tm17zblEfa0z+9t3aPyDnOvMe26A6Kc4A6WORFf2j46Hsb2F7udY8Rv0
LOfg+xOvFY63f+OAVOw/9M+8R2qIvk2tV+bz9yO2XvdwhfiWkn+WO97uWtp4
bH2D3M/PHsT+L1ZrIP5PYtWK/VlsFT4bvtvtWv9Eyfqo7z/xSwrHD3/hg2j8
B8H6/VD1h4r32zzJ+6AfNGaA5M+LP1n9UfJromPbVuq7mtgx2vfg/j4rvN+J
xydrfiPx1xbGH5rhb5X+zXXoxtT+zjCt/ybnQ/3bav2v1LcH96rxW2Af2Wfi
a0heW/xB2EvN/Q+diO+ADhB/oPh7iS203uvYXo3fRuOnBOMN4A5bV6x/8Bew
8cSkQ8AkxI9Uf5WKv/cq/HH1zRP9jdpeojdp7FaSd4zWJSjp9qL/lLwbuk/z
a0q+qfB+qi1+B/FHin8ytY07orAvenRie34g9k5rHKG+Q3knor/mjIveqL4t
K/YJPhdfNbevcFU0lnCY+iZF+wj4CttIXkvjJ+O/Z/ah8KXAi+aX+oRY/W71
vyn+2tTx6Xr0tWTV1b+d5h8G5iDZRvUdUvqK4Cej9H9+qc857/hY4EHoj9sT
+1Sp5MfjN4o+VbIn+dbRvgTn5QPJr4/2rauJ/7Dw9ztY/Fvi+xEbaM761DHx
WYXPEeeJvrOR4w9l3jO36d2cI74F5wV9HI3H/Mnzqo1F36FzUveBz5yrMS01
fn+N31P0VPU1Fd8b/SJ6Db585phlJ63VIfj50I31Ko6vG4lvoDFTNP5prbGz
6JsKx8Pniz9Q/AH4F9HxI/F7ljueHlFYV/2ivpHsV8lrafw1xB2SD47G28Dd
BuAviw6ZYxTiqysLxwbE0JeV52sguiszxsc6rEdMDp5HvEOsuGMZf20RHD8S
R/bFv9H/dyT/tbyfe4gJMmOM4DncLzJiYDCBs6LPMj55Z63VKVi/Yyvqa9JD
+t8qs87k/BD/ce3Rid/nxdFyxg3X+P6FsbBD1TcXf7Mw1sc9cC97aPwCXfs5
9d0crEO4fnP2cuH3vnOpf9bm3l8DNP5H/BTwJnwOyZeq78Ty+78jupvooRXj
pz0y2yxs10XR98I93a7rPZLbt9hLfdM15xbJe2bGNNZIPoN7zuzztRZ9o+Td
iZckXwpfeK+wZ8Br2N/gs3m5n8FHwBobSnYz+lNt18w+ExgD56ee+BtEj6xY
/xP79UttAy/FZov/V/y5GnM/+yvzmUIfogfQB2AIpxfGeMB6umT2P9HnzH9U
9IiKr8P1tk+MD7OfeX//Y69Kflth/wF7tT26ufBZ5EzOwXeJvj73Maxif5dr
YfPmqX0b7U+BteF//F04FkW3jBEf9P+s1JgMeMMsbEbmM3Wv5jQNxh+JmdCH
4I1fJdaBxE3gHehL4i/isC8KY7sT2GOa+3FhLB0M7yDwOrV+omvmxhvfLYxd
z1U7AV80GLvDhmBLauuad+L7i39A/GXB2BKYI04vODF48dDEeNPR+LCJMagr
RG8fjWc1zY33LAmODbph70VflRur6Vzah5vUtyHxnkVfXU3MkdiGgPdxv1VE
9yX2qvj5aoofSNwifi46Uu+htea/J3pXfLTceNqJ4j/h3Ip+Su0k8TeU/nCV
8vn/KvwueafYohuJEdBf+CJaa6n44YkxvM9LObkJfIgevJvMvgA+QR1sbPDa
XAPfe7La2sQYLlgumPSdud8ZWPUxatMS74lCz98oGFsBwwPfaRYcy+Hz4ftN
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
              "]], 
             Polygon3DBox[CompressedData["
1:eJwt1nmQz3Ucx/Gf3Z/fklSIxEyu0IwjRk2XnREy07H/aFCWlKsJu3KVMWZC
KEwzalAxYhIpNSVXzg73fUyUo12sa2NdQ+Ts8Z6vP177+byen9fn+H6+n+/n
t/V6DuxYmJVKpQqpPO3MpFLzlJ+US6WapVOpvJxUahnWJBvj6wgP4HcLt5FZ
JrtaW2O53/A+6nPoGn5I/nfsLX4uXcdOYrX1TfOd1fcZo5XMYqqGHTF+N7mR
MkNpn3pbuWfpb5mXsU5ys+iytsn8cDqoPhF7klbIDcH2YmP592lHJpk71vAV
35t+xdZRoXpXbfut5ZRyAzYY66ZehJXGcxsvBytQv4S9IFMXq4ANxf7D8rAx
WL45DnuOKTE3/4C9ualeKPOKtjVylWOzsdn6Npcdhk3AesLH+enaJpZP9rlY
fRXV0nZAfmz5ZI9ir6bi4/jWNBY7z9eQuc1vNeZIfhB/xdxnlduxUdhw9RvY
OWVj2XuxCdnJPsZ+Lpdrwfei5dhBuVzP0ZCvyffQ90Tscbw3bVWpUjw3Nh3r
YW2rsZZUjV9CNfQ9hpfQbT5Fo42TK9OaDvE51EC9Pk3QVoE/bszX1H/GGhjj
sXh+vKJxlmHvUVd+PF5q2Lr8i3Iv8aOoJPaU7xDib9Ln+j7Mn8lOnqMR3aW+
C+8gf8kYPY35oXI8VcF78flyr8st4u+X68Z/iZ/mF9A262zOt8Vn8Q+lk3f/
B3ZDfaD2W3y77OQcrJHboV6Xhsn/wh/IJN9e03TyTc73ZyltlPmImhtjYzC5
xvzTcjOxB/lLeIH6NTw3zg12BuuL1ZarRX9iQ7WtM9/6OHvqb8bz4+fMdwpr
KFeRr0+HsEkxD63kG9LRuCP4NrSa70e19SulR/S9h59L5/mFVFm+U5yNOJfq
/WUGUHGcHyzLOH35Mut8DvuJqmDF+hbRLb6UFsqMxncbY6Z+J7A5sa/YWmwa
9nXsgz6LaQmVc26/xa6rr6RVlIP9iFWKsfg9VC0nyUe/7vhC413ISs5u9exk
HbGemjnJ+u7D9vMHqDpWhHW0ln5xt+g71VoGYY3ie8YnUW9+NvXHNvObaFY8
V9wJ8f3hHfW9jC/AbvIbqAlWjJ2M82ePyrKTb/Fxfp7cRZmlsQ65HenkeW/c
eb/xns/yi6hqdnI3xR11TW4+9m98q1QH24t9g13h11BdbF862au7s5NnjWe+
xn9Pt9U3UbO4j+S+w27xG6lp3Afp5H1cvrPvsf9l/Azr3q59sPYhdDjuP/oh
1mSe5+Um8hfk8uQqYldpD1YQdwR2jp8qX8jvop3x/dI7+rbQryXV41vJfGbP
qstMwVbEWvGj8e6xq/GtYnl8Pdm/sKzY5zhj/Bd0HDtG09Q/TSf31nnl0bjD
lGPiHpc/qvwn7jvl0nRyR+XH+1Fvr32tch2dxtqZo705Z6STMzI4k9zRcVe/
rRyhbUucAfVX9d2i3EpnsKcyyW/TPH5unIvYA+MV6dOJ363t0Uzy2xq/sV2w
gvhG+DL1i1g/5XBscyb57YrfsGFxn2Lb4t648z32Ub6LbcJyqQRbEGeMTvGT
M8n/BR/zo+gI3yWT3N8n8RFYZ/6NTHKPfsCPoxL+CTool88PMsd6/hk6jHWP
s4Ft5P8HJg89YQ==
              "]], 
             Polygon3DBox[{{1711, 773, 722, 721, 886, 1384}, {1415, 919, 739, 
              740, 920, 1416}, {1367, 859, 687, 688, 860, 1368}, {1700, 751, 
              688, 687, 850, 1361}}]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stLlGEYhvFXTSHb5ELQoCgw3RSYSIsIOmwq0IQ2LQXBhZEzpqVlB03z
lGlpNeNZc3I8QNEiJUEMWriqVRBI/0Krtm76vQbzzH1f1/fMzPfOzImG5I1E
Tgjhg/mTG8KSaTV3TPSf80JI6gm9RW7gbH4IanjrKSmPcm36Cu8R0nqbPMaf
Iu7iQnxPHuc69Eq+HRfpHbKcP8s9xPfxEbnFPdDP8d24Uz8pt/lPcRf34Uey
Kt4r91gf0l/KjwUh5Nm9hGfxiPxr55V+kK/Fc/q4/Gl3jxvDN/G8vGw3rYcD
dnC9uiC/2r1mdxq/xo0yn1vUa/l5/Ea/JXf5Cq9/H+8rfo+mmf9hb1jP6M/l
d7zl827jDF6Uddygvsk34Xf6nKzhr3MDeNT0m6vclGtX+L54VvMsniGen0u5
1otfmB3uqbzAj/Hdeo/5xq9zXXGPfyIvylKuWR/UZ+QvZypxpjN4LX6OPG9n
Wi/my/Cq3iW/2D0d7w2X4hVZwnXqZfwkPqwvy998tde344n4G8lD3jerV/Kt
OJW7/3OETMH//+s/FFFS9A==
            "]]}, {
           Line3DBox[{1291, 1690, 1555, 1870, 1503, 1323, 1501, 1885, 519, 
            1502, 406, 554, 1183, 405, 1422, 380, 1852, 1500, 343, 403, 1743, 
            1869, 1754, 1448}], Line3DBox[CompressedData["
1:eJwVy8kuHlAYgOHzR+jKWFNRibWpRKUaREWFEHPSxArRYaUhUeNvLjrszFO4
BYlL4AIkxEboypAQt9DH4sn7ne+ck9f3vWMgEkKI8io2hHMOGCISF0IuDS9C
uNAHu0y6zI86yGvzDzq8udRAhn3n8449871+c/9X/9BKun27trFrftJf/GaZ
ZtLsW/SNv/90x3lRl/hJI6l2TVrszbVuO8/rAnN85KVdt/sGcz1bzjM6yzQf
iMSEUKe1bLqP6hRf/bvTKlLsa7SaDfOETvLFm1utINm+Ut+zbr7Rz+7HdYy3
JNm/03LWzFfa782oFrJil0iZucj+VFedC3SEfHqdEyg1n2kf2eYcshgm3u6T
/yXmfXMPh5xwzBH/AZIbOCw=
            "]], 
           Line3DBox[{1324, 1871, 1556, 1505, 1506, 1504, 1749, 1861, 1325, 
            1423, 1292, 1362, 1824, 1361, 1700, 1823, 1425, 1365, 1701, 1826, 
            1532, 1326, 1627, 1770, 1817, 1677, 1507, 1327, 1508, 1872, 
            1755}], Line3DBox[{1328, 1744, 941, 1470, 1471, 1449, 1484, 1450, 
            1558, 1873, 1329, 1557, 1330, 1483, 1228, 1825, 1363, 1424, 1364, 
            1229, 1828, 1367, 1368, 1827, 1230, 1702, 1792, 1231, 1625, 1628, 
            1626, 1897, 1678, 1232, 1643, 1331, 1509, 1332, 1898, 1679, 1233, 
            1533, 1510, 1853, 1333, 1511, 1560}], 
           Line3DBox[{1334, 1845, 1472, 1451, 1486, 1452, 1561, 1718, 1846, 
            1559, 1335, 1485, 1234, 809, 1366, 1336, 1235, 1830, 1371, 1372, 
            1236, 1773, 1703, 1793, 1237, 1704, 1794, 1238, 1705, 1795, 1239, 
            1629, 1630, 1796, 1761, 1680, 1240, 1644, 1719, 1890, 1512, 1337, 
            1681, 1241, 1534, 1818, 1720}], 
           Line3DBox[{1338, 1474, 1453, 1831, 1489, 1242, 1454, 1473, 1455, 
            1369, 1797, 1488, 1583, 1487, 1243, 1721, 1829, 1370, 1339, 1244, 
            1729, 1798, 1375, 1245, 762, 1246, 1774, 1706, 1799, 1247, 1707, 
            1800, 1248, 1708, 1801, 1249, 1709, 1802, 1250, 1762, 1886, 1631, 
            1683, 1682, 1251, 1645, 1646, 1891, 1513, 1685, 1691, 1684, 1252, 
            1862, 1535, 1340}], 
           Line3DBox[{1343, 1479, 1462, 1833, 1403, 1443, 1569, 1442, 1571, 
            1876, 1723, 1570, 1401, 1320, 1402, 1788, 1722, 1400, 1319, 1787, 
            1399, 1271, 782, 1270, 1812, 1713, 1269, 1811, 1712, 1786, 1268, 
            1318, 1785, 1267, 1317, 1694, 1784, 1771, 1266, 1316, 1648, 1783, 
            1763, 1633, 1635, 1634, 1887, 1523, 1342, 1521, 1746, 1819, 
            1522}], Line3DBox[{1345, 1847, 1480, 1463, 1409, 1445, 1572, 1444,
             1574, 1877, 1725, 1573, 1406, 788, 1407, 1344, 1405, 1834, 1716, 
            1404, 1275, 1814, 1715, 1274, 1813, 1714, 1790, 1273, 1322, 1696, 
            1695, 1900, 1272, 1321, 1649, 1636, 1888, 1637, 1639, 1638, 1526, 
            1789, 1724, 1524, 1525, 1820, 1747}], 
           Line3DBox[{1346, 1748, 1815, 1726, 1276, 1651, 1821, 1347, 1650, 
            1348, 1688, 1277, 1772, 1889, 1640, 1697, 1641, 1278, 1791, 1717, 
            1816, 1279, 1410, 1411, 1841, 1280, 1412, 1413, 1835, 1281, 1349, 
            1408, 1350, 1851, 1575, 1495, 1496, 1464, 1482, 839, 1481, 1351}],
            Line3DBox[{1358, 1878, 1576, 1357, 1540, 1286, 1539, 1867, 1356, 
            1414, 1355, 1285, 1837, 1418, 1417, 1284, 1842, 1416, 1415, 1836, 
            1283, 1354, 1652, 1353, 1822, 1765, 1282, 1352, 1527, 1866, 
            1727}], Line3DBox[{1446, 1844, 1553, 1447, 1360, 1438, 1582, 1698,
             1843, 1552, 1530, 1531, 1499, 1554, 1689, 1899, 1699}], 
           Line3DBox[{1456, 1850, 1253, 1458, 1475, 1459, 1373, 1491, 1584, 
            1490, 1254, 1374, 1426, 1803, 1728, 1255, 1730, 1804, 1379, 1256, 
            1732, 1805, 1381, 1257, 1734, 1806, 1382, 1258, 884, 1383, 1881, 
            1259, 1385, 1807, 1736, 1260, 1387, 1808, 1737, 1261, 1389, 1809, 
            1738, 1262, 1739, 1810, 1391, 1263, 1741, 1854, 1514, 1392, 1264, 
            1764, 1855, 1647, 1515, 1687, 1692, 1686, 1265, 1863, 1750}], 
           Line3DBox[{1461, 1849, 1478, 1315, 1494, 1441, 1398, 1567, 1568, 
            1875, 1757, 1396, 1314, 1397, 1782, 1742, 1395, 1313, 1781, 1740, 
            1613, 1312, 1780, 1390, 1610, 1311, 1779, 1388, 1607, 774, 1386, 
            1603, 1832, 1711, 1384, 1880, 1599, 1310, 1778, 1735, 1595, 1309, 
            1777, 1733, 1591, 1308, 1693, 1776, 1731, 1587, 1307, 1865, 1538, 
            1380, 1519, 1306, 1857, 1632, 1520, 1341, 1518, 1856, 1710}], 
           Line3DBox[{1465, 1621, 971, 1420, 1548, 1577, 1547, 1289, 1860, 
            1545, 1546, 1419, 1498, 1497, 1288, 1883, 1622, 1623, 1542, 1544, 
            1543, 1868, 1287, 1359, 1528, 1752, 1858, 1541}], 
           Line3DBox[{1468, 1848, 1624, 1469, 1421, 1467, 1578, 1466, 1290, 
            1884, 1550, 1642, 1551, 1529, 1549, 1859, 1753}]}, {
           Line3DBox[{748, 1899, 684, 1202, 1203, 1000, 1150, 1885, 750, 686, 
            855, 1044, 1826, 752, 689, 1792, 754, 694, 1794, 758, 701, 1800, 
            765, 710, 1807, 887, 1125, 1126, 770, 1882, 716, 1128, 1129, 1127,
             774, 723, 1812, 781, 731, 1814, 786, 736, 916, 1841, 938, 791, 
            741, 922, 1837, 923, 1099, 794, 744, 1061, 1860, 1062, 1034, 1035,
             796, 746, 1848, 972}], 
           Line3DBox[{771, 1856, 1013, 1012, 1053, 1052, 714, 1879, 768, 1184,
             944, 871, 959, 992, 1850, 958}], 
           Line3DBox[{777, 1016, 1819, 1015, 821, 717, 1857, 527, 1014, 468, 
            469, 1586, 323, 872, 321, 1584, 466, 267, 291, 957, 1831, 991, 
            956}], Line3DBox[{797, 1070, 951, 1869, 1069, 1068, 1040, 1041, 
            1001, 1861, 1043, 1042, 927, 853, 1825, 857, 854, 691, 864, 1830, 
            930, 865, 698, 762, 707, 1806, 882, 1116, 1190, 1189, 1894, 1193, 
            1191, 1192, 1117, 883, 1778, 720, 778, 1785, 728, 1223, 1900, 
            1224, 1225, 1226, 1227, 1889, 1166, 1165, 1180, 1181, 1182, 1822, 
            1026, 842, 1028, 1858, 1057, 845}], 
           Line3DBox[{800, 974, 941, 975, 976, 953, 856, 955, 1080, 1846, 807,
             1082, 808, 1081, 863, 1829, 816, 867, 817, 705, 1804, 873, 933, 
            874, 1106, 1892, 934, 1186, 876, 1111, 877, 1776, 1215, 1216, 
            1156, 1159, 1157, 1783, 1176, 1177, 828, 1018, 829, 1789, 1020, 
            1054, 1021, 1815, 835, 1022, 1024}], 
           Line3DBox[{804, 1004, 1853, 805, 1005, 1171, 1890, 811, 1170, 812, 
            1155, 1886, 1153, 1154, 713, 1810, 892, 1137, 893, 1775, 1199, 
            936, 1200, 894, 1141, 895, 1781, 726, 823, 906, 824, 1788, 908, 
            831, 914, 832, 1877, 1095, 1094, 915, 969, 983, 839, 984, 840}], 
           Line3DBox[{813, 1818, 1006, 814, 1007, 1173, 1891, 818, 1172, 819, 
            1009, 1854, 896, 1144, 897, 1201, 1896, 937, 1107, 898, 900, 899, 
            1782, 902, 825, 907, 826, 1876, 1093, 1092, 910, 968, 981, 833, 
            982, 1847, 834}], 
           Line3DBox[{841, 1866, 1055, 1025, 837, 1023, 1821, 836, 1179, 1178,
             1163, 1888, 1164, 1162, 1222, 1221, 1784, 1220, 1219, 719, 1777, 
            881, 1115, 880, 1188, 935, 1893, 1187, 879, 1114, 878, 1805, 706, 
            870, 931, 869, 1798, 697, 810, 862, 809, 858, 1078, 802, 1079, 
            1873, 801, 1075, 954, 851, 952, 1074, 1871, 798}], 
           Line3DBox[{847, 1101, 971, 1145, 1031, 1100, 1030, 1029, 1867, 843,
             1056, 742, 792, 918, 1835, 917, 737, 787, 1834, 912, 911, 732, 
            782, 724, 1779, 775, 1133, 889, 1134, 1135, 1839, 1132, 1131, 
            1130, 888, 1808, 711, 766, 1801, 702, 759, 1795, 695, 755, 1168, 
            1897, 1151, 1207, 690, 1206, 1205, 1817, 1002, 799, 1204, 1213, 
            1073, 1870, 1072}], Line3DBox[CompressedData["
1:eJwVzTEvQ3EUhvFzi3SxiJA2BhFLWSR8D+kVi+jAZWbqUnwGq4Gwl0RS3Sxt
0kkstqLpIhFppOnQzeDX4cn7nPec+78r2enOSRIR23iaivhAE2XcY306Yisf
MchF1PGp29X1ZIoNfotfuweUeYo7u2XfDXWPqJhXzSPeRMLH8hl5/ic7qLrb
Mx944xCJ+UV/xI+RoWQ/o3/Tz/NZ/s4X+Bzv8wJf5F/8Sm6a67KIb13NO/u6
c3mGa31LtnGJJfOPuxKvuLuQa7jRNyb/Qxev+Aeyyyo4
            "]], 
           Line3DBox[{966, 980, 1833, 967, 909, 965, 996, 964, 1091, 1875, 
            1089, 1090, 901, 1087, 1086, 1185, 1874, 1084, 1085, 1047, 1175, 
            1174, 1855, 1010, 820, 1008, 1046, 1862, 1045}], 
           Line3DBox[{1019, 1820, 1017, 827, 727, 1161, 1887, 1160, 1158, 822,
             1212, 718, 1865, 772, 1110, 875, 1112, 1113, 1838, 994, 993, 932,
             868, 1803, 704, 761, 866, 815, 1083, 1797, 990, 1109, 943, 978, 
            942, 977, 1845, 806}], 
           Line3DBox[{1048, 1863, 1049, 1011, 1051, 1050, 1864, 1088, 960, 
            995, 961, 903, 963, 979, 1849, 962}], 
           Line3DBox[{1063, 1859, 1033, 846, 1032, 1060, 1868, 1059, 1058, 
            921, 1027, 1836, 919, 739, 1791, 789, 734, 1790, 784, 729, 1786, 
            779, 721, 886, 1880, 1119, 1197, 1196, 1198, 1895, 1194, 1195, 
            1118, 884, 708, 1774, 763, 699, 1773, 756, 692, 861, 929, 1828, 
            859, 687, 850, 1824, 852, 1103, 1102, 926, 1038, 1852, 1039, 999, 
            1037, 1036, 1067, 1844, 950}], 
           Line3DBox[{1076, 1872, 1077, 1214, 1208, 803, 1898, 1003, 1209, 
            1210, 696, 1211, 1796, 1152, 1169, 760, 703, 1802, 767, 712, 1809,
             890, 1136, 1138, 1139, 1840, 1143, 1142, 891, 1140, 776, 1780, 
            725, 904, 905, 783, 1787, 733, 830, 913, 788, 738, 997, 838, 1851,
             1096, 945, 1097, 946, 998, 970, 1098, 1878, 844}]}, {}, {}}},
        VertexNormals->CompressedData["
1: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
ENXn/u6CrU0ph1H/6SOjKKoP3jd2MlHfam/bpQHhW+TddYPvtltK4cfjwOzb
bl1wnvlbntoP2077jM73QmedNNo/WLp0auCZeOBbVhjVzCkl7idTN6SY/48+
/Ic+/NFXkj6TPD3wBUh58iyUul4KXYGv1/Md7IJUfjnR7s4c2Bm8Qg3XN/jN
j4m4Xo/jO9cNBWZAxex0nzUq5SToXhKPT1on9B2aJ4L6GWZvtHB9bwzlC6H+
LnG5UX25MfuvU32ojA4c8ab6vuZ+6koX02HFrMeDR1LKYGDtpJGcxk7w3KK4
i8YnqMEGQ4zn7MorhzE+R6Zte1FwvAiWCxU9X+lVSZ44rW91Cun4Wx/+Qx/+
6I/LX+kvqVII8bENF1I5FZCsfK0040sHxA6UjJ7TDdc9NcJzgZRrH0fP6dYz
TszA/ZOR5yEzEMe+9fz8iTgmoCdWfjKtHKwFhyf+kq0Gud2b3WbKtIPl/S+9
uK/S9GVHMOJk4fuWUTxccGlRcodVLYSYWB5v9akHfkbQPn2TFthQtzOf8hOQ
KFsphPzkucCTd8hPiibnAuWfwKugmEz5J3Su3OCC/LOuoV4T+aRr2PfTuM8Q
JrmaIG989tEzWr15j37Jy52pn6WaQLy4RNBdqB2Wy4pZUd4LBzhDpZT3gnRA
Te1dynun2D3WQ/7sd+ulIeXPcCFhly/y5yap6jfIz2sKW25gH+T8Qvk38vP+
DKWPeC7GTPE1xPcWBNY6teK5mEPMPB08//p5YaUtnu/kBEy/i+c7yYfjZ+D7
MOGGCXb43pTIp1cC+D7MLV0mE8/vrh70csb3ECwt1N/i+V3hnEfj8b2djFdl
H/B9p+uaXVb43k6JW48Vnj9+bA3Ww/cH/DorLuP5Y3OixlPcR/IwXnsceSac
Fx/tXx7lfZiN+2kOC2UMkV85e1a4IL9612fzHd+n6s/MLMX3gu7dDN+D4+c/
eNqK7w9sr9sJeO7ZwKuojeee3pIZYriPp6Z57jLyKEG3C1rIo/I4O8fh+2DK
Rozz+J7PBN35gjiv69UfY/H9hwNX8xfjeaXK/rxQPK/0Xf5eGPcPh9Q2n0S+
pJa5ZDbyJRvew5H4HsiEryxLPGf8uGtZG/pzTsMPKXx/w7Hn4E08Z3S9CF14
zuiyUsUK9y2V3NWPIi9a9jqOH/ctT92bYIz7nJOlGXeRn2Sd0ZdGflI1a0gZ
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
oz3jxG7MQr+tVAsac0u9DuT5q4+h33pu7b0tOZ5FHi6NX+GwlAUuxoKCbzXq
wObhTT+M54iU0GQabyDa1zj7X+IZ/iOe4T/iGf7E86F45VcYzyuHXN7i+HOL
Amfi+HOFQk5hPIP3iUIaz/DhSsF0jOdtvRbnMN8nVyxyoPkLycEdV7j5Lv9v
94sXzjeNx3yf/XnrCdS/dIbji/oCcWJ2mO+RZ3eso/kOQ0n+apjvjPZdiZjv
7plzcmi+g4PyKj7M97XZm4QQ30w672hSvIKyO8OjeDUyMrJqFN+494W9ufeF
dU86qCC+WefqqaF+k/n8a6j/XmzCZ8Q3ueh58hTfQCuK5yviG7V/5r/d/900
5aA94m1OEvymeAu/aiYGjeItDw/7/9/n/c29z5sbfbYnmuL5mSCe40mZLMjQ
utE+k+I5xf821D/Nxf9ELv5vXLLyqNEFNmgan23jecchYX1u5d2sPBx/Ntpj
y8X/ZVz8/56SPuM07Z9XxQp0iJxnkHPijr9+DbLp+DxG6Id1f+H8hCNTwkUe
FEHRiXzTD+fryfKXsVF6jW0wPDIyD9crnYvPylx8DteQmyFN1+t5v63Yy1PV
JG58/5jwiA4YbuObVKJXCWMlUtn3XerJ+BPQ7X2/FVSd3qZduZ9JDHUThH7k
VpENYuvDw3NG4yEH49D8L1x9aNO7cfAigXVE64r4zUryK2tBboJrJ8jwPz9i
GlcEFlfO3TlvVE1a+IUj+vraoS9/Xf8Op2qwUu4V7amrJ/ey12huTmwBCORp
L7zaRH56/Sq7I8cg8lH7AgVimXDkwqnJ3WmfiY9jh3LnnCoStGhO4ZBNB5hd
9tBi0nzZ6TfBX0uskgymjGV+C/rz3YM7/4OTa67aZhyj+T5zmRLH61w5KemS
Pb9qqBPYu76/OHAhF2yMRNcM0r7t2pS89zekOiHFzPCn1twyGO4bI2JwuZq0
p9EexrQd3MsZ5yuUWomT0oooKd5I0qXoO2dDMhP4eC6M4qEgFw8/cPFwx+fL
9tVlCbA7Lr528n1TwpYTaCtlfQXxVrGCtWM4ZIFma2wWH+V9BlrP5sUUwExf
ta6Mc3VE77Sox+ewBvDIDcgYc6eZOy///8Exr3u9zy98eQOii3ZPtBxfDpmZ
Ynskp3aB8x5bEYP12ZCWfrnG0rgCom1rV5482gkVsyrlXeSKoX27epyoyRco
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
+3DxEhAv7wHi5b1CvDzD3fOGqHdySUjKu5f7f3HJ71D4sCA487/OcQeeV6bN
SUEzeu411+IOsTzqlx43Atb++AB1siMTxCZxyYvCoWtiZ3JJt8awwwt982Gq
cDkPt648uA+3jivYh1tXjnh2ZYhnNxTx7FLSLcwEu7lQkHh0Z+VvLrRsvTt6
o3kmfBYtEqf/CzYe6btYHju3Z+5d9r/3Jn+WouuH4il3ouj64XXqvTNs/cUX
v1ixvPSNNpbPWV66YOWXQZ+mJMMaPjy4xYgHdwz9/C7o5z+Bfv4deF/G4H3R
x/syPHHEXEH6/hbPyAwfVlpF4uF+9fJjHDhbv8+Oyk2i6/3UhspN8vFVzLRz
VG72h782CunnkL4a6WGT+/zkZ7b0+cmzBvT5yQW6bglJUzt2XerlTy1l1ST0
k6gp8590905TNn9UQ+zUl45MKqTvxKFtGu4aFSBwu09fHY366gfUV8chbtpA
xE1TRty0PUN2p9BzhEALd3N6jqAx7/Yido78uLFfkM/T+eitSM/nwx0bjrhj
X/rBI9sbp+VWxqkGB62o3S9/ccgjBwWXZfLl0OD5NYj5/TynPYo2vVtDrnc0
TGZ+vOqb/gnMvydRnnqf0Z8Ii8oyeqjHGWByXFbGbgWTvxmJBU1M/vqNXuUS
R+0u//bliZtNuaSQo/112skC0HafaMD8mWcCX35rl+GQ1V4DhW4aVYCPycKl
1L4j8vntqdS+I/rZnM3Mvhsc4hVQNpJDKqOX/SNyjkPGvt8fsnpuKRyLd9/K
/JY7NX/XsHm+Ka9rYH7LDfWW7k0uVK/MX7cqnZ5j6nPZafOv5cA/6JeQQL9E
DvolGuv74j4dsX1xn1OP++I+l6ebch/nceF4pmwFy8MfUmp9xfJgFt1P+YEN
76vh6zvHzcd0asiH4XeiTK2qwMUm09/pcg30eOSafcuoIVqzh1bLeFeAgeuI
nUzvvfYwbCXTH2IdrWKY/jDVMcdUfQq1a13+6WxeyiFH1yRcWx9bCqno33uK
/j0t9O/tQP1cC/XzC6iff14t+9GC3uuFDWNepD7ggqWj3vGbL7Jhxo3bk1lc
oyu5sYbp4VpbF5syPfzFqbgZ9H+J/Pr10i1LOcCdNe86+98Ppu2twkZc0hjy
KeTXRi78jp54v9kuD6qO9HJYX5ezA7z3s74uHaePL2f+kNqQUDf6vSQydMF+
+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
0WX393jhgyZ23/cP//WU5WEufmQRz+778x1Jw9k6J3L0Uli8JkZhBC/f1WbY
pCK2/9EmchuZv7QyeNshtv8v0D/wg88/AP3kAzuiH8CMLx/4DdqJMWgnpqKd
WKQnvorlszVWzb/I8jbTvW6LsLy4VFOnUnbfb2aarmf5pWJKXdvZfVfkk+9H
Ub6/u3LzpU/ne/IoeX60zugisme13D+bhFtgtGHVRBv3OJLc4laXkp1P9kx8
K9t5/3/H8ZNRHytCfWwHynE5lOObUY4vL2n2uKSUTT6tPTxTZVQRrC2ds3+R
UDPU67/u3cVJJpOmFDhvupoPjosin76h8qhmYrX4bk4yvD9izqOP+SbJox8Z
6XCezgNtVwxnsHlGDv7iwuaZt1BaZ8KNQtie5xzjHlwKoweHvDpZ0AALZ7w3
2K5dAbljbku1eFbCq0fDR206VQvT0E65jXaKEdopKxR/ll26mE9Cbu1a/mJq
KTgb3Bk2blcjJKR6hZ8NzyA2iupJ8eWF8KjKNWj+uWbwcfMT6nB+S8o+pEod
TMmH6WuyRJWftIDJQJe5z6/ng9uKPSF2eqVw66uyo4RtI7zDfKFvfPlC6zBO
4YdxihsYp1CYvXzzHYX3xMuoQuekcBGIi08S3De8BazWS8j4KKQRsxKV5Yoy
pSAbd+FKy58mEC7vMKd0UK+8PZ/SiXKUI49ecEN+E6tTuMBXH6TU9fMynR80
74Zo0vnJJqMmATb/1wfSj0Yp0Xf1wW6zkN8l5JSzbO7CiU1wDO9RPd6jWLxH
q7DfRTD2u7iM/S5unmmYRPeBGNQvDKT7QNLvSO1m+3C1sGjnv9Xv3DxVZEb3
EwrM9EfQ/STHVHtF2H7W3PiURfcfcjYFxdP9J8oj5t9m+//GNVHW7Ug+vG45
K+azpJSYzFaZKOfYCI6Gb+bRcyebEqOH0XMnJ9PT5Ni5fyuYMovyCVGIufiC
8glpaMt5w/jk4sXNxxl/NsvdV6N8RY4+TOLx55SoAB5/2i4O3Uv5kMzbcYHH
h0b9yKkJvu95fCsUoMIbzx3bHM7Gv/tQwuNbcXNXVTa/br6HK5v/llYdML6t
PxT2nK1n8WSLGLaeZRZlTv9Wz2I5aKgzvY/QFB9US+8jhIQ/kWH3cV85Z9O/
1aF8ubu5jt5rsOhRfkPvNdgMSA5i95q/v/dQ1Csuej1W+c+6Ek2sK4kXe/T6
zqkqaPIUX31teA2J6vJauzKjGjxL70x4RPWlGOJ9cQ/VlwqLD4x90pLxX320
xqJc01jUG7mayrW1MXENKVSuLZS1l2Dj//azGoX9rEZjP6sNB9T96f8Sk/I1
u+j/gvKvYWbsf88Lr2lk+VROfPlUd4b49uQPySGSuT13q4QqiXeq7a3HAxrh
O/avXo79q3uwf7XNqhnKBUNyYKV2ZDAbn9eo6sfGSw1Unf5vdX822EdUg6+P
qDXmwQLmwcZjHuz9kMDgQMgh82odtqoXlZAbo4dlKU1p+q98m0uYb3PpnPfA
f/O78uexmGAei0D8qWg6P2ybNH0HnR9OaRensvn/9n2Vwr6v47Dv60WtZ91s
fzbcbAij3wsO8x77s+81OmqoxPbhmnDQQ0Z/Yr7Ph9GnY9+Pqs19fT+uYt8P
rEeGKXx+DGXsq9Bo0ddXQQv7Kpzvp0+pitn1+n+rJzo7UKYn7D/iaK4YR9MV
sPfV0awjPj7Bb7cO4ZKi0l8Xf4umQfuXXSn2urXE+Mn0y/Z0P0U5Ade1hiaD
Gsa5XmCc6yLGuca4ymbS8UCeaZyj42FtjWkAGx+1QMt+v2Yd+E2u7FAewoXH
9RLnuXT+e83OO5foUzt66AC3Qjpe5dWy+hsNH+CktF7eeP1aoqWiPLSH/u+t
zS6ljH6Ir49NHPax+b129GGXE+VEtGNx24LJNcT5xjfpcQEcmM1Xv+CD9QsX
1N8YMfl1XfiMOHvHVoacl2bvWK/OCvcapRpov/XFbyS1b5Ia9c8OyKyE6dY/
tmtSey31BL3B1F7L1nXXHRWaAQFiztZ0PFlwFCLoePD+c4433hX1PTfU99xR
3zOzHjdagfWnymoZl0z1vSSH5R9eR2fB+AVjHtP1g+JGta90/WAyXVWYrb/e
+kYwu6eH3wVasvdB01dnM7ungzBOHYlx6qMYp06Se+1zgeqlZeOFK69RvXT1
6poX336kQhn2L0rD/kU+2L9orNF7Dfae3yrMGM3keGPOKhm2D1/XHy9/Q+2g
hWuDhpb/4cKVtLHTJvtmgpqc7jP2XsXdSbBm70bkJisjtp4DXgN2sP1vNYn4
w9bv3xIyjK2fvx+sPurz0hiHXYtxWGOMw+Y+v1V0UJBLxD4dh9CNdWROUKTR
XucUkA2ek7ragQN/TC72LvSqI/+4bWj9pkTtduw3FYH9pgD7TR1H/2Qd+ifz
0D+5B+OYQhjHXIpxTP4+Swuxz9J7vjijPcYZHevrKug6YZnl5Pl0nZCc/ceA
rTMWcdM0ETftMeKm2faTf37k6OjB/1ZP+gzx1OpH9uGp3UU8td4/EPKfdXx/
+5z0Dj/Twe71Mb56vbABU98wvprbm1DN7oVU4VFxdi5//fy+6OfXQD//qIcn
lhr0VJNTE68N2ri6BqYWfZikPagKbqF/Ph/9827on/fop49HG+bbfMF8m2TM
txm+0HsrnR8sah3bzVfXkD0G+rz5/9ojm/nskYvYz/kS9nM+hP2cL6O/lz8O
dRv7KrS+7eurUIp9Fdywz7Mn9nkWHdnX51kO+4ooYF+RrdhXRA/7fKphn88L
2OfTt+a6Wb0HF9rvhsqPel1Lvs0ao7KiIQ30Hgjb5JrnELuUKRoKzSVQ7L8m
5JZCE/wvjWfEaA==
         "]], GraphicsComplex3DBox[CompressedData["
1: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
5I2TffX3qi/7Zd6ju175A3zvP69/886ug8of4BPz5ikzM1j5r/il3pemxn/h
vK8HfF3Xcyf6HnXe1wP+2r9thk1a7ryvB7zUB0+lrT/vvK/H7cEf7h/8eTQ9
GYbph3/M31ui1eocsQFnFb81b9C8GTlX6vdC/w1y8d/JJ00jeQDO8qB1ECQP
3B7f++j+nXzDU7IuMC7wp2ndAf+G1h23x/fCTiaLHsC4wFNILwFvJHoG4wI/
SnoJeCX3uwbm0f07eZ1T9UavHbDQOfcFPPXt0zN/OeK8Q6B4zhnvtdul7ykY
bo9xvfqHX/Z7UtzxxztlzVs3F78O/Xu1R97rmS5DIttP3Wfr+/Lghu9Fw/kN
2OEFYZ82Hx4eZ3FOBvZwgrynifMwwE/J+5s49wL8M3mvE+dbgBeV9z2RNwSO
90BxDgQ43g/FOQrGcW6B+0F+DTjeFUXdP3C8K4o6fuB4VxT1+sDxrugi1764
c64O54Lgrw3vtGlmzJY4rZ8AfqTHtqFv3kmyOOcDfN4vg59v1zQN/oHibXo9
M/KqTbc4DwP8eP6vbq6dlWGRfwSe+9CQq03upVucowD+U+u01RtD0lCfofj+
+ov6DaqSYnFuAXjMxYA+PwfG2+a+/SHFE6uVvjv53lb4E6p/nhgxd8KKr5Ms
zhEBP5i85fzZxajn3q34onI9R3a+k2ZxrgP4gTVJg/9YmmJx7gL4iP6hIWdK
JFicR4I+ecJ/fPvbyYlW6uQUf2vY8xVTO6VqHTzkv/223PPObA3Xcwicz0Md
P/CpLVZXzzfiAM47GV4vqGsH3vpg3M9ndq7Vcxdc94RzDsALyftxSwgv7sYN
48sJRz+oUwc+VerVcW6E661w3gN4qfllS/XvEqfnKICDz3JuRP2fY30DX9g/
N0bPq3B8hnpr4LlETlBfzu3vda91bNKD+AfyFp35XuE6e6n4/nHnH8Q5kIfJ
me8J7rKoO+c8HM4JsJyg3p3zXjjHwnVnODcCHPxfSngJN6725WnBQwhHP6jv
53HBf9iLoSJXOB8CHPKJumrgi0Q+EbcwvlviFu4H+SPgtsnPF1+svtV+I/v3
XH+H8yewR31kfSFviDxEXL6kNufK/Kn14lgvz/TNWPZVDucdIuDJYjdxfgby
/Ibc2/Yh4bjPDfum6OeHPya/Mra3vmOl8lx9eIGN2/6XqHXk6CdB3qU64YFj
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
8733/lrzfIr9PxZaaGk=
        "], {{
          {RGBColor[0, 0, 1], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnAf8V9P/x+88V4oU2qRSihQpQiKjMpIUhYqyFdlEslK2UhIiyQrZIzIa
EiKjssoKyd4j8/96ep3f4/94dHq/77nnnns/Z7zH6/0+32ZDRxx4UpYkyTll
kuSij+m/20UPEN2lSJIL0ySpL3q2yhuqv5B6te0m/lvRo1R2F/+d6Ay1vU3l
aV33V/v5oieqfWPxx6j+J/Hfq4xRfUfRX/XizcQ/I3qz7k9VeVjXv+m6meiz
oqv0bHPxq0KSvC2+vvhB4m/T84+LHyJ6iupfE3+e+G565hv1s1jXG+i6j+i7
quuk72vJt1dJ0lP8EarPRLdQX33U/m3xl6hcpzZbqc2eeuZH1b+qdoNVd57o
lqJ36l0fqH6gaFe1WSP+Jd27V9efiB8s+qLos6p7SuVQXS8QHaFn71CZK/4E
0X30riHic9Fr1Wa0+Laqv1XPTlN5Qtd/qP9N6Ef0YJUjVX+xrv8Uv6noHNGD
GCuVWioD1ddGql+m/g4v/ez74juL31D8UvE7qY97xJ+uch396nqE+Llqc5au
7xV9X99xl+r6iF6vusPU5jRdP6LnB4hfo/pvVc5XXTvRnfVME/ErmXPxI/XM
LNFJhb93O7X5W3Vtxb8g+o/K1uIX8Zt07yLx24r+q+t24l8UHarrC8W3zz0O
W4pfILpWfR7KXKj/nzP/3kdFZ6jdHPHHiE5Qm3VVd4Ho7yqHqL6N2h9Ce5WJ
uu6t62NEK9FLVabouQ6a98vF3yh+a/Fd9FvPUPt11e4a8aeIP5VvVJ+nMTdq
N4+x1b37RduqbKq63pXnkXp+wwrVjVD7R9kLqjtZ/Emq/zD3WD0tulD1bMTL
VFqKP4fvV5seunej6Dui2zBH4l/Xmm2iNnVSf9uDqn9W93fSe9uq7gI9O4Hf
LH60+CvZ12ozX212VJsFrBP2muijKh10//m4f6kfS5/se5WDuafn9hPdQ797
G9WNUZ9XqSxjjkRfEG2n+nqp39tN15NF3xJtz5rNfN1a/Cjxl4jfQvdGie7E
/lb92ao/V9ddU6/DOuLP1b0fRKfyfn3fvqL76vs30f2RiWVBe9XXFv2E+dX9
e8UfzJipnxtUZun6H9Yx38/aUJnEe0QvZo2Kbqs+H1bb/VU+1b2Nc6+xD/Se
8eI/Yv5Fjw+u/0ffNV3XDyGLRFshH5kL0R/1TD3VPy66va4fRAYgU/SuddiP
oofpupb4B9jHeq5u6t/bQffO5v16z+TUe/AUldqF9+nnudfhOall9GuqX1/0
ELVvV5r/S/QglfXETxDto3KgnttMv7GN2v+k+puRi+J/FX+r+I3E34fMFv+l
yhnim4o+V3r9zxT9PnP/D2X+xgcSy5RDUj9boQMyv/dB5JKeryl+muhslZni
+zLWrBc987Ou7yk9P6+ITtM3XKf69qKvi+7CntK9JaLnxbHYSs/WiHP6ZO77
A0RfTS3X7mRMRHdO/b6Gan8aekX8GNHnRC9XGSv+EpWrxd9O/2r3jPhv9B1L
GXPRW1WWiT+V8Ss9X7VEb1bbE/TMVXF/bZy63enB79lbbXZAvrP+1Xa6rt8V
f6boXan7v0LliOB+vlf9PNa8yq2qX0f1l4kPou/p3ne0F80K97+P+u7IHlXf
X+r6atXXYz+id0rvzSdE/1W7Kbq/l+i1KteJ3030KPV7hdoeoQn7V/Qw1V+k
9lfo3nj2o+gTyHjxN6CDcsvLXUQDa1D8kegtPfs1bVRfV2Wg+I/07lGl+T91
fzfxg8SfJ/qUnr1U5Stdr692R0VdNpYxFd1X9J3g+fpd/H56/gzxlejzoiNV
flS79YLHaq3avCK6o8odqu8c5TP7Yk7ptleJbqnn12GN6hvrBMveu5hP8d+r
zZXi71Hd0antkrlqtytjpeemlV4XR7AWSq+foewztekpfhnyWvx74i8VXYmc
4Leo3K/+9lX5gLWhvpYgz9RmLfMhfmfRE1X/iviRzIv4L9V+qOix7DvVHaI5
Ol7X36n+WNGTC9sj5+jeCYVtnLPFH13YBjkLXs+2Ef+F6mrqurv4N/SdP+n6
APEt+R25bbRjsZeirXKc+H5xnb+qth3Ft+A9+oZDNVbnq+548euqbi90EGOd
28Y5SvS33Huik+iPattb/ObqY2zhfbY9z+ldy3mWvS++h8o74ruLviX6JmtL
z7QWXYPNWFrvf8k6ZR2wN9XPBaXX5l6iO+Ye77Gie6vNBug15lDlIOZX9DHV
1Vb5TNcb6Xqw6Cp9fwOVk1Pvk+W59d2L6Org9fAV+lx9niT+79w2MvPbWvTU
4Of2EP+27jXADkQniK6v8mFiXYxOZP/foncNTz33H4t+lPr3nKzntxH9Xu9Z
zTeqvKDrEapvj0xVff/M9vM4Xa8UXZHatl4merzKr3rvJmp3HHIVu7r0nj0G
GSO+B98p/jjxZ+r+AM3joMLvOU3XB4ufJ36Y+EfUZrb4Qdj1heflEvRXlHXY
Eg/lHv+euj83eP5rVrb/sAPnBdt0fySey1mZ9cMBuj9R/XYSX1v0c11vIX6+
2s8uLc/eEX0vty30CHo7t538ia5vQQYhP/RcQ/HHiv9c9duozEktK7HfvhG9
TPTl3PJmtehZwXZ522Bb/vfE9jE6//3Eds5TutdZbf8S/TT33C0U3bPwfF4t
fsPcMu3jzHb6WvGtVGaU3uvnim6Xeh3ye6ZFPVhXfWypuvXimkdnon8Zl9mp
ZS7fiv3yW2K7tle0nXh3WVruIifXqO449jL7Xm3+Sjx/bwTzk9Rme/F/i79O
/PLUawX5dXPw2mmCzR7srzUWXaG+Gqv+SfEfsA7EH6S6N1Xqim8T7bVHE89x
W+zi1P5as2i/8cx9peuWiD4d54R5Wl14nAajW8XX0r0H1Weh5/qltvMW55bJ
I3U/qL5hantlgL7pcnS0nl3A2o+6YIiuO7IesH9V90zq55G7bye2WXePNi3y
br76baR+rhFdWNoWfUh0ifq/mH0jupQxTy33R5ZeF+z3s0vLky1EP8m9F+Zh
l2oCW6i/Ss82iuPJuAa1O118Lv6P0jbbn6K7qX2O7aL6fcTvjZ0lvpf4J8S/
Jv4A8R3V5wrxs1S3ROVZPXu1ysmJ7aRdS9vei0S3imubNf4k/gz2l/idoi+G
T9ZDfTZgP1Ov8qHadxFtoPp6yEjxG4uvI/7hYFsXu2K66B2l5efmwesc+dZM
fFf2ifjdgv1Z7BPsoCui3bJu8Dp8T206B+tsdHftYP9rWmJdjz9+E+u+tN2D
/dOfcWANi+8j2l3lW/E9RXdX+UL8nsH2yBeJ90Ya7Q30Arb96sS2TffCsn+i
ftsB2H6Zr3unlvnY/PgEH6v0U6mfu7/PwCf0jnvVpmkwPsD7xojuk9rPQrY3
QH+zxmlf+HvgR5fWNeicz1Q+iXqH8eSdF4quLC3T+qu/uoy17t/AuFX2kR4X
f6DKv7rfV3Q71X+lNreJf1fvGqL6CeLfwOcXf02wH4ENvFj0ALU9QmUDviPY
j/9Y9W+W1v3bqO418buKby9+h9K296voVvX5mNofru84Ire9/0jmZ3h2qdpc
W9oGGBzlHnbp1dijueUh8vP8zPoD3TEut/xj77ygZy7SvRZxTW1Nm8xzsm36
/2MExabtUdoXfolvRz+pjx00Hj/omY1V/1hmedk+6l/WLP4qvuqjqXU084Fc
RzdPiH3RJ3428maHKHMmpfYpwEmuyFw/I7EfTvueueu3j+1ZC22jrmcMtovy
v19hG3Vl7nXXIdohYDD0z9yjK2jPuGHDYsvqXzIh9bPs+ftz+8dv5PaP8IOQ
y8gHMAFkxJhg/Oti0ZP03kxtRuBDIxfpU2VVavvjH8Y2GMO6QHQUug8fnA/K
bJOVtEtttxWp907tOJ5JtPPZCw8Uvn+3vuFM8TmySHRcMI42ln2a2r75V8+M
1vXOqj9P9Gv0Hj9WpYVKzdS4x5uRR2e8kVrXoJ9Y+zl6UrRRatseLKVVap1y
SdSb68e1hJyCv620/OL7by9tf6KL8cWW6/pE9I3oW6XrWZOFytBoS7A2OsU1
0Df1nP23zqOvgW4Ca8EnxB9ENvJbr2cfZeaxt7pk/q0vJpZj8FPQFblt3ed1
/6PgMbxJ9QMK6/RDCstA5vAG9mtm/mWmIreN96bqQvRNlorfPfMawMf4MJi/
Uc++n9qOxD7YK/O78E/SzDY5Pio6gjUyubQcZn6nor9S41rgk5unxqmwF7fO
PF/U90w9FowDsot1dDO2p/g7xW8iuik2ImtS9IzStn9z0dNK2/PNGJPSOpz6
xal9h10S2xpgRo9EHvujUeI1sllq++PMiK2Aq7BXNkmNG7BeGsc1MyKuIXjw
bnxH/MRX8c3Ev5sbazsr7rPTM+NuYG7o/zZRpi2Je3Cz3L4itgN2xQGlfVP8
zb4RA3lKdH9+F3a3ZFevwvq6N/MfvM6eKm2fbJEal9tepZXud6qMVVDPO2rG
PcOYMw/MR8vEfh32DvbVORFPnB3bt4z7C3nWMK5n1jX2FTx4CrjKnNz7qXXc
U+dm3mPw2OfIPcYHDAccsp6+fUzuecSWOkn1e4vfJ+6/XlEmY5vtl1o3sC6Q
M29GXYwtjr2FDO8V9y9t/3smsU0HD06BX8KzXRPjZ13jXGPL0w94B3oNmYFt
y9pBjrF+di6ivsttp7JewL2R4eh1dBJ7oEeUD2BvYOVsXWw55M8G+FYqV6W2
Z84UnZTZpqmh/k/gO/BJU/cDplCjtN1eMxgDAc/H92OvsGd2E99EzwwX/TLu
RZ5HX94UHAO4TvQ7tWmRGHsvgu1M7E10NzZ6/WD9juzE7h6i5/piB7DnS9sJ
2Av9MtsP9DVb14PFPyv6T+l67IspajNIfA216ZP52Qboo8x4Zv/o+x6YWrd+
k/s+sZbV0f/CHwfPBCvE35mcOY5QsJYK713w86uC3wWWu6p03OGj0rKHuQM3
6KA2e6S2+T+O+AM4xPTUNslYXXdE76T2MR8lXsB+wQYsvD/AvVkjrDlsC941
MLVdtEfsAzwELJF6/Lf6sT3rEx2CLkSPh8L4VYm+zYxZHZ94LbAmWAdPB+Nn
f4u2VP2JrPXEGOyi1H4xe6hLlC3Y8/g1+Df4E+0y7+dfSj/7M/5OMJ5dvzLO
eWrqeMbbmfsGX2KAwb3Bv69V/Qi1OVzXpwXzf+n+KaITM9vf+LPIceTJSrXp
ovsHVp67LTNjsGDq4LCzolyFxw4B0wXbvTux34dPjg9wBjar6Hr65psLx92m
FpbV+JDsz6mRZx+iK3eK+hK8tH3cizXjt7Gm58T+8fM/C/4NxPLSwr8PzJPf
RP3R6KbSdtw1ZfKfwYXMqC9+Q7U/P7Vvzm8DZwZvPyg1zxCyTlmvp4r/Fz9F
fJfS65S9cabqaxWWDVuJjkptr+GrwYNVdNEYNsHOSr1nNkcui36de40TY+PT
NihM20bs8/S4ln7MLSeImf6QGxcipjY1GBu6nv2uMkztf1AHX5eWNw1K40bH
psaO+gXz1L+aOW4LXlcUHiewZeK41DcqjZmDKTF/4AxgTaxL8HPeRbtxme0h
bCGwG2xeYqnIgz5RJmD3sl+wG+mPfsHh74g8/YOFg613E3+nnn9c39KxsnwD
N+6FjyC+tb51YGXcHj/9MtZbYTx/SfS/xqWOFYGJ0aZJYYyFfvDTaDs2fv+w
yINRMt7TM485/vrVqW0CeOIuxP6OzIwXb5sYV5ge5QVrn73M+q9S7wFwj0a5
ZT6YTfPCexTMvEYwfrNnZQyLtucUtv+vie9tEdvzHPGlGZl1Qxs9e2VqPUI9
/G2J8UVwxl7izxU/PrX9AT8hrsut1de1qdfY6NT8nYn9z4mpY8ETYx1YBD7K
pHg9OvLsJfBBbIql0decktq+mRz30AelZcbkKPNvxPbDRiwd3yKGtK34bzLf
ByPET70rs6+KXEHWIFuIo8E3z+2b3pTaRsE/RXa0zq3j7saGT+wzTYi/HblC
G+QMsUb0I+2xYW9JHZ+FJ16L3EPGIAeRM0PFz8SuSozzTYvtdyj8/XzPtPgs
9WB4T6bWeYuiPCTOhaxiPSCvWuu335J4PbcItmXwTcAWsY/An9FNxCOxYR5I
HYtF78xKjUVgk8wJjtX00+A9ExzbOaiyzXBPbIPumBHXJ1guz3YrvG6pR6ew
P9hL2JPYlrfHPcW+ZH+CGb4f/Fzfyr7RrNg/cTfWDW7MwMw43vTEcSv4d0vj
HsiB7rkxbuTYp8E++H2p/eWDYz+svcHYfJllMDEz7oO9cJ924CXYgMRXGDty
S/AjGonOTM1fmjh3BV8DHUYMD18EXwM/b2ZsA14Ibsj+fC71Nbocm454PLF4
sEbiT/h4IyPPbySGit8PRs28z46y5dLIswYaRd2HDmRd0A7cHN/x8dSyck1c
NzzbvfQ47axx3r/wuIJ58w3gnsMSv39+/Ia3g393T7V/JDXGgbztWljHTS88
X6wHbEh8lrtTjwVYGPYLMYtWwWsNv7hx7vd8kRkrnR/fy9gwRv/FzETnRplD
/Iw6sNvDMscyb9X1t/EZxvaMwrbb+bnzZ8AZ7kDnquyg+pn4QDFORLzoSH1P
HWxT0Tm6romPmTlmiN3MGqqdWYcQ+7i4cI4Q+TMn65kNMsee2Av4tOjCg4Pl
62Eaq6Mz97+H6tcpLXtZq+QU8C7yCgYH55CQa8S8l5nXwJHxGy4W3yPY18bn
HlY4Hkdcbl/V/6R2GyHfCue6nFjaHyeWt5Ou9wYDSdwGvJsxJNb5i+7/mvre
t4XzYRar7c+p71GPLz9c99pX9q/ws5qWxnxoQzwRv/7n2J4YIvjPcaJPq90r
ut8ZvFnXNbC7MsvV16O83Tezv42v9G5q/Hau+LdE304dvyHWsEr9tKuMUVBP
/OhA8S+nznHCXsBumBf1C/ICPbJ1cB/EgsBxsLPAxzpkbo+NcVH0JfEp1y29
BvGLec878Rs6gZOyn7Dfxa+TORfi68K5RsNU/230U/BXfs+8Tp4T/SnO8xOZ
bUvwJvQZ8o5YCWvr5cz7F/uBeCSxrOeDf9ey+J3bZR6XTvG55f+rD15fjUvj
NIw/WM0rmeefudgPG5t9WTq+wtiTK7I2c1xsbmb8FZ1FzIVcEvQOOGznwn4v
fvpnce1uBxZXGhc5pLSvXzP+rsOC8zq+RCZFfwMsomlqOx59ij+4XuZcNPTe
0NQ5XuDSyOMV6vPz0rZrg2BbCZsJfTau8L67RPSr4PgvceCupe0R7NLhpfcL
+2ZBxIHBg9/M7Q88IHp57hgrcbhFEUMGS0aWIFOQz2eVxul/K6xXsbfQrcTl
qV/J7xDfV/wK8bdEHAY8ZmLUNaxDMBAwXOQ4cVbs6lf1bX+ljjuQU9g7eB/U
43cE53VsJv4P3f8z9fz1VB9rIw9GD1aPf0HuJDx5k6cWjt0Tw99fbX5PPe9g
GDgPyGviHLyXd+Hv/hP3IH3/EfsHX4UnlwCc8DR0amV7BzuP34nvwnxhh2Ez
nh1l9aDMehqZvk5hOQ1GgW+Cj8z6uCb6SuS6EGfCfsGXIUcHn49cIOws7C3w
hOtT+8jYflVmHx/bDztxdBznGlG2sMawFfGr8amJL7JWmfeBsZ5+WIOsRXAJ
cIh+cU1OCrbFPtVzHwfn9xX67TuWvr+mtEzrnTlf4drgPj4R/3mwzjmm8jX1
JwbnbYJF3yM6XNdN8WMK51OSV8ma2Cp3/+RpnqQ2zTM/C2ZCfIU8icnBPsEP
hW0fxpmYJnRQ5OfHenQ3eYjkI7JPyG/j/jw9+2ThvfxVbiwGTKZTYR9nQOY8
CnTXgKi/eokenhmfuS8zpvJwYbyDOd22sB4fFOe9Q27dRW7mjfSZOB+oS+6c
AfJ9pkY/nZyiO3PjxLcV1u2NM8fwsA+Qyfhjg6KtwG8YFpyf9zrjmTvWTC4w
ch35DpZ9cu7cB3I6OmaWocjPHfh9mWX6yCjbkfEz1K5T5hxaflOTKNMviDzr
lrwhcBD8pUNFW2XO+2T8Ns2cI8h4bx7HnO+kHpn5SbDc+g3doVJf9X8Xzg+B
ZyxaZ46HDkmMtfAu4p3kjzSIbWgLT14IOSMbZx5fYqg8e1zw+/kOxvqu3Bj7
7fiBpZ8jrwTMinklB488HvJ5XlD9jsH2Up3SucbEXhfqetfgPJ9NS8diqa8L
kJA6tkKsgZxlYr4LEs8n+D9zQ24NcQfiD9QRG2DciQ3TnneRb7Iy1p+i+g0z
59PuIr5z4ncRjyB/aUddL85Mj8S+A4tLnG/A3K6I/RAPxq5Ad+8UbYMQZRc5
f9gE5ETx/fTTLbjPNDc2RCzpBdG9gvXphqXriDN1ju3+9y3k1KyO9V+pr61E
j8dvDc5l2qR0TIzYGOPLnHDNGl0TLBuOldy4r3Af9xeO4+ySeYyx6/bIHF85
P35nt4hl9op7c7fMY8S97+IzxGWo4x42AuPHNXbCRfF38fsuibYiNiPv2T3a
EFdE3YSOekjftE/m/PyZubH1vnx38DokF+jSaG9gdxyfWQaxF8hF+jj+dtpT
f3SwDdk9c3wIW5Jr4kR7Z9Z59MV96vk+8sPx3ZA/6B94dBBxQTDcB8EccvsC
+AR5Zp8BPUTeCPZMw2CsGv2CL48vUBdbRPRylR7iLwvuh2+gzy0q51K/UVoO
g4mBjbGnkAVTgrEj/Dowe3Ji2AMfiH8Mfaw2j4u2VD/b5M6BQafwHcTW74vz
PSvqFHLuJ2KTY3PmtgfQ7+h09PGyiCODVX8TnKd+V3A+ITGVbcUvLxyzvjtY
r4Htg/FjG2M/ny06L9qB5MYTf3otdzwKvwmc9O7C8TnW62rkLucWcuekLQrO
7fpRdGFw3twPwXE41sYXwfIZ2YtsB4+6InXOBvmCyBNyxX5BDol/OjOWBfa6
r9o30bv+1PXS4LwyZMwD4t8qnP88Mzj3jLWMf4TMZ//fHnUNOPgNUQchq28S
fSXYR/wl+HdsEeunFJabN0T9ex0+YmUMBHykuWgtfA+96z21m4x+F72+MObc
Rvwt/MbKZw/uY4yDfSt8LHxD1iI5J+TNEI/DnyXHi3wSzoTgm+O7k3vYtnJe
2rjSeaT4w2By5AyDLxBPJo/38tR5Qd8Gn9m4h/1LXofe+W5wnioxOOJ+n2aO
NXMOAX0Eho//i001Gh1b2WfBxxlf2GerEdctvjF+61PiL4y2y0XoEPV1m/hm
4r8LjtOzd84vne9CXgr6brHqh1T2HcDCONPwYeF5vxedVTlnvT9ysvDZnFnB
uYJgSZwnaFU5R+Qw8c0r54vfoTYvZR5nvof8avBncOjWlePWrBnyhsklIBd/
fmY/i3Mcf2WW1Qv5DZVzyvuWXifY4djja4NzUluVtvOJ77YLlgnP5D6HQg4b
eWvktHAehrw/zpRkuXOKjlHdi8E+I77jT4x7bp8avx5fHn/7lcJ57+TVvBTs
1+PfN62c+3578Fkd+udc0jqVz70whutWPt/CuKGbyF8aUnhvoh/Rk52ib4WP
dVRlXxoZRa478ezXc+f2kzvI2PZRm2a5cdSXC9s7LxXO+QeH5nuOrmw/IR/w
l/CP8JOWFM7Vv5P9W1l/IBPAnYjl9C6cNwWu1KMwLoT9R+4cOUD4oJyzOLwy
doN8Xp55XsiFHqb6r3U9I/h8DvmMnJXAr18cdRNxEc42ECfZtfK+BRskD47z
Ne3ivJDXXLtyXvSiaKssjGuDPOlulfEgYhbk0YFxv6fn9iZ+kNsHXxNtFWwW
5o686Q2QYeJr587r+zzaV9hZgyvvpVVRVpBzXUd1vxb2YRlDzjWQE9ChsM/J
2HJOZFlwvjCxOc54kFPNGYz3M+cQcvbkj+D87AdFfymcv/EQuqLwmbVWUYZj
n2CndFVfF+T2T8nXQ1YgM/oDnueOr70U18CLOAGVz6Iwvx9EG481j+12XOZc
8KzyGTx00HriT8qNb9yK7M58xqphZR0JbgDWBi4CzgHmzNpoieysfGYPmX95
4XdcKXqLro/NnHPeMWIUYBXrq/2puW3aJzNjG5ytI88c+QaWA4bwPDpVdEDp
szbIH86WsG4Hqv2CwnvnNdUFcL3cuce1yJvPnVfMmTjOCSKXwH/A9Dgfht1x
TOY1TV7ofzw+U2W5gD35T/AZQvIhFwSfZfxe9I/CuuaR4PMOH4l/NFhGgzch
sxcVHuN3xP8bfKaIHEswkqMyfze5lpy/+JC1y7plTQX7z9hN9EOsiZgT+eh1
1WZUbjywXuVzF3wDeXvkM7yOPK6MfbCWxhR+H9jMtDint8bfgu8IRoWsRGaS
T8jZEOYOG5+cZ3TrXoXzIVer/T1gDoXPbKJDyY/lzAP6l/Ms7EH24l+5/R9y
54lT4wMRa0ZWgTuBPxET7584ll1D9eP17O+549fEsS4rPJ+c6eNsH2eRyOEh
D5ZcPXIOyLsnzx/smjMu6DP0Gme8OMcB3k2uLnn8jB9xUmLE+GxNC+PnYMPE
S1eXzm0gP4Lza8T7OROAPYpdSh4meRdgYtgfX+SO3dYpfJ6C/JiPcuekItuR
8RsGx7yIfbEe5yY+A0rOA3lU2KvsOXwyzokiq+YlzsdnzbPGW2g8Dy6dsw5G
yHkB8KQvS2M45BhsXvjcLvlMnDXkHBqYT83CufrEGzgbAa54YeKzlcgMbFFy
scktBH8DhwPrAfMZFXEc8BxieJxfIwb+YemzZvjcYIqcvyMG/ik6p7TcRvaS
m0EOBhgxmEafaJ9w7gB/A9sVPBE/gbxo4vjYaJtWjgmCPXEmjJj46DjOL5ee
d+afMwnkAO1aWC6BybL+0PnE8ciL4mwIMSLONpWV89rZI+RMkzv9uGha2cbF
Pucc60XMRelzFMSqf8l9Zhncv57eNb50jj52CLkprIHlwecgsNU507BhZXsU
2X54Yf8T3+GIwueF0fuchSY237CwXQ8Oi34n74TzOPgPnLsGQ8SO7RzXAGuB
dQWus3/luD/7pnHlc2dgp2ConN0lp4HzdJzfJN7GmQZiQ+RVMG6cJySmtl7h
fA8wSJxw8hz4rd0rY2KbaXyeCD73Sz4E9mhV2T7DpiX/4dzYD2uU7+TMNLlM
I+M65Iwt58WwmbGtsbHJfcPfYsw5B9wvju34uB/Jj+C8NjlFYI0TC5/pIOdg
n8L52UcmPq9LHg45E5wb46woODFnyzhThv27e+Xzj/iA5xXWP2AnnOPm/NQ3
0Q7En8PH5cwWvjz5seTJchYVH2FUYX8Gv4YzWfjU+KT4pshmMGPOo+O/k4s7
JtqS+Pqc98KXJyeW3FjmemzivKXZcW2zxsHGyZlemhs/Jy72Uxkx+cwyaLdo
w2PLY79wBo2zaOBmYGXnBNsh5P/sXtp2QG5wjh/cAKzgyuBcUrAHcoCnRMyI
vFzO9SOLMvFbVj73go5rUxmXZ+9wTpLcHPI5OedIrJH82ZtyY/X4ieTGkzM/
OfffDcB+4Mzj0Mq4KusKvBXcdXxwzit4AznDnPFhzdybO48W3If8ZHJYwVrI
c+Y8HjEbzrBw7gV8kTM+5N6vSmyfgEWCSV4djOvVj5gAGPKB8b1flFG2Y3NV
zg1iX3MWnnwC8rjRp8QO5xaOiZOTSI4q50fIWSV3FT2L/TVcffTLneeNLY19
Pjyzr4WNBP7yQmFbFpuWvxvwXGHbgP4XFrbTaHN4MCYO5oDNg02FbcR5JexJ
zqb8H1Y279o=
              "]], Polygon3DBox[CompressedData["
1:eJwtm3fg19P3x1/r3rcRTRENFQ1bsrUzSkalJe20s7OJMsqWLVJ9K6Psvbei
bEmikCiEjB+K+j0fPV9/3M/nnHvuva917xnPc94NB5/a7ZQsSZK5eZIU+j9I
/+vp/99qM0Ufr86K6P9T6yr6ppgk22hCY/FTRJ8SkuQ90Vto7B/iR6jVlvw6
jR2kiU+Lro1c/39Xe0v9I/S/ptpVoqcxT/K30iQ5VvxktRqSHau+Jfr/nPit
9f888c+Kfkzjq2lsd7XvRPdTqyXZX2ozRO+l6y+SbLb4abq3VzT3H9GXqv0j
eoX6zhC9j9Y6VvfXSHPOFf+I2gHqO0HtPc2/V/yXkj2l8Zdq3ieim2v8leJ/
kizXuD3ET4t+njfF/y26ieRdJf+M64rvrpaIDlqzm+hhWqeZutar/U/0BM2r
Ivne4t/W/1TzV4u+VbLdtX5LzflMc/to3F7iz1P/IpZU3ynq6662UPTRmnu/
ZI+IP0p0J7X7xA8Sv0by+ZozUPTb6ttB/BNqN4n+XX2HS7ZV7vv9Rq2R+Inq
76/rvZ9ZPlz/X1ffRrUTxW+n8Zs0doH+b6+1HlG7TnRb9X0vepPGtBYd9Dw/
i54q2Z5ar7r6bpB8d63TUvwM8aMzrzlS9Lsa30ryGuI/0pjWmtdD9DdqN4p+
MPN+uUVj1oq+Xn0niP9a7QbRO2p+e9HvStZO658q/n3xF0pWQ/wrWnOoZNXU
LhP9hK75VTl3N8lH6/+r4v9V6y35mOD3XeFdaWwhvpL6vLTgYIiP4h8Qv6/4
b8Wfre6Wmnu8+AfVv6XkDdTeF91S7TLJTxb/G7Ta4sTfcAJr6Bofi35Rffdo
rd3Ud1HiM/ms7rmF5Islf1n8J5JfpOtEzpb45qL3kfwjyZvw/iRfoLav+E+1
zoG6n3Ea80/qPXIx50VtvMYOVt8voodJ/rPot7lH0S9rXEP2h/7/rXaFxizh
fakdLHoPtYsT6wT2zB9qR4jfWv3rdS991baUbFv17aV7uRh9Iv508as1pqb6
DhG9iD3A9xG/s67/oWT7i18dvP7u4gdXrD9Gauxxic9cV62/UeMLteNF76dx
EyUbKn5d7u99ssZ3UN/LoleL/kX085LvKPnd0fsB2a+im6nvQsmf5PnUt7f6
PtTYncS/r3tZKvlY0SjNz9l7kqeiP1bfWsm/E71G9PdqO0g+Lvh98d7+T2Mr
WnOc1svQaaKvUf+X7Ge1NqKP0ph1kqdqR4g+TW0Xjb1dY/8SPVNtC8l2E7+f
3sdd4odIvi86Q3SP6LVHsl907aniB4vfRfzNop9Sq6H5B2n+AZo/Sv9/E/+7
2mjRp3Ed0X+rnSH6QrVC89dp/gWie2l+Ln66+Ch6X3RYYp32qvonie8sepna
ZNF3BX+bhzX3F43/VP93xp5obKbrd1DfkRwj9KL4Luw5jb+b9UU/qvkXamwz
9Q0UvbX6zhU9RvK6mrNBfedzrxqzTPT1kr8qfpj410Rvo3aB+NP4Jrnf4eWF
zz/vtqI5wyRrrL4uFevwNwrrO3R7A7W5mv+g2tka+7famannHBf8TSdq3Y8S
f+s/ecbM72CR6FcL30tftbty3/95mj+DMyX6JbWBkh2v9gz6ubA+HKP2jug7
tMZs0T+pjdb93atrnCZ6J/a76G+1ZhfRXbTeG6KPK2xL7xN/Qu5rcm2+Gd/v
vfIs9Nb/F9gDuenqnG3xi7XmUZr/icZMF/2i+gZIdozaE6Kf0f8dJOum/8+L
X6n5nTS+jfpeEf2p5nQWvxR7HGxTsIXHJ7Y1u4l/Hd3HGZT8mWj98zO6W8/3
qfi7NL6Oxh4pfl20DerIeY8+o2M19rXEZ/c40TO5ttY8RnPWFT4LO5TzfwjW
Bfuo7zTR9TXnPvFtsZMV78mLctsI9mquNkj0bbnte3f9r6vxZ/F9RP8m+bX4
G6J3kvx38WO4NvZOdKr1Joi/nz0p/i++F3tX8qOwhWrt8B+wlZr/q/hRqfta
iW6u+S+J/1V8FdH/qbXS2Js4M5JX131fzP2IX1P6XIux94l9sd/VNynxPeyk
sf8G695fNaaRrrdB47/MbDPPQabxX4jvzvqMl/wg9V0v/nz2M7Tkk8X/Ifrb
wrpkO/S81vtN4z8ofYT5oqPGfJz5TI8KtpmfiD8qsS1dpXntdW9fadwhmv+Y
ZFU5S/r/NPpW/W0kfxabxL2pHZzap5ub2Y5hz/A52oneRes/JvpbjZ9d6ucD
xF+tse+KPhwdIn6F5B1L/2eV6BbqWyL6Svws0ePxb0TvqvUeF99fYy4O9m+Y
u7f6FmPLg/VPE63VEXukvms0d8/UPuL+6r8385nmbDfSeg9L1lNrnKe5DcU/
JH45/p/4t7Dx4j/mObXecP1vIv4CbJLolySvl9qHwJf4QnxP0VW19mEa34br
8bxa73LJv8l8713Vt0r8Y4X9+t7iHy/sM+M7X4l+Ef2EmtjkIP1ZJvrx3L4E
7xD79jB94huJ/whdoVYfXaj5z3IGsEnir+B76d7qoq/E7yd+x2g7jj3fSu0h
0fXUN4frS366xm8jfpbWaqp766DnWc93UGsu+Zf46JozSvTZmrNFqc95fmKW
KoXPQ990sxuWVBN9aO7YYaz6/uF75PYHR6c+sw9F7+c/y/OHv9Y/9R7cW/QQ
rXGw6B/UN1T0YLUF4n8sefYt+/eFxN/nVbXPEutAdCHzGfuT2kLigtzfGh2N
rr6eMyV+vPg9RTfFJuOPce8V+4foqiHogNzxyok8Oz5QsL/WWPSg1DoT+9dD
tMhkveg7ctumM1LHKF8Gz/1Z99KvYhuILbyw3EPbFqbxqYnFeuUef4n6ahW+
R+61JnGC5tcozPMM9+TWrx8yXnRryesW/vYjNKae6FP1fI117VtFt5H8cI0b
IPmpkm/CV1A7mb3ANy2s99H/6DB02VbB/i1+7kma/7HWm5L429YVPyA6frq0
jFdY767ENroorDNPEf1vbl3KfsJ3OYczJfkKtd3F/6s1Kpo/UWPaiV6ovjs1
9wfx49gPmldH8svEd8jss06I1pH4b/hx6M4r1Dqie9Q3ldhRfNvMe2q86FWi
B4v+Tm17zblEfa0z+9t3aPyDnOvMe26A6Kc4A6WORFf2j46Hsb2F7udY8Rv0
LOfg+xOvFY63f+OAVOw/9M+8R2qIvk2tV+bz9yO2XvdwhfiWkn+WO97uWtp4
bH2D3M/PHsT+L1ZrIP5PYtWK/VlsFT4bvtvtWv9Eyfqo7z/xSwrHD3/hg2j8
B8H6/VD1h4r32zzJ+6AfNGaA5M+LP1n9UfJromPbVuq7mtgx2vfg/j4rvN+J
xydrfiPx1xbGH5rhb5X+zXXoxtT+zjCt/ybnQ/3bav2v1LcH96rxW2Af2Wfi
a0heW/xB2EvN/Q+diO+ADhB/oPh7iS203uvYXo3fRuOnBOMN4A5bV6x/8Bew
8cSkQ8AkxI9Uf5WKv/cq/HH1zRP9jdpeojdp7FaSd4zWJSjp9qL/lLwbuk/z
a0q+qfB+qi1+B/FHin8ytY07orAvenRie34g9k5rHKG+Q3knor/mjIveqL4t
K/YJPhdfNbevcFU0lnCY+iZF+wj4CttIXkvjJ+O/Z/ah8KXAi+aX+oRY/W71
vyn+2tTx6Xr0tWTV1b+d5h8G5iDZRvUdUvqK4Cej9H9+qc857/hY4EHoj9sT
+1Sp5MfjN4o+VbIn+dbRvgTn5QPJr4/2rauJ/7Dw9ztY/Fvi+xEbaM761DHx
WYXPEeeJvrOR4w9l3jO36d2cI74F5wV9HI3H/Mnzqo1F36FzUveBz5yrMS01
fn+N31P0VPU1Fd8b/SJ6Db585phlJ63VIfj50I31Ko6vG4lvoDFTNP5prbGz
6JsKx8Pniz9Q/AH4F9HxI/F7ljueHlFYV/2ivpHsV8lrafw1xB2SD47G28Dd
BuAviw6ZYxTiqysLxwbE0JeV52sguiszxsc6rEdMDp5HvEOsuGMZf20RHD8S
R/bFv9H/dyT/tbyfe4gJMmOM4DncLzJiYDCBs6LPMj55Z63VKVi/Yyvqa9JD
+t8qs87k/BD/ce3Rid/nxdFyxg3X+P6FsbBD1TcXf7Mw1sc9cC97aPwCXfs5
9d0crEO4fnP2cuH3vnOpf9bm3l8DNP5H/BTwJnwOyZeq78Ty+78jupvooRXj
pz0y2yxs10XR98I93a7rPZLbt9hLfdM15xbJe2bGNNZIPoN7zuzztRZ9o+Td
iZckXwpfeK+wZ8Br2N/gs3m5n8FHwBobSnYz+lNt18w+ExgD56ee+BtEj6xY
/xP79UttAy/FZov/V/y5GnM/+yvzmUIfogfQB2AIpxfGeMB6umT2P9HnzH9U
9IiKr8P1tk+MD7OfeX//Y69Kflth/wF7tT26ufBZ5EzOwXeJvj73Maxif5dr
YfPmqX0b7U+BteF//F04FkW3jBEf9P+s1JgMeMMsbEbmM3Wv5jQNxh+JmdCH
4I1fJdaBxE3gHehL4i/isC8KY7sT2GOa+3FhLB0M7yDwOrV+omvmxhvfLYxd
z1U7AV80GLvDhmBLauuad+L7i39A/GXB2BKYI04vODF48dDEeNPR+LCJMagr
RG8fjWc1zY33LAmODbph70VflRur6Vzah5vUtyHxnkVfXU3MkdiGgPdxv1VE
9yX2qvj5aoofSNwifi46Uu+htea/J3pXfLTceNqJ4j/h3Ip+Su0k8TeU/nCV
8vn/KvwueafYohuJEdBf+CJaa6n44YkxvM9LObkJfIgevJvMvgA+QR1sbPDa
XAPfe7La2sQYLlgumPSdud8ZWPUxatMS74lCz98oGFsBwwPfaRYcy+Hz4ftN
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
              "]], 
             Polygon3DBox[CompressedData["
1:eJwt1nmQz3Ucx/Gf3Z/fklSIxEyu0IwjRk2XnREy07H/aFCWlKsJu3KVMWZC
KEwzalAxYhIpNSVXzg73fUyUo12sa2NdQ+Ts8Z6vP177+byen9fn+H6+n+/n
t/V6DuxYmJVKpQqpPO3MpFLzlJ+US6WapVOpvJxUahnWJBvj6wgP4HcLt5FZ
JrtaW2O53/A+6nPoGn5I/nfsLX4uXcdOYrX1TfOd1fcZo5XMYqqGHTF+N7mR
MkNpn3pbuWfpb5mXsU5ys+iytsn8cDqoPhF7klbIDcH2YmP592lHJpk71vAV
35t+xdZRoXpXbfut5ZRyAzYY66ZehJXGcxsvBytQv4S9IFMXq4ANxf7D8rAx
WL45DnuOKTE3/4C9ualeKPOKtjVylWOzsdn6Npcdhk3AesLH+enaJpZP9rlY
fRXV0nZAfmz5ZI9ir6bi4/jWNBY7z9eQuc1vNeZIfhB/xdxnlduxUdhw9RvY
OWVj2XuxCdnJPsZ+Lpdrwfei5dhBuVzP0ZCvyffQ90Tscbw3bVWpUjw3Nh3r
YW2rsZZUjV9CNfQ9hpfQbT5Fo42TK9OaDvE51EC9Pk3QVoE/bszX1H/GGhjj
sXh+vKJxlmHvUVd+PF5q2Lr8i3Iv8aOoJPaU7xDib9Ln+j7Mn8lOnqMR3aW+
C+8gf8kYPY35oXI8VcF78flyr8st4u+X68Z/iZ/mF9A262zOt8Vn8Q+lk3f/
B3ZDfaD2W3y77OQcrJHboV6Xhsn/wh/IJN9e03TyTc73ZyltlPmImhtjYzC5
xvzTcjOxB/lLeIH6NTw3zg12BuuL1ZarRX9iQ7WtM9/6OHvqb8bz4+fMdwpr
KFeRr0+HsEkxD63kG9LRuCP4NrSa70e19SulR/S9h59L5/mFVFm+U5yNOJfq
/WUGUHGcHyzLOH35Mut8DvuJqmDF+hbRLb6UFsqMxncbY6Z+J7A5sa/YWmwa
9nXsgz6LaQmVc26/xa6rr6RVlIP9iFWKsfg9VC0nyUe/7vhC413ISs5u9exk
HbGemjnJ+u7D9vMHqDpWhHW0ln5xt+g71VoGYY3ie8YnUW9+NvXHNvObaFY8
V9wJ8f3hHfW9jC/AbvIbqAlWjJ2M82ePyrKTb/Fxfp7cRZmlsQ65HenkeW/c
eb/xns/yi6hqdnI3xR11TW4+9m98q1QH24t9g13h11BdbF862au7s5NnjWe+
xn9Pt9U3UbO4j+S+w27xG6lp3Afp5H1cvrPvsf9l/Azr3q59sPYhdDjuP/oh
1mSe5+Um8hfk8uQqYldpD1YQdwR2jp8qX8jvop3x/dI7+rbQryXV41vJfGbP
qstMwVbEWvGj8e6xq/GtYnl8Pdm/sKzY5zhj/Bd0HDtG09Q/TSf31nnl0bjD
lGPiHpc/qvwn7jvl0nRyR+XH+1Fvr32tch2dxtqZo705Z6STMzI4k9zRcVe/
rRyhbUucAfVX9d2i3EpnsKcyyW/TPH5unIvYA+MV6dOJ363t0Uzy2xq/sV2w
gvhG+DL1i1g/5XBscyb57YrfsGFxn2Lb4t648z32Ub6LbcJyqQRbEGeMTvGT
M8n/BR/zo+gI3yWT3N8n8RFYZ/6NTHKPfsCPoxL+CTool88PMsd6/hk6jHWP
s4Ft5P8HJg89YQ==
              "]], 
             Polygon3DBox[{{1711, 773, 722, 721, 886, 1384}, {1415, 919, 739, 
              740, 920, 1416}, {1367, 859, 687, 688, 860, 1368}, {1700, 751, 
              688, 687, 850, 1361}}]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0stLlGEYhvFXTSHb5ELQoCgw3RSYSIsIOmwq0IQ2LQXBhZEzpqVlB03z
lGlpNeNZc3I8QNEiJUEMWriqVRBI/0Krtm76vQbzzH1f1/fMzPfOzImG5I1E
Tgjhg/mTG8KSaTV3TPSf80JI6gm9RW7gbH4IanjrKSmPcm36Cu8R0nqbPMaf
Iu7iQnxPHuc69Eq+HRfpHbKcP8s9xPfxEbnFPdDP8d24Uz8pt/lPcRf34Uey
Kt4r91gf0l/KjwUh5Nm9hGfxiPxr55V+kK/Fc/q4/Gl3jxvDN/G8vGw3rYcD
dnC9uiC/2r1mdxq/xo0yn1vUa/l5/Ea/JXf5Cq9/H+8rfo+mmf9hb1jP6M/l
d7zl827jDF6Uddygvsk34Xf6nKzhr3MDeNT0m6vclGtX+L54VvMsniGen0u5
1otfmB3uqbzAj/Hdeo/5xq9zXXGPfyIvylKuWR/UZ+QvZypxpjN4LX6OPG9n
Wi/my/Cq3iW/2D0d7w2X4hVZwnXqZfwkPqwvy998tde344n4G8lD3jerV/Kt
OJW7/3OETMH//+s/FFFS9A==
            "]]}, {
           Line3DBox[{1291, 1690, 1555, 1870, 1503, 1323, 1501, 1885, 519, 
            1502, 406, 554, 1183, 405, 1422, 380, 1852, 1500, 343, 403, 1743, 
            1869, 1754, 1448}], Line3DBox[CompressedData["
1:eJwVy8kuHlAYgOHzR+jKWFNRibWpRKUaREWFEHPSxArRYaUhUeNvLjrszFO4
BYlL4AIkxEboypAQt9DH4sn7ne+ck9f3vWMgEkKI8io2hHMOGCISF0IuDS9C
uNAHu0y6zI86yGvzDzq8udRAhn3n8449871+c/9X/9BKun27trFrftJf/GaZ
ZtLsW/SNv/90x3lRl/hJI6l2TVrszbVuO8/rAnN85KVdt/sGcz1bzjM6yzQf
iMSEUKe1bLqP6hRf/bvTKlLsa7SaDfOETvLFm1utINm+Ut+zbr7Rz+7HdYy3
JNm/03LWzFfa782oFrJil0iZucj+VFedC3SEfHqdEyg1n2kf2eYcshgm3u6T
/yXmfXMPh5xwzBH/AZIbOCw=
            "]], 
           Line3DBox[{1324, 1871, 1556, 1505, 1506, 1504, 1749, 1861, 1325, 
            1423, 1292, 1362, 1824, 1361, 1700, 1823, 1425, 1365, 1701, 1826, 
            1532, 1326, 1627, 1770, 1817, 1677, 1507, 1327, 1508, 1872, 
            1755}], Line3DBox[{1328, 1744, 941, 1470, 1471, 1449, 1484, 1450, 
            1558, 1873, 1329, 1557, 1330, 1483, 1228, 1825, 1363, 1424, 1364, 
            1229, 1828, 1367, 1368, 1827, 1230, 1702, 1792, 1231, 1625, 1628, 
            1626, 1897, 1678, 1232, 1643, 1331, 1509, 1332, 1898, 1679, 1233, 
            1533, 1510, 1853, 1333, 1511, 1560}], 
           Line3DBox[{1334, 1845, 1472, 1451, 1486, 1452, 1561, 1718, 1846, 
            1559, 1335, 1485, 1234, 809, 1366, 1336, 1235, 1830, 1371, 1372, 
            1236, 1773, 1703, 1793, 1237, 1704, 1794, 1238, 1705, 1795, 1239, 
            1629, 1630, 1796, 1761, 1680, 1240, 1644, 1719, 1890, 1512, 1337, 
            1681, 1241, 1534, 1818, 1720}], 
           Line3DBox[{1338, 1474, 1453, 1831, 1489, 1242, 1454, 1473, 1455, 
            1369, 1797, 1488, 1583, 1487, 1243, 1721, 1829, 1370, 1339, 1244, 
            1729, 1798, 1375, 1245, 762, 1246, 1774, 1706, 1799, 1247, 1707, 
            1800, 1248, 1708, 1801, 1249, 1709, 1802, 1250, 1762, 1886, 1631, 
            1683, 1682, 1251, 1645, 1646, 1891, 1513, 1685, 1691, 1684, 1252, 
            1862, 1535, 1340}], 
           Line3DBox[{1343, 1479, 1462, 1833, 1403, 1443, 1569, 1442, 1571, 
            1876, 1723, 1570, 1401, 1320, 1402, 1788, 1722, 1400, 1319, 1787, 
            1399, 1271, 782, 1270, 1812, 1713, 1269, 1811, 1712, 1786, 1268, 
            1318, 1785, 1267, 1317, 1694, 1784, 1771, 1266, 1316, 1648, 1783, 
            1763, 1633, 1635, 1634, 1887, 1523, 1342, 1521, 1746, 1819, 
            1522}], Line3DBox[{1345, 1847, 1480, 1463, 1409, 1445, 1572, 1444,
             1574, 1877, 1725, 1573, 1406, 788, 1407, 1344, 1405, 1834, 1716, 
            1404, 1275, 1814, 1715, 1274, 1813, 1714, 1790, 1273, 1322, 1696, 
            1695, 1900, 1272, 1321, 1649, 1636, 1888, 1637, 1639, 1638, 1526, 
            1789, 1724, 1524, 1525, 1820, 1747}], 
           Line3DBox[{1346, 1748, 1815, 1726, 1276, 1651, 1821, 1347, 1650, 
            1348, 1688, 1277, 1772, 1889, 1640, 1697, 1641, 1278, 1791, 1717, 
            1816, 1279, 1410, 1411, 1841, 1280, 1412, 1413, 1835, 1281, 1349, 
            1408, 1350, 1851, 1575, 1495, 1496, 1464, 1482, 839, 1481, 1351}],
            Line3DBox[{1358, 1878, 1576, 1357, 1540, 1286, 1539, 1867, 1356, 
            1414, 1355, 1285, 1837, 1418, 1417, 1284, 1842, 1416, 1415, 1836, 
            1283, 1354, 1652, 1353, 1822, 1765, 1282, 1352, 1527, 1866, 
            1727}], Line3DBox[{1446, 1844, 1553, 1447, 1360, 1438, 1582, 1698,
             1843, 1552, 1530, 1531, 1499, 1554, 1689, 1899, 1699}], 
           Line3DBox[{1456, 1850, 1253, 1458, 1475, 1459, 1373, 1491, 1584, 
            1490, 1254, 1374, 1426, 1803, 1728, 1255, 1730, 1804, 1379, 1256, 
            1732, 1805, 1381, 1257, 1734, 1806, 1382, 1258, 884, 1383, 1881, 
            1259, 1385, 1807, 1736, 1260, 1387, 1808, 1737, 1261, 1389, 1809, 
            1738, 1262, 1739, 1810, 1391, 1263, 1741, 1854, 1514, 1392, 1264, 
            1764, 1855, 1647, 1515, 1687, 1692, 1686, 1265, 1863, 1750}], 
           Line3DBox[{1461, 1849, 1478, 1315, 1494, 1441, 1398, 1567, 1568, 
            1875, 1757, 1396, 1314, 1397, 1782, 1742, 1395, 1313, 1781, 1740, 
            1613, 1312, 1780, 1390, 1610, 1311, 1779, 1388, 1607, 774, 1386, 
            1603, 1832, 1711, 1384, 1880, 1599, 1310, 1778, 1735, 1595, 1309, 
            1777, 1733, 1591, 1308, 1693, 1776, 1731, 1587, 1307, 1865, 1538, 
            1380, 1519, 1306, 1857, 1632, 1520, 1341, 1518, 1856, 1710}], 
           Line3DBox[{1465, 1621, 971, 1420, 1548, 1577, 1547, 1289, 1860, 
            1545, 1546, 1419, 1498, 1497, 1288, 1883, 1622, 1623, 1542, 1544, 
            1543, 1868, 1287, 1359, 1528, 1752, 1858, 1541}], 
           Line3DBox[{1468, 1848, 1624, 1469, 1421, 1467, 1578, 1466, 1290, 
            1884, 1550, 1642, 1551, 1529, 1549, 1859, 1753}]}, {
           Line3DBox[{748, 1899, 684, 1202, 1203, 1000, 1150, 1885, 750, 686, 
            855, 1044, 1826, 752, 689, 1792, 754, 694, 1794, 758, 701, 1800, 
            765, 710, 1807, 887, 1125, 1126, 770, 1882, 716, 1128, 1129, 1127,
             774, 723, 1812, 781, 731, 1814, 786, 736, 916, 1841, 938, 791, 
            741, 922, 1837, 923, 1099, 794, 744, 1061, 1860, 1062, 1034, 1035,
             796, 746, 1848, 972}], 
           Line3DBox[{771, 1856, 1013, 1012, 1053, 1052, 714, 1879, 768, 1184,
             944, 871, 959, 992, 1850, 958}], 
           Line3DBox[{777, 1016, 1819, 1015, 821, 717, 1857, 527, 1014, 468, 
            469, 1586, 323, 872, 321, 1584, 466, 267, 291, 957, 1831, 991, 
            956}], Line3DBox[{797, 1070, 951, 1869, 1069, 1068, 1040, 1041, 
            1001, 1861, 1043, 1042, 927, 853, 1825, 857, 854, 691, 864, 1830, 
            930, 865, 698, 762, 707, 1806, 882, 1116, 1190, 1189, 1894, 1193, 
            1191, 1192, 1117, 883, 1778, 720, 778, 1785, 728, 1223, 1900, 
            1224, 1225, 1226, 1227, 1889, 1166, 1165, 1180, 1181, 1182, 1822, 
            1026, 842, 1028, 1858, 1057, 845}], 
           Line3DBox[{800, 974, 941, 975, 976, 953, 856, 955, 1080, 1846, 807,
             1082, 808, 1081, 863, 1829, 816, 867, 817, 705, 1804, 873, 933, 
            874, 1106, 1892, 934, 1186, 876, 1111, 877, 1776, 1215, 1216, 
            1156, 1159, 1157, 1783, 1176, 1177, 828, 1018, 829, 1789, 1020, 
            1054, 1021, 1815, 835, 1022, 1024}], 
           Line3DBox[{804, 1004, 1853, 805, 1005, 1171, 1890, 811, 1170, 812, 
            1155, 1886, 1153, 1154, 713, 1810, 892, 1137, 893, 1775, 1199, 
            936, 1200, 894, 1141, 895, 1781, 726, 823, 906, 824, 1788, 908, 
            831, 914, 832, 1877, 1095, 1094, 915, 969, 983, 839, 984, 840}], 
           Line3DBox[{813, 1818, 1006, 814, 1007, 1173, 1891, 818, 1172, 819, 
            1009, 1854, 896, 1144, 897, 1201, 1896, 937, 1107, 898, 900, 899, 
            1782, 902, 825, 907, 826, 1876, 1093, 1092, 910, 968, 981, 833, 
            982, 1847, 834}], 
           Line3DBox[{841, 1866, 1055, 1025, 837, 1023, 1821, 836, 1179, 1178,
             1163, 1888, 1164, 1162, 1222, 1221, 1784, 1220, 1219, 719, 1777, 
            881, 1115, 880, 1188, 935, 1893, 1187, 879, 1114, 878, 1805, 706, 
            870, 931, 869, 1798, 697, 810, 862, 809, 858, 1078, 802, 1079, 
            1873, 801, 1075, 954, 851, 952, 1074, 1871, 798}], 
           Line3DBox[{847, 1101, 971, 1145, 1031, 1100, 1030, 1029, 1867, 843,
             1056, 742, 792, 918, 1835, 917, 737, 787, 1834, 912, 911, 732, 
            782, 724, 1779, 775, 1133, 889, 1134, 1135, 1839, 1132, 1131, 
            1130, 888, 1808, 711, 766, 1801, 702, 759, 1795, 695, 755, 1168, 
            1897, 1151, 1207, 690, 1206, 1205, 1817, 1002, 799, 1204, 1213, 
            1073, 1870, 1072}], Line3DBox[CompressedData["
1:eJwVzTEvQ3EUhvFzi3SxiJA2BhFLWSR8D+kVi+jAZWbqUnwGq4Gwl0RS3Sxt
0kkstqLpIhFppOnQzeDX4cn7nPec+78r2enOSRIR23iaivhAE2XcY306Yisf
MchF1PGp29X1ZIoNfotfuweUeYo7u2XfDXWPqJhXzSPeRMLH8hl5/ic7qLrb
Mx944xCJ+UV/xI+RoWQ/o3/Tz/NZ/s4X+Bzv8wJf5F/8Sm6a67KIb13NO/u6
c3mGa31LtnGJJfOPuxKvuLuQa7jRNyb/Qxev+Aeyyyo4
            "]], 
           Line3DBox[{966, 980, 1833, 967, 909, 965, 996, 964, 1091, 1875, 
            1089, 1090, 901, 1087, 1086, 1185, 1874, 1084, 1085, 1047, 1175, 
            1174, 1855, 1010, 820, 1008, 1046, 1862, 1045}], 
           Line3DBox[{1019, 1820, 1017, 827, 727, 1161, 1887, 1160, 1158, 822,
             1212, 718, 1865, 772, 1110, 875, 1112, 1113, 1838, 994, 993, 932,
             868, 1803, 704, 761, 866, 815, 1083, 1797, 990, 1109, 943, 978, 
            942, 977, 1845, 806}], 
           Line3DBox[{1048, 1863, 1049, 1011, 1051, 1050, 1864, 1088, 960, 
            995, 961, 903, 963, 979, 1849, 962}], 
           Line3DBox[{1063, 1859, 1033, 846, 1032, 1060, 1868, 1059, 1058, 
            921, 1027, 1836, 919, 739, 1791, 789, 734, 1790, 784, 729, 1786, 
            779, 721, 886, 1880, 1119, 1197, 1196, 1198, 1895, 1194, 1195, 
            1118, 884, 708, 1774, 763, 699, 1773, 756, 692, 861, 929, 1828, 
            859, 687, 850, 1824, 852, 1103, 1102, 926, 1038, 1852, 1039, 999, 
            1037, 1036, 1067, 1844, 950}], 
           Line3DBox[{1076, 1872, 1077, 1214, 1208, 803, 1898, 1003, 1209, 
            1210, 696, 1211, 1796, 1152, 1169, 760, 703, 1802, 767, 712, 1809,
             890, 1136, 1138, 1139, 1840, 1143, 1142, 891, 1140, 776, 1780, 
            725, 904, 905, 783, 1787, 733, 830, 913, 788, 738, 997, 838, 1851,
             1096, 945, 1097, 946, 998, 970, 1098, 1878, 844}]}, {}, {}}},
        VertexNormals->CompressedData["
1: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
SVvlYVeKeyTSrnU1xT0yOHwnC3Hv0LGRNIrPJF0g1ITiM9H5+oaN+CzOs1KX
4ip5V3b/OsVVktwW1YK4Otfm16LU+zUk7sTAybNRTUTN6OztJw0t8PHapFMU
t0nA2y1situks33/dcRtmUZxLVovyORdnn20XhDrn4dUsV78PjXPE+vLuqqx
dRT/ya5n67ch/q9rX1KNdWFllfBnlBdqZ5qifMeMKVm0vhBhl+VvaX0hXU6y
Dlhfwp6GjcnMKiKXchQ9Jjc3EeHPcs08PO3QFKb+hNY7svSrTh+td4T/0MRX
WO/cz34rxHqnIGAiRusdsejtssZ6Z9YwyZbWTeJj/XrkxS8WGW5tysK6KSkc
Wox11pp/bxKts2Ta3lcuWGd1zovfycgqgrqWGRfoc6HjrGc7PvfZjNCp1D+w
zTHvKPUPKA7eiET/TI0Z63dTyyxNoW5nTVt3PdhdjhfJNu6ECSu99R9EFYJ/
cJuAjEgdHIsZV7M9vwOa94TMpXECgV4O6TROYGbp5z6MEyed6yU0X2BLlUUf
zRcgw3bTMV/SZXzzaJxD150vvTTO4aG29HiMc939t37HDleDm08I5iNsvLlp
Aeaj1zv+5slPauC+yVoD+y315N67Z4sGZrbBg19jQvtVysF5p8OyRUurics2
s5rD9zvgiffeZjHNjzBloljSeYNKMq9+xE1lXhc4ijyri3z6HqYuuDRvYHs5
ESl6dEtiYjcs+ZAn0Sr2EPj7up5nHS4j81f2s8af7YYzvdbXqZwkf387Kt8A
0aNy7jjk73Guqcwcps8l29t6E/G568V9XPG5c5XinlI7ScMJljbaWe7jWYV2
Juou6KXzIrUN0wDnld4voYHzenxnoz31Mxkc2jyZ+pn8mhVUjn62sy71wXW5
usaGTdeFhCzOEMZ1SVz8/PjhDTWwVfHOoFoHG/oXlhvsXsEE10/JJ3buZ8Fe
od8CzbQ+V/arnIxTqgXFGiXTRHcWnGQMNGnS+rm+85XZ+9gaGJ/24q005TEB
jqDcEcuCCXndrPhtNTBzkLdD7j4LvkaK8ObEs2D23vHBJ2fVwBn3IpUEmred
wxk/hJ6ySO1AloGuTg0kBi2zHvBjEeWl1ZMtHrLIlU1qWxacp+ML8RXusKd6
X+TDj1K81E/fSrY310CPONFqM2YRnsu5Yr4BLFIp2TVw2rsWjtSkqlA5CE1b
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
lCkaCs0ltNhvbfBthSbyvwA2dmt3
         "]]},
      AxesLabel->{
        FormBox["x", TraditionalForm], 
        FormBox["y", TraditionalForm], 
        FormBox["z", TraditionalForm]},
      BoxRatios->{1, 1, 0.4},
      Boxed->False,
      ImageSize->Scaled[1],
      Method->{"RotationControl" -> "Globe"},
      PlotRange->{{-1, 1}, {-1, 1}, {-1, 1}},
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[
      {Thickness[0.05], Arrowheads[0.5], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
      ImageSize->Scaled[1.]], 
     Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
/x1ftKg/rw/O/Watx/RB7Pg4Y/NxXh88MEPzDtMHcYbGz7uFvD4oK+n1nemD
ePqnnBkneH1wn8t5C6YP4jWBdZP38/pgyEnX80wfxK+tcw2SeX3w5vOlopEP
i7CscZmhJK8Plj44Vsv0QZzyKi+0hdcHG4506TrcOcF8/tidNzQ4nKfu7dJ1
eHvFmRajVg8NDmeTTV26DuMgu2e3HW5rcDj7r+zSdVjW1ONwjryPBuCMunQd
1pL66i6x1U+Dw1m81zJW1+GxJ6YvEam5q8HhPK26S9fhJ70KjdqK/DU4nGNT
u3Qdbt4vI75n3T0NDueCV126DpcK+i0W07unweEsu7ZL12EjkZoR2774a3A4
G9R16Tp8dtG+8Ruj72pwON+c06XrsKdl3LxaaT8NDmel4126Dlu4TuidutJb
g8N5yMIuXYcnKZy8purnpsHhfM+vS9fhiMHaU7cNaFXncL5K69mC1DPmcC6g
9byN1DPuWc+6pJ4xh7Mdrec5pJ4xh3MhrWcZUs+YwzmZ1vN4Us+Ywzmd1rMz
qWfcs56NST1jDmdVWs9XST1jDmdTWs/fSD1jDmc5Ws9TSD1jDuf/aD3rkXrG
Pev5OalnzOHsSetZhtQz5nAuo/WcSOoZczinUn6+Q/gZcHan/DyG8DPgvJHy
cwXhZ8DZgfLzM8LPgLMZ5edzhJ8B5wjKz5cIPwPOGyk/3yL8DDi3UH5OI/wM
OH+l/NxO+BlwPk/5+SfhZ8DZkvLzccLPgPMjys/LCT8DzjcpP28i/Aw4R1N+
fkD4GXA+Q/k5mPAz4NzRXW8AznlUb2CiNwDnt1RvnCN6A3D2onpDk+gNwPk0
1RsdRG8AzsN8iN44QfQG4GzVXW8AztpUb6gSvQE4n6Z64x3RG4DzLKo3NIje
AJwnUr0xh+gNwHkB1Rv1RG8AzsVUbywlegNwbqF6YxTRG4Cz6EaiN6SI3gCc
Val+Xk30M+BsTvVzB9HPgHMw1c+PiH4GnEvtiH7eSvQz4CxD9bM40c+Ac+td
op89iX4GnD9R/byI6GfAeQ/Vz6ZEPwPOx6h+vkn0M+A8mupnGaKfAefDVD+H
Ev0MOC+h+vka0c+A8xSqn7OJfgac06l+ziT6GXDeQPXzeKKfAWcl6gcziB8E
nGOoH9QifhBw3kr9oBvxg4BzmwTxg1XEDwLO2tQPahI/CDjbUD84jfhBwLmZ
+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
Zucywnj1k7/2pqFlcwH+ufDQTH79uDw56F40oQCjsfXW/PoxDb8/nP2dt31x
vzc+vPr51udEO/u902TbJC1+/ezdNvMF+762aLFkTSDvfN2Vk7VnvzdoHeNp
lsbjnw9T82XY7w0WFt2KKubxT5mKVyj7vcHStYn9+PwjqrV5Cfu9QY3K6mcd
PP6RLOm4zX5voJHZL7CExz+TAlvGst8brHzuL8znn3PJAb3Y7w2WbpE9d4XH
P8smld1hvzfwfGLZMJfHP2HLzhaw3ynZug1wsObxj/QRnyT2O6W1riWz+Pyj
NlXWmv3eIMlse4wvj3+m9c1IYt8naT4vFVbi8fNP0aG72O9enmWreL/l9a/F
0Vkb2O9eUvN0XUJ5/ev6Wd9V7HcvLYVbbe/z+lf+fJPF7HcvUqXmVp68/nVO
IbCd/b6o2G+1VS6vfy01/zyb/e5lhG1q9Gxe/zLwK3rHfvcS72/6zpDXv6ad
d49nv3tpUF0cuofXv6YYhhmw3704vBs5q5rXv/aNn5XDfvdyf9qTsq+8/uU6
5bsW+92LWKHbvRe8/hWwjLzvHOz0Y3DoXCeNnvg8IvjgnvgkEHxwT3zqCT64
Jz6DCD64Jz6ZBB/cE5/BBB/cE58Ygg/uiU8VwQf3xOciwQf3xMeL4IN74iNE
8IHvKabT+lEj9QPvp/zp+Woh5wvw+UjPlxY5X4BPBT1f2uR8AT796PmqJucL
8BlCz5c6OV+AzxR6vpaT8wX4nKfnS5ucL8BHl56vm+R8AT7h9HxdJucL8BlH
z9cacr4AH3V6vhLJ+cI9+aeA8A/gM7s7PwM+5yk//yT8DPgkUn6+SvgZ8BlL
+Vma8DPgM5LycwDhZ8DnL+VnMcLPgI8X5ecBhJ8Bn5Lu/Az4eHTn53/fl1F+
vkb4GfDJoPw8ifAz4POye/8CfOpWBYfw+jvgM1ysfx6vvwM+C97vk+D1d8DH
2Cp2Aa+/Az7BldOW8vo74HOwb/p+Xn/H//TzRkdefwd8ljnhWbz+DviY37pq
w+vvgI9f6dEoXn8HfBznfXTi9XfA5xLVP1+I/gF8TlB9qEP0IeCTQfXhXKIP
AR8Vqg8nEn0I+Nyg+nAo0YeAjxXVh8uIPgR8tlF9KCD6EPDZSvVhOdGHgM9O
qg+diD4EfFZQfRhB9CHgo0L1oRjRh4APovpQjuhDwMeB6ucSop8BH2/qL2KI
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
jJrwKV5xvUjUfffAwvp5dWh2y9JJEudvaxpsOCjfKCsWZdrmNtYzvARt0jvg
F972FRVfHXoqoqZfVNiTgN8DHheiqsIv/U9Wl0K87dV9BvguKkH741L+JilU
QlyF15D+ONEKFNvmMX5hYS3s01tDSrrcohxdGeq34d6kWthnXe2azY3aOehK
behiu1FF8NzUL069M5NiUW5GzMfqYdXwXHfd8pcFZ78g/78x1enS9fDcW8L6
P4sPJaMbH9c4dAg1w3Offhd6Gy+SjLC3VUOJQxM8d+TYk/b3LaOR9Akd/GxN
GTzXJHrU8JykWDy974+b/OfKz21ZXHL2C47u1fcF/7kGp52Glh1KxuYZOw/y
n2v5KCIhUSQZ77I2SOE/996+pwMfWEZjPeR/i//cC8/kPcQfF+JD8nMcTvBw
TuzIj2Jwxn8V4k35ON9QD5kiK1qBrYbMOabFw/lB3vAmBmec8Mz5sT8P5zPy
aUZN2jm4ZE2fvKs8nE++CJu0d3QlbhvX4tObV8/mf6LPMXWLNRZpftzLq9sB
UyxKmDrEZy+9y9/Nq8MfwyXuMXWIhys0aRTy6nBLn/57mLrCt18En3jGq6tS
+a7zhb8nrAg4ccFbg3vutj9d5wjPdd5y0LWfnwb33LSm0AIby2YsMDy88/22
exrcc19N33DiWK9mHPrcqeFyrr8G99zh7nLjhheU4bS3OfITZW9qcM89ReNt
JfFi7rlHaLzzSLyYe644jfc0iRf3jFeSxIu5526l8XqSeDH33Is0v2Ykv/Dc
JJrfdpJfeK4bze9Jkl94bhDN7xeSX3juWZrfYpJfeO5pWs/TSD3Dc9VoPb8n
9QzP3d69nuG5l2g97yT1DM8N717P8Nwwen7zyfmF5x6i5/ceOb/w3Iv0/LqR
8wvP9aTn9x05v/Dcv2PI+ZUh5xee+4DyVRPhK3huI+UrC8JX8NxUylcphK/g
udcpX7kQvoLn5lO+ciR8Bc/1o30hhvQFeO42yv/VhP/huRMpn78lfA7PXUn5
fA/hc3iuCeXnQ4Sf4blc/+pdc4HtX4Ke/WuY+U5Ppn8Jevapia3oAdOnBNx+
Pjd0nS8U9lXzh91OPwG3n8ipXecLCfSi3h1o9hVw+wly7TpfSMHpSHi22w0B
t5/Ezp3Bh39UoRhPi87dDZ+ATy4fv/S8LrUWCfacCR4yIx34ZF7FkZGjbBtR
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
p7dXqFjLuUUkosLVXiutUhphPwMnZcp/mZeMRi1bZhDwoQn2U3hiSt2zwgQU
dHCJTvmWRtiPrkUjChD+jH6aLf+57Uwt7OdB9YrSsLavKFT0gy07v+T2E6K/
oPyr7AfsIVZyir+fd+9vjPCMSMRWf8KV+PsplO9QS5iXjIUHCmbx9+O1KCnm
RWECHnxi4jT+fub27nUrSPgzRjMMP/D38yPsK5O/S4JTbiSf3H5Mk5OzG2fl
4sJxXo/kePmar2tuVHuhDE/72zSJny8vdXvZplfleIlF+n5LXr7K7u3IY/KF
8wIu5p/g5St5n6SO7rxirJr7eyg/XxcuDpBg57mNnau1+PicP+KXxNQ5fvn3
0SlfXp0bHvyazNQ5nqq8Lu80r85DJiS4MHWOM06JrTLi1XnCNq3hWpr1uE5m
U2sjr87/ztG3Y+ocbz9i9CCCV+fTZY0k2bn2L7FhOY28+tm/omvOjE+dzD/0
uemmBrcfS9+u95i4pPcixS2i/hrcfgIWdb3HxA3iLz6cHn1Pg9vPCJ+u95LY
fN+hoxYX72pw+yny7HoviZcfjJX9Le2rATo892cIO98ve38jIYB3vi5QfCII
PsBv6yg+kwg+mNvPI4rPV4IP8FUixaeK4IO5/XRQfLYQfHDP/RSQ/QAvHaT1
k0/qB/ajRutHkdQP7Meb1s9CUj+wn3JaPzmkfnDP+lEh9QP7UaL5aiX5gv28
7X6+YD853c8X7Ke++/mC/UR0P1+wn5X0fGmS8wX7saH13EDqGfbzcxXhHynC
P7AfWco/RYR/YD+tCoR/xhD+gf28oPzzkPAP7Gci5Z8Wwj+wn8sP5kfwzjvs
5x3l50OEn//li/JzOuFn2E9fys+DCT//02+UnwcTfob9PKH8/J7wM+zHk/Jh
BOFD2E8J7Wt+pK/BfqbTvvaB9DXYz23a176Qvgb7yad9bTHpa7AfD9rXXElf
g/3cof3ClfQL2I8s7WuHSF+D9d6zmkxYvjbQR7NSmXxy+wz2tLvAvi/XeJvv
nZsUCz53ba8J3uz7cgXFs/3Kzn4Bn7vHYKEcy+8/RcYNvs3kn4vr76GT8iy/
f5d1XprI5B901Laqbez79TVzn4wvP5QMPlezUf09+369Xz/J9CSRZJj/728f
LsP2g74T7z57xdQLh4OIeFYw2w/66fZbFszUC4eDv7LtCZb3S941bm9i6oKL
68eifXrs+3ixOcVl4o//zUWXGOpOYN/Hy4jGj/FbVAJx3bH9mX6M6RP7f3RE
Mece4ro4eNlwtk90zky/xpx7iKthzAUZ9v39Jedd7rKiFRDXzV79N7Pv7w2m
DTeqsCiHuDxvvnRi+0rxuhlaiUzdcXE5vd+Z9I3pKxsHD7vD8MQ/Ps9eUuTD
9A+vaucfbH3BfOb8yWph1QxUlG68du/of3On+ZMffzdOzEYK0fPD2PeW8J4i
aOn3U0y/SRwwo98bph65uBKK363bzPSb9G0uT9l65OJyNji1k/19wK2z3r02
+/+bK5b53tMpQAXI9Prxd+x7Ti6ucim/oWx/EugNX8nwMcQ1b6V0cTjTn6yU
xV+z9cvFFeyXd/WNjo3g83Ly/hP4rcL7Zu30qwIF8vsCiEt8xrbAsUMdBBfb
6e90aFySO3ReX9G4LvjrQ36Pw8VlIjN6iu4kZ8FE0scgrsTMF9/tdjoL1pDf
I0BcX55pvDvQfF0wn/weAeIKuFF9ocXDSeBzh/weh4vLx3H4JInz1wRDSN+D
uGbISg1jz7/276cP+fk68fbIuj6qGTjSvbPdmJev6M2J7iaJ2XjmHL1V/Hxp
vNgda8XwhVzS8ZuRvHzJDV69ZAvDF7eqRI/x82X7XGwL+x76+ledj5t4+bIL
WqBchAqw2y3/y/x8bZwwOKeJ4ZeZZgfyES9fsh6eB58z/CKmemMzP1+yEqHF
bF/cl/d0XSPvfAmEheLZ30MMnmWswz9fW3/pRbDv6Q/9bDL25Z2v+eb1J1he
zvYq+VnDO1+m34yj2D7atmRRRCPvfB0QLf/C/n5ie+nPN+N45+vwnlG92ff6
HxxG2JbzztfDZ3rTWR5/1+xyKoF3vm7+cN7I8vgyLN6swztf3/NSHdh+VrNa
/VYKjw81D219wv7uYXGcoX0Wjw+vCpUns797uK118GwRjw8DAiZrsv0vx6r/
WA8eH4oHCy9i+1/lxANK8Tw+FF6dfYb9ncQ+fKhPKY8PHQaZFLK/k+htYPQx
gceHX7/PUWP7peO2P1kRPD4s1UvKZfvlj8hftYE8PuTiKiVx4Z5xaZC4cM+4
XElcuGdcX0lcuGdcJSQu3DOu3SQu3DOuDv2uuHDPuGxIXLhnXLUkLuh3crQO
TUgdQlxR3esQ4tpO6/AgqUOIS53WYSapQ4jrEK3D36QOIS4zWofbSB1CXEdo
Hb4ndQhxhdA6jCJ1CHHdonW4lNQhxKVMeWMJ4Q2Iy4ryxmvCGxBXLOUNJcIb
ENdCyhuyhDcgrondeQPiutqdNyAuR8obNwhvQFxbKG8oEd6AuCZQ3hAlvAFx
XYrRv8bjeYhr0W/DWzyeh7g6p24K4vE8xNXbenckj+chrmx1bUUez0Nc4+rL
f/B4HuL6T3XPex7PQ1xa5wbb8Hge4ro95edkHs9DXNK0L/uSvgxxydG+XE76
MsQ1gfblaaQvQ1xGtC+nkb4McYXTvpxF+jLEZUP7sjfpyxBXAu3Lh0lfhriS
aF/+QPryv3zRvnyB9GWIy4vqqBaioyCuGqqjhhId9e93aFRHTSU6CuJypTrq
BNFRENcJqqMklLt0FMRVQnWUK9FR/3iD6qgdREdBXE5URzUSHQVxXaY6ag/R
URBXL6p7LYjuhbgeUN27m+heiEuf6t61RPdCXLup7p0s2qV7Ia52qnsHynXp
XoirkOpeM6J7IS4Nqnvlie6FuPZR3TuX6F6IqzfVvXOI7oW4ZOm8zpbM66CP
BCVFhLDvC1+0+qzdU5MD638+DxvN/s5pq87ItTcLv0J/qaVzzlFkzgnXO8/1
2cS+hzOaZT86l/l3br3g6Maqmao1aMixAUPGulXAfT7R+fA5Mh+G6ze0ipm5
MfsbueipNbtfbl0ov3Wrv2su+rhR/j/2d2TcfaZ3n6v/+12us/6FYqE4/L+6
rjsey+8N24QGMgpJmjQ0lIaOhqSh0lJSUgmVhgaaSBJaFC2VtERJkgb3k72S
FZnhtV/jRXvwe33PeQ6vz+f3p7v38/Q817nHdZ9znXOEKr4/6tYR0Pl2u+vG
h049hM+zavd36zXY5zwXXI+gv5df9dqjez3G52decbfugLU3vJw9o1tHcuPI
zPvduhL2OXZkHSccr+PQ36cnFk3qXuc4yHSZ8f8fah+3WWR9t97l3J5LT7v1
L+xz2PUvH7z+RX9fkCw+snv9QAdOTF4iH0nt51+Xvu7W5RhtN5hpvSydPodd
N/TA64bUr07JLqzsnpe/UR6x0ppbQu2Bj24ZdOuHxBcwxlcrcnt0RGS9NQWv
t9Lf3ymRGts9381VmmTV/e+03h1ouN6tc3I31TDq1j1RPSdZp/bB69T094/e
RLoF8N9vz033Dd3vy9qnxb1fcd+vFFZuM5/arc9in1Oqidf31fD6Pv392Dcv
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
d3QcTUi9U8H1jo7j/wCrbIin
        "], {{
          {RGBColor[0, 0, 1], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnXXcFkUXhvfZ3sdOFEUFKbs7QFERMbERxRYRRcVOMD9FsbsVu7FbscUW
A7sQsbvjuy/uw88/9t3zzM7Ozs7OnLznvJ13Hj5gnzRJks2bJMl0Plo/PtaZ
siF5kiyowrtaSTJU9EKi7xY9THRn0feIfqhIktFlktwpepTKTtCNP+re+VT2
lI7/6ffxKj9R559Vfpnoj1V3Jh3/q3Suk2RJlT+odk5W/TtUPr/qjNP5KdoR
fZvoJ0WfpuuDdc/CKuum4wGVv6TyDiq/X8exesYJOm+pOh10/T61Obt+36J6
B6jPj9BfHfPq2o06P6p7H1WdMapzr37/ovue1fGyyvuqfH6V/y56RvXxeJXP
T380TrPq99Ki5xc9m+hlRC+kug/rOE196KN7O4v+TuUj9awzVPaD6HlE36Dn
PCL6btU5XnWu0+9GfZusOnuI/knnw3Q+U3WO0Plsna/S8bPKD9fvs0SPEf2V
zgvrWEvtzKN2vhV9nNo/U9d+Er2ayjup/DPR/UR3E/2H6J5tjbuOF/W7k/o/
u/q/rMq76vdzOs7W/SeqnbN0/kXlp+j8uc6ddfyZeAxm0jFadSaqP3+Jbun8
ic4L6jhV9b/QuYuOTnqv7/X7YF0/UvWPF/29ykfpPFXnOXRsrL710HMz1blc
da7VtblEXy36etEdRF8p+jrRc4veVvWXUf05Ra+g84c6btS1QSpfXvQ8Kr9Z
v+fTeRW1f5PojqJXFn2+6LTldzmPCS56IZ3OzD1PmZ8jdZ6ceC1soDafK/ze
q+s8l9qfIvoE1T9O9b4WfVLu92L811GdeUu/40kq+5W5k3gOzRRj11HX96q8
Hp7SQ5ZSH5bQMVj3vqtjAdFv6/poHf1UfxuVLa175lD5wXrWEzqP11GK/lRt
7C56tOrsoDq7iv408fqdVcfjKp+DeanyrnrW/Tq/GO/Ie8yuYxXVmbP0Oz/Y
8tz/QMcVqjODfi8q+hjRX+o8p46X1K+TdKwq+nKVt1VnEdED1M5iaqfW76tU
PqvOS6l8rOjZW14vY9SHi/W71O9TRF8kuhC9ie7tqXtz0eNUvqDOnXQsrrLX
dFymemeo/BKdK5Vvqfpv6JhZ9F66vqT686OuXaSyRL+PUvmaGp/TdD5Vx/DU
POAxXf5VdYdr/i+nunurzVtV/nhiemYdN+v33rr34NQ84UrRh8e4D9f5EJXf
1/KYPt7yWF2l8idFf8j813raqHE78JO5Rd8kegb1654ieE7LPG0i8wLeVZi/
Xa92jszNY3fQeaiedb3oXUQPS82zflabczWmd1L5Xql5yr6p23xC7fykOnM2
Lr9JdUbm7vPt8S70lTnyVMt8HvrplufMcbpv28Z88sjU78mc+Ff3rVT4HY/R
9Tka962Xyu7OPTeG691bKj9b5S291zW6dq3Kv9P1xUXfK/p70UuIvk/0iNxj
zrNuEH1UbplyBvy2Mb++LDeff1/1DxLdMfP8Z/4+2/pvDj+hY7bEY/BYjMMV
qn9Y7vGeTf15rLC82E9lh6ZeDzeLHpWb3p/6qZ93ee71wPfdU/SBqb/LdaKP
yC0TD0h9fkZ1FlXZ0YwZ/ddz/tCxj+hv9C1urMzHv1T9fVV2kuhzdH0P9ekA
eLzo3UWPEL2M2vkbHix6SdF/IdNEf6Xz/jqfzDpS/Z1UfwjzU/QI5KzoeVT/
W9U7UPRUnffS+TjVX1zlfyKHeV/1ZUeN7wXwRtGDRZ+PXFY7+6qd41TnUtHD
kaeizxc9VPQhoj9XG0N1Plb1t1Wbc8Gv9buj6O907SDRO6tuZ7U7hTWXWybD
O55U2Ug9a5zoA1RnNf3+V9de0Pm62nzkAdHDRF+nOveL3rP2/HlR9PW1+dGf
anN51j/zJ7Xe8bTov1S+gsrfhC8x13XcJXr/1DoFusTVul7q2WOYH2rzKLV5
u8rvEr2r6CtE3yN699oyd1a935Wqe4/oWTK3ezd8VXWOUJ3bRI9Tm6PU5lW6
thXrQPWuEb2F6DlEXy16gOjLdL5Ex3LiPefpWF9t3KF7j9G9Y2lXv3dTm1fC
i3RONP/Pgo+pztyl5eWhauffxDL3ArX9Qcvj1k3tXVOb956l8vdapndQG1fX
5pk7ib5WdMO7q52msNw/V/Xfb7n8efVhO7VV69qklvkxcvztlvk0+sYFuvd8
Hf+IHqg2r6p9bbTKTs4t+5ZUm++2rP/0FP1Cy/IxZ97V1oU+alkfWUzHay3L
WGTkILU5traMOFX3vtMy/ZDaztBpuCfzOCygY7zKK5UvnlhPu1TH31Hn5NRj
hT7JHHg9sX53Wm2edq/u+19p/vyA6JNK653wjMeCRx+rsk0rf8t+jJvO56u8
u84TWp7bm6rPJ9Sehyeq/raVdb0eOp5vWU+4S+0fV3q9lCo/p2Ue+FbLuk9n
0W+0rJOgR52X+3szzs+pvctqX5sg+vLaeswEtblhYR3mX5WfW1svPB79JPdz
f1P5zLV5+2bq54m1+dWGut5WPy5QO2NEn5pbb18ixvwb6qu/M6APaxyP0HMG
6PeG8AHVeVFl/URP5vuKXl/0F6JfEr0B31t0R9Ebid5MR28dQ9GR1MbPOh7R
tSXVl/PU/jbMbbW/scr7qt5GOqcqnwAvU/kG+r22yoeI7i16cdHXh36IvncT
erXoeeGZLbeH7vSOymdU+Roqe1bndXTeW+Vr6by0ju1EP4O+LnoY4yx6XdH7
iH5I9PKsIfQi0cuJ3l70XurDWurDsvr9sMpX0Hkwy1XvcrGO30S/0rLuN5+O
szWuZ+X+/WHL19GpZtY6GwgfUHuvtqwjoh8unnm98R0XZTxb/i5LxzpFtz9D
7Z2eW19tMYa1v1eh84W168Ab0N/RzV7RvY+prysj4/S8fur/6qKHi15X9Eqi
19f5Hx1PqN4bqv+4zquqfCLyVvQqoiu1fVHtdovMch6Zfq3aOVj3nqnfL7fc
r446blT54So/T2WbaO4dX5sPH6ayPvq+ldo4TnW20e9tVOddPWcgchX5go6v
Ou8gV1Snf+nv9LPumaSyrUV/jFzQcbzqv6ey7VR2oOi5NTbD+dY6TtS9P6Ef
i95T548Lz5G31U6vlufGKWqjO3qb7r1b5Xeqre4q311119Bze7JWsYNV3gO+
pPo9VH9j1b8T3qLybvBq1f0aPS/1HJ2mv+u4T78XY4zhOaIXFd1X9Mlqf3vV
30W/P1T5zjofzrcTvSN8SPQPav8t/d5Kv9dV/S6l+eca2AqlbbPD1J/fK+s/
C/MNS9tvx6qsrv0t+qv+y4V54+Eq/7Oy7nSczu3acxUbd4ba8zDXGH6iNnZD
puu+VdTmwvBElXXRuRd8W/SmovcSPVb39tG9u4sepfpbqv4WyAD1/03V21L0
piqrKvOIw1Rnk9J84yqVraV7d9O9E3VtQKzHkaqzhepsrt9Xq846qrOHyndR
+aoq70o90WuXXp/PZOYrrMlvRG/SMv95WO+SF5Zlf6GL1R43dMZVQ29Eh20V
1mOPzc3XMSceEV0Uln3jRK9cWGd+pmWbiTH8W22eU9vufUTXTy2txx6DvZDb
JnuzZVscPn+Kru9b2bdyi+ofrd8X6/pR8FeVz6jyjXXfDDpfqPJRtfUndKfb
VX9kab3kGZUdW1vXXSD8NOg/nTLrRehIe6gdHDzYI3fmfins7ltVthBzFhmq
sjNK67uXqE6XzPbCczo/qnorspZUp09pnvhC8BP4xjnqw2Lqw1boEqIXF711
Yr6+RO35f6HopUUPEn2R6OVq89IRavNzHWuyHvBPlOY7l+b28aCT76vr65Xm
XYuIX56s482wadHNkeOno59WtnEvDt8UthvyFL8E8hEb7ajUtgMy8cza17Bl
569tz/KtsImm20OcmRsXZebd6J+3ZPY34FPYDzncWJaPEJ2JPlf0Sql1f/jS
CJX1asyL5lL7r6am50CPDR39W/VhqN5rYb3rymEj/E/3rhc0+nkX1e+t34fq
9yA964DGPA4+sZ+OQ1Xna7Xzde02sTu+ET0MuaU+9w/9fF61s0bQg1S+QdgL
C6q8V2o9fweVbxh+m1VT2yXYHT+qf6cVtilmU/3lwh74WWVnFrZrdmTuRj+7
qc5aqf1ZOyOXatsXX6l8EdW/QfV7iF47tW9r0zijA/+u6xcU9ndtltoXhk7e
X+99qI4vVLaFjpGtsDH1vtur/XNF76Dz97WvrZvaH4D9tYie9X5qG+0z0V3V
/oWJx3hUjPmWun5MyzbITmrjx9p20CbxHleo/Evd21P3Xg8v0vWfa9tWO+vd
twk76xeVvdd43HdV+cCw6X5T+WSVb6Tfu6h827DvOun776XjYrX7hdrvofNY
td837D7stdXjW52CTNf1rQr7WF7Ru99S28/ysuiba/tfPm35jH8V3XG2lnXL
W/Xcb1r2kb2l+nfXns9rqjwPWTZJ5ffUrrOMymfReQnWBXxJz10tsS/oBtWZ
UddeY/zV/5n4rqr/Vcv62F26PkTv+4foV1VnkOrMqDqPqc6fLctC2j83tU/4
s5Z9XfiLOureeRuXf9Kyvwd74S7V/7VlGf1Ly/1dS+WvI08L+/1eVD9nE70p
MrRlXrcGwxDyC9m9sNrfpbG/6U3V3bEwP2TMOk8ft+CT6AZT1GY31blIdLfQ
c9FVNlZ/uoY+/H3LPjz4yWqp7fvRiX169yJbmSd6ZrfGPq4HdO/vLesYvUWX
oWP0El2EHrK26Fr0IsiyzGMJ/XPLMrC32n9H7e+gsZ0FfadlWY2MfkF9nhVZ
i+yIcea5X6n+V7XX75c6H9KYv6wt+lUd/VlX+GBqz4knavN5dMIHa+s/6MAP
1Nad0KdvVP1Ha/f7FtGP1X6fO0U/XvsdXqstx7EjeE6feFbT2D+AHHyythxZ
TfQrtXUDxvpc7JfKc3EjvWt3HReK92+i9xqsskOQr3rGB/q9nn5vputL6mjw
69eWO9gRT6qdZXXcr7pP1ZZT6MPP1JZT2Cr/1vZFoNP+U9sXcbrourHf4CLR
VWM/ADJ6Sz1nWR1r6VnPY2tX7tO1yHr93lx9ynT96co+x61FL69jA/2+pLbe
hT28KHacvtf8uXXtOvRtbIt22Bdvqr2PRK+ILhm6Ivx/R7W3qI5f9MwvVef3
2rz4ncY8Cl7/V23/xim650+Vb6jjF5X/UNsvBO+Ddw4O/vlBY14GH/ujtp/k
ZNajyn+tLSf+rO27GA2Pxjcp+jvq6F0+qd2/D4kl6b1OSKwz7tSyPTiv+ruL
jsMLf5PH47v0SD1HDlKdqbp2VGE9s3vq+YKe309j+lTYmP1C39uTtaBnzYdN
InpdPX8i4wD/UPmyqr+n6KVUtn5tG/B99fON2nrnr2pn4dT2yHuq30ntHKk6
Q9WvSbX12IVCn8VOXCC1foq+umBqnRcb8/vMcxG9/Y/gD9tyj9p5p7b9Mkz0
27XrfID/R+Mwv553s+p/3TJPfk/lr9ces/1U/73a7XyL76KwjfCp6nxa235Y
PLU9gR3BukDf2L5lW+lDdDDRX+u+4wuP4SKpbSPGeXPWSOP6H6n+B7Vtqqk6
H6zyNVV3/tD5+XYzaHyWSe2H/Fx1DmqsW3yme/fQu3TGXyz6/dp23d+Z+Sb0
kmFbMLZLpI5dHCH638zfmOcWan+p1DGOKWrjwMYycDI+OrW/ELISXtS27jJE
9+6eWh+7VvSXLfsHPm85poS/a4vCcgIZwfgyzsSGLowxXwn7i9hlbhr5h6yk
/tsqfwt7Q/QboicWvneSzu/p928t24/Ipj4qPz/k4IrYSthfqvNFyzLg25AR
2FbP5ObhyKUfg28TD0LWImexMZFza4ft82xuefeC2ntVv5dLHC+j7RVEP4me
U/r9z4lxoHwn+llYlmHP0t91Ess35NyGieVGmlo+4pN7vWV78IDwd82VOE7H
mPJcfIHEAWdOrE+jcy8Y+gY0ujd2Ef5E7C/8VthCnRPHKCeE/4oY31SVLx9y
Cv6BTw+7+a+WbedP9E5vF7adkfnIJeT7FJW/r/LNEsvDLLW8w95/Xv3bgDFR
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
8H/6R97j
              "]], Polygon3DBox[CompressedData["
1:eJw1nGMY9EjThTPIZDJr27vv2rZt2+aztm3btm3btm2b330/J9+Pvqarq9PJ
JJ3uqlOnMtFGQ1barl0UxTBlUXT5na1XFB9SrusUxTitoviN9qmqohgX5bHo
b+sXxYV1UVzf6P+k/hflVwa5BP1M1B+hfIt+WfTTcfwtjDcM8r3oxxwUxaKU
kjE/pm1rz0XZgPoe9L+AY3dB/3Ev57iF851L29XUx0L/OddxLbr1kc9jvAsY
5946Y22MvA26GWibnH570X8Kzj+Etj+4vivQ38p459P/WvqPjX4LdJPTfyz6
74o8D7onKf+iP5D+X9L/BeTh0G+B/j76/oC8EPLV6Ffg+Espy9F/SfRv0H4J
8rLIO6K/l/7f038B2q9C3onxVuX/LUj7grQ9zO8ayPtxzHAccwdtJ1GfkvqY
9O9QX4Q+izTnGxv5ZMpU6H9Cvh/dT4y/KPprkOei/jjlD/T7I3/N+V5BHhn9
VlzfWvRfmzIB+ifQv0v75Yy3MvIByA9wv05Angz5OeSvOP4ljh+Rflty/FTo
b0T/H/fzOvTTIu+B3PPakeem7xOUv5vxrudcJ/H/ZuH3L46Zjf67Up8E/dvo
F2L8FdHXtH1F22reB++xdc73Ff1HRP4ZeXv630l9FfrvRr8Obecj3835PqC+
Efpp6L87uhL5duRb0J9C/3krbyb3hfN9Rf/Z+T9HMP4HyK8hj4F8qM+bflvQ
/yrGWJP+yzTzeyX059D/MvRPI7e9H/5f+n1KuYW+/0P/De03IG+KfC36nXu5
X5t1cr43uL4vkG9HXtj7zXi/MN4S3fSfvsr8/Zl7dSLyWvQdHfk/+q/N8Wdw
/La0/YL+JPRXcf0XcfxN6Of2+qnvxfXPXeU/zon8mO8n+v18fzn+cI4fC/l+
5H04fnX6L0X/5el/Pfr90Y+A/lb0G1OfBN0o6Lbm/Ksx1sH0v532MejzCf07
6N+nviH9N6L9aspancyXZdEt5/HId6JfkePX5PgD6TMybbv08mzmZvyjvH9c
z6v0GbU5352MfwR9xqHvIxw/JfL2yH/y/69EnhX5KOTx0b+GPAvykcjjIb+K
vBpjr04ZE/k+5JsZ/2zGv8L3i/E3QLchZVLkZ9H/r8x69BPjn4/8EP1vpv9L
6Oek/8r0vZU+l1Pfkj5jUV+G/k9S3871DXlp5CeQt0X+mf9xB23X0n8Ibb8g
3418E/KOyPtSX5n+L1Hfmv7rMv79tN2Ofjfa/qD/Q8j3Iu+D/CvyPcg3I++E
/APyTcgXI2+KPHaZ9eg56jsx3vfob6TtIvSb0HYc/2fMOmM9j3576pfRfw3K
m7Qt5ftAmYb6XuivpH1D53g778PF1JenPNvOGncXx6/A81yOtqdpm26Q93lF
5OeRl2GsNyjTUd+H8Zam/jplWuS9kQ/k2lan7+vtvOPn8v+P5fiC36doOxr9
Bug/pt7nv5zpPHW+0vYYbe84b+izSStjju5/RfcQ9U0Y5hP0Z9G2L/pFaXu4
2Z/upL6W67f7G/3PRj6e8x/P+Ecx/k+03UfbBvRdBnlq5HORZ3ctQF4V+VXk
b/n9zveZ+uLOH3TLUqah7TzaNmf8BajfQX0J9P/w35dEfwntx3JNPyEvhnwu
8kHI03D+013DqM/PMb+jXwL9hb63tL3N/zmS+satPKMJvF9l9qYZkUelvhDn
u4f6epzvLfofRtt66KekbTTqC6O/l/r66D9EfwptO6Ofm7YPkE9G3gl5LuT3
kU9A3g55dp8R17M413MebQfTdpz3nvG+QHcw442D/C1lCuTdkNek/2eUeXyW
Rdbty8qsLa7fN1dZr+aq8r7Nz+98lOuLrNf3UN8H/RVl3vdpGetRyjCMtwby
KLR/SBnW+VlkH722zNrmfjoNfR+hDNCvTtvCjLdQlbWoQr8r/S+m/w3ILeSp
6fswpab/arTdTd+9Of/lZewH1y3fN/c6169V3Y+q2Dauh7NRn7XKXu9+tzBj
veg7R32zImuT7/9jRdYo1y7f58eLrGHbc+wQyutF9uiVmG/7cv7lq+zXu/O7
G+WdImvW+tTXozxTZE89oJf33b1vJOTF3f8pU3H+PWhbhr5LV1kLh+1kvXqN
Zzy+18rzPNf1mHIr8oKd7I8rc/6f6Teb6wv1OXw/yjzv1dF/0s9cOdL9ivaZ
Of5y5Is5/vk69pNz+Tj0a9D3037m2lHIm9B/Hvrf3M6e+GIde2MB30f0Z6Gb
hXIl8tzoh+Xav+SYidqxEcbhWuak/OI+4XrP2B9R5kB/OPLo6BamvNDN/BiZ
4w+m7xr810noMw26YyjPo18V/Qwc+zhleHTrIG9H30U5//3IT3O+C6gvRnnQ
9x355Tr21YLIJzgHGGsRyovdvH8zM9YTlBHQr4u8KvUP+3mXDkF+nWPfoHyJ
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
vnQr5zReJadILtHQMbqxfz1WTGRWrvXafvBrcey1Gv/uS+Qx9H/RXUr5qhUM
5qw6/AffvUWK2PLyLcQ/tOlHGmQNd+1eAv05dfhXzhXn2Hl1+FN/teKzTtxP
jMTYyJLIo3LsQoPEVIwfXFoHz+i249M+UMdm1Vb9gus5wblG24D+4xuXrMPp
cj586n4xyBrh2jAm7SMgLzBIjGs8mk+oglE83bxvV9TxiZ3vYiojU7+I8nkr
mKSx/cvr6MRdnkM3r5gn8mgcf08dTtFGRdqG6SfGZmxt3CLxNTFtsWzP/1Qd
DE3fosU1zYy8cj/1RxlvFM634CAxCuMZz6Obr5//5nwT212gn3shxqstf3+d
+ei81Jd5tM58c96N308MwtjD/EWwpu+q2O9iTuOhu0aby7WRthEHmSPODeMx
Yje/VcE3xHC03SccxPbRhhcr+KmKLylm4Frtmi1XRhtvgn5iIsZCFigSmzFG
41wYXlwJ3Q2UX1vBuCbvJ0ZnbG455P9Rv8vn2Q5GamxcDthXzfrgu+c7KB9E
XsgA3dn9+OJiWg/V4RjKLfymk9j433VsGWPk49L3am0+9HMV4UctN0hcx3jO
D81+IpfEd/Z06g/WGUsf8XrqD3LMHPR9jrY+9bMoz7eCsbk2uka6nv/ei626
F/plu7FZe9p+yEs1GMapg/C7jJ8aR3V93xP90vowYpl1OGByvzzmuzr2qFwo
OVHyI76mbc5uOHc3IL9fJ3ZmDO2dOpiZWJeY1891OIFyARdHLrUN+6lrE3bq
cBD1TfRR5PPIVzQWvkQr/ILjtbGpX9cNF/BB7tn13XACxTsu7gdLEVPZsQof
wb7nUT6pw1nR9pwZeQ99dcq7RcYQmxWjlb8yYRlu3rd1/qs8MOPLcizlOsp5
FNsV45XfM1EZW+XjKlyDORsbeAT3QLEk+t+I/HGdc/+D/ps69v6RrdzDE73W
Os/2AX065BuRX2z25xH7idkZq5uBMW+qwwFz/7PPyfS/hbZXOuEYGV+WX+J+
J6YpH8o93v1UTtwzHtvPXuR+PBz18/wP9J+OPrfW4ZvM1cqYI1G/kPJZKzEV
91r3XOPRxqWN9zzv/tlKjFIsSA6f2JiY0G/O3yrcTOfkTdQ/p222bmK+f9Th
NMplXJG2L+pwIuUm2kd+w4W9rIW+A9rXZ7rG6duV4XK+XWeuibMuqz3A8Zvq
S2gPDILxiX3Ydrv4ep1ziYmIhR5bZ+8Wd5tE7FnMpZWY+drIa1HKVmLicjGm
p6xdhJPxlLZhP9wKY2xPajv2w60wRvc09dn7wZJGdj+nPl0/XCFjfnIBfGY+
q796uf8+T2Njcn583s4HbZ9+sx44X1YuYjOfy1jD9rMXyLEw1mzMeR7qO5Tx
Zf6rgiXr01zjXOgHK/jd+aJ93g/2IJ53MPUtKMcjX9AK32hIP1hE2eAfHmPf
o30n3Rv7wcrlQMp3uVKMGXkDyrXuXf1gEXKet/JeaXOLTepj+f5TtqU+pBVu
n/yxYbvh+BkLNb63jP6V+xz1RfuJ9RkTlW8mZ/iAIsdoe7xQZS/SBtEX8nnK
DdAn0ld6tkqsTZ/Juf9kFVvXd8DYuO9bh3qf852vL1jl3TNGugnX+nKV2KF7
irF3979RqA9bhvvi/vwn+iWQr9Q2rLL2G1N3L3y+yt7nnjhZFU6r3FI5pvei
n7KfvVkOiL7IB1W4Tfok+iIfVuHq6JPILfqoSmxdjpG+8PtVuDr6xHdR37Yf
rKjbSWxN+0A+nLw4uVjvVMFC5WQZ75mqH1tJG+lV6u9W4V4aszPWZsxtZe2P
MnilHFu5tSN0s5dO5vMqsqfKjd4a+cRWuHZX0f/bKrE1/8Mj1A/oB7t/AHkv
sQnKJa1wdOXz30Gf81rhPIs/e4x9z25lv3J/MzbpnvZbs/+d2YrPsh/yvtp8
2p76MNT3dv1oNZwUseB+xpKrJxd4MAh/VW7dieh+53wjig/StjzH/lgFuxux
Ey7oMWXsRTmh4qXmEJg7MEk3cTnxU+vG5/4ug6+O0w0GKr/SWJ7csgm7wV/N
AZD7bx+5KqdxzPjdcFaMBY5Rxf50PkxN/Z8yWKp95MbI13QsOTLLcb0/0Of8
VjjUYhl/I49cBNM4RHyPco/+Yyv4/+Pob2jlGLl29SB8TWPf8sWuQL9rkTZt
ZW1m8zLMx5i3zvxbqxXOyVLaMlXmt5zM+erMZ7njckpOYbx/qnCf5AQ5tvPb
WOyujT2r/bpuK3N2gTrz3bVFjsCSyF9XySWQo7Zgnf3Y2PL77fANL3fNQ16h
Ff7Az8hXtsLBln/8RDOf5ETre+iDTFrlffy5sVdOR1c3eOJVzfsnB3UN9L8g
X9UKh92xfq2aWFMRvugOHHNKKzkJ44pN9ILNidHJXdPG0La4ssx+5f51TSsx
Hrlk2qszIW8lFkh9in5sVzlGcsH0d8b3+ZbhAvcHiT8aq5i1zvsrd+blduIf
vu/eCzne8o/PQF6+lRyZS6qsr8s1919+xSXN83YNPrvKfid2LqdcrrU2hrbF
7mViY/Jl52n2f+Mp7n+LtsJJ15/Rv9G2ewb5rCr7pVzPx9vx345q1kv/07FV
1kO5K3KIj6uyPhmLljO8RLMfL6D9QDmmyv2RG3M3+hmb9WgG5AVbGfvNKtwm
z6F/ciTyRL7PlI25vo0o41GfoBVu90z6BK3ECmZA90YV/EWOnf6j/tJSrXDc
9Rf1p8y9kZMu3+L1Krk9ctT0HfUhzaPwHdA/OAL91NoTyOvSf506WL8c8P/V
2S+8NjEZfYfeIH31IU4Ru2SM4VqxwdZHXo9SUT+nHX6J+52xNDl6nsv9SK6N
55QbWVK6rXA/Jq+zf8oFupj+e1d5P78swnEyPq098XURztEhVewPuT6Op396
SPN/3AO1Lw9HHqmlQ5p4t/utdTlSp1Wxh+Q2uacf57Uj/1qEc3WUvjryj/rW
yHtVWb8+1/5AHqfO/iyX6fR2uJp/In9ahFtwjLYbx/9chGMmX9tzei5tpOGb
9f0jL8n51o8Nqe24WTe+kT6S2Jd7jLEOOefGT4x5fFAHb5ZHqA9krHjxKv6U
/paxEDn1xoeMiSxWJSdH/8ocG30xfbKry8jGXuTkG+8yBiM38QJ0MzX+lbEc
+dzTN/6S/G45Bvpbtsm9MX7oXizmI1df/0e8fc4q+XLO3yWKcNjExn0fxErE
yOWT3tEP91WOw6b6FlVyg+Qoej/0Kf1v/ke5iPrfo6Ibrkw+m/N98SKYzNb0
3Up7thWO4bbUt6mTS6VPPYT6dnWwsDeQN6P+ahUsSIzXXAdzHox3nN4LX1wu
8Fmu55x/5358SO+FOXDzaN95Pe3kYM3fD8YhtiGGYa6fGMtoDdY3Vz8+kb6Q
GOgc/djs2upyRIzdyc9fuJsYnlxqbXxte3l48vflKp/aSh/zBcwh0l92DZTr
rc2vrS/Pzzwoc7D0b8yHmqNKTp3+pc9YLqy5FbM0/tEq/WA4YjfmeMlVky/v
f5eztiP6Nvo12snpk7sg7iD+YExlV/RdfZh2cvIWRVfrT3O+xbrBxrQ5tTXF
yMahPhb9j2yHcyW2pY+hbyHGJXbkHuTeI4Yk7/qqMmPJvzY2OJQjWiRGKFev
NUh8wDjBAc6FOvEMOXXa/+sw3mHIq3ZyfvleI7Sypu1SJ19jU+qrdRLf/qxK
XU7n/I3/4LFismKdO9SJTTr/PyrDl3P/lPN+ENeyf51zy+sz38gcwQOK5Bw6
P81RE4tZ0flC/XPvZyf23W7IX/SD/a/R2JeruAbRf/tOYmHam9aNiRlLO7BO
7NT4ya51YnTu/47p/DdHcn+OX6mT90XOgFyBFTqJVfm+rNjgu2/1877Y1xiE
+LT49eKtYMpiU3U/XJAXGvvuBOQXGW+nTjE0viW/Ue6Va/iajf2nzhiY8818
wvVbsbkONf43CH9HHo/z1fVILqZzynid/ERjucY4j6jDWTTe6zGL9eNz6Gto
U/xbhd8kZ9U9xVhfq59YqjE/42nyiVzrvy/CXTGe7l5oXpTcFjEfsZ5ne8HC
3C8O7QQTc/+Q4yS3ybaxmv3xnE7mtJiifAW5gMbw5ZoYQzN29lovWL77xYGd
YPruH3Ks5OfY5n4k50mu076dxC71J4Z08r6N0Pgv23XCWRFf8Hrcyx7uhWsk
HqFtJ49HPM+cArlX7nniiwdX4VbJYZEb5p7pXimveFDHX9L/3rCx//UPjN0a
7xQvck90L9SHlUcsH9W9bqzGfzSmdWgZG1u81vi4tuwkZfIdtdeNpYvBm6+r
fS23ZsH/n79VY+u3g2ebYyFXVIxkhH6u2Wt1Tzaf5Lt+uJhy8Iwd6/8ZizeG
bCxcPOC0IjFxuVTG5w/U/injr61cB08b0uBR49bhxmqzyA2Xv6F9Jkdce+jQ
Kli4z3xd+n+vv+G7Sp896nAC5QLaJn/SnGL9V3NEF/P9rvJuf9JO/s/idbAI
c471T82BeqLIM1Znjq65iPYRz5aTqC8xM9f1R5UcErmN2hjGZ+XDyp0VYzK2
rj/5aJEYu3i3/CjzI2coE7vXX5HrbAzfd0cbTNvLd0iulv7dI0U4W6M1/ohc
M+OxclvlN2m7y3E1dq1/Yq6lMey/qthU2lLaTIf1kp8qF1qfxti79pdz3Ri8
uZPu565N5lC6n7j+n4Zui3ZyrcTlxOfMubqlG37kF3FZi5u64T9+VgxNpxuK
7ZrvKldRjNfcqnXKxELNsZKLYX6RsVs5GWNoDw4SqzdmoL0s50auzcydYMHa
z9a/aOxhOb9yfWfpxJaQc2u8VZvCWPiGdXIJvm7s/0lomwf97J3wAzyf3EN9
ZLmE5vOJF8gpFB8cv06uy0yd7Hf6mPqWa1aJ9YgfqjPmc0k/9rnXYkzMeEXl
ntlJTon8iX/rYBXm9MrH+K9OLNEYt/lX27k+8P//EJPQfhjEVr25yN6+YpVc
G/f4f8vwteSGyCmZZBDOhji1+LT5GJtRP0ysv8i79k8dne+cWPY6VXJ9lN3r
vD65He555l9L/pVbYs6f3AXz+eVOymG4vZvxzfXQ7Jcbaf6XsXc5knd383/M
JRu2CF/F8cxd1Ec3H1a+19ut+DTml/g9AufiD0VsCe+PXBVtCrkY7lnuVXIy
zC851dhrKz6E9qH5+fqe7plb1Pmmg/F5n4H2p/wNY5VzdcIvE0MTOxPD0j6U
PyxXT592tn74guZc6xP7fskRub0MBiCf59YquZzahPIl/caCuaDasPKBrq7C
FRQTnRT5beR53e9b4W+YT2+sSJ9Uvob8j9scqxv71fi9sWtj3uamijmINfgd
BPPP/6LfK0VyvLesw2GWu+w55EOJCYsFu+bKl/ObBubCigGbz/53N7nr5nib
eyomLBbsdw3kc4qJiYW5ZsmXeqhKrp4Y3LToXqvCxfJ9Fu8Xf7+4yDc6XI9d
n08tknMovmq8bjTvNcdMXcf/mLNZT8zfEH9VZ46Z3Bb9dd9VOS5y68zn9VnJ
sTMe53otlrgCx03T+Bc+2yva8W/MyZD/6jlavfA3vRdyCste8nHFuuW8ykf1
mwHm2opRyl/0mxLm1soZdz2XM3VDGYxQe9D37ZYyGKR8L78B4eJnDEg+pDE0
fTs55p/WiZFo++sDmItszM1Ym76D/NoV6uTSilHKnzPGZGzJHJndmv3L3FY5
Xfqe4v1y3fRB5f+YbyC3Tk6dfAa/N2Euixj8cv3EPI116pPJt/L7Hfpm5qi6
X5xkWysYovjUyIPETs15FE/QHjC2XZfh6hsPl+8i72WYQThVcqnE/L5s+C5y
eczX1N+bTAyrFS6gueuuz16rPED9e/dT8w/mKsM106bXlpdzZm6E+7F4qriq
+68Yrtitx+gPf1bn3upnyZ0xH8ncSjk04ivGaM3/9Bs019TJR/DajLnIQ5Gv
ZC6yMRn5rfIZtVVdo8Tj3qqS32eOpvw0v98iN1hM1PjC01ViaebgmdtqvMy1
QL/W3FfjofqT+pXi576Pl9H/0jL8R/mR3h/XNOMPL1aJfZsDaC6INo22zMRl
crHMHxQvMidLf/2lKrFwcwjNfTPfR1vKHLjfGr6QuRf60MZfxhokn0lb0vjS
aIPkG5nTaPxq2kHyf+QCyTfxeytyS+SUDI2XVuEXf/j/8dYq/GNzYswv3YWy
XzffmHBM85nMpTVf0njDe1X42+b4iNe7fso1v6ZM7pj5CGJN5pCJf/pNBPnR
45Xh3pjzsUERDs5BvXz/Qy6uMQD9iSkGie3JtTW/2Hwov6Uh5ivX1P3D3MTJ
GWOSXvIBzYUTU3Kvcc/x+S9Uhjvn92TktsmhM5dd/rjxEnPancvO6TN7sTmM
N7seXODeVAVLn2GQd1dM/Zk6fG5xY/FiscPpB8HWxRDlopqzZr6LnFTfBd8J
bYdbe8GazX80V0qf03xc7QNtNdcjsSs5k/pz5zfxVNczudgzV8kVND9H29Cc
Qbls2inule6ZD5fJB/qkyJogN8vvXZjraIxafHjufvZauVZ+i0N+hXwieUXG
6+SDrF4GczRv3HwhbRs5LnKxjP+a276xGFU388Vc5LeKxCf8JsCh1CcoswaZ
72burBwP8S35Q+uVwXzd240ha6O6x8ufmHqQWKrvtv7glIPEfs1BMLdC/0yu
hTkWcqG1ebR15ETLb5bvq+2kvaH/Mt4g3F5zQuT3+A0PuUY/9oIn+80Q8/d2
LvO+flWFX2+syNxL8//03czBND6wSz/2tViLa4b5jcYb5QQYfxGjEJswBuVc
ESMRG3HOyNcRTxB7G6EKn0e+k1h1VSWf86IquQVi2H4fQR9I38dvTPm9iIur
5Eb4zPx+iu+XuQ9ien5PY+G6yUVo5XsKC9XJtZAj4fcYjMkYi5Fj4fcHxPzF
+vXZ/L6B90PuvRi+fDD3aPdmv4nj91lmq5N7YUxD7EkMapsyGL9rmPlr5srL
AXINNL/N3Gs5Sa7B5lubWysnTFvNmISxCG02vy9jjMTYiO+ouSHGSIyN+B0c
v6ewRJ1cDL9ZJZHVeOrlRTj3rTrx8SuKcO7F4oz3XFkEk9PflTN9fJmYp3PC
fA1zReWgiyUbH5crL6Y8lPtK/yPKxLDky5mvKJbvmj9qP5iIWIj28IH9YApi
CcZQ5bfIjzG36fxuch+M519aJAdCfoX8C79VZk6DfE35qnJv5eDJT5Hfc34R
TrrfR7ixG1/Nd9z8OOP9cv3N2ZBfI79F7r4Y85L93EPvnTEnsWz5BRcVwbTl
d5k/oT11URMvH34QLpXvvvw+bUZtRb+xJr9PPpe5s34j7co6+WVyW7UplOXc
ybUz50x+n++bua/mLMrvOrpKrqwxIPdzOTdybcwx3K4fm1Zb1hi5XCo5OHJv
5FRt349NrS0tB+LhbvKJxbvlxIi/+j01v1VxSmNfa78vXeSbDPLNjEkZixKD
NL6s/fg4+hnL8KPlg+vLHNkN1irmunSZmMqf3eQXmMumDf9Emfx1v6XxUqvB
R6vk+vhNG7/PoL8m9qiPoP8uh37RMv6P8V/tr3nLxFDEz/1+nNitNoffpzm1
Su6yHKKx+slP9hsPxozEssW0dyoTs/H7NKdUyZWRM3RGHZtdW10MwFxjY2DG
vuQuizWLOW9bJqZnLp82vba8uWjGX/Rnr2slBip/b8o6udv6BF6LMS1jWV7T
7v3ET+SyuV+/2+AH8gPlmD7Wzfc8jCXKwZOvaIzL2JZrqPw9+XZ+i8VvMBkb
MEawZ5kYpfi537Mz9usaLPZvDGDXMjFL+YdT1Mk1d078HwYkOxM=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV1HuQz1UcxvHv5ra7LttKWNayu66VLBortblsZBnaTJGU7sN0WaRkSuOa
ywxqKoVRihiXlfojw1SmonKJSbIkCo3bbsN0GZdtqdfnj2e+53mf53PO+Z3f
OSf3sXHDyq5JkuRxqkOHUpMkNT1JWjFHaydJZ50nsDSsNXYMK8TexKrrJUkv
bDvtSEmSpjKLsRb6z2ATaadcN3pe+3fK0Dc9LUmm0aa6SfIqNa2VJAP5KrV5
MuXYablydXWNWR/7zrx/mqNY7pRcLjZa7oRcP+wk1gZ7CDuOfYCtoBo1h2Nu
PJv/Xi6V78AvkZvFNzLHQKwdtgg7b97zeD5WTXdic9Sm4OfsURu5z+l1LA27
hLXld1C5ulbGW6aujL+odozcQby/3C6/Yxk+X12K3Eh8Dr/eOkvl/uYL1E7H
Mu1LM+wi1h1rjE0x3kxsBq1VMxvbTB35H+UayBXwq+ROYafpVvyMeZebf1Ps
k3lXyk2SSzFHZew9DVVzVq6XzFzrq8FKtWfKrTZXvrorWBM1s7BPjbGEX0pH
+Z/5YnM0l9uK7TXe3fhL+J7wVIRd4Fsat71cHlaoJh1bGvuPd8b/1a6h7fJ7
reU2mixTS38TrFvMob1ebR/fvlTbWC/IrYv/jH9AbjXfLs5l/N9U5XcclztG
76q9Ilsoe3Psie+TWKpvGr0jszj2X80hucPqhxjvWyxD/3B+uL4b1H6FF2qX
yV3AP9Sfhb/MD+P3WUsPdb/h2di92AHsOWwCjVQ7EltLW4z1i1yG3BG6qm8+
39h4T/F9ZT5T21vuS7X19JViJXKd+P18Q7mu8b/JbYkzIDtA/xAs0f82XW+8
CXIl2Ddy1/EL8S/iTmHP6GuCvYZtxYqxZ+MOG+t9Omm8ffwQmsGnm+fRuD/O
0EYsT+3Q2CvnZZraT7Cv4yzHffO9izZaTjY/SO6s2ifiXsk1xOZjb2B5WH+s
hzl2Uya23xwvYvNkGsj2086NWn11ZRbi2/l8+sccOTIfme+y/nHYe/KtsY1Y
NTYeWx7rU3sjfokfz/f0G8fGHmON+N3mrcYy+NlqT2j/gA+mFWrr4GnxJsqd
1teBr8THaq+Le05tsfuNmWVf5sb9lR8f7wE2wlr+ULsWmxzjYaOwAeYqxwZg
P1FLrELulXhn+ERuOFaFrYn/3hwl2Bmsndq28c7x6XjXOKNyE/XV56foW6Cd
Yy1F+vLlOuEH+Qrqafhm8abJ7ZQbjE2SK5LrgjfHm8U7IdeCvyPeA7lRcrPl
suJOxptqDw7E2adMuQK5DXKFcqOxa7H22EqsCzYizp+6VVQZ+4zdg90k95b5
tslVY5fj3qhbQ39p/ypTR19LuT5x57QfxOfFXVK3yHi7jLfJHvTG0mSmYhui
Tu5h+Vy1m2UfifMU76m+HLmO+F5+D3X3e89j5+h22asypfJH+SPUHauJs4H9
Z/ynaTWfova+eGv5AuPlxP7jY6ypBKuIMxj3CJtKQ+M9iCyWGfuM3aJum/bH
1lDiO4j+Bx+Y94I=
              "]]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ttLk3EYwPHfMpumOfsHlJG3Gd4X4l1QIHapiTgvZLtIrBuDalmCIkSJ
qIgXc6El3kjZ0ChIcXa4zex8hP6KDtrnR7Bn38/ePXv37pDODJy7kAghzJmF
gyFE39CfWm/qqhxzsJGP6lgyhGZO8zif4hY+G2u3jbv4NHdwjnt1ye5lHuRl
HuNhntGc3Qm+xyNc5BI/0Jd2y7wZn3ddO1zUDY/f8C/e1d/6Vv/oO72i7zXj
9Vf5A/fxNf7Ief1rPvF13TOf4zXpF71ot8Bf+RLP8zfe8r77/J23+T7/4Lta
9vg1T/gMz3iLV/SF1z/iAj/mRb7N09ptN8+jfJ4HeIh74rntZrmdZ7mTW/mM
Ntk9wSf5GDfycU7Fc9lt4H2z6LpSOhM/Y/w9zatK36O9Izzl+FNTy5P6xNTw
HT2sWee6xdXcz+Ps7cKorptk/M10zRzim+r0oaRuYdVdhT7UA/o88f9/9g/3
alOa
            "]]}, {}, {}, {
           Line3DBox[{1202, 1336, 1556, 1337, 1476, 1338, 2634, 1565, 1339, 
            1483, 1356, 1574, 2674, 1357, 1489, 1366, 1583, 1367, 2613, 1495, 
            1376, 1592, 1377, 1501, 2655, 1386, 1601, 1387, 1507, 1396, 2639, 
            1610, 1397, 1513, 1406, 1619, 2680, 1407, 1519, 1416, 1628, 1417, 
            2617, 1525, 1426, 1637, 1427, 1531, 2667, 1436, 1646, 1437, 1537, 
            1446, 2644, 1655, 1447, 1543, 1456, 1664, 1457, 2619, 1549, 1466, 
            1673, 1467, 1274}], 
           Line3DBox[{1203, 1340, 1557, 1280, 1204, 2622, 1341, 1566, 1284, 
            1214, 1358, 1575, 1288, 2651, 1219, 1368, 1584, 1292, 2652, 1224, 
            1378, 1593, 1296, 1229, 2625, 1388, 1602, 1300, 1234, 2628, 1398, 
            1611, 1304, 1239, 1408, 1620, 1308, 2661, 1244, 1418, 1629, 1312, 
            2662, 1249, 1428, 1638, 1316, 1254, 2630, 1438, 1647, 1320, 1259, 
            1448, 2684, 1656, 1324, 1264, 1458, 1665, 1328, 2670, 1269, 1468, 
            1674, 1332, 1275}], 
           Line3DBox[{1205, 1342, 1558, 1281, 1206, 1343, 2672, 1567, 1285, 
            1215, 1359, 1576, 2635, 1289, 1220, 1369, 1585, 1293, 2653, 1225, 
            1379, 1594, 1297, 1230, 2626, 1389, 1603, 1301, 1235, 1399, 2678, 
            1612, 1305, 1240, 1409, 1621, 2642, 1309, 1245, 1419, 1630, 1313, 
            2663, 1250, 1429, 1639, 1317, 1255, 2631, 1439, 1648, 1321, 1260, 
            1449, 2685, 1657, 1325, 1265, 1459, 1666, 2649, 1329, 1270, 1469, 
            1675, 1333, 1276}], Line3DBox[CompressedData["
1:eJwVz7kvw2Ecx/FvG0cj1CjUwOJYXYtFsRaRMDA0aUhMSmLRwSISicbijxHn
ZnIMpiIxuWIS1yTRV4dX3s/v+TxD210ozq4mIiLPYV3EUmPEMm0NEccccVEf
caI7TRGn2sU5Z1zZLmuln11vbvSaW1tF7xjggQ37vVZsz/rCKG+88uj+U/e8
+9JJfvjmyfav+7bwG3POSU3wbmvWFubdt+qmd2n9sLVrB3lbp5ZsGf219Wgv
K7X/oH38uR/UA++GdN02osMkncc0y5y95HvCeZyUc06n2Hae0S1vpjXte0EX
KTuvaZECVYNNMgE=
            "]], Line3DBox[CompressedData["
1:eJwVzz0oxHEYB/BHd8gt2CzUrYwKg8Hret3dQKFc3spyFxPZkFKuS4mVlZUy
ORabKJMikwGTxU3K5z/8+3yf7/N0/S67UCmWmyJi3nedjlhpjRhpjuhqiRhl
nfe85V4mYkzOyuO84wMfmWcv990U5Cf5ma+cYT9nOWD/Jr/In1ziMJf5xXeW
3PzKZXmSFTb4wZT3bTDvJqfblNO6b3Zwm9P6mv2O3Kn7YTcPkt+2q7LHfOim
kbxbPuaq3Qn7zH8c5JGbU3nd7oxDupQ8wXPzlP2W+SJ5q65NLvDSvCtfJf/P
TVHXbp7jja4q17lmXvT9A/7yMb4=
            "]], Line3DBox[CompressedData["
1:eJwVzrsvw2EUBuAjaV1qsbgkJtQoLoPJZXVbalAslLVIJA0TYxNT08RfY3Yd
TEVicotJ3CYJmj6/4cl7vvOe4evb2FncboqINU5SEcWWiC16myPOOOU8jSxn
Ii5klisuudbV5A1DHLm5k7fUdI/yiXFeKOmf5b3uXX4wzRefPNgX3Pya/5ih
zj+vulZ/ayPnJmfXbs7wpuuUXazaV/Q95m6+df1ygE3doMxSdfOjGzaPUNSN
yVHq9hPy2M2kLCX/lFOkzLNyjrz+wHvBPJ/8xbyU7CmbV+Shm2XZ4b0uC1TM
+3KPXRpGTzM6
            "]], 
           Line3DBox[{1212, 1902, 1350, 1564, 1351, 1480, 2650, 1352, 1573, 
            1353, 1487, 1363, 1582, 2675, 1364, 1493, 1373, 1591, 1374, 2615, 
            1499, 1383, 1600, 1384, 1505, 2658, 1393, 1609, 1394, 1511, 2659, 
            1403, 1618, 1404, 1517, 1413, 1627, 1414, 2616, 1523, 1423, 1636, 
            1424, 2618, 1529, 1433, 1645, 1434, 1535, 2668, 1443, 1654, 1444, 
            1541, 1453, 2648, 1663, 1454, 1547, 1463, 1672, 1464, 2621, 1553, 
            1473, 1681, 1474, 1913, 1907}], Line3DBox[CompressedData["
1:eJwV0D8oxHEYx/FHOcp4m0msjBbDZXGXQamzGFBu4DKgsMigsOkGchGRi07+
RXSySVksl7JYbrEoWSwsyuuGd5/n+byffn37tedmstMNETGGv8aIheaIeRSa
Ih4SEaPmH/2dfaUloiLXUOGGuG/u1n6DJRTdnHMZ7ou71l1hDiV9P9/DfXCX
ugtMYZvr0r/r827OdKcYR4Fr42rcib2MYazqk/o3/bH9CINY1Kd9I8G9ciXd
ITKY5X7lOl/lDsz7SGGC+5TP+j257GZXdmOEq8knbqf+XgzwnTLLvdT/F1eU
W+hAWt/r5tF8z23KDbSij8t73yT+AfnrN8k=
            "]], 
           Line3DBox[CompressedData["
1:eJwVzzEohHEYgPGXznd1gwEZbpCjDOIGxUBZz6IkBour244iJQYZSDZZ1JW6
UkoppZSSTWSxiCyWM1gUFgsG3c/w9L7/53mH78uVFicXGiKiiL9UxFBTxEo6
YjfhzFl88wP8Vibigt/GND+FLy2vnXPrqLgZ4wv41Hq1M34ZI9yaPmy+aT3a
KT+PPNePV77spks74UvI8Z2oaR38pn7Mz6CNb8WzltWOuAmkuVV3ifmktWuH
fAG/+MGOfq+1aAfeo/jAO+74Zn7DTdV7EC+o4VbLaPv2cb3PfMQDrrREq9i7
cYMlN9fmpdao7dmz///t2+ZQRh2YfzFr
            "]], 
           Line3DBox[{1279, 1335, 1555, 1475, 1273, 2671, 1331, 1554, 1465, 
            1268, 1327, 1548, 2669, 1455, 1263, 1323, 1542, 1445, 2633, 1258, 
            1319, 1536, 1435, 1253, 2666, 1315, 1530, 1425, 1248, 1311, 2643, 
            1524, 1415, 1243, 1307, 1518, 2660, 1405, 1238, 1303, 1512, 1395, 
            2627, 1233, 1299, 1506, 1385, 1228, 2654, 1295, 1500, 1375, 1223, 
            1291, 2638, 1494, 1365, 1218, 1287, 1488, 1355, 2624, 1213, 1283, 
            1482, 1354, 1481}]}, {Line3DBox[CompressedData["
1:eJwVz802QnEYRvE3RZ1KxtWoG6GxkWVo6AKoKRHSOb6ihSLkOn3zM9hr/9/9
rDM4re3dzZ1cRGwgK0ZMk4hmKaLODZ5wqq+UI9p41aoYahWeY0uv4VQru1+Q
YOzbTB/oJfczirjRT7Su7dp7SXvCIkbuY9sVL9vXMNMLuNSObBecdz8itVdx
rvVtZ7ygPyCHzD20H9pS79Cm+HUfoGP74Yn2zb3//9JWca99uffxiTv3B6/b
9vgdt9ob1/gPN/wnGA==
            "]], Line3DBox[CompressedData["
1:eJwVz0lOAgEQQNFyoaKJAWcFHAAhehaHGJcMDrjXRC4B7FD3zorCScDhSr5e
vFD1i6S7C83rk6uJiDimPR0xl4p4YGTOzkTczEak7Y+MtZyWMT9Rc/vW8tq8
/ZlJbZ8NbcH+QtVcY5NdtzaL+it1rcEWPTpuS/obp/YztrllWXun7D8HnGsF
7ljRP7gwH7pVKJrvWdX7/HjXkn3Prcua9smvvqO3tHX7F39aJ/k285AptyMG
yTclz03ew2+TS0r2f3IgIbU=
            "]], Line3DBox[CompressedData["
1:eJwNyrkyAwAUheGrCip5AFvGxBZbgdfIqEWRsTY00tPyAISQxFDaxfYUgkiC
h8lX/HPO/c8dzu8sbXdFRBYHiYj+7ohrfOjpnoi+3oh53HB1bpQb0G+xzH9y
Y9yg+w457osb54bc91jVv7kJuWs/ksd4sK3Jhm1SFnGCBT+PtnX9x5aRpyjh
id+zb+hN25Q8wzlqtk2ZsO9jWi+jgmdby/+MXrBV5QVe+DY/qyf5Rbxyv9wh
Uvo7Vvg/95t+6fcKc9jCPz/CdwA58iwO
            "]], Line3DBox[CompressedData["
1:eJwVzVs2QgEYBeDfE3p06b0H1yNr1QxiApYJUANgIArlPgFFKEIPuaaYlu88
fGuff+9z1slV9rf3JiJii6vJiNF0xJgiPwy51GczEZv8TUWsc6HLy18q+nnO
dWvuMX3flXV5zvSJbsSr/oXT9F1bjef0X7aefOLE9iirtoShrevu0LDdywe+
9av2Xe7cddutbPNlu5EtDuzHtmvPTT7T7zjSzdk2+HCvcKibdZd4dy9T0y3J
N3b0M1R1i+4BCxT4B+XoLNY=
            "]], Line3DBox[CompressedData["
1:eJwVz8s2gnEYhfHXyOEGaOgGsIScJWWZyeEKMGbGXbiASonkFiSiWcghdUF+
Bs/a7372t/5rfZNHZ/unQxGRx/1wRHc04nAkIikP5Ies8ydjEdv6ADnccVnZ
x7EtgRq3pf8igz1uCrf8pt5DGm1v3nAXtlf3BveDdbzoVVtLTthz+ObX8Mxd
257kqv6FFeR90+Qqtke5zH1iCQ390l62PbgXuS5SuOLObQv//4l5lLhxLot3
fQ5FLinfMItdW4GbcXcwjR38AWwxK24=
            "]], Line3DBox[CompressedData["
1:eJwVzzlOQlEUgOFjow+XYOcKbBRxLo0iMhgbQmVi48BzKrRlA7oLZCMO9M4g
4Er8bvHlnvNf8nKZP8ob7amIqPI4E7GdRbwxNC8WIm5nI3bs7/xqS9qu+YNj
dyOtqJXtn2Rag2Vtz/7FifmUEnfunpwV/Zsz8zkrPHPvfl//oW3PWeWFqjag
Ox1xYV/jlVp6L5fmKzq+se7sU0/vZuydG/YFdw/pjdqIib6pz2klxtqf1uMw
zRT0Aybpf/tt07nlvOaGlv0fJMMsmw==
            "]], Line3DBox[CompressedData["
1:eJwVyjlSAlAUBdFnpLgFTYhIIcRIZVAwoQxUijIxEDXAyHEXuAxdi+BcGssg
M0vwEHS9+7t/8uRyv7EUERU8LkccrET8LrA3ExFrqxFZdLgOt8Ud2l2c8l1u
mzvy7qHO9bgcV/Xu48ruc3n3Xn92W/jTrhdXK7htNPU0BtqN90Arui94xZBP
6WcYajvcG94x0m7dc22k7dof+MRYG3MlO6M/4Mue8BO+bK9zG5hyU+4JNXuO
C37mPbO//f3BHu4w54/5f3CgNfA=
            "]], Line3DBox[CompressedData["
1:eJwVzVdOQmEQBtDhybIHC5uxJD4YFyCKhUSJLsBlqLtQaYq6FQWxYC8ECyBg
wvHhZGa+77+5yfT2wlYiIuY5H4rojkT0mOOXDmfy5GjELH/DERlOZetmn6x8
krJszd2j4bsP9uUn8lVZl3fZG8eyHd2L/fX/X7pn84mS7sF8ZMabju7eXqeo
uzXvaMv39Df2awq6K7NGS1c1K+x6k9dd2C/50a2Qk03opvl2pzmSjbun+HIv
cyhbMj/ZlI9xIEu5myyywQClrjvc
            "]], Line3DBox[CompressedData["
1:eJwVzzlSQmEUROGLiAy7cAvqNqyyKBxiIi1lcGJQUaBMNcS9IIKz20FBydSP
oOv0Pf2C/y0XK/lyIiI25CMdkcxF3GYi1rMRN7jgfudL2HXn+A6+cW3Muq9w
x/7KXeoZroXb3Jq88BfuNH+OM3zmVm13csYtcU38wSfbN/ZsDS6l13GKj7YJ
1tyLeIpbvvvSR7ZPPOGSeIybthUZ2sbc0fyf8BAfuJatqie4Cg7mb+XKenAl
vOcO8E/2pWDvc3v6r+zKtfwDIb0rtw==
            "]], Line3DBox[CompressedData["
1:eJwV0ElOQmEQReEiMRFRwQabKcguwC0oIjZMXQDMRbEB7DBRdoXLsZ+o+P2D
k3PrVj14eaWTTqOdiYg6JrMR/WzE/FzEq7zD5VxEFQvym26Xh24Wua1/19Xl
G12ec7oW9uRbXYFP0UUDPbsfvrNb4jOcYx+/2LKvYTnd4gJN/OHeMyvct7/k
Kxxgige7Vb5OewzcHHLwyK4of3jXo/Sbugwe9WvmT/0xV3TbWJe/dC94crNp
7ui/zRvyjPysb6X/Sd8DY/M/iREmsA==
            "]]}}},
        VertexNormals->CompressedData["
1:eJxMXHk4ld/3pUFUUjIUEkIIkZnySghNNBgqUymVIaGIBg1mhRJSyRAVSqQk
uscQMlSKZMyYeUglUvidfe7b9/f56z7Pes5zndbZZ+21990n0QPHdx6axcLC
Ej2fhWU2/lytrtbj/XyAOhZ/LHOGitVWevyTlYWljVoy6dEL+IYh96ZPErHa
3+/cnpmZaaWMB44TPPxRjN+5+FjtarHHBLeT1Ce4qVSijvaFWO1ACVEW+J7q
pQYE3+aw4aHbkVjtXcErCT6L89tQbPYQNaAiUCQfeVu7y7RuzYaqz9SKJax6
tuoj1MQXn5iOE3e0PR59VyziraLYpR1cbw6NUAJz2QyM5e5qF77lXsIjmUm1
fEfeCzpGqNp5J5yjdsRpR8z5Ibm/9Rn68THUoZVnhDJQKY+E7+kfrVM97PYO
1coGOW49NUTdHX2WB39XKHJGNmyyHvU1vxG53tZPzfFcbKgRelM7e4vx3TGr
dvTVxKN9nKWHMhy92HOUN0o75Pnk/STtbuRv5PrU9E8b9TzAdOrc3HBtnzaZ
TNOVA2hH9y/1hyk6lOvhdI/b7SMbxm5kvJyZGUHi8a9Ce8Z7KQuPKA2rhfWU
l6EH4SFgvivBve//oQCfa75wCvi8z7HzKuBRITkKgGuc20nOZbs2L8E/d35T
BnztAkHyPX9ajxL8KUeBIuAsfeUEf+Ey03axuJ8qFlvyjr2sgZoeEpIDnjWi
X55oFxmk2HMCIwL4myi7BH0t4Hmoa94GqdeD1KEFHEIV2U2UrHrUUuDZb2Gw
MsodpNacvbWtOLWJehjvtgZ49jx4MLWLZZCKdgy48mKikbK4fVcZeA5dlDVh
E9JPvflz6eR4eAMV5CNMeBYZYzyTV+uleNj2ODB2fqbCd1kSnjuOXHtUmttF
edWN2un+qqHYm1c9AJ5zA6o/xNz8QlWMP1477PWW+iKrRHgeZc22XsiqTS0U
u1/N0i1L/aR5fmoxGLxnczu1K+mH15PUr5Rp8p5ZwIOm1qIQwO+NTp4GvOJs
FeFn9abYUMCPfjLzBvxngSHhn6XC5grgsS4i5Hv6lrwj68sL95HvYVUTJuvb
WI2Y8Xw0bZu9XwdVtnr2KT+NHqpn9IwM8PxbZHWWtGcn5VM8bJN5pJdK/KO2
Bng+1Tlksbq3k+qYL8Fu96uX4hZ5vQB4NqTOLv/R1kmdyus6ZDHUS1UNnlwF
PIc1K3ax2XVSiqojR0a29lLmBrFKwLNUQsfuEOsO6oV9yOd37D2U8GokBzxH
vok6OF7YRjXahoe6z/5Kvbw3Tni++S0v1jGjmbrR8yNa/m87ZatcReLZ9XXC
8jlynyjLyb0OjCuN1Mo8ZcLz08Wf/rgVK1OLd5iOWHFo/o/nP1KfL6SnvqEM
FkQ53pozQHlw2REdWNE3PxBwjZfznAB3ksz4C7iJSH4I4AdqbMn64VTZacDD
je0uAW48dJDgD60Y5HtGSvYFAO4t1nsMcAm+7YTntce/rXnpWkGtOmm4YXRs
kGLLUpACnreJWUu0lVdSqfPjM6aOD1PRXLxEN94IhHyRc6yilK9/fZImMkI9
uxzPAjxb1qkt+2pbRfEnt3Y68I5QcYX8IsDzmW9zTAxSK6lft/Oe2m4bpgZk
GxWA54tHTk3qaVRQ1sl8SevwPdiUf1saeLZ5sapm82AZ5ddz+/pi5X7Konwu
4XlyXEct7fRrytDe+Kupczf1SCOb8Dw8FHf6uyaDuph5JmvnVayzdfMIz6pB
5u833FtB2VeXRZdr6fyPZyFPseaM1DdI9/yEGvAg8kNiDvBwIGK4DXBUmKkB
eMy5UsKP5rbYLsD/+gpoAZ4Rxkv4jzbSaQF8T+NdTcBXeAoTnhdeym8FPIu7
mOCOfcxzmdLRr3vlWoGObEmfBzzbnvQjPEckHersLK9E8ve6vIBnHmPNdcDz
xCNfpOhYhXjOsnoBz2lPwwSB5yWl0xO9tlUo4p1AGvAswclGdINVxoDTOLUS
Sbb8PAM8D5qZkHiWNg71N9SoQA+XnHUBnt8nqpF4DhSft2DLYBlS7beyB57d
DWwJz0dkz009Ov0aresUzwee36zeTXTjzuaiG780GSh9y9JI4JnLWp/wHCeq
VL/x3goUz2HiDTz/0+fqKzPqZpvb0R6vT8MZ+F4brjlA9La8I1UD8MTIxhHA
O4XCCD+POw01ARdS1yd4ps07gj9dqU/w82/9CW7cIU7wbSw55Hva96aQ72dt
aSLnled0bd4hvw60ZmdM22WsG1XbOdYCz7Edw6dkPDuR64c3RU+wboi6bpEn
+rynU0yqtxPNezbHwRbrhsl7iht4nkzUbMe6gc58fVFqjnWjKZJVEHg+fnBH
yjy7ThT4+v3bYawbM5VP1YDnkYL8haHWHYjPe1oPdMNby5fwzPnzG+dEYRs6
b0TNBd3IWbST8PzK6XOOU0YzCrotJQm6YbWxk8Sz7ItFo1g3UCFvS94rrBvl
D0QJz2FCPZXuxcpoguug0X91405v3wDOU2h4q9TDfThP+XUeIvrstMtoGPCO
CZv7gPOMvCS8jW94QvC9ZzYS/HhSONFnqaVHhgDv1g19APgm8a2ET8UTfgQ3
PvuI4O01SwjuvWj/5kvF/chymGv1PJwHU/fVEn1+cOtJC86D6M+XW7V+OA+W
mkzLAc9bdoan4TyI6vn6Td7gPCiyz5sXeN6juPkezoNIK9j9XCHOg8YftZYD
z3kZu3m/sgyiHXft3z/HedBzPFsLeFY4dNXKNqQfbXm6+eMYzoPWf31IHuR1
X8q9Vq0X7UkI7snHeXB+2CnC8xp/wymcB9G6oEN8G3Ee3FiiQ+LZ5YqKwc2b
XxCLedfWQZwHX7+SIjwbnWiqxnkQabNG/Jr++v95cO564uvQGVEJNb4BM0ZL
OtPX9U0RX4dG0vsensk3YxjeYvo6aoT4OtTYKLdybqwZQ1yE6et2yBBfh1am
Uobnzpsx1okzfV0OP/F1iOOb72a3Y2aM6UCmr+tcTHwdusr3Jv4WpxkjbgfT
173iIb4OSR3kKXh5ai/DO5Xp6+plia9DXBYyCPDmSqav8/5FfB2q+cvGAFxy
FtPX3a0jvg5tjSjMBzxvmOnrShWIr0Nr3Rpuwd8tjGD6uuo24usQ29Xwm4Bb
GDN9Xclu4uuQ/5YDnmfumTL0nzF9XfFW4uuQqk5Q4stTxoyEVqav0+wlvg4d
EZeTkD+W/uofzwfD7Dog3q7IUu9xvKEHcr9IPPMdt+4CvGR5eDXg3HQ8h99u
6gT8SEU8WW8QfInw9jFak6znWpJM8HqnJsL/4Id+sn7eRub3/IvnrM32GyCe
30ecNMHxjB7Q8awstugjxLPE3T1z/fmbUP2YkyzwvL/NPR7i2U2R6zyOZyRM
x3PFtZwYiOcD9lse4XhGVxr7FYDnkfNjHBDPGr1x0ziekQcdz6Ho/i6I50aP
gUkczyj7zm/C8x8tW3aI598BNVyvdn5G/+JZPCVwDOK5pGBMHcczslv5gvCs
xtivCfGc/pL/HI5nVEzH85KJnSUQz5cKT0nOfJVFP2ievyu7rgb9nGvP9xfr
J7q05jDhOV5isRTgCw8emALcN3+E8FbnPJvgFdafCf6Y1ufnYSeZ3/MmhOD3
Cg4TPrU19xKcc/kWgk83M/XZSLNyDPs61LLdYwTrMwqdZSsLPM/yn3cQ9DlL
Tecj1mek0zqqBDzzaUtzgT53zS04hfUZ7aD1WZjL4y3o84/le+uwPiMPLUMJ
4Hl6dfc10Gfbm8YtWJ/RX1qfW/2MJ7GvQ292Z+/C+oy8aH0ubsr8i30dclJh
WYr1GT2j9ZkfhceCPttUWytifUbXP+oS3ag4FdgE+rzdie8t1md0+vcKwnMi
R2EO6POZsx6WWJ/Rv3guHxcIBT9w58RKbewH0LXLXkQ3BsTOXAX8u+BhgkfR
fsPLpCcQ8A9/NSjAWUtqCf8eS08EA/5Q0Zqsr4xWI9+jvVOM4CaXk8l6B9pv
+C8acAe/seOvISf2G8iK9hvDg5mh4DdkJD+fxX4DLaH9Bv/LGjvwGyY2Zmex
30BC2yRWAM9zz10NAr8h/uBUJvYbaBXtNwQOlj8xwn6jt13rIvYbqJv2G10j
1jLgNyo5Hntgv4Gcs4algGcLM8mXxthvSE/MOor9BjpVtpvwrJo59hT8hpzW
2wLsN5D432YSzx7vbMTAb1y3fRCN/QbqmuInPM8EvzsNfqPjFOtZ7Df+F89J
zw60gL/9VdFsDzxs+qVO4nlzstgXwNljPh8CPGzsHOH5+sEpsr5I9zrBV30b
I3hqugFZryOlfBjwB7R/vmYvQXAJu59kvTjtn03/Ot8C/3y1cUAVeJ5L+2eu
Dnc/8M/Op8VTgedI2j9vrD69XR7758hd+qnAc8RTeyHg+dQvCS/wz/fNDn8B
nm/S/tlZ+nUG+Oe0RcaPgWcfmyDin71iK7brY/9s9X5bHPAs6XeG+OfEUBkR
Q+yff1lSYcDzfuPJOODZ23C9D/jnJPEfbcDz9kNrSDwLKya1gH/2W74/A3g+
fHcd4ZlvnYqONvbPBz3DIv/L836JT7ehXjt3IO0YrtfQdroeLJRNugM4/1Fp
R8DL6HrQOuFmHOASN/4SfISuBwXWryH4fsnLBO/Yf5bwzG0gSPC/L2UI/oWu
B598e2IH9SCflNUhXA8iBW1JUnff731RBvVgq8Gu7bgeRE3HvigAzx4j5a5Q
Dx5ym/kJurHWqJsPeHZn+yoP9eAij8rduB5E87KDiW40VXNPQD2o9yfPAteD
iLedQx14NlP+6wD14MnfmW9AN+7wmxF9vl+p5Qn1YEbXp7OgG4+0PhGeo6N0
c6AenP6yIhR0I7qEyXPE/Ph1UA9ytTzfhetBdChIjPCstipjCdYNaoVCV8t/
deNH1uUo6D9c21Uw3wrnKTH/SsJzyrhBNOB1D+0XAh7oOE34OdS8PAZwu7hs
gu8LkWfq9rNssn7VnEmCy9H9DR6DMwQ/zbaU4FO9zP7GcpX+Aehv3JAIS2LH
edC2egHJg66/cs9Af+Ou2XqHAJwHH32jiH++zvHdEPobxx9f6S/HeVCG7m+o
37PZCP2Nm1u2LyvGeTCZ7m+8fWLwDPob7sk7bF/gPLiD7m+0HXowC+dBKn1b
gvE4zoPBN1OJPr95G82A/obLvGhdBs6DV+j+xqMIx+fQ32hOuk7p4jy4SvUW
0Y0vEnEt0N+QvriUdRjnwd4NHMw+UrbVMehvKDuqxbN0y6J/dUoV3a9L+LzP
zfQQ/lt0v+4Z3a87bLjgkb1FNGOQ7tfNG2T263KUzB2O4/XldL+OfzWzXydq
POB8el804xLdr7vEw+zXuaus07i2K5phQvfrquh+XdyKOrF23puMVrpf957u
12VGH+k6sSuW4UT36+bIMPt1VNiyNzfaYhmv6H5d4g9mv+56yrdSwIPpft3j
Gma/blRtvEdKIZbRQffrMuSY/ToHvwmZHe9jGHx0vy6shdmvq6sSX2qfHsV4
QvfrLpgy+3XCXNKKisevM4Lofl0f3a9boT/XxDgtlOFF9+uK6X5dqI+PehH7
4Kt/unH/Z5Qo1MPFNmIemVhHZcfjSTwHq3tnQP3m+XRpIPYLlHVtGeHf+XW2
GKwXf77eBdaXVe0g+N9b3QTf99DIGfAhzqUEV67QyoTvWXFrdQB8T8nMIcKz
8JU/ZH29OIsnrPeF8Me4nvwL8nftlOcGw3q3Xc9I3uTW51gF639H33CF9YEq
AWS9uXzIE1ifdz2N7LN2vz05dx3L8X08XQOU4JLOZS9OlVOWLGoqA+nNVEPC
WN9Xq27KoVBKY2NdO3W3Z1QV8PXJXbqJb4co1dUbotJUKqlq1prVYQMfqS88
0l5nu3sodudABTOuTkqMS1QccH6Xs2+3tA1TGX5TEi4KVVSdi53I4d1FlOHK
XUEFRb0Ux56Vx6YYnZRl7oeVgB9WaX6rt26EGpMU6dbzqaI2rJd1X/n1Ioo8
Z7ju7Jw+infRl9qjPzqpNpNLtwA/69A9GV4+TKlOv3zxSLCK0kjUk5if+Rrt
E3BV9n/SS9Wz3RfzeNJJ2X7zWQ14pevZ9JNxQ5SCwKc/N+dXUrttDETbl9ei
9KHEygcFPdS9cysGZEY7KJ/k2RKAK7uK7dkaM0D9qkkzC1Qsp2K5zJQ3NLWg
h3X7t4uIdlPT9z65VCS3U/LNSwi+IEZfgf1CL+U6aiUrYlNKaQRtStr6rhNt
5UUXIlM6qQPhP90umbdSfDvPEHx5tahEemMnFfzBUH2fSBF1JXPpo8nHvShV
tPSOftdnytTNe4S1+hnlNZr67EHYEOpz2Now8bmV+rT13J6/9g1UYeNMOqy/
81hjb/iFeqps55lz43YB2v4CD8j64h97nKCvMa+Dv2gTzof/9Hl8PsvUXlwP
d7BP8/RiHX1x9Q+J5yzP8ySuojTWkDgMKssjuEBh3m9Y/7ZIZhms/8l+icRb
Wa7rGOC5r9MIniLNS+LNcVvTX8DvrL/IB/jx8DSC57qU/thUU0+Zz9W2cS7t
o9YeeK4OcbXxY6DbrIBGKo+j78fn4AFq6QY9Zvw84tnv49NEyckcdksLHKRO
uQZJQ5xkKlDoxOsmKkTi/kWn2kFc7w9REA/G+wWEdRyaqDmlggtT3Qepn4V/
ZeHch7zW6s+1aqQc2ZMuUDYD1NZ+S3LuDuefbasOq6fGnltxHvLto8Z6xsk5
Gsgy9vu9/0Ttv9pxY3VyN1WfLkXOS67wnvEXqRqqwYXz/Kywd1R06mPCM5/0
hRMs6R8oReEFJcssO6h9Yb3kXBIezJ/Zz6FJ+U2KSHvgPPmPf1nfZi4LlRCG
YcU2ot/CsW+JDvzKl/8FvEX4KRPeVn1OmQ34Mdu4+FPrQhhnDN2IHl+cTCb3
l336kYeRQgjjw209gtfyizH9xp/2lBvyIYyTKUxdz98iQvBl6gELQe9U1ZRs
n94apOqPGKkB/7LsT6MaWq8yzoz6GdZHDFOiLimrgP9Ld9/dANx3Uxn3tbQR
yjtPkdzf489GLUUnwxinS8QYKTMjlCvbgRjgn1plZwE4g3pza2PkCDVP00ca
+J/MLo2A71mYUSd80m6YWj1fYBXwX+azQGdWRAijZt5714ltg9QHh0zC/7Pi
B++3vw9kLBmrHtsr1kcZql4i/NvfuV81tamEquj32WvEU0d5rXhE+Nc+kZe9
9vBlRsznR2IHrLqopOwWwr+8bvYq6IMkmyTM5sT58x//UR8fXtyPfUNt1rwX
4COeXE4k/F+85KdzKDOE8VuTmVeVHjHz6eTm8vOw3qDfNBfWW44/JXzeSLTx
BVzsRhv5Ho7dsszfZYxVLwDe/HSQ4G8L3zD1nOEVoF9Tj/TuFkw54fhfcC1f
A/jvqleQmBPQiAwym0Ig/p2DXooA/9canfnP+jShaL617BD/vGqSQsB/x7D2
ZffXTWhhQgQvxP9pVHkc+H8w/Lh+owP2NymfEh7i+G+b5S8J/LceOPWTzaoR
6W9TWw7xr+7iIw78W2fJd34Iq0f5OS/T7HH8Lzf6Q/gPmLyS5//+E0JDmhsh
/gO8rAn/55T1XsnoejEOZTH1RobWmfxWpxus6R9Q6fGecxD/7xiVhP9ZJhVd
EYy2V096mHn1Xz4dvNaiCf5Y5vvcRvDLm3inCD/snasJb2xJ9c+BN2evhaS/
fSKtj6yvW2DQBOu1F0iS+P8xWqYFeLqrH/meuvlORJeQWwZZP4vzLsGdlaOY
v6+Zv/bqtupG7S+v++ngvLaaTYXoz6Bk2uJz3T3IRsHvxB6cvwwvqZH4Pzvm
u7qwqBfJni9K+ovzFGcMO4n/3WznP+B8hPTD1nNCPrrtlWsG/Bdyfv+A8w6a
UVe0csd5Z9CvgPAfZdt08GFBD3r17rws5BfHA2yE/7x59k04jyAjXfSqHOeR
VSeTCf9La+9O43yBpDl71S/ifHFyuIbw77T1o9TMphL0bmsTG8T/N60kwn+a
+q/k359bUVpCyZ4/OC+sty8m/MuNe05A30TwR+E18I//fOP9b6q7oQ70j9rK
9hj7BLWCXBK3jRM6hDehv38agLdfPU0E36t1eg+sX/iNQdZ7sa4g/Fv+mU++
p17EYAHgJXpBZP3qYgOClw/Yzgdc7ogmwS18p69gv4HCsx6HZ2O/oXRphxbw
v3h88jT2FchwqdXH+9hXXGLoE19R+baKbWvbMOKdk6x5DPsH8cz3wsD/n/m/
2fTXjaC9+jpTOtgnzK34ehj4H31brRRRPowq6sarH2I/wOXpIAX89zns6cR5
H91RzNGIwnnfxDKW6L/V0JMAnN9Rl6ZXw2Wc37kPNqoA/zsFe/fjPI6Opdjw
rMB5vH/8B+G/eF7na6z/aJXR4m2sWP8Ff9wj/MfN+BjhPI6C5/PlWeA8Xruc
l+Tx4tmySVAX9XSZ7HP/j/47b9LaAfzI/mC1wfwgC0Y04Sc/pH4X4NK6hYS3
5RsGCF6w0McE8H16lDWs/8f/BhVf8j3rr/fvA3zR9eNkPVUfT/Ddb3r3Au69
zZTgOXw7goD/gMiKDsw/UqD5f3Fy1kngn3XgtPQDlUr0j39d/iYW4L9X90Mi
5h/94z9v+ylW4N+7qMlqo08V2mB5dy/wX3MlTh74d7wQsCZVsArdH+Yj+t9R
veUL8H/TbSYC84+20/xbO+VfBP6Tv29X8FMsR0to/t+8tLIA/oe9vx/E/KM+
mv/H2yPKsS9Cxos4RqffP6OyGu8T/p+ebtIH/p+GpExi/tE//qOtjIKh/p9a
sOMB9R//42izSw7i/IcTywCOc6RL68+UFivhTcI2hpzLP/5DHQbJ+iiU2g/r
N9gGk/Wbo1oIHirExBeK3iX4jr1MfEtaFsGdaP15WLPAEfSH2+hNFNYfJEnr
z9qBEVbQnxcy05ew/qB/+rOQ120Z6E+6td1zrD9IdlOIOPCv7XOpGPTHXaZE
GOsP8qX1p9nqbDHoz+xXpsex/qA+Wn/EslX3gP4InW/WxvqDjtH6Ixrz5i3o
zyPL9++w/qB/+vN+4ZbvoD9ZLJ/Msf4gD1p/9pY6lAD/WWmTGjPvn6F//H8P
eHsN9MdroNIZ6w/6pz+KR48GAP9Vp7k5de6t+F/dms8vYg46/8Olvgj62Qbd
KwjPiw5vJrztE2Ql5zIatpDgs09HWsD6427fi2G9RulT0ocpOBJvCfhnVhXy
Pex0/m1p3kzwlQMmBFddIEbwo0KGVpB/1Tf3zcP+E7HT+bf/vMav2Tj/8hyM
i8L5FzkPDRD+Zzqs+8/g/PvKZYIb519UMpmzAvhnvbpuF+TfOXw2ojj/Im7r
1LvA/+4G83TIv86Hr6Xj/IuWta0l9chWBlsp5N/CD+fFcf5FLuJDxP9s1vyW
A/k389r95zj/oqFRTSXgf5n5zhjIvzORu41w/kXHs98R/t3TOHJBf/ZcOXkM
6w/i0mXWBUclZ05B/s2V3eWP8y/a3ZhL+J/nE3gd9GdGZsgF+rv/4l86NHud
0Hp/RgTTf6IVtP8sk/EivJ132UR4C/8mTnA/B/9wYWl/RhnTfyJf2n9KXLbd
XyLgzxC4Q/wn+kj7T7OBZYahXP4MxPSf6CXtP/3Dr12pLPdnhDL9J6qj/Sfr
o7ub1ugGMlqY/hOJ0P5TyOHNAvf9QYx3TP+JPGn/+ZHn43zAG5n+Ex2n/efj
2inBfdOBDHEd4j8RG+0/z/yW37m0K4Bxguk/kQTtP0Us5WKfOvozBNmJ/0SV
tP+8LaTDtYz9MsOM6T+RPu0/T7FfmQ35V7SmggvnX1TBk0z4Lwn6Wykk68uo
Y/pPlED7z9iL5WWQfz0LvOPgd4x//uenC+8K+D2y0ewmJ/b5aM+3U6TOOqi7
iy3+lx9jixbz9zpF2n9a7G8VgvWR3y4vgvW5MYIE15gbJAy4cw0bF+C/Bplz
F4sXZBD8wNYosn7e5p2Ef9eZQT49XH+9vzJhBvE/qjmX6M+quJEYqL/iBAP7
If71F3FIAP8/Q09fhPor0vvRUYj/G5a+xH9WbV7eA/XX7vsLT0P8zylg+s9f
jc36UH/tPh0zC9dfaMPdlDXAv5KuhzPUX6HrjnlC/NeJqhH9Mdju6QH1V5ae
1Bxcf6GQHyGE/+pPUt5Qf8X83nIV4l/lQj7hX0EheM5Pb3fGY6b/RGto//lc
bcFVqL802sMYEP/uOnGE/1XmWskxBxpfdTP95//i/9G2LQjq3A8m2h7wO88+
um/DcXCGnIvpJmHCm8NNZt9mVntiAazn5dl9EtY/UbtB9MfjRT3BD64JId/j
SPdhLN5ZEHzGv5Hg1XS/5eL9Y7+hr9KrWiq+Eet/rbkr0Z9GsZBA6J8sbnMV
NMP6z/3cTBL4tzpldgv6JGzdgbumsP7vovsk+6J49aAfol8QzgD9b9bbqA/8
mx7P0oe+x3n2ooUeWP9N1u8i/LsbNDRDf+NG7M9PoP/fnh0j8e98LMIK+hiO
Yyv3VWD9N+yPIvn3+7o5YdCv8GlNN72E9Z+b7lcILbAbhPor+BTrLoj/7BPM
+Lew9RqFvsTNi1fU/2L9l3mYTPjveFOzDeqvhrIzv/8b/4px+1dDn0pHbnJR
Js6z0nQ/rfXHVnIutkJbCG/GZTmEf84nmlKw/jV7Lxes76f7Zidn1RJ8fsjV
xYCfoftjg7nXCd4Ye4TgSiauBLc4r3UA+l3P5bjTcrD/MaX7Xcp8lDH0tY7b
REulYf9zbl4/qb+Ma7fWQv9qzXqZDGfsf+wPXCf8P1f7UAN9KpN1L8/qYf9j
Qvep8oOyWLH/ocZ+xG58hP2PCt2Petc3kgV9px67+uCb2P/soPtOJ6/I7IP+
ki7n+GAA9j/X6f7S0YsNytBH8uU3rlmJ/Y+UbyfhP5ljuQX0H7K8n1vNwvp/
cRYz/rdx8UtDHyn/ysD3vdj/BNN9pJwj+Vwwb+H+RZHH4z/6z/eG2XeoKD2q
vcc6miFwi6n/bEHT5FwCS8OWAG9FdN/y1dW0ROhHpU343GatfoYu3kskf9fx
E7Pe9uvqvJWgGcE4+Yype6Ziuceh7/Tn1/4tm3De/3fuOhnMunG/6a2qwvTL
jH99Krcy5n7WC012NSnGagvT+4k/EH8F6kCe2Cwyx2h3kIPEiVnCcYJH16eq
An7B0ZOcb0fxAJl7PHnwgRLgG5yZ8zk7eV+S9b8GT5L1gcL8ZH1EeNgHqMNX
mk7pGmBdZH1oSPqcteoO+6EOrz52qB/X5dTig1dJPFzQ/Pk5Fdfh8908WnBd
TuWtrCT9qLZlmR2O0IdSuGjugXXxoxXTD1wtMXSFOly3RDBZF+ti+IFcOYiH
iyr7+7RxHe7e/TdvHtZF9pWnyH1ctzrFF+rwpvGkqI9YF0+8DiTx4FT/hh/q
8M/zPQ4FYF287PCHxMNMLZP/lARhdw/O69qeNP8rIlf4w5zTbl7RgAlNBtVk
xZzDuby6zAbq8z+9h/hnYb386pZG1ofzdpI5yej9NmQe8kYJk/8Wbi0yD6n8
3ZHgcjrM37Pa3iWT9Uo9Tj6ANwaHE54fNSYS3K27nMxD/laUIuv3pzipQr2t
8yEjB/tfamd0Hck7bsHGy6HelnW/ao79L9XKf4Xw3HAUGUK9bWj9+zj2v5Sv
9SEx4PnFq8bMI7jelks2FziH9S/RpmQUeD66af5sqLeH9D4tD8D6t+dxK/G9
KZxZn6Rxvc0q+/sB9r/UodWBJO/YrHngBPX21oe9gqJY//Qe8hHdY/d7kXYB
19siAZJqN7D+hbneZPZvj3i5wDxTf/9H07lynyj/vLWEz5dXuFsncb3d0xgz
ZxLrX5BDCeHz+vRHMt/Yt0SYzCtWiqsQPoNMlMMB71DIJ/jptWdIXggdqPAH
/GlsDcE1nzN/5+WLmBMMuHrAUYI/2txB8GmWEdanuH7ejsxSQM9kRIWJjm3d
WCmagutnttwP10HPKnv+rgQ+p7KeBR3B9fPJyGlhXM9Rjm2BssCn2C2d9RSu
n58UxIjgeo662GuxHfhc7Fks/ADXzzW1aCvomdv7FHHgc3udW0Qkrp+fV1z6
A3pWbf6a6Jh97lzTS7h+vjURFQd6Nq38l/jYWZyh2YK4fp7ynHAFPfO4N074
9NVXdxvwekvdU7jgffPmF0o2WpfwKXBxy11zXD8z8jj3gp4lZpYRPiXMBb7A
nEDaub/qwMP2/dpEB2aVGXcAvq/Wjcwrvqt9ReIw67tBE+AOH6fIPOSDwA+E
t7i7UuR7Ms9tJOvt5ZcR3Cf++JHnOB8E8PC6A58CDw1JXbwvLrj+Ic4Hi9b6
WAGf66WDSXwGmNXvdML5gCNSoRfyg3GQIskLa54sXb4J5wPLs2t6IT940n2J
6AyeL2k4H0jriPMBn2cnLokCnwYdfBoxOB+gaPlSwuc+V8Jn5NbUTH+cD9oc
VZyBT+0UCaIDus2bS4VxPlhzNFMP+DyqvJnwma+/xtaC/wKjcwvzd616ek4p
695vXsgHaZeyVYBPUQFukhcUdN6Q+UYPkYdk/vDFtwYSn9L9fWQu8enqcTKv
eCo6l/gcpSP9BDfNyCHrc9tDmb8rKU4S/LHnYrLe79ZsgrM+jOyG+pb763sZ
uO8XupdoAp+Z17Ibob7dtSYrH/xOkWE68flbb//kAn+z1mX3B/A71z6mkTrL
cvzkafA3Ve5yPuB33poyf/dJsb/5Burbd4kLzoDfOXjAjficl+fW3QB/s7lv
wWK47w5H/MjvOOs+HxUGf8PosrgKfieB8xLh8/DjP1+hvv05S+El+J0PHzcS
PvuCnuwZ8nqLXjemskF8Jk4tI3yyG/i2QX3LcXqvGq53qfN2hSQ+nV+uJ3OM
SR7mZI6R1+kA6dufqxkh84dyKxTJvKKCzxi579sC5hDc46Q0mUu8cptZ574I
20FwF4O3ZH2F1EvCJ8dUlTL49WrlC8ng32dxnCB1U5zOqVLw69N8GYq4fqUK
nnST+HSLNdIDv37ub/8KXL9S8w4HCwKf1a5mO8Gvi815FeCG81Rt5k1VEcxn
5RHBZqhXVX4pdIN/dzdh9m1ufPDfBX69YNnm2bh+pRKrFUmeEmjU7YB6dbH6
G1Zcv1LGTssJnygg0BX8+pzk/HHw7yKlioRP/U81/DA3MOfdy7MwR9CxjDk/
0Cn1PBn8+lGu0R/g36skGwmfWyuZdaln9gpX/8V7GG9uMvPRJSNm/fmaKpqj
s3oPo+E3sw6to+tPycppb0f1PYxzdB16+j6z/rRNzj/boL+HcZiuQzepM+vP
kVWIzCUq03VowHdm/cmtZknmEu87M+vQE3rM+vPi8RtkLnHiJbMO9Sxl1p9B
DpFkLrF/LrMOfU3Xn8VfDV8B7qXBrEOXP2HWn4IrSm/D303mYNahNXT9qeLD
S+YVpek6lP8Xs/582f+MfWHDLsaICrMOvXe6/B7Mu9QJrtj+E+ZfprUIn+H1
zPpT0eJHeUPrdsY+ug6tPhpM5gYNfh8hc4O67DmEh1oTGzJnKFV8/yPgSfES
5L63q3qS9beMK94BnvPelVkHWZ4huMSSW+R7/sWn+QMPGYjPhjrPahyfiJWO
z59X7uZBfDYFZFlDf+VffE6OflaH+DSdlt8G/ZUMaSFy39UL4zdDfCaxm2bj
+EQ+tI/647ryI8Qn+6wHXNBf+Refz9cGGkJ88h38pgD9lX/x+Ss6ux7iM6t5
Uhr6K52ej0g+sj381AHiU2OwTxD6KxHWewifD4WqE4DPaydKn2E+keUNbcLn
vrorcRCf5qWpS6C/8i8+y5KNyXzgva+3yPxhDq2fr351EpxqkSRzgw/WejHn
VSpbCb65V4DgObR+fl6cQHDrbVkEv0jrZ+/Ul1rQz9W2I+rQL/Sl9TOlvbEU
9HNFhn8V1k+EaP2cqvgxCf3B+LYv7Vg/UfFZeeKXAq4fOgT6eSJKLgT6hW20
fiZqbM8G/VybrBkK/cJ/+hm25s0F0M/xOGMR6BdOPh4g+ehyNmMh6Kfv7+O3
oV94l9bP3Uqzy0A/PQ8GlUK/8D2tn5GjlfPgvt8cqI2AecN2+r4/Wve9BPTT
oQZtgX7ht2ZWko+6zlaGQF7OKeQic4AGhcy5QftJCTIfeCkvhOCBRszfnXGI
kznD9NkMgqd7CxN8MlKBrF/Ns5DgB+j8rmfevhzy+2xZ4dPQ/xZt2ED8kt2J
ujOQ322mb9hB//vdrWTS9/4Y5jjuiPO7nYvtEM7vKPXGDMnv+29bMHRxfhc5
YDGE8ztaSNd9UnEGAZDfv/BHC0D/e3hRAPH5Fh3+jdE4v1ePvqyA/neK1nFJ
4PNl8/YDkN9DkvJPQP97PZ3fD+konIT87hpjbAT9b4E9Jsy+k1+EOOSjr3z9
S2BO9vog0y89L/z8yRLn93sxeRrQ/9Y2LGX6+eHEZuIzH4iQeUIvkSCSj2Zq
PckcIOO7HpkP9KT9Z8hvWYI/lGTOGWrQ/nNAPJfMGX6pTCR4Gu0/fWf3WIL/
LMs3TQA+JWj/KZkeFAL+U2Rx+RXgs5z2n90tvT3gP28HiAvA7wljDc7kd4QM
adV74D/3x6cKwO8J+7y4dYHPzddNT4L/vPW5bjPw2W4+vgr4vHBjuB/8p/GD
I7+Az7e0/5SZ9EsG/7nRfuNN4LPVsp34+ePKTXOFsP80P9riBHy+C93O5LPp
/b2Ptd4MQXq++59fqlJZ0gb+03T71B7g89IlZh09PviCzAf2ce8lc4MRdH10
uPs3wXfJ6JN5vzV0fRSQ/JjMAYpXuhH8E10frTmtQfBzLPsI7sP5jvA/2/TE
ZqiPjFb2p8J9Z1ltQerQ1B+71kJ91Hz9jz78PtBC10eSJ9dZQ31Uc+SLNfw+
cIauj4yee5dCfXRt9yAHro/QM/p3gQzfeH6oj0y7VDlwfYQWTT6XAT7H2bT7
oT56wjIUA/f9m9qIGPB5u2bgPNRHi2xTFuL6CPW1lJH43FqZVQn1UfL+wzK4
PkKhdH3kGKieAH7+74ne4xCfNmGLCJ+nGHP/Qn30KuHiENx3f7o+WpljQub3
TibWkfnA768vEz4rF/YRPPPmXjLXd15vLuHz220PgjfIdC4AnKWhh+AuRoUE
L9CsJusv03X9to9ZTVDXzzKK4MV1PUo8IEX6bIeC3B2grhfdvf4l/N7OXoaI
fi6yaG2Huj6/5vhz+L1dmKOI9Dm5Tqwfgbr+3pqQVbiuR/zHm+uFMZ87Fs/z
gbp+thHDC9f1KJ86yJwzKTIcg7p+y9yuYFzXI9VPPYTPMxyhwVDXb00JdMZ1
PTpK1/X8ZaFiUNf3vLPQwnU9yppkzgs1JbhegHoz4QiHJq43kR9db25lqT0M
9XvGDuFJyEcddP1ek/AjCOr9kY40Flzvowa63u/0miMOdc6ZHx8dYB6MW8OF
xBsjkJ3gpRnf3QDf/UKL5H0Rgx4yP+b0PMIJ8Of53SRuM26JEzx/9jSZf5ud
WE++R1G6ZPjb2CBVz3h/FrlWUDtTlpN5+IKFPDbwHiwkI/DR1/JKqmBpGHl3
wDZ43hreg8UVBPkqOVZRwf2ci2AOUDV3xzV4D/Y1Z9GjftsqauODUTGYAxSN
tzgI78FYNjKqtqRWUvouIWTe0lTimBm8Bys+4itnrFFBKed9I3OAJqWO2+A9
GGPhouitg2XU8uJuMgfYh5TaDXnqqLrNW0tmNpVQR0WZ/as7ixvIvNO1uvQg
mHeaFhZkvnOx0SDzeC88Xci83IbIxYSH1SJCZI6uybqV4KxJi0m8lZ6qIOsf
jqb4AW65To/Es5LurDvwjit421WrQ34d1BGtdWROMj5X9wy844rW+/1OxrOT
WmH/gMyxn2yYvwLecZn/fHVeqreTWrbiDHkHaldw/jy845K7baX5E+Z/WVeT
uV8XN+QP77iGF7rOzLPrpJqKA8l7AfOXl1ngHVfEsY4DodYdVDyVTvhJuttW
7jb7K7V33l+LicI2KqGeQeZ+5/+WL2YJe0dVVHT/gf5ikSNzriBvkvsPzCPd
CnzAD/NIO0L4CT9rmzTHAX/ctG454PrHZEn8lP09MAG4dsVBst42/DfhpzVs
hHxPLY8wwed8Z/J2vm+ZI1tZA3VIJdDjUnE/NTtJnfCjtOA7F7y/EjDi5OwQ
GaTmXmoh77A6F4iGlmU3Ucmq3xphbpfFxYnMRe91OfW4ILWJylZcUwdzu+0u
66WBn47jXhzw/kpwTEz/K8sgZeXup0Hip+EsP7y/2r3qTjDM7cr7riL8bK8X
o+D9ld19P821ar2UUswtEj/bgrTuTr1/Rm3S+dIMfdAtoSmEn9yBP0/yboUw
Wv8y521/0u+njGU2/H0WEsJQGWbO236g3091bhdQsjsfwtCTZs5lBdLvp/SK
zkQtmhvKSOZjztvuDmLO2c5rvEbmtQa4mPO2CibMOdsneQfIvFbhUua8rUYa
c842pyNlL8xfNaxhztuaVTHnbA++nroO66+MMedti+n3U+pCF68BHv+JOW8b
MMKcs/1wTJoN/m7lWua87b5rzDnbfSfv7vsyO4RR2Mqct82g308VHjgQxFL9
DIkMHc4Cfmyb4wk/HwskLsHviYstVMgc1K4XzN9n70nOJnNTTy5OE9zMVoTg
G87mEjzQ5R3B33dKElytPZHg3K8bCF6Uxfy92EDYiBvmvK++f7cI4uckryuZ
9xbpyXgH750mLTwTYO57lshKMu+duiF6G8x5cxyecIH4uWDWOrkU7lfLzlNF
qU2ottXzCMRP3LrX5J3136ePS3MmGtGihGONMPc9xuO6DvixODmd+yu8AQl9
CJeA+OEU3Enmvc1le/PgvVPo6QWtMPd9zd+U8GN9V2YMfq+9cDLzAtyvlPI0
wk+MzEcybyOamUTmlB7LHSDnXtekQOaaDH3WElzZzYZZF2z8TNan7zIi+MSX
fIJfaDxO8O3pnwjevSeT4M/MnirCe4OeZrYkeH/w4LQLiR/GCbtl8N5A87bP
AtCfvMHItcBPxaWsV/DeINZH4zm8P1C8IbYY4ke/024FvDcIfmXnAe8PRD2P
Ev3h5s4Ug/cGj7ybtEB/0KcvRH+Mqc034L1BDvemB/D+YExqgMTPbafo7fDe
IOPA10x4f2DsbE/4WTd8WAV+T7oQqOswjfX5ylrm/dLj3UjmjizdIsg8zKol
zHfK5qNbCC7o3MIB+BpeIYLnBLKQuaNmawVOwEPTHUmcLHVnIevZKlYSvFzH
m6yP/LtWHN69PPjcVJeH81d222vCj1GUdhS8e+n95dnYjvNXksVTdeBne+3X
KHj3svem3r21OH+J7NjGCfzsGgqugHcvi9/6VHfj/KXvLqAE/Pw0G4+Fdy/6
p7NZDHH+EtvIS+JnbE5UCLx7UTu2P8YA5y8Be17y/uWeaPk5ePfCOi63yQjn
L9+qIqLPL54yf+8cTLzYvqBhE2MB/btJabALmQu6McZD5lX+8SP0bD3Bfe8E
HgBchubnVUowmW+JZN9P5oVCaH5UkCVZb2l7mXxPZM12sj5aPU4Y+FGJOaWe
71qBntH8qCYKRgA/FTlnlDvKK9E/fjRcdSKAn+Llk2wKjlXIu7eD5Hfbr7Wv
gZ8c7UblHtsqVMJ3TxH4sbN8ewP4ib6ivA/zg0RpfsJ6tQKAH60EyS7MD1K+
pUL4WX5ExBv4mRHaEYn5QT5b3hF+BtknZSF+srYcDcbxg56aMeeyuK7pyMO9
eJvJQeZJSvMOkn8Xi99vMmfSvNiE4BdkQwnOwfOT4OHnHhH8q/AHkvcvDi8g
eKdkPMG76Pt14bvlKnK/auqz4V1gpccE4cc9qokd7teq+8HC8C6w+RifMvCz
gYfzMdwvGfH6cny/kDR9v+7UjnDC/eqbQAHwLlCQvl+MjR1L4X6d9GveDu8C
52kdJ+/UIsde+sP9GpK/8BLeBY7S92tV3SVduF9rr2YWkneBzcz4mRx99Qn0
p33I8irMj2R4M+/XW91XZK7GPpblNfR1rn87QvI4d9AmMgfSdSyazIH43n9G
/r2cUScIvuE1cz7kHa3PQ25iBNd+vp/gxbQ+D+if7oT3qMnWPALwPvUErc/L
39nHgT5XaSx7BO9T/65k6nPavUxB0OfEYYY3vE+VNwrkAX6KSniMQJ83ZO13
h/epN2l9dswPigJ9fu1l8hXrM+q3e7ge+PnOX3sF9FmHUlKA96kLaH2OXmFy
A/S5xdOsF+sziqD1OalKbyPkr/ARi+cw3xSd+JDw87u+ueH2oB9DkX4n/Z3O
79t64uepfPVjBDDzO3pL5/cbL4T46nj8GdeY+R350/ldN9d0x7v5/ow/zPyO
TOn8bunmbwZzKQr0O+m1dH5XvZYgDHMsfPQ7aVU6v7OU2pF5GA36nfRuOr+H
XzUm8zBNzPyOCuj8nmTeJ7cpPpAxyczv6BKd3/V54w/+8Qtg8NDvpM3p/L78
8dJqR1M/Bg/9Tvoxnd+Plez5Cv7HU+NLPZm/o/2PXm4rmZeQd9pM5k+20P7Q
8utSgh/+/JvMUWQ5m5J/71jwKjKXkjjNXJ9X0UHul/K+KIJnCpaS9bNofxjk
Uh0O/jCw8PUxiJ/kAiN54MdtkbE6+EPpw/6zsD9E35U6NYGfZDSQBf5wxY2W
DxA/f+LSf0N+PzbD1gr+cFcvFjEcPysO8MkCPyKrXquAPzTkP6gJ75sDrhZo
Aj+HmmK0wR86tub4QvzEUnLywM+R2rSD4A/NnW4qwvvmn05vCD+dinEd4J+P
7NgwAvfrxUumPr/5o0/mQJzm85C5kQm6vojcnUjmHFwvTZA5h+HuQObv17s4
yHrP3G6CzyQyeTgSrUbWDw5WE9ycri/MYkceQX0xc2q3Ify/EYfo+uKRiNYV
qC+UwzNzQX+W0/XF6rKctVBfSLXsPALvkv/VF3kapWFQX2ycOyaB6ws0n64v
xseux0B98XEPTx/oTx1dX1jFy3FDfWGUorsV/t8I2R28hJ95i4froL64Nu/E
Zvh/Ix5ubCf8jNugPqi/NHqTE2B+SneSWV+IW/eROY3yak5umDdYQNen6WyB
BD+rUE7mEEaXMX2RHRIhuNvt3QSPfMmcg2rf/Y7gzW6I4NMJzPpU1+X+T6hP
M3Jt+XF9ihRk+wg/u7/fsYf6lE9gPoXrU/T3Rr0G8GObv8Qe6tMOpWFhXJ+i
S3R9evnj3BioT3X1xw1xfYo06Pq0IN3uKNSnK/l/H8D1KdKm69PHGxz3Q316
657BayOcv+To+lRYI28X1KedOrcUcX2KvhuvIPxMHTwckBk6QI0s3d6SubmG
6pL9vi5yfSOl0iSY6Lt2iFrve2VPhVMttdq0TFDdp5oK+sFR58UxTF0QnT9/
z9xP1E0pFyXXnpfU3pU3uu+uGaaMepblaq34RL0pV9rEsv4Bqk8q3u4WM0SF
vhJ4pfW8luLWSBR/EVGOHAJDVY9erqZOmS9YYCmcQ0ksHFerLRtG53cceXQ+
qYui7MdjfPHn1F0FFdjP3mVHvKiWr1TasY8ndPBnGWMr2c+I/M7fQb7dlMyI
yFQw/vyxt2gd7Gf6UNiHlbHdVLNZzwcR/Nlb+1kd9qNwd0lZy5puiiv8aNkX
/Gm9gncN7OcR24uTh9AbaoNzacRh/Lkkd4LsR+q3jU0G5mX/c9tx4Gmuh4Mi
7MdLKvhJGeZlYr7fsguYp6C0BUKwH9vxM2Y7MS9PLqjvOI15sg9rk4D99LkU
TaljXrbEfbWNxzzdFBjbAfuJnz62XAPz0tDb8Bp4MpdlXw370Y1ezmaGeRFX
5vcGntJv/Sb7ic4oa6gSf4lKz2ZOzWYdok7VcCrAfoYsisrWZ+WhG0r6q0Zy
h6myS/YCsJ9cmSkf3gv5aHp/ndDRuyNUUo/JethP+0D0qXMJ+cj+14JXVsUj
1CKrp4awnwku42s1vPloh8kUj6PUCKUywr0W9vMhs2nEwPIuOm938nriwQ+U
3AEmP7M/i/3OWNSKIuQrrr143kv1/NYh8aOtVa5w1L0NVVvsdXWU76eeW8wl
/JhVZjzXH25DP/kZ1T9G+6mFXvHKsB/L7svNfqztiG3W7d6oxQNU2eKtZD/7
WDfYhT9uQ3st1R6FhfZTqmtPE37SZH1vV8UVIV2WLzdNEt9SVj+Z8XPvpFcd
3geyf20sivdFZZxEZD9qU+PP8T7Qko1UwRH3NopjfxLZj4XdNYGfo/0oab/w
Rrwvys/eWQ32U9B+Vil68QBK8959CO+L8jg3aAz7udpcMob3gfQuWw2FPW6j
RHckk/hZZHhmAO8DmQddEcD7ouo8mfyc3Gm6YA7rEDqyye/jG/GXlEQmuzLs
JyZddR0+J9TesPi2elYeJX5+GYnnnYOcsvic0MLr77ctuZBPHRJwU4T9OO+L
rcLnhHTlJaW8E/Kp+NF2bdiPiZ6VOD4n9P1ytdF73nzqZs5hBdhP8gvu2/ic
0DZWWxldy7vUxgEmP6Wv2apwHKPI0uydTzbXoIHidLIfBZ8n/fi+IxF9nqdv
nGoR7wIDEdiP2ISDCI5jVLw3xmbX3E8oz65QD/aT5JygiOMYjbu6LtBc8QmF
TD85BvtJ566NwnGMnt65I6z5vBYNpnPIwX4E58TZ4jhGT68OSZsL56DpbOZ+
futo6uB7jrTTO9ngU0CwkZzXwwPlS/E9RzUXBurwvUdj9sXLYD8du4Jj8T1H
c9727oNPJ0vmfa977e+K7zliWVK2Dj5rF7HYwH6+u604jO85EkZWUvDJIsS8
77e5EiXxPUe1o6Nt+N6jX0nM/SztDxgAXlLt8zOBJ+M3lWQ/q1J4zcsxLz/M
9d8BT0O+O4VhP627eNl2Y14SOG7NBp7Oae+Wg/1sL9HJAl62fb7AAzwZH/xu
BvsJkswsAF4curO8gSe975+kYD8lRiYdwEttgLsJ8BT+nRk/g0NBlqU4blo6
3/FAHI2uO0v059vTi99VcNxsS8jVgjiSTkAkfj7K/DyzCMdN1dJJFYijVNki
XdhP+Y7iw544blbnRNRBHPkr7FCG/ezQu3u9CsfNbs00eYijdezCkrCfxCId
fgrHjcDT+ASII5fzTH4YH+qiH+N79Su2ijUX37OLN5QIP+/Trp6Ee/WmcfIr
3LPAgyLkfjln2I7p4XslFChsDPcscKemJuynS+LtcrhX9bJzD8I9C3fLVoX9
BKjVJsG9Um7pXxWO71mveaos7MfYWvNNJb5X89O3rDTF9+yCMnM/g53GDqA7
iolFvk+wDq2+cpPki9mpIbqgO+nZn0+DDumaORB+nIbHEkB3nEV6WQywDm0x
ZtWG/Xj4Wb8E3TndsVLSH+tQ+L00fdiPpErsOdAd0ezmVNAhVw4zEs8q0e8P
g+48WRM/BDo0qsbU54srVffCfhLEitPxfqhLzVWEn6HhuVsnvQYpx5Hkt5xD
NdRn7oLV3fs+UcGVnemPg/uoYseP9wIWtlHv5baKA95jP6EE+z+y93IE3j9l
VXxuOew/UVby9sXdX6mAjOXXLuFPUY4/q2C9WMX0u1XZQ1TJ+cc6d8prKedZ
H9fyqJRRCz8flHdI7qeqSrhaZBlt1JLt1DrAn2+5dx14KNk3w495oGSu1BCd
YfXma76t002NHnNpvoM/1TNnlGD9Z+VFtYsVh6l1909EzRf9RKm1ig22XrtD
daapaHjxDlA3Lf4eiJ7TTm10NxFqw/j6YzlpwOfmvBMbMJ9UAs2n3ia0Wymu
m1JW5t+jjD8ztf21YL3RsYlznL+HqNrXeZ6ff9dSD6s3rH8Rj9AxY74B9c5+
SuRwVu2cr21U4HM3OcDZZ14fh3Pp+v29CJ8LteSKKblH7RkLuTd4dFMf4u25
tfHnjZ5dsrB+lkRX+Sz2IYple4rUatNa6lHEX9Hghx/Qb5bmudPz+ykD59Q5
q63aKMfUvQTn2/L+2UP0lbrh9CQrFX+KiSoRfK9d5mi18QC1yMb6cvTyGoqR
Y6HQfawJHVW+kH/Xp5fS/N792un1F+qt9uQ6wH+8srkn4dZFacz2CpXEnwrC
JxQBl5OLaZBc2EzNPGHv64ovpn6+Pa501nwQ7bhwwBHuV4nW1UX4flElN4tU
IX52Pb122h/HR7vIiyMZOF5YvHUl4NzFizit4d5NlPuPQbys3yjPD3Gy1bVG
dQGOs71Wmwsg7pafUZaE9Tp7eRPW4Dh4JJb+E+JiwHOuGpxvvLJqC9zTiwXb
LPE9pa7R9zSS3S0kFsdT8VkFQ3EcX1PnXijCerPH2ZJR+Lzffvk+A+ffJ3Wd
F84xbsebWXCvqU6fE/heU1fpe/1g0bfGeThuuD+ab1+C46j1TJcJrN/IOnRz
Nj5XOf7iJxr4nD8OWinBeel6FQWDDoSKvVHCOkAN/aiSgfPVbJ5XUIvjI2Vl
7wTES9wM21pYv+mqTa0EPj93Ja0SOM9FCWYicF5Ud7GfOD5vyzphndn4/EOa
JgkeaaoadAyfk5L+A9d4fG57rrCTc8m46z3/Bj7XgdSfNh/wOWtwd5Nz7LVv
/LlIuoGiChqjbePeU6fWO5Pz2m43bQk6sDPHeNZbrE934n8RHch0Mn//Z9Yn
Kk+4tvAv/tyb7ErWr7S0zyvBen4+NZQX6zn16AiXOpyvUTnnxZk5edQuhcNS
pfjf9Syam9xrg/nxFOi83C1tbfB1a2id3y3t9J1tbh5y26vMCetH+NeQeHBn
K3VbqpBPjaiVTVzTH6Giko7JwHnVia2r5cR5oT1orzr4wCd0XnC/fFZbUCEf
Wdw51QzrvTrb5GF9+kGdkPiUfGrjsJ/psvIRSnG3oyicl6Rgx8tTOI88cZmq
B994hc4jKau2OzxIyUcD/dIqsJ4/gEUD1hesUvnmdSKfahosmVp5FeP9jeQ+
jtQWDlXivJPAM6MAPvPeOUOSdzY/3FTkeyIfqd0Ib4f1pucjyH3/+fvGtrzQ
PMqDYZOxL3yYMs3fKQ7naBrQX1kUmoe0n2ZHAv76fTe5px2ubG82dudS40ty
1z3MG6RS7JPJ+XbbJD0x7M5Ft5J2CQB+Mu/cWsAlOz9vscbnKsIW+IgLn7PY
ZeZ59bVnpkHeybTTUMR5h7pI5x3/v8sPdOB726k6f8tqfI8X7bMh6+VuCi/D
dRRystn5EOqFu8PWJB9tzo2djXUfjQ4LnYD7KDXgKQznFVnJGQi+oqn8QSnU
W8MjoeT+Zmfbbsb5AFVEH+mB/PDl8HpyvuFPDA/cLq9FRV1rx0DvPRUDteG8
FPYpqIIPGZZ4Pwn1WYOGjyGcb4eujjfWffT37XonuO/cjfdUYf3sZ8dfcIh+
QpEttZOg66LZixXhvCZDs9rAt8xLtFsIdcpm2rfscaBYsL4j06NannDfg/ZO
ycH6GM+RmLrftcipSTwF7qNk7CUFOK+PUl5j4HOSFniegLpGn/Y5VuyFbljH
cV1+UQruu2zOKLnvS5+tsJI0rUWfzlNDoNOz9FNWwTm+YBVNkbRqQ/UP12+E
e6339Bw53zOmiwqiltegOV9vLoV7Wm7JT+6pWuQLHqy/KGFD0E/Q47TloUSf
G87mVeTeSaVWxuSMKwW0UBuTTpDzWhbOv1kb+5yeX/xJUNf88zmKuifYCu+k
okHlrBZYv+Ql8767WR02AZ8aEpbzC+pUIdqv/opn6ON8jBKXruyD/Lwp5LIo
nNeZGDEJ8LHFW66VQP36z8cuP7teDus4sjC+Ug+63qC9k+T93txHV3DeRVWP
ZNdA/h3/1UruY0D3qzTwuys1nxlDnetC+96zauue4XNFcYd+zoX8/jWhSB3W
S14/PhfnV1Tcffge5FuN9cw8++jrn4vgj2MbvEWgLpaoYdbFXJLyhfhcEfud
yGDQ9fs6b8h9T1x7uhjnUxS8asIW8mr0V2Y+fRnd6wl+et9AKx/U0Zedusj9
NXGUd8PnitZ51k6BrluHNEnBep/Z7PY4j6JPzz3nQD5dL8LMpxHj+YH4XNGI
5FZlfM7UTH4iwT8YbtLH+RJNekcOQP78JsTMmyIvNqhhvUYBLw9Sjli/B088
JvgsPd3lOI+i6zNzpiGvPpNxJOe1a/13Xgvsqw+WzNkKdfRKLqY+n9apbbWJ
e4/43jrLw33vbfAm61MPmNWQ+mi2nBSuAyjNEHVyf0dEb93G9xa1vG9hW4jz
KreSmRicV5qBxg+oB8zkjQJw3UQFiiwjdffxvj1CWJfRliXsb2fNzaPu8EiQ
86VuXRbDeRS1CXAevIXzap/qEwU4r9wrRtJQPyw2ZV2L6yxK+3CsNJyvMjIZ
wLqMzl8e5uLHuv5KARE/9rf4njTOoyg/ge0RO86rm1dvIPlXeJ+DJtQbrz+L
NGqs+ET1nVVdD+er7SStj3UZPVTUmEjCun4hw0kW1rsb/a7B9xYFnTOO/ITz
6iL9x2JwXseLQ+5CffKufsM36E+8GWgQhfPt92AdxbqMvrlzOJ3Bur6FfbEm
rL97a7kgzq9ok4PjXgmcb1mdilfCOXLp307CuozCFq3NZWD9vuV5kOTf3p0L
tfG9Ree4jN9BvlU56kvOsVNHRgrrMpo9snBAD+v30IFz8oDvtpY+hfMo0lec
JQj5dDadTwvajmhAHecew/sO+jffXjDrpk2tO93xuaLKn45z8TlTGTzMePhY
/oAd6qj9vnph5eIvkThdj89WurUczou17XjYbJxXJ24uI+e1bumutVBfRTUq
HtXIykP/6vSfZ7dGQjyYSeWp4HhA4yf6SDx4W3j3wnltOrGkEZ8X6tsUQs6L
86qKNNRjj1fX8HNfyEf2dF3PN6kgAPGwrO/sVRwPaJtXOAXrG7tm68J5dYzm
f7mH86rHFmsG+G03qdhyqN/0kfWUd0I+SowVIX2Ay2tKRCEeUp6cb8DxgGJD
pk/C+fq7+QzDeZ3JLtc6i/Oqnc1+ETgv/lhBMaj37ukM8FTz5qOZsrukL8c5
/28lxMP++4WFOB6Q/KFycVivKj0/Ac6xKH/ncYTz7WdJZ6aPijVfCueexS8Z
gM8duUiaknPPX/VEHM4x6HfELX2cb/vzkok+75hwUYVzLx56/xufO1Kmz31c
+bgUzqNIT8h7dSfOq/FTB8l5ZVzeeQjq4XcW8j+gH+YaM0nOlzPw1QDWZRTi
NbDoFdb1xl/nyPqiLq8K6P80XfDZDH2pdLr/c2NJjAjorRJb+iDWW/SZ1ttZ
9tdSoV5VLsqvxT4ahVTdJHXW+/E/yqDnbK/af2M9R/q0no/ajd0HvQ1ct08Q
8urI4x5lOC+XmWucUN9eb367B/pbl+g+UtU2MR/Q8583D2yAz18ZzHoqIC7n
KegtWz5rPNZblEfr7YVxeUmoh7cJJXlDPyxqNg/xV74s639iHUfJp2Ofwecm
Ws9H8p/ag94+UzRcCnnVjtbbb42CvdCn4g0Xmg11qxjdpxJ3DsoEPTfu7nGD
z3Baz+sWjvmADk/bJhlCvp2mdVjndNtO0O1TMbP44FOg1oicb/jLeWtAhz2f
bjyMdRj10zpsLsuvArr9OLrgD9ZtNEDrdszDmD44rzv6WWX4vJDIYVtyXju/
esdCf6GoxHnhJsu7SP0XM/8ejCoRgXj4sfe+CY4HND33AlmfgoI+wLly/dK8
C+fcRfcby3kOK4Ffstr16wf2S6iF9kuTDY1CUP/fNpA7C+dcWyJE9NlR4MB7
uLcb2yhvuMeStB9j+P2wh3Plnoo7Dee8lPZL8z87JMC5Oumv+ILrZsRO9y3L
cw+pgh+zDWr5i/0YOkX7sbT8pQNwrp0T4ZfhnIUsBBfDeZ3NbC+Bcx20/fQL
18eoiO5z5jjPvwh+bKWS5Ry4xytpP1bqtMAazlXfL1kFzrnqnRTxw4HWs7fB
uW7/9j4XzvnPNTNpOF+XPYoO4MduVNQ/hnu8ivZjVh/5IuBcbeed3A7nrEv7
qH7nSEnwXa9FK35h34VYad916XLSMJxroZAvC5zzQ9pH8fv7RYDvEvOuFYR7
rGXNIOcbsfquA+jtM/00GcirT2i97fNSaoa+aJty5Trok2gZMvskd/5kHgI9
V408vQY+Z9F6fvmD0GLob4fcDmQBnfag+9vXE3wFoN7J5N24GHR68x1hcr7f
tdfNg753+rk/EqDTJXTf++lmY3kWnHdT1/6WgPVZdD11mfOQlwDW5VebNrWC
Tt/6lU78lQqHQBEP1uUINfeVoNN5EzmkTy6zTMuYB+ddNbulY7Ce1+kD8Vfs
W2p872NdPnn1iDro9OpZ1zXhvDIcYu+dxbq8hZ+1AHSak+6rr0vgVEvAefdu
AMsOWK+ntDAC1kfH+Q+dx7qcHRfWBTq9ja539lELCj9iXV4zMsoPOv3Cq1ce
zvcBOpN2Gufdr4/F/sD6pXQ9Fdg3sxjqoAJ2i2jQ6UsiLeR89QwG5+TjvNt3
KOIR4B/P/RAGfIf64aVQB/2JCBYCnT5O10GmXwPsdHHe/XYzTAHwRLpuWpo9
+RzO1VrkiBacs1aaGzkv0ZYYPzjX5TK6D+Cc99N9+AyNfYNwb9+Kt82Fe/yc
9mPuop+uwO8po08vDIPPyrLzJ/m30GCHA/Qr5qo8yYH7+ONlGelXbF/j2QG/
s0z1vuG6gH2WH/07y9HGvnDwzXsD0vaCrg+d30Hy77UL9a+gXyEiaUJBXn1V
10/6XQv0XALhd5ntjWIG4LNave+Tvl/DlZo86IfkdCh1wX23RR3Ej62yzJ4N
voqnfcdmuI+T15u7If+uzhlWBF/lXPfaHHxWCP07jnIQHwW+maUp/hvc9290
P6RZeLwP+hUsfRGjcB9v0v2K/+Pqu+N6/N64lULIipQoCi0VUlY6ZZSMkqZE
AyVKGUUhpUQaSmmhUKG9aKCO9qS9997Dt2GUPOc6n8/veb2e58+u7tf5nGu9
r/d1zrnPzdk0qwy8KiY96QvwLC3mvs8bIYVE4M0HNOxeQ74XMddDGr4tSYV1
jAmlkzuh3roy1zGkOY4NwrrHQ4NnyZDXQfl51O9CD47KAq/CT5N0IU/PWe+n
flR5xp8M6x6nbrsbQ15rMtc9ypCb3leCyyPl/G2A05P3Gf2O/a2YmUMEl5/m
iz8DnN7C3Pdxn2m79onUXVYxvUl4Xtic0U/pfl2bDn3R0on9rtAnTTH378oj
nsVAX7RSOtIB6uo65rrl8vXpj6Aven3urhHtk5j7el6ZvJ+h780P2+FJ+2Dm
uqjaxdlhWJ88d9elCOrpNub6pIvX3MXQF53xtByAPmmQuQ9YKPNxH/S9nO2b
cwDXreYZ0/x9Msp1Afoiv0dZB6FP8mWuQ9bU1rfDvmGd1aNM6JOO/Td4FPyb
uLtYGfrekNyEo9AHm55pPQrPz5mbKAh9kYkqZpEn9VSMud54ZMeRethnTJ3e
+hH6JF3mPuObBu/fsJ554ONUOuD6jNVbyrf7Y8sLYL3xCUdsCNRZAeZ6I9tB
k5XQ927ZJDQM+L20vEgQ5C6fjyRBX3R8nsddqLdrmeuKA8/zC6HvVbsp9wL6
4LQ526k8Nn3TQ1iv4NwTeBDysa1Mn7Ee5eYqB7zq0xsza+BZe1MZ/dFrtRwb
WA/5XLDoFeT7BuZ6SLqd6hNY13i+bF08rHO0MfeLT1r4asK6Rtn39BewzlHJ
XN8eFDsfCesa1zZ+2VRkXoXf/zxL8/f959w6WL8omivI8ZLUz3uRIRSHy46s
aIH1iweX1JtgPUOQZwnlyb33dVtgncLPnPf0QlInUxW7joH9A/vnj8K+c75P
56O966qxohCmfPiZv6wrrEd8Wm6Nakk95O4Uozx28Sd2bViPuNU46LM3uQqb
f3gnBH55q2ZaAesOCr7Pf0I9PFh7hdo58LjkH1jvPRPdoOFP6l4Kc713eU5w
G6zv8Ra4x0P90mHWL77Cba7Qh0RGHbOHvuR/+8gzrXJzoc/MvLv8kiHB0RvM
9cOYLws6oV/1y6lPhP51vS4DV91eTeyl/Wqe8DfoXyuPMXDV1jaErdV1EB2O
/lkQUZGKvtb30O+qxPXvcof1i5nNOT+OnApBCt8Zv3vt0aF58Px1W+uh9xWp
eL0Z477uGMP1nvD8TyvpThWS37L1jOd5ZBj3M0aYxJ/s4A/ISLvEfD9xlHE/
Y88k5xzVvMAMD0vG+4n+ioz7GaXLdtbMDQrK+PGF8X5iSDbjfsbIhPCvLXOf
Z8zOZ7yf2LGPcT9jgkxfJTwfu5fxfiJXDON+xqORpazsoYEZoYsY7yfWzy6Y
C/PvLI3MBX3PPzhAz10o72DM82lN6oBd8nN5zJxn0ghjnobXC+h3u3yY85yN
jJ8D66QB19jPLiS8QHXtNlpfllgacMO6apO8tLFC4me03zWe8v8sBYZe2GS3
JXzP6ydTr+9yPKWwThoWco5NgPCC4MjvohC3MZL6S2FddbHqPhVexy/IqG6O
OF1/y2LYQYuF6wqMM3cBww5BgZtEYJ20oeYFazThBeGNm5Uhnscvm8XBuuqX
cGu5+6+/oM71ShoQz5xMu21T9TeHcT4w7WYW6VMJ66TyBtjXmfCCX6/yaD++
nJ+DA9ZVAzV/ctWu+oKij4bS/n1HNMPOJ29z0++RvWfaee0K9oewfipq7vwo
j/AFX1tDygPrhte+Hc4aRk/zlWODKj+h+bGy4rse1+CfbIx7Mx8dtV+cXxck
n2nGeG907bZVnLCuemAJ+7FjhEdIr7pH80X2P8Z9miUqogHlZf7yR3cy3icN
/ewp+qyjH3m2b8xcp5WCTGzzN2zw68BHIqdefbtXjo7uNYnSveEgv3wdIz6d
thSVw3qco4CJSQ6pP05KDBxb8GRD+zq9OsRfcFxcbzwc7dNg3A8z+W9oLvj9
q+3hWxyEPx5h+n3d7cIK8GNM+u7ZdYQP+jP9uDzlqTj4xR+7cUcRfjfn74Na
qPshi1/Wgp0PzT6ycSJ8TQRdpnaOZSl5DHbbGpt2J5fwr5NF2tRu4ewM+2j8
h/RO1PlnfGLa5xvTDlc3NdR3736WcZhpB2cdP8Y92HID0ies/DOeLxKl54gO
cfXENLopoLlaSTlHqjj/7z0qOM2hCuywKz87PJvUbUemHX5rM8a5tbdIM6Yp
UP4Nc5w/01zRMM6vsn35R6s4/+99dErVnhRPWDgWjQI+HLhWR9/XS2TaP5jf
KfWf/d2MpUz7W7ZLTsC5k41clzRKCU+P3hJO8V/nZCAv5NF2q4g7iPBx63Pp
NI88ubtWQF4US4iq8hB+fa/flObF+HzWJIjzsvL1+xwJX25ixnn/xuWLIW5r
1n6RqyH8N5QZt625XyMgDm1VqqMCKz9hNmYcvnWuH4P5+N6sUSjb+Akt1gyk
83nQG7cU4nBpm8Kxo4TnfvoVswPiMGVBnTjE2yuXDX/WaqVg+ff3BCHenmoZ
dEL8OPTkOpwaD8dChYz7XccDrlN7BuVkR6soB8nzXHhN7Snir0vl2rIr0q89
CZIf/2+W8f3BA3WM7+Up5NF7YD7WM+5lCu1jvHcxjzsnZ8I8SJ67mnEO02hc
lD7f9diGPr+9m3Ee7/bSVfM82obRHmUd2xVfX8iXqevdXTpUg3xUWth+eY0i
wdsq4cmrg+Xji0TOJM3JRdfeH5a9WD6Evh7dzOeR2Yjkok74dOFg/DVF/vY/
niFU2XH19+jSRtTmbxofGleCR9cECUYvG0buu3731v56Lj9f/c/FQ3kN2KZk
G9+h4/1IkX1Bi960vzznnjxZff9O/LaFTd/vXxsayGS7utegDGlEdnun1PXj
kv3d9N6VJYLr6X0sspdqqb7sD3jo9+lOhevT+1jOcO2jevGFDcWc/NGJVC7c
vNXG0o+4/1i+h3muCJPd8/FqJ0p/0iPfYNSHcvy0Y2GePz5EKBe41KJzZdqN
Wg7N6OjTcfq7lfdu03tL7qS10ftJnsgw7ll6paVBv/vmzfOJyl/8ZnzXhldi
rOvgrRLULpHMxyo1ivxyNc3gd9lv8/hwZxUjwScKK2xMR1CqcWwU/O7MChV1
1uKv6LwfV+C38x1ozvIW+rsnO2/Q+z1UPRbTezyq9n5gvO8QJkq/X7Z5wofK
t57qo3ZYvtQi+/CtEtxrsqWThfzuj9cy9vC7bbni6muyivHcs/carcnvXp0S
ioHfXfssPJCt+Cu+MK13E343PF3wKfyuxbv/6H0Xzk5F9B4ME7tL9Hd3W5ZS
+d+xEir33O1B5b8vxllr/OjEx1bK1rcSO4uvqboHv6uYtvAvsTPe1b8rtJ7Y
WVTPJRF+t/zPPdlCl1rspbdgHdh5UX8v1Zfdl5PeC9FktZ3eF6G4bpqOf67+
KpVPT5ym8gUL1aj8w7eJcBKHuKF051E3EocWDw4nw+9Wb7DoIXGIFxbO7hkh
cSg6fu4j/O6EC35B4grrqGWc20PiqozlF/3d55GMexXip/gMhLW1MgxZGPcq
9IwwzjcLD8VsWTxHOyOulJFHehlzFFRnRnFFvPJAmJ1ehmIwdoPfXdTz1v6V
1ChmrU/G+bZ6GQ65Ngnwu4arB1l6mjtwseDOx7tHjmUIt/+hv9v2+xG9Z2CN
ZAu9f6A1+DjlGxPhWVQeLOVL7x+Yz9TXJXLlc9C30/v+LaIv1nx1NBB+NwEd
bwR9t4pvNyP6YmGmvj5yQn6gr9rN7feIvriUqW+eYA19H19MfBN9H1/3kisd
P3zmOpVffWVF5e5M/06qJhmBf6t9BfuJf/GI/jKq77CwTT/4d/PxmkTiXyzC
9K+vjzg/+Nfo1dytxL/YI3wejav0Q4zv5jTOD6bvre/su0/jtsBRmL7PHpxq
QeVbmPGcpPzXGOJZmTW6j8QzXqASfR9+d+768EleEs+m1f5tJJ6x6r6jcfC7
YZ4n9CGeY8a23ibxjBfcZ+BGuJoUfe9b/Hkrfb/bg5m/gfNn6Xvf9sk1VB7E
zN8bbTlHDpH8PZ7fu4rkL57lbzkPv2v3n+wPyN/tdr2LSf7iwKfHaP6ufHTT
DfL3012LZ/C77LO8VN+dSW/oe9ArDG7Q96CPrnhL9TJS3Ezlrw7LUflnw00M
/0aVZAFeLVHrMCV4hTmyta7B7/qJ7VUFvMrQC5YkeIUjr0VRO3/QbTEGvLLv
zMkFOwucG6D6vreyo+8LX3aeoe8Rv9tTzfieztlnVB5VqUPfI5Zi4r/u1MR+
wPP291U97iSufryfdxR+19p8nQvgudKNMyUEz/GMohjF88a9nsaAz1faz2sT
fMYW98ro774MZNQv1as/5MZP+2csZ9avdmb9WvBS+v4cQ/+MAWb90u1n1Knj
fnIrWbX8M7iYdcrxM80vlHdoVa3cbFDGy9eM/FrXSfMLZezJ57JUCsq4U8DI
L72VNL/QbrO8U/VdTzI2dDDyy2Gafc7z1gEUre/6+l1NEfp14Lie0bw25Mmr
cMe1sh8pKEhyzWmrRElPI9LGlrchaU9nF7dXQ2i1Otvers91KH/anb8ipQSX
8L6tm21sRx2XF8vXGuWj7I0prMk9/bjgzrTWouPdyFpVL+D+h3Z0yzT7FIz/
Qj14+9+JDtTU0TaTJNKFqvR46fiXvra5C1l0ISe29a+EvXrRlKjIehi/Z5e3
QitfIyr79HZwYn4D+u9EGh3/SP9YYztbLVopzr8zdFs/OvjOhM5/6p/DW/vI
MmTeHsV28NwAyjj0nI6/M9PuMpd+GSrembQ9ZPUI2skzshbGD1iQLnJjfxGy
GG9P9nzejqTW+NLxp+PigpN+euOBy0M9WgmDaNslUzp+l1yi38pHGD9lueTd
fG4QXdv5KBXGXxR266gCzsNjO4K7j0SMoO+Wehtg/JR1P8V2BEbhkqKT6/ST
O1CBTCIdX333u67ehfW4Rmjh1d4PfUjMR+M0jJ+fHW1W29KCr36x+RfzsweF
Go7R+T84pW110qIDV0iIhJ8Q6UelKQ50fK33k/3PdSuxrF+ejcFa8twlxvx9
N9nsVZnTgzvStjrjyjbUPPua2t9Hc/bwjtZerLB0zdbev42Ic70WHT/q93nO
+86DeKNOyaH7Os3IJ9N9E4w/vDzQd6NZKxY1KatmCa1C0def0fE9rgfa+wgM
YkUsYPTEOg995UxnzD//e7mf7yDmX6iU/5wtEVkv96fjhzR8u35VZBS/33Fv
vaB1GOJ+LrERxtdbHNbi9KoDG7waWhPcmITG/b7Q8QvLb20l8YkF5r90D6sp
ws8evqHjh8qYZZP4xPGGF1/Ptlbiujuv6fiq437NJD6x0bwv4R2f6/CSfo7N
ML7imB3rv8Z2HHDz175qo3zc/iKbjt/6eLSGxCc+xi084/ihHX86PkL9a1Mp
lEPiE8+cvH6dxCeOia2i40tkbpLdaNGFa4u2cpL4xEGbswVhfM8dCbMkPrHU
kpObSXziLhtPOv7Tnw8OdLLVYl5V5a432/rxlQFHOn/l8Bk+h8gyfHnd+qID
5wZwrXMfjZ+ID3t4V+mXYTVbkV/Bq0dwvIS4AIwvs3LROpv9Rbiw8PgjEp/Y
4v5jOv7Rls3/gn56oxOLewZIfOLsTEs6/2Aek3tLHmFUY8IaQ+ITdyQeZ8zf
/lSbHM5D64zvLDkaMYJtX56j8b8m+G22eGAU2tqfK0riE2+deEfHfzLK7tKz
sB4dLf5SROIT98Ww0fEfv9+yoaalBR25vv9K7M8e/PDtKTp+fpvSF3WLDrSm
pVtEXaQf33rlLQTj83/PZSXxiXa8V/tC4hPv1btHx//WmpJ9eE4P2qf6dv3X
yjZ8/V46jc/34ce7pVt7UdS5Lqe+v41Y8dANOn5vakaYo/MgYm3ULHXSacYF
+SE0/l9LzLCQ+ERXFvh9ZA2twg4cNnT8ixUKOiQ+0diy02ZPrfPwBqRD539t
bmsmiU+0wF5i7DVbInYuOUHHX94ydYnEJxJZ+WHpVuswbKtfSvHNZltPCYlP
dPzPyIE3jUk4q5QRnz/sB0LVbAbRb/vpE2s5PiPPOtHVe7na0M0RLXdrmQFU
9CI3Kiu9HC3tDeEG+XvH0spUpV4k2HuoPnCwGV2q4KRy922S2inZnehbeCQ7
/5lOlM+2g47TsvQ/dZj/wN2yUjJ/dNjuFJ2/+jHVJLBb3bXlssRuKE2rgNrt
Hl89Br2cU25/eEPy7qMCwy93q9rrwZ6HzoREEnui+FEPKp+6PEdMYNMoenfe
+6yUaw6yXJ3wPXJeLipXi88rUBlBP457ebjnlaPPKfMrQI4ur712uLofLQ6x
3OQu1IE+jvNVglzpb2l+8pVetFQrQWTb5m60cYitCuS9aiF8Nk9GkepR4xzz
ohz0oLqJh7MwGD/jHmiYKzmAwo5oBRoZdqAzhTpcINddmtkikdeHfvy53NRg
lYNuzxtuPxfYic31u5WlHvQhGRUtlz/BBWgIN0rIBXfiU7p/LdJ4u9CVlexd
dyJb0PdF6yRBbu7RkNx4uRNVXDhecUCqDekbilL5zj1ZReDHwg1ymcSPKC04
j/qxycRqVIjET9HhDWUkfpDOSDGV15SuaWiZbEI3Q7rODvn0onKe29RfSPa5
elRpBQpVXGjmyj6AQgacV4H80ynvM5Avcd/iqgDPpQZvU39FWYfMVJN8uW7u
akfyhfCF09T+WXvFwneUtqDTB6XOcnsMon3RP+rBbivLRjsWt9aiu187FLJ3
DaOgGN1akK9jKzqouqcVveBeZXZhYJCMOzm8mNjN7n1ACNdADZrvPUdQ3LUH
rRUqoPbR5jVt9huvQqnaN2VEWXvR2sgiKvesiegNIvlY8VYlB+rFF75Aqu9E
6548z4fJ6OW/AxWeLqSP402jej3fWev57GEy3lhn8BnkET86qR22Xb9gHkDw
59dlzUGoj+ejzKi+tVEuVZwEf1r38cVDfbSxOUD1DWjc2uDwLRbNBs8axjiO
Ih/lIRpvl489N/H6Fos39cepg1z42K1ykN/84L82QSUO8af6d/4ZGkVWD/A/
0Fd3TX5YkoU3OpverW2l1I/aMniofx84DPuWWHjjJQ2+J0Huqc5P5bMDW6vE
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
vAx6hczLtgAeVbSIR4HwKDxmcYae47otnpwGPOrDHDlT6Le4jWapXrM2c1uB
R73Yu7AS+q0XRSXUXzbcj+k9kBqj7fS7n3OZvNctOZvKX7m/onLBLl7Gd6DY
06h8d/5+em9k8om1VF6669oM8F6TGL43TQQPOfyHaX51x1xzBt574vZaEcJ7
Mf6vg+Ihh5ZQKfDei04hgoT34v/x3nkROB94b+7BRxF8BA/XMnnvhrfn9IH3
uj+oWkJ4L65i8t6Z1v96gfeqenhfIbwXb3+0hvqLQzPuEqzXrebYP8+KvQLF
ihrOh/W6u2Fy7LBfeOG/YzJbJetQosub5SA3f6NdFbx6BP0TE93ArV+GNOYc
o+cZarjMzWGdM+leymtRy24kuGAdOzxfvlbVG/bh9ilpG+eS/6dOztD9eoNQ
98TNXr1Isyc1eKNFF7p3J5Cee0k4k/8I1odPR057we9Pajdy0PVDi+XyFmR+
ql57KmG+C/t+Lgb5xSLjyPbPdWi77ZqV7q+GEMtuezqO09zA2q8qcfhchXAV
7PNm32esq/eufjNwqSgH123bKAXnCLKjAheCfOS4c4KYdRhmWSpzBc5rbHVM
pOdMuuTEWU7sacUX5uYNnR8YRHEXEP3dlXIpe4wMO7C9j8Y6NskBhFYIc9N1
XYHcnXCOhLfD8BucK6mxWkntk1T3wgL2ce7HnC4wNOxApX5WVC/+0RPbLgwM
YtWgrkVqe1pRa4OmHMj/OxUxeUKkH2unHGI9adGBDI/y0fmcE44+BPtfFZlh
+ReLclDMyTa6f52SldwE+wfrYl7zp6rEodnd2xfBOB7nzs8eiRjBe1ffk5HH
eSgnn4eebylwOhkF+4Y/1ROPX2GvwCVKXBLwvFYerz6sy4ee93GTlKzDdoGx
dD730oaWhKwewTLKBldX6pfhG0pT9ByRqX4AO+y3/tjK/ov4GZ8vPicAz/M+
a9wN691SXwWLSFxgV5spSZC7TtopwTmnt5ePTQhZdOGd9xbT83jcyZxSsE8t
uuzrHvj9OxLcwvC8n/yS3zA/qy+ST2G+gSfY14G8teSZYudnUu/apj/D+Szu
kLX0XJla0OrARKL/gQbBDrDHSftgap/nHyrNTIm9PAR4NMF+5of+GwT52GuU
udY6DDmLu9+Ec2RFzuZ0PnLfdlnBuYjTbkP64J+U4Jlf8Hy6Zp09+C/1+L7X
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
8mc/IPV5Yme53FNdJuysCpYMtulGVenp+wOlyoFThRG18m8HPDDOFeTi7UZi
524UGWpWQe+cnR+aEtqh0Tn16uSdTsSVcGLUBvOdeutNiQQ3l8WV7sC4icok
jlDc9E1eLGmRMQAF8UMvVbvL0SXuvUrNbrUo7GKxGMHNObVmphg30fu1m3wI
bkbucJ10ExyCO0OO38XjK9DGC03jLxyLcN3c/YLg5grRjU8xbqK8LvEqgpv7
lA/KPI0dglQbrpo61kpkLy1faZgYidYE7RQgeCo93bUH4ykSOFj9neBp8eAH
qSKvIVB4KKnGMVCBVlQpBAdopIPKxPEqgqfJHw7EYzxFFn5dCwmeDvzZ3WYb
NQiHbiZ1fDtWgWbVXxDLwjrjJuvCq2bSNRD7pezV/gc4LluPcisE9cPHoetH
LxypgAW58sOmTVVIzSf9CPeyQejWfyhA+nsfbqy4tGN9IqpQ/dffG3lqWw/B
x1vTK8QwPqLySAOKj47MuULEbxkPMmuw32Dz5nDqt33Zfj+Ifw78iJOUiK+A
xjNj08Q/P9hOSRA/bDIuYK1nrYSbwn8GiR/u7/sgRp53+eniY/h5QejRU/q8
7fOyGshzJazN5vt+rAKCotTocw1v+8wqfqQVpHN+RSYFZaNPdz0vu1f0Q3id
hDjhDyUyKe6YPyCGhSPlDxdnziuonDmvoHnmvAKbTyVSJO9ufD+agvMObnxY
SvPunNa2JySPUjtfpOM8gkQB9IPkEe/rNhuSFyjFrg3nBYxrPqV5IWvi2Ury
4vMVzf04L8D56gWaF4FNeQtJ/F+4eTgKxz8EF5XFkPhnGmelkPhXuvjxJ45/
uLpCgMY/urVagMR5eEjTShznsO7GXBrnz7bqPiJxfmvYcxmOc7Csuf2JxPnx
NvmXJM4zrwXdwnEOQTU2NM5PNndOimH/wALOWuwfOGL+kPpn9/lDx0k8WJgV
JuN4AK4uaxoPNxWv7yHxwFeqPoXjAWq2pdJ42LQnworMI8SsbPES5xiE+KZo
Oo/g9SZ9PeHJKz4dXoV5MhgbSZwgPPl44rPMuxh3nmea82DcgSPMeoo7zFwm
vMG4U7kj+BHGHVC99WI5wZ3zk0oNZ+OywV9Mm10N8wzLnLt0rmF3+e6EJsy3
RWzthzDfhicvi5cTvp1t7cxLcKos9IUSxilYxO9FcerDxzsjQhinAmIyZDBO
gdiycopT3YeyrpH5CNeS85tZvYchSayDzkfYuwRyEN6+vq/XCvN2+Hz8pifh
7UsnFhXlYFxb4RTviXENpApznQmuMaN2CBBc46qbw4lxDa7drakkuNbaxvOU
d0UO5EVZCck9G4ajO23onMW110IshP8vkDkfgvk/XGg+O034/3RJ1j6Cg8tm
r2jBOAj1c+5QHHQ09DIkOLih6vVOjIOQccp5A8HByahLPT8LsyFy0RJbNI5x
/e7pgbLhYhAbHXUgOsKKeyUT6whYtWvnGqIjWKpD88UxbipJblDDuAns4b+d
CW4eurz8CsHNa6n85zBuQkrE8iaCmz1d/84rWDRzXoHNzHkFS2M5HhHcXMqr
VYRxEw4rBFDclL3o10B0X7zO+BKs+yC0RVGO6D75HJvHRN+Z6NYsx/oOTm5Y
Ikv0nammbirhRVmhyzwwL4ImM4d6wouqHDdJvML6zlRfyxjrO9CXeRVB9J01
69xbhC9xZdupYL4EK50nBjZivvRa1TyL6L6v7SJBWPfBd42+GKL7Ti9XNic8
SsBmZDbmUSDNl19AeNQ8zaXthEfdGnn4BfMo8Gs31yc8ap3FO3OC7x5lxeYY
34F/TyHF9+hvbSoE323nKUxhfIdtrDwU3895XfFRnBUIV+xMnDvcimB48N88
S4fWo+R6rNfERmK3YL0GN6ReUL1WOi65jPBe+cHHeZj3QvNrS8p77Z5YlhN+
a5Hh+vvPdBsw3pZVEX7rvefEJsJj08d4IjGPhV362kqEx15cNVuL8FXe3Nsn
MF+F52VcgoSvJjrn5BBeumZv9CrMS8HBUMSV8FID9dPThJcmb87ZhnkpxG4u
jie89C6b6V7Cc2T7O8Iwz4GsoELKc6wMLB2I/hXJXJeO9S88Yv7Tv9avTBIJ
zzxeEOCLeSZ0fv/HM9tvvLxL+r6OJW4tJP3wzpxRtO9LyLGWQfqLWh6pFH1R
bUftMqO0v4jPqnXHOI5bHtFrJ3HcoooaFxq3oV/Gykm/7k7DsINXV5fBgCKT
9uvuDFkTTfpIxdlsGjca5oP4yX99pGPJxeFkPqJpMY8af18LJIxy0/kIOy4p
STI/4tA0Gu4x0IK2ny6n8yOW92SyjZ370Lmo1XkR7Ay0s0zSN+XTJ9R7YN4H
opv8o2veY92Ezv2JSSe66eJWxZPHazvRj7gi4+31TcjPmn0g/zPmDTPfl3w9
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
YbyDyTOGIQTv/h9Hq2rX
         "]], GraphicsComplex3DBox[CompressedData["
1:eJx0nXk4Vl33xyulKCUNSqFBaVREg2RHE00ypNJEJNWjEFGikAiZSWWOkMxz
cW/zPM/zEKESzaPqd257n+3kvX7vP13vvs6zWuez117ru1bnnHvxmcsqZyeM
GzfuDee4cRzUnzkPMqZ1L9WV/bLw9YBv/extQUcjU+zXXGGZ30l6rCIYCqz7
w9pudKjKXhCTfbBMMR7OvuT9UVkwCQiM/7TxRoe27LP+pr8iitnw7TwVj5+R
EHzm4fu7pUJfVuT57A0p+iXwZRfnQ2XBPHDunk+3eccV2fI80QQRxWp4IEXn
TahOMaidFV6g0WAm6yCWV6rfUg/TnLKlf0ZWALmHKZFbKixkd98/05us3wL5
xF13hV2rBkdcu/c4aVvJjh/H/l8nLFoA9ZUF64Cz6ts08w4b2dOJ5U4iii/h
Tc5Br1+ZDSB37qfVF4/fkc3Q85uv6N4DJT8sZIXqNIOfTT/9NBrsZRcI/vdE
v6UXvmnZ16s0pQ2I+03g3avqKHutSnqDu8hrGJh/ffrPyA6gp8ltvaXinmyD
LVdmsv5bGNmotqBatAtUzOS67rnMVVZKunF/S/I7OPHgf+vCrr0E5z9N2+Ck
7SbrNvik6e/fIRjQ+zTJ+6O2bIhL5eXzG1Vlac77w17XcHI+BhEc3WvcVNwB
zdn/g5okJ2cCWJm6zsNVJRjQnO/PSPoz5W46uDX4zqXRPBLQnAu9HXomceaA
i3zqu11V4gHNOTf0uaJdQQHwXpu0U7IvGdCcsxLfRE+5WwqyFGbvaDR/AWjO
HVo83LtCK8HXuLRFslMyAc355PnQ9EmcNcAJvBZ2VckGNOdWg22X83XrwJKy
ecIvfXMBzfmYWd1iu4IGkKKhICTZlw9ozo039Wv3rGgG+/tNBe+IFwGas7rd
JLspd1vBS5OwhY3mJYDmXOvst6XodTsw5WhYsCq/DNCcV5QIfN0Z2glsFWx4
ZKdUApqzRvaje+mPjsuufCGtc1hJi3A2VhOcp6r2EKSHDprxWAcSzpwGYKuK
2lPw8OeVwWnWsYTzG4HNJttgAlAPNlg0KyeVcK6yqCxVVnsOuEI3RkyzziSc
TxhI8iUYZ4K+75LZLsG5hHNF0DjZbTAH5O/f0MKXU0g4y9eUni/gKgAhgeKf
vbpLCefkiQ+8lNWKgdzP+3emWVcSzqs2ns1q8S8D4iL8sw66VxPO5Qk+X+ON
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
//ThkwxDfxL+XP/WX8J/ooLbEYb+JPw1cf81jPovwl+XZ90gQ38S/q9x/5WE
+i/CXxn3X8mo/yL81XH/pYD6L8LfFvdfm1D/Rfgn4P5LBPVfhP9L3H/NQv0X
4c+F+69xZ0b6L8JfGPdf31D/Rfhvwv3XIOq/CP+DuP96hfovwv8s7r9aUP9F
+N/A/VcN6r8I/7tDCyUZ+pPw98D9Vw/qvwh/Pjy30UdzG8K/HPdfq1H/Rfjz
4vmMHZrPEP7T8BxGGs1hCH8XPG9Zj+Yto/UXz1VE0VyF8N+P5ycuaH5C+E/H
cxIHNCch/KvwPOQOmocQ/kV47nELzT0I/1V4vnEDzTcIf0c8x0hHcwzCfwDP
K7ageQXhfwDPJVLQXILwP4j7ry7UfxH+0Xj+IInmD4R/NZ6nFaN5GuHPgecP
kzeMzB8I/0N4bjaA5maEvy+ej11H8zHCfw+eg1miORjhL4/nXXJo3kX4y+C5
1oRbI3Mtwn8Bnl/lofkV4T8Pz6ly0ZyK8J+D51EiaB5F+PPhuZMtmjsR/jPw
fKkXzZcI/2l4jrQHzZEI/9t4XhSO5kWEfyueP3xA8wfCnwPPi6asHpkXEf57
UtDcoeOo/WrLjh0smr8Nnlsmorkl4Z+F50staL5E7B/1QH11h8AQ1We7ssba
V06ZybYvS9sP45s1i91vP3moqOlO5T96fWeeoj+7r/6zJWhlE5Xn6P19NM72
AbuvPlzj7CZJ5Tky53T5KM7uq+tuL98jS+U5en93+y+5z+6rxwfa7npJ5Tl6
f+WjVIb3UH31mhc9O+5QeY7eX5BurcXuq4/U75BfReU5en/9zx7TZvfVWWbK
i85ReY7e34X6H+aw+2p1TivhNCrPkfpufLdwpK/2iBWaSuU5en/n31hszu6r
rRd3Cp6k8hy9v942aWvZfTV/zAzBGCrP0fs7x1G5U4/qq6NkwMLxQaWkv6A5
+05wZHOWpTkrFhkXsftqueJLC1SpPEevHxRsqlKj+upxw933KJ1LOC/iCeve
RvXPZgfePqX0LOFs+vqiIrt/NjtoNNmVymc055P7JwYVUP2z5NdLW7ypfEZz
3hXj+72F6p9/lCdJHaTyGc15zl2BFez+uWFJ4kFKzxLOd5/3qrL756Sr8eco
PUs4/34bf5PdP3sWx96i9CzhfFnwZqQ31T9vcWnYT+lZwrn74L6GRVT/vCJN
vYmdz2jOqzMdrdj9M3933VlKzxLOrxoN77P7Z06ewx/Z+YzmHPDhSFQH1T9/
2VhrSenZUc7csjkiVJ/co6k61YTKWzRPgZww0/VUn6x2NQ+w8xbNs2hTh0w+
1Q8HrBt6xs5PNM8Je74I/aT6Ye7q3wup/ozw5L2W4VJI9cNLOLMN2fmJ5hl4
cByvJ9UPb1866TA7P9E8xUR2uJ6m+uGT2xU2U/0Z4cn6Ycu7muqHWdF599j5
ieYZdk5HwZzqhw9sO/eXnZ9onpeqbad0Uf1wS8kUQ3Z+onlu3BZWuJvqhy9o
PH3Jzk80z99hhfbPqH74R/8+NXZ+onnm8r1R4KP6YTvTd3ns/ETzdLKYymVG
9cNTbQoWUP0Z4anav6aojep7Vfb61LLzEM2zsSy0W4LK+2UdOguZPIO/trQX
UfndVKXdlMlzjc3HZb+p/H5bIO+9LIPnbdut0cVUfu+1LVNh8jQqsijypvK7
o+XmtUyep3kye85Q+X2d6ePJTJ4HlSeMW0fl9zebJhsyefrvDb5nQeX3bYky
7Uyenv/teNTNzu/rjfYxeTo694QrUvm961lYKpOnTaxtcgyV3zesbFvG5Hmt
ennuHCq/24byeTB5GnwuqDKn8vsAr8g4Jk/duec7uqg8PruClczkWbrQqJjd
x/4azlnFPO/G6fP92Xpl8PjWuczz3mJW0sPuV2NPODi6MM67+SyH62y9ojf1
m6MX47wLRivwsvXKzDbx/AOM8346hKOG3a/qS+rlVzLOe+yHl4JsvVLs6J+v
yjjv40C2HluviHbX5tczzvshp6AEdr8q52fbvYZx3oOabv1h96vvCwO1mef9
2qxYEbZe8f/8ojuGcd4XPxfey9Yr+xc1aDPPe5Gmy2W2Xvm572O3BOO8G07+
68nWJeGmPDrGjPO+XXj6UbYub2ksl3Nj1KlFStmT2Pq7Wea1eQOjTh0qYA2x
+8+QOyarNzDqlP2Gg5fY+lt/k/n+bYw6pceR0cPuP+9GbuXoYtQphZrVx9n6
O0R4OO02o06tfPywit1/ZnqkG6xg1CnbtIkhbP09aMOapcuoU8aLZU6z9fev
DKGhFEad0rl7RYCtv7m+WxZzMerU4Q9P69j9J79ER+hxRp3aeeylK1t/i/wH
rKIYdUoqa/5+tv6WeBJw4m/gaJ1y9wznYOts0Pl3kzKjHvnhPvOd36JvF/fu
kaF51kiifjKw4r5RhamWDM3zv92on8wzPdfHIagvQ/Pc9AP1k19cFogt1DKW
oXluqUD95BQdG73kDddlaJ7Soaif5PE1UV7BcUuG5umP+0n+OxGXTAasZWie
AbifXGTQ5phdZytD8wzA/eRKjZkRM6C9DM0z0BL1kxt27so/Ee4oQ/MMOo/6
SRmxa90Rbs4yNM8gNdRPLnFSv2We4SpD86zC/aSo1fvpSyTcZWieyl6ob1xz
1cGv8ImHDM1TDsdnI4rP0f4dx2c9is/RPhHHZxCKTzg2Pi+i+CQ6+TyOzzso
PolOVsTxGYTik+jkVTg+01F8wrHxOYDik+hkExyf31F8Ep18FscnJ4pPopPV
cXzORvFJdPIuHJ+LUHwSnbwRx6cYik+ikz1wfG5F8Un0cDnOnz9R/iQ8TXD+
HED5k/BsxfkzGuVPwtMC509dlD8JT2GcP3lR/iQ8NXH+vIjyJ+EZh/NnIcqf
hOcEnD+XofxJeCrj/Lkd5U/CMxjnz0GUPwnP6zh/+qL8SXguwflzL8qfhGcx
zp/fUf4kPI1w/nyC8ifh2Y/reymq74Tnc1zfr6L6Tnhux/XdBtV3wtP93/pO
eN7G9d0B1XfC0wTXdzFU3wlPvX/rO+EZheu7DKrvhGcoru/3UH0nPP1xfe9E
9Z3wvI/ruwSq74SnK67vt1F9Jzzv4vr+FtV3wtPq3/pOeI7D+vMw0p+EZxDW
n0FIfxKeXbuR/pyG9Cfh+cMM6c+lSH8SntZYf8oh/Ul4cmP9eRrpT8LTA+tP
iPQn4emM9edBpD8JTxWsP1uR/iQ852L9eRHpT8KzBevPn0h/Ep7+WH/aI/1J
eGpj/TkN6U/CUxTrT1WkPwnP7bg/4kT9EeE5B/dHVqg/Ijwv4f7oFuqPCM9D
uD+SRf0R4SmJ+6O/qD8iPKfi/qgD9UeEpwXujyDqjwjPIdwfBaD+iPDUxP0R
QP0R4VmN+6N1qD8iPJfg/kgY9UeEZzPuj6aj/ojw9MD90R/UHxGe+3F/NIj6
I8IzGPf16aivJzxlcF8vLD3S1xOenrivN0B9PeG5C/f1/aivJzy3475+Purr
Cc+tuK9XRH094bkJ9/XXUV9PeD7AfX096usJz7m4r9dHfT3h6Yn7ek7Pkb6e
8OTDfb0/6usJTxfc129EfT3hyYP7+grU1xOeu3D/rov6d8LzUaLoPPZ7U99e
8HqXGMaS9018REVt2O9NHU4zLBYviSfvm3g/XD54e0UDiE+u/nNfJIm8b+LB
s/wY+72pGYkbNvyxSCHvm7jeWpbLfm/qvzjPczoNaeR9E+dPIuvY700VRX95
VLw+nbxvsmsD3wH2e1PLn6lXrndgkfdNrmf+HvLsLgXfzebEFnIVED8DpvV/
mGpdCT6qWnKrqhUTP8dvqbrIfu/orVifTpt/GfFT++zzV87BteDjxPCOBONK
4mee2+PT7PeOLhm1Tvsxv5r4KcpyapqZ0wjedvBKy8Ia4qf9GxNV9ntH5w7s
OmejU0f85MpMDZdhv7dT763Dft6T9nPJIXEjZ5Vs8P2doAgnZw3xU6YzYiv7
vZ3BSaHd7Oc9aT/VDJZMYr+30yO45jH7eU/aT/1xj8ptxItAi1TCGYUVzcRP
O9dZPnXmJaD6gPQSrrutxM+ARU5aovlloOBsVhf7eU/aT3G13D1O2oasRxLo
eUnaz/lBBWns5y/vCqLnJQnPweLVF49fZZlOQc9L0n72S5f7sZ/LPPsJPS9J
nke1q5qxV9WcpdqOnpek/UytrbViP68pV4Sel6T9rOQduOa57BaLH70HQ/zs
mqbzmP3eyGrJrSuYPHPfR7qy3xv59HZJxyQGzye1nyy6fHNh+mNubyZPu9St
Fzf05UOb4x/3M3le8LU5aiteBPfNauZg8tx/q2RXg3kJnFWS9XwKg+danVkb
VuaXwRbrCEMmz8ZnJn7s56eNkl3qCxjxqTh+ymH289MDJq9mqjDiU3TN4Rb2
exe6UlsPtDLik+NIsBb7+enL1xV2MuOzy2qoj/3exRqNT1rfGfHJeiZzif38
9Ost/je3MeLzYcPdz+z3LkLnK/pZM+LTaePCTezn6c8mu5sWMc77jHS7J+zn
6WuHr5xaxzjv7nKf5rCfp9+54/AuL8Z5n11wypb9PH3C3Y1rfjHO+/39xZ/Z
7y0sreSfpcU47wLVUjrs5+k95v74kc847+WRlefZz9NPONncuYZx3mk/TyM/
4Vg/y5GfcKyfsshPONbPZ8hPONbPBchPONZPB+QnHOvn9xMjfpLnpZvxvhui
fSd+7sP7/hbtO/FzBd53HbTvxM9JeN8voX0nfr7E+74a7TvxMxPvez/ad+Kn
H973ELTvxM+ef88R8TP/33NE/IzA5+gFOkfET0d8jqzROSJ+6uNztBedI+Ln
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
VL7qiNe8Q11H/BwnMDm15m8W2DFHvWXPYD1ZV56TsDezuBysfnSm/enTZuLn
2X06xeuNLcCbaTfj3F1TiT9vxpUckzG2gBGBwY+Z67k4zh1RnBM/Jf8fXeF3
03n1emM/0FzFudbdtZH4U/r18/Otxn6w5+wqYeb60qqHs/31goGulWxUcuKo
fihXP29U9zcIZvBsncXkVqr/dptUcDhMPhTty+Tsg89vJzq/xM/of+sg8fN1
0dGZdX+zoLG9+30mt4PzZ6exdQK34OOVTM5iu30OFN/MhxeFV15pimglfpoZ
5bdR8Q+vpSYtZca/eqJZKnVeoK1E2a9qxnmh89IJlJeInydxXjIck1dPHjp7
I396Naxt1yg6yIhPzrvJey9p1MIb65fqVjPieeImrVlm7vVQeeIq4+APtaP7
rvtnFrdDCnw1Pdt9GeNc6y29YUDlATjZOn3WYkYeoPOtOcq3xE/6u23tY/L5
vXc8XtS5g/rPl3wVYZw7myeL3lHnFB5VPGqyiHFOX53KGHL8rw0W8yrN+rY8
m/hJ+/PLasQfSPuji/3vQP6TdbqOaKE6AsfWkSt2FY6TW2LSaT9pf/YifyDt
jzP2Xxf5T9aTba8KJhu1w47IDHnj4/FEVxzB+2uD9pf4cw3HgxmKB7J+BdfH
u6g+wrH1cWBM/ZqM99cM7S/x5xSOh2oUD2TdN0y2lspLMMjjwTWbo1XEz3J8
XpLQeSH+1OLzlY7OF1lfgOv+blT3iZ+HcHxeH1M39+HzMhWdF+LPR3y+jND5
IuuZa/e0ZhWXQ+5AkwtUXiJ+bhz/T/4h/vTtRfnqLcpXZH3jz3/0DPHTb8x3
2Gg/5337J/8QfxbhfNWC8hVZ39MkfTBULxia/nzziMpLxM97OJ//Rvmc+FOI
8781yv9kfS3WaWuRTiN+yvybP4mfH+ajfL4b5XPiDxfO/z0o/5P10lUf/Qpv
5gM1l7YCKi8RPx/gujwT1WXiTy+u4wdQHSfrylh/TkX6E/4/9Yj4KYrrphOq
m8SfQlxnK1GdJevf5aJNTN3rwW8nYaHHH2qJn2FYb7QivUH8UcL6JAXpE7Le
hnW1PdLVxM8WrBPGjdFFn7AecEJ6gPgzDuuHyf0j+oGsW5rpRlJ5CRxZer78
+/Js4ueuJ8JU35cM3hvnyqhqhpI8OVHI4HCceD1QGbYoUtHMI/ntc5zSoqSU
aLC2zUhNRz6BXP94d8T1xJRyUNvqPaAtXzOqT/62+0995wXUCmWq5k0crb96
kUErpr5LAr/4nyvNmzhaN1uzxI2mv/OCQQVfw5jXbzz1+RfPuyQoOs94OfP6
Wr0j8skp0bDXs6xTm+HPuW+xvkkp5XDY+4MZ059jDQ8E48WT4c4kh0Flxv3q
HngTSt0vjN2x01yZcb9z/o70WVDvzlDNsjUXZejri56N9E2wec85uWVrHGXo
6zWwfTlkn+zvOWw/Ctkn+1KP/e9B/pPr9bD/v5D/5Pqhf/mQ6xUxn+WID7k+
AfNXR/xHr8f8hxF/cn033l9JtL/kene8vy1of8n1AMcPt8lI/JDr/wii+LmI
4odc/3DM81d0PMvOrZrJ3teKJL+zMyi/6Ou7TK9PZc9fwmJWSalSfTkdt9fw
v/N+w89H0XaufhQC7P2WKUtcm0z5S9uJngg42fOXTN6ndVVUX07bmYKfXxqH
n18ifc1Z0dpDVBwAbdFy9n3QdpZP9f6rk1oMLN6nbBKi+nLaznr8fNFD/HwR
befbicVh7D5cAMULscM6a8kJft1gPVyG+mzaTid+bmEVfv6HtvNwkdYSNkeV
jVEWTH9UJU8F6aYWw2ubhWsEGf7U//ucBrFzWTo3nr1/XcJRU5MYfIz8y7zZ
c4rwnWcXMfk44udSdPDzM7SdF/P4t7LjRm/SPvdpjP16+3MmYM9NLqpxRCkx
9ou2cwo/3zLWjhayA8faOYPskHzVhO/LAD9/QtsxwPfVie6L2DHG9xWG7ovY
6f6XM7HjhzkrI87EzhHM2QxxJnZM8fMbeN+JnXHhSeGMfSd27HNMpzD2ndgZ
+3wFbccOx+EOFIfEzkwch9YoDokdfXwuOPHzD7SdS/hcHELngtgJxeeiFJ0L
YscHn1M+/HwCbUcGn9PP6JwSO+34nNahc0rsWOO6sx3VHRIP816VK7D7jQ/K
F5eVUHWeXueQR/X0I6qnZH277Dphtu4Pj5E+Q/UBZL0L64RDSCeQdV7ObKmv
1N8XWtE/04n6++n1yVj/mCH9Q9b3ZezguUrp4Aln102jdDFZT8e6birSdWR9
WrNWE1uPnuP44M7um+n1R1ivPkZ6lawfFfovZEQXLrGYRdkj60lYh/chHU7W
i1ieIWx9Flh3IS6I6iPp9V7cX+Sj/oJwXnnUxo+tk5ZuyTMpovo5en0S7puU
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
uXKgYw==
        "], {{
          {RGBColor[1, 0, 0], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNnHUYEEXXxbdm7MIWAwQVxS5sCQGxUOxABFuxAAOVV0WxuxWUEjux8FUQ
sDBRQcXEbl+76zs/z+Xx+2OevTs7uzu7O3PvPefe2db9jup1ZFUUxY65KGpt
31dhfxGVZVQxQTuHl0XxoLaHaXu66h+RfILkiyVPknyi5EslT5Q8WPIlku9q
iuLyVBSjJL+g66ys/f469qzktpIPlrys5P/qnCMkP6DtodoOVfthOr6Vzt1V
8v8k36hyoeT71eYQtTlN8p2qu1RtRkq+W/IVkkdLXk7XfFTtTlK7m1R/puqv
Vv2F2j9F5UrJN6v+bNVfI/lLyTeonC/5K23HqVwgeQVdZ4quM0TnvCJ5VdWf
LPkWbc/RudeqTSvVP6k256n+Lcmrcx3Jt9NftblObW6TfI/e7QjJt0o+T/XD
JR+tducU7tvLOncVHTtedceVflbO/Y/ko1TOknyl2syvNl/TT5W5VJZQOUB1
WddcTPJBkudJrj+Q96b7Li55iPr4rbbzqHyiokPFoiofFf7mLVT2V2WTXN9J
lafqnJ/pg7bfazuvyvmS51F/2kn+TEXN/7nvczp3gMo6kr/QdizPKfl5bQeq
rCt5tK7ZQvJcOv8MbTvr5F1UP1TyFpJ7SR5U+jvwfgaWvgbveYDkcwt/r+t0
nUV0zm+SD9N2YZ27jORDJS8keWnJ56mfc+ucVSQ/q/pjVNaW/Iy2R6msJflI
bZdU++UlHyJ5AclLMVYlH6uyvuSLtd1d9X0lXyp5b8n7S75Mcm/JB0j+Rvdp
pbK55IW1ba2ypuS/on57yT/RF5UuvG/1beXSzzub76nrrKD9l3lPkjdjzGt7
sr7dH6rfRc97sspOqv+x9LmdJf+iuttVtpT8repWVNlC8telr7ep5F11fIjK
zpL/jjY7xH3X1z22ZfyrP/OqrKFjWdtVS8+7X0rLXSX/qmvcrdKNvqluOZVN
GINqv5rk3RgLktuV/qa/adtepbvkz/kWlff/VFlLZRvV/1y6/VaS56tcv5fk
DdSvb1TW1v7vKqurbF34XdDHHpL7qf918rj9QXUrqXQqrLjaSO4p8Vy12Sb5
mouq7+N0bHMd+1z1YxqPp7tVt5fqBkl+Sm3aqH4f7T8keTnJm0leRPJYtdtU
8pmq65r8vJdL7iP5QHSL5J0l95F8geSdJO/LfJHcU3JvxqTk7STvI3lJXfMe
XXNvXfN7lbYqHVW/tOrvVX1v7R+p0kflBOYOukHnni35A8nXqQwp/Bx3Zj9L
Wfk6O/KtdZ0nVAaiz9VmBLpL8nvaDlc5SfK72l6jciJzWdtRjfXRXbrOnqXP
vVPyHpIHSH5c12vNfND+h9qOVDkF/YUuV98ORS+h01U2lnyKzv2Rb6vSRecO
1f7v6Cj19zi1PxMdJflYycMk7yf5aMmnSr5e1zxS8n8K3+eo5Hvx3EckP/tt
ut726EvJfXXuMcl24VHdawW+vY4doPpBqj9D9beo/bbxrfdX/cBkW3ar6rdT
/bGSb5fcU/Lx6B1d4xC1GVz4PR2W/K5669y1k8fkPpLXSh7nJ6lN++S5uQn9
bTwOB2u7avL3PVHyaslj9Vb1cwntL6P77anrrJE8F/hW/ZO/15bJ+hFdsRnv
pvH33Uvt10yemyerbvVk3XJDjPGDC49Zxu9Bhcf+lpIPYczEWGbcTtL2LpXH
mAvaPqHtTJWX1eYW7U+SvLL6OVP7t2l/hra3avuo6sdr+6S2r6jcK/kpbV9V
eV1tHtL+85If0PYZ6lTukzxN29fQIbrmeur3g6p7Se1v1nai6mdJniD5OfSG
2qyrNrdrf3c970rJOqed6l9VuztUv7PqW6t+Q9VvzvdvrCd3Yj6pHCZ5gtov
q/pNtD9K521cWoePlLyR5H6Sb5LcI8b5jZK3lnyM5B2S5y1zlvlxQvIc2U3b
i7S/n+ReyXOe+b5Lsi5AD+yRbD+wHdiTFZJtyq7qcxvJG3EdyW2T58sekldO
1tttQh8wftDZ6Hj09n90nY2S5SGSN0y2L1uEXkWftwo7QP2rjccc4+2VxmOR
687Q9rjG7ebV+7lYz7yAzlteZSH0LOOA521879caj2/GNuN64+S+za1zL9S5
84UO4z6MT77D7dnf4gLsC7aE8an2i+nY/NgiydN07ALJIyQvqPpf1WYNyX9p
+ydzMOwRdueasC+M+bvUZqnGNnVhydeH/RoveZnGNmNBySPC7gwPO8U8XTns
MHOK+bRpcp/7Si6T/d5ZjecV7dYMe4pd7lTaLu2NLop77hHf6J/vgF7K/k58
ow7J34lj9IV+7V64v3yvPSWvE37CdoXf9y3Z7/x4ni/Zr+BbtUu+/r46vk6y
Hewjeb1kezo8nhXbdKnkpUrPi3v0HpZu/PxXxzvEH7i8su5hHF4meWnJHei/
2i/ZWI8vIPmqyvb+ZsmL4zNJnk/yFapvKfk+1V2rPozTufdjayTfVHg8MEYY
byuFXeoU759xwVji+/EdeM8PYFN07s3xrVcNX+IT3WttHbsp3hPvi3fyt8qC
MVbPTfbL8RXPT/az8SHvzvb18RsnBSYYLfmsZGyA7w1WwK8fI/mJ8OXvZvzr
vu0aY5upqj9b2ztU/6bq2+M/aP+CZP8e3/4xtTlHdXdKvigZA+DDTw4MMbYw
ngCD3CD5Em1PVblR8iJq/6LKL5I3qD0P5udeav+I2rwj+S1tfyjse79Q2rbi
9y6m815W+UPyu2r/Umk7+57kd0pfc1bo5Dclf6Prr6++/Vf7b6j+YW3fVv2i
usZLyX71hrWvsUBhrAemA2c9HLjv+sJYhecDqzyv9is1xoefSV6nsZ04Su9/
crI+P0byFMkvSB6tYxer3C95gOqnqn665CMlPyr5WckDJT/Ge5E8SPLj9E/y
07r2pGS7gv3AtiC/FrbjjcK2CTuGPVsTHFfavj0V+ma86nuo/urauOaN0rhk
pcJYg3GBngcLnpSMB8GIJybjk4PVnyHYAMmHMN+TsfBhkk9JxsJg1pOT3w8Y
EVx4j+TD1eZU1V9WGO8wZsE5/VV/muovl3xs6fHLvcCDjC/6cITanK42V6Bj
S2PIqyTfpPpXVa7V87yje00vjd3e1vanwrp3ax07lrkteTttjweTS56X74PP
zTtU+8+1bVMYK4IZ52Ycqv67wngqqe3Tye3Af+DAhvGp+05Uu9ncV/Kjkt+V
vLru83hpXuGJ2KJjOflJlQ8kPlf6XuCvmaXrWjEHdPz55HvPzbhQ+Z/kl/Ws
4yTP1rWfk3y45KmSn0rGBR8XvnYZ198pxg++zjOSd5X8SP2vbegez0o/eD/P
lMbY4OhuajeoNo6ei3Gn8qXkbVV3HFxGYSxOe126eL10HxlL+D+zGLMq69V+
Fx/St9LYu0W0z6Wvg83D9oFJwaGvJx/7ARuH/10Ya7/Kc6p+B9WdgC9VGGu/
pvqm9Hdku6Lq1689FvDDP9CzvltaV7xc+n4LqswImfvOkpxKjwGw8yu6ZlWa
J6DPcEOvlK7jG71XWhejh58qzS8sGm34DvR5WulxAlfwquRPC/dtnF7YKyqX
6uJV8vfjnK3wSWrfk/n5fYxHxkaBPS6M5Wcm7zOWllZZmOdBxyTryudLnwsn
sITqZiT3Faz9XrKvg1+K34r/Ok31E5O/1yqBBcBfB6luvuz9fpLnycYMK6hN
N+ah2uyn+rmzMUbr8CHxJ78BlwX2OEBt5s3GLfNX9iXwLfHNdyiNofAZvlVZ
lzkHVxA4B05lcLKu2Fsv5rTaPupeqkvZ99uH8ZLty36k9otm47d91fb02tiq
pa7XS3WHS/5YbRbLxnsrBu6jz60q4zyeq3VgQO61ra5/aLL/06YyxgJPrRj+
M5jxT91nUm1uZBnV71jaDwdvzp+9/4nKEqXHLb7la6o/Ued8rLrFS/NF+K4f
6V6LlbZ98E7onx/VbkxtO/ii2ryVfGx2ab9yNdW/pPq3k/3OL8Ft2ZzE/drO
Tm53guR3k/1exjBjYXWd+35pHgcOh7nC8faFfeb3k48x5haJcYiNxf9Fx4KL
F9F1d9P+sdq+k3wMX/oDyS0k91LfT6qN9T4r7adtIPnT0r4VGOGj0s8Nn4Yv
+kny+/qytM+Fz/am6r9I9uHw7T+UvCj6Hq6jNt/1huo/T/btXpf8WfL9Pi9d
h3/4s9reUtv3+6B0H+HHGNs8x1GSe4Pfa+Px5VW/q+qPlDxd13wzmWtbOjAm
Yxh7QR32ZbrqR0qeKrmnrjG49vP20Hl/Jp+DLwyGgav5Gt81cCz462+VzqV5
oe2T/WTGVccYw4zJv5L3t8YPSj73ebUZoe3kwris0vfoqv0XVH+dtlP41urL
mviN2r9RbR6SfBv6Wm2uVt0jkm9W/X/BM+gIbR9JxrFPSn44WW/coO0EfB7J
1yf7wfjAYyQ/iE8v+TF8rmSf5AnJ92bj5+d0r+GlMfUzkq8pjYXBRhdJvlfy
42o/Qec+Lvn+0hiaPiynNlvFt/gDLr0219RJbX9Oxrdd8CuTce+igXnBv3AL
P6l0YKwFLmbOLlBZ93AdcG6drePAs43k7qV5pAWy9chf+Fcq/QtzTQuqfufS
fdtF2yMKc1YLZe/foe3rKg/Wxs5l9jMsXhmjH6j2i0jesDR2/kryEsFZdMM/
TZa7a/t7MseBTmOM0IdlJXeJ++7OmK2N0+FPflDZoDRX8GPyPfZCL9Ye5/A2
36usXxrHzVK5F2yqa65XGuMvVPn4Pxhfx06pzSFMS+bPsW2/N/ZT8UsfYUwl
44JPJQ9N5vNXxpdT6cz7rhxjgY8q1ea52nGQbyW3yfarv5G8YnaMhJjICpIP
QodWjqucUTh+8Ybqz8DHrxxXGYZtrtyW+dtWx4eqdFTdSnwHlU6S16wck4Fn
66vzh9X2b9eqHHPBdjAer1e5T/Jw5ksyfumrNmNU/4DkB1TXJXvO/6z+dM0+
tp/ajCrt8x8ROgHe6Se12Sr72NeSW2ffb+3Kz3paYXzXnufS/q6Vt8w1sN7q
qh+G7lb9gaW5QWw33Ck8HjZ739J2nPe/dPaxHyWfkRwP6hK4DL/6V8k7BFbs
HNgNn7xT4ET89p2i/TjJw3SNdtlYbhfVn156vveqXIcewE/HX4e/3Vn1Q0vj
3I5xH/ACWPUt/HiwF3Yz7l0yt0JnbVX5WuATnO5ptblcfAQ4Y7jQDSrHjOBX
V6rMZ8NtnqprL5Xd7gFtl8w+1k5t9ivNc2Kb+5a218TFllObA7BtatOvNP8J
f94ye59Yz7KS9y/NIS+Tfa32lc+Dw+Q9r5Ldp4PU37Nr69i70dnZum8u/DHV
36X6W9Hf2fr3GuZr9rhDP28q+UpsjNqei74L3buJ6q9AF+m++wbGu0T1a2Xj
9oPV9pza+P0y1a+djdX3DFzP3ATLr6H6M7W/e+UtOh8sv6bqz0I3Vb7/w/hd
gffpc5/Q1cyLw3Sf82rbDngh4i7bxxy5VPKDku/Q8d9qc0To+0Mq63z8RGIC
g8KOdMg+hzF2XTLWYx5dHHNtf8mXS34obM3G2fv9VH+ZthNUn/GFao835uyG
2edj1zaTfFVpPmTV7HE5Xtu3Vd6oPcYvjHE+j67zaW1O+E/J22VzxIdV5oax
X2eobofs/V/VprvkG/gucGDZnAB9viH69ovqu6l+LN+0sh3mOn9Xvi5j4z7s
f/b4Hy+5U7Zdnxufp/b7PLwyT4ytvxr9nT0GeK/0kXd7cGWeme/yB/MiuJ6D
w9bTZu/KvA78z1W6znrZuP1K/PHs9rdL3iL/+93Y8k4OqsxRMTaOUL8uqM1j
HKD6cfGNflOf3+GatcfSjaXHMPaiR/b+H5K3ze7r1dE/+rx9ZS5qtOTtgpMZ
VVhv3hN6Fc4D7gNO/qjKMv7GscGN0J9j0Ou1eRIK9fBCk0tzJDNDP4OV8dmO
qYyR8HP+boylOTYv/mdtH4YEAs7FPwH3P1Ya+69VW6aOc5/Qu3tZ9ScFPwCf
c0JlDgpeaD61+bp27GALfNjax8DT4GQwMtgbjAo+pd/wWm9pO7gyVwaPdGJl
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
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtm2XAHUXSheeONO5ZHBZf3N0lCW4J7u4e3F2CJQR3l8XdWeDDXRa3xd0X
WfR7Hs790Xn7TPfInemuOnWqMu0Wuw7Zpa6qav6mqlr+Xsw/n9G26FXVAeCp
S1W9TtuM8UWZuApjc9Ge8SSO3dFV1UDGvchDHLob/Ajjd9C/lGs8y5wavDDj
w8CX0P+ctiX9A5lzAf0PaOuAdwPvy/kXgvev8gyX0v+CthX9g6qMfUrbrJc5
hzP/E/Cm4F1oR3O/LWkrcL+9wMPpb0/bCnwa+Gae9V7amJzzCOfv1+WZfBbv
cS74VvBt4BHgu8CDmL8r5z/Mse3AZzO+OWNr0G5n7A3aFtxjGebMSv9NWsuc
weD7mL8SeE/6T3D+i8xrGFsKvD/nX8T4woyvBb6K8ZUYm532KPh32gWML8T4
UPpXMn4s529DWwd8FOefxtjptNXAFzN+Fuf+p82z7Qieh7G3aB3HVmXO5vQ/
pL8e49eBzwKfTVuD/qXMP5v7LQBeE3wZeGnmTkW7FPwV7TjuvS1tPfrH+L6Z
fwXjVzD3UPAWnPsReH361zNnbcaf4NihnDOo/34XBA+pc84xfhvaSuB9GH+K
fo/z5wHvAL6X+Ssyfxj4cebvA76I8d17WQOXgBdhfG3G/8n4B5w/uusXfAnj
lzH+Qsk68PtvSf9jxjegfwNzjmT8B/Cu4INpxzNvB98xY2eA12L+f2iXcGwh
rn8P81cA78H4Y+AdwU+BH2B8KPPP41rv09ZyPTK+PeMr05YGr0k7jrEVwUv5
bH5zzvuJ9jl4ct8P4++1udbOnL8J/QVobzJ3KeYdwLmXgQ9mbBvm7NDlm/ut
h4CvYc7PtO/oT0/7iPFX/J4c+6/35O+PtA/oT0Tbh/4qtNfpf8M1znce7WVw
Q9ub/sq0V+l/wfhsXO8A7jcf/Yk5tpd7jfYk/a85tif9wbTHwZ9rT+j/QHsL
PKb2gGc5hPZffs9ArvMs13sZ/D1znmH8HI692+a37MT5e3D8G9pd4LfAX9Mf
i/F96hzbqcs78135znfgWt+2WTu3M2d78Dfg7cG3gZ8GX+R6Af8f19q5yzfz
W3nscvpftXm3h3DsGeZeTFsXPG0b+7Y8eHeu9Sjjf+PYlVxnAfojOTYh+CLw
TODh4EnB14MHgs8Ef0J/DJ/H9co1V6A/C+1+8C+0yejfyJy13Yvg51x7tG2Z
O4O2s4nt2o2xm3tZi2/TdmqyJsdm7HT3AOcfCN6Osa85th1zbwWPQ/8sxidj
/GDw+OBzwDODjwJvC36Hc87g2CQc27+LDdb2bt3LetzU/cn4Pa5xxs93/1Sx
4Wf47ji2umuR610LHgk+Fvwg+CT613DsGuYfzbG/uT9pz9Mfrcl68jf47N7/
IcbW5HkOAD8PXpKxyWnngT+vY8sHl7wP38s/aSd0sY3ag2PpX9nGdh7uNwev
wfz9fbccu5/+8xx7TnvOvAnt054FdzzLv9y/zNmL+U8yf0P9I8ev0b7WsRUf
067oxWboaz6iXdaLz3F/T8w5o+rYD7/Tl7Rbe/lek3D9F23gqRm/mrkndnk3
V4MXBk9AO5a579F25tyvaLf34lO0vcd0+W3a0+PoX9XGlxyhPevyTnwXR/oN
/Db8nv0491mOjQF+UhvN2MTgyxn7V8ke/pv+SLvnmmD+lOAHmLsa4/uCnwGP
B36G9nQva+rMJmvMtTUmeBzHtJGMT9rfv/Mz/pp7UXvOtR6lDeDYyfoLv0cb
W3EieFXmL9Lmt8/G/MXpT+Iady/R7ufaq3DO3vSfYnwN5i/G+IfgRau8i+Fd
frvvZPwuNkdbMzm40H+c9hh4QJVn8Zn+Op9z9/bb08Zi/KQ6/uA5jo8BPgHc
cO6jch7whJzfei2PaV/BtzD/vhKb5e+9wWdn/HjGH+b8jcDf9veS32T5JvtX
WzoabXXmntDGFi7r96S/Wpe+Nv9xfTd4OfDdnHe9voVjG3KtG1xP4CXA64Ov
A18LXhK8Afh68JrgE/v202ucpO/q4qu1iat0uaf30ofdSP8Mn4n+I1xjF671
b9rcHH8OvCvP8EUT2/Qy5+zahePJ7bSh17kXOHace9H1S38x7WsdmzAreH/m
zKttZc5K4OH+5l585ulyQY6t6v7gnNv97Zy/Kf1bOGdol9/gsw/s5bcN6dL3
Ny5C/ztaxfzV+XOy3BM8uBcbdprcwTWl/ejb63k49oJcjvFB4FOb+DYvcxNj
Z/oOe+Fs6/Msj5X4Bf3Bvfx9ETwnf5/UZmt/mX8y8x8DH9TER+gbhlbhH3OA
HwffA+65tmgPM38C95++E1y7Fpm7IHPHpR1WZ49qW0/uws18n+dpC7tws5G0
Keg/VOLn9e9P0t9Ejkr/75y7Lv0R/e/lOzlVrq0NdP9w/ZFyJzmQvrLO3PX0
ib2co7+fqM3e0Ke49lct8dfugSH0Hynxk/rHU/i7kRxP++WabeID9X2Dq+D/
2RiflXYgY6+24R7z6+O6+Gx99bZ9Pn17m/hjFPh57nVhl/7bXGeDJn5fXz91
Hf54B/PvZP6pvfDt28C3g08Bb8jch5qs3WmYv4lcp8m95gRvTP+JJr5xdvA6
nPsoeCPwjOCT6e9Oe62Kzb6T8cu5x+n076ryrBd3ubfPLPcaRfukCgfz2S7t
wl19xqnpv0b7uBcO9gDjt7nH5FZyZPCv3kN7UIV76d9/rMLBppQP0j6kPw/H
vmNspD6sis2airFXaR/1sgflZfKFH6rYTPfrXW2u7W+Ynff7IO3VJj73bn0N
c87sZQ2vB36JsQN7iY/kodfRZuyFj8otL6R1vXDMfzH/Jjkd/aeZPwR8NeNT
gr/s86UVaavXuaa+Wx9+HnN+qcJl5V+j9cJp1/T9ySnov0NbvQlfm4T+J9o7
+rvRXqnik/1tV3bh/v7G+8G3yBF7iXlHyOWaxMq+s83pv9Akdlmc8XUZeAa8
k9+nTtz8fJNY1PjZvesevlXO6J4Dv97lWVzPQ/39jM0O/pW2Gfhc1z9jCzSJ
z27h2Pm92JAnuvjr05rwc/3vinLkKt9sSBP++Q/m/qjN5dwfaRf2EuM+TP8n
12Ava37Vvr/6tAk/nZvrf9nlWVbQnjP2m+/Id8/vWZCxb2h/gFdl/E85UxN7
Mj3jczH2Be0X8PKM/9HET+lrppQDc727Sva4+/13/t5BW1RuyPicnPsZ7Wfw
IMbnY+7/GWM38UFzMPYp7adeOLbx9uP99Skn0zddWtLXRz1K+18bbcL9NBPz
36V9DV4MPCP9/9C+6oU/qGX83CaWdH/+xn1voc0HHpfn+wdz3/MdgJdgfHa/
ZZd3vRx4Hq9F+w28os/vvWi/69u0sVx7Ju0P1/qpTrz7WBvb4B6Wq31MW70N
P5iB8Xe67IVFqvi/Bxm7rhcbMCn43z6T9onx3Tn3jzbf8sU6eoZrwG/vNx/W
hM8bW77DsckZf4n2PmNzgXfj/N/lk734wGkZe9NvAl6Q8Wnov+E36CUGOor5
R9Ku9t2rF9A/lnatfAD8AXPvBF/eJP78vMv3/2eT+PcX/l7bJHbVR6ujPNdE
O1JPmZ6599CebhLjTUn/btrjTTSlwX1958Mm32x6rv+2a5D+wlVir/fcR73E
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
9Bb52BpVOKdcXX7zl1ZhvNnFX64DHt17dImH9OVj1sltmTNUM1Qf7pXoyfKb
8RivS/Ry+Zuc+scufGVIFU77axd/va78s877luOqb9zONX/uwmfWko/qA0vy
84eB5wKXEn10S/AA8ICS/LrcbW7wBCX1E+qfc4A3N5Yq0a7VbLcGn1qSi1Mz
b0r0brnVBBxrS/Rb+YkxQlei78r9JwL/1IVfyfU7v0dJ/vyIKjn6P7rktzcE
jw3+s0t+Qr44Tt8f3uAarBLLG5sao6qlWUeilnNmSfxqHGt+b6k270oN7C/t
oyTftlqb/X1HybicS3v+S5vaAHNrrrebSvhS1/92fkPz5Yc3yZec0Oerd4F/
75KPXx88Vp1aBXMCfmtjLW2RNsn8ywN9vmfMLLfTxpxYwsnkYhOAB3XhYHIv
v7H5pFtLuJCxhtq3/k6tZL8mvlifrJa7b5N4UX4zUP/ZxHfpw5Zoo8Gp3e8u
T6qi4avfj2oTv90nNyupPzBfOxvPMG5JPYH1Lcak45Tk17Wts9TRbp5to+Wo
4ezP+JtttD41uwPBb7fRqtSw1Gvky2p5avJqb8Z3g6pocGp18uvBVTS7p8Bj
dsktWiNgLnDsLrldc4Jq2c+0iVfVtOXe6vvLVeHg5hbH7ZI7NMeo/zOeV1/Z
v4k2YvxrbK9GYv5Wf3UMv+3nKlzXeFBbI+edrKRe6BjwAnW0O/UIubAanlqg
+sLiVTTBpbtwLLmVMYj6lXrK0lVqLNTCzAea21UTe6tL/lKtyZoO65HUf7W3
ckBzraN34RbmXM09dl1yheYgR3TxofpOczhjluS71GMmlX+V5Ne3A09Wx9+r
KRhr3cx91u8Sv0/dRj9wLbum72my58coyW9tQ38SOXpJvZC1VDODt+wS36h5
yEdGL8n/bM34xHW0XuO/VapovgPpH9VGOzAmU3t8ok08rgZpbn9AFy5jjl/t
0/hs5SoaqPr1aF1yr9aMyD+MYc1/nNLEf5uvlbueDT6tSw7V3Kk+Rf1/oi7c
xBz+y/SfaqM/WONibn3iLlzBHLva5pNttAE1TnP9E3TJBZvzNzfydBstxRyJ
9VXmPM11TsP9ryzJN6gjyNGsnzKnZy5vuib1OXI8uZ3f3PzUNCW5ATmfe9f7
173sYfXWXcHTVDm2R5vnNzc3HccO7sL55fpyBOsnjCmMJeQE8itjCGMHY4qD
unAKuYScxmv7PYy9vYdcR86jbqFeIZ/y/ajN6WOvL9FXm36MYX5iL/lplZyK
/NTvqS+2JsH8sD5A26/NN3bTnsjljeG0b+eX5HeMOQ5l7owluSBjqmFt3ncr
P62Sn/Id+Ns9dgh4hpLYy5hL/jhTSexkjGb9mTGcsZsxk3xSjiY3k4NYTzZj
m9offab1fnJyubgxiPVT2kRtoXvA+j73hHthvyr1iHISuYicw/ozOYjc41jw
dSX6c93nLHtpq8Dz19Ek9+5ic7Q1R1d9vlSylqwBOKMkh6x2qw+0Hmn8klyi
Nny3LpxALnCo66cLB9D3yxH079oIbcPEnH9jST7OGkjtjXzAPezeHdCkHsSY
1VhVjqk/uqDk25qTtV7GGNTYU59t/ab6u31/n/n8CUtyn3IO63/kIHIPfaz1
QvJrc13GPNajGA+r3Rsjm8/X5+prN6iytrT/pZc1Zr2DHELuoI/eqo19MLfl
+tiyjb38rMoasX5lm/76/Mr30ca+2p+hSj3Glv31pE1xrv7I2NVzjC/krHJV
OYP1IN7Te3kPYzn9lbGrMZ3f2hjW2NVvrr6qbzD+ljNpO9WI1Iu1oeq52mJz
5Wpe1k/O2o+PjBm0Z/JjcwtyaHMh+lh9qzkx9WZtvrZ++yr5futxtHXmBPX9
cgDzAuYDNuzC4eRucka1GzUcdTf1to27cEq5pJxhU+1vSa5NG+/eV+NQ29AG
uJaMSYxFXFPWI1mPYy7VfKt8Rz6rViuHVmvQnup71Rysd1XDUrvSnlifIYeW
O8uZR9AfWcK15WDWH8hR5aZyUuNP7bv30qebnx7W/z7aFOtXDNbNxcnJzY/L
p/z2rim1B/mDWoYaxGTOp72vSeylvmLzvv31mPU8W/T51UdV9CM5sNxXji7f
O6kkVpDTe67xr3O9xq1dNCi1pxmb+Ec5vtzeGOvGLpqOWs70TfRfYxZjFWMU
9UJjGmMZYwjrY9WQ1Y6NOa8pyR+roRvzmD+Yrk2trTmhYfo7xuetw9Gtj5QT
ygXlgGqhchi5i5qosbl61M91YnRjc/Uvc5HG6Opf2t8dmf9jnXy59Wvy7Ver
6FnaY2N5r2G9nPqAWqQ5YnMzg9rUe2oP93R/lWjNahLeS81t+f49dyzR27zX
HXXqHa0neqmKJmR+cY+S2rW6SS2f+cW2SU2f+cY9S2oFPXZzl5jDWMP8jrGy
MfM7TWJwbbX6+A91bPZVXfRZa3CsAbDWzXym97Lm7Rj6w0q0ATUC45OjS/rq
Bmrraux+D7+L9dPLtOFaarZbN6lfsNbzkr6/2LokF6VGb32W+oxa7Vl9/2dN
q7WsfgNzhepF5qLMGZqr8/rWZssRfXY1Zmsv/A3Wg5kjMDdgDtJ6MHOQ5h6t
0dAf+85919Ys7NHlN/js5qPkH9aQWjtqDa32wpoga4HM8WtPRvVtjzU88g85
htzCmlP93zYluQdr9PVn2iRtkTXo+jNr0q1Ft2Zc+2VNkLVA1hhpH6yZtlZ6
oiYxn/GhtZ/G6MZyxnTWFBijyX1H9u2tdtf9YM23td5/5TjA55TUlpgzsXZC
Dir3tObRfInPq692TVhfc17JXlbje6RvP8avUpMlnzMmu6AJpzR+st5BLfLj
OlrlW21yR2qW1pMY/5orU2+z1sB86Ud1ag7Ubo23Pq2j4VoP4/NqK9SsrT+x
Xkd9jj9/1dsa3+v7jQmsXzP+19dvU0XP0L767szxuv8mKalNObJKfGd9glqq
91QP0b4Zy5pDMD5X81HrWb+NHuT/F5DrWvOmVqRmZA7d+hHr8/R/5kZcj+aX
3O/e63v5YBd9+HrOva+XfLH6vbUXvgNz9dZbflAnZ2++1v2h7dCGWL/q/re2
QE1AW2f+ymtr86xPtebBWgdrEKzfNB9hrYTXtJ5Y+2Atgs+gvfb7WjtljY/a
sfGv304N2VpQ8xfm46wJtX7Y/W9u2JoG60+tibEWxhqJ/we5ZH4r
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV01toj3Ecx/FnM5PUmtXsgguT3aBlc6OZUI67GM3GZk2M0XJMElYrh7FC
ydKk2GZ2sLFhJxaS0JxulI3VGhmR3E45lNfv4t2+n/f3+/09z57n+aeW7svb
GxtFUSYmojIuitrjo6hrQhR1o4TrlMvRazBN/w1/Qz6snq/fJDejQh7CUXUL
Fug1myvjZqsPcRdxkzvGbQnXk3tQJd/i+9Qz1A2uVStfQpFcxjeaPy2fQi6X
iXfmZrnxEfyIiaJfYQ4dZq7pV9gZkF9guplBjJkbl+vC/yFnmy10zk75I3Zx
Cdyc8GCc8YRr4rK4DdwOeRTlei3cZXWiukrvgLlkLkMdwz3XK/W3ibugrkGq
Y/vkNOx2Lyv1V2Gm3IgqM1uR7YzzzkvnctTbuQ9ICe8Cy+2swAK9P+bucfny
/bDr3KXcOOL0C7heTDKzmXuk/odkvU47d/lhea76KbfNzGQuJexyj/W6uGVc
CbeJ+8wNc3XcEfVafHPdbnk/3prLMPc9eHP1XIU6D+PmpnCv8Uq9mqsNz9FM
A46Hbw/znJEU3iVOyJuRzi2U68N7l+NdI5+7w7WH79fzrebfB8xcDd+qOhdf
XatVPoNqO1PNX+GXyB1mP4VnxBXrjco9fJa8CD/tdsnP1H2uMWb2S/juuRFu
DbdeXqyOuHX2++W/SHDeAP8bZ8N9oD/8dsK5OCm/RCVXYC/WfqKdjdwDtMnF
qOGmmW/jisK75ZK4QvkhWvVuc4PqoZCdlyNfxzl5Dw6a/w/FEISh
              
              "]]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0kkr7WEcwPHHPFzj0oa8ALrmWSmSDMWS3HJ3LIwLbBQRWSgbpKizYKnU
sbCR4XgD5uFy7y2vQz7/1Pn1/Tzn/JzzOJ3S3xMD40khhBXTmBJC5Cr90AJT
lOY5T5ZwoU6mhlDOpTzLLVzBPdprt42HeJT7eYxHdNfuPE9xjNd4kbd1z+4m
H/Ipx/iEjzVhN8EX3Oxet1yn5853fG8mnB/00Uzykz5Hn8Uv+mr+mGnnN/2p
79G9dcb85Ur9p1fet4X/c71eOt/wtXud8RUf6aV7xXmf43zAG7yly3YXeJWX
OPqC5/iX7tgd5T5e50Fu5W6ttlse/Z/RfbiYyzhPx+0W86dpcq98bdAbr+Vx
LefqsL0azoneT39ol2Zrlsk0nc4Zmm462EcFfxba2SMkm0TS9+/hCwnOPEk=

            "]]}, {}, {}, {
           Line3DBox[{836, 912, 913, 1010, 1749, 914, 915, 1012, 926, 1732, 
            927, 1014, 933, 934, 1721, 1016, 940, 941, 1018, 1752, 947, 948, 
            1020, 954, 1737, 955, 1022, 961, 1740, 962, 1024, 968, 969, 1723, 
            1026, 975, 976, 1028, 1756, 982, 983, 1030, 989, 1745, 990, 1032, 
            996, 997, 1725, 1034, 1003, 1004, 879}], 
           Line3DBox[{837, 916, 884, 838, 1727, 917, 886, 843, 928, 1733, 888,
             846, 935, 890, 1751, 849, 942, 892, 852, 1729, 949, 894, 855, 
            956, 1738, 896, 858, 963, 1741, 898, 861, 970, 900, 1754, 864, 
            977, 902, 867, 1730, 984, 904, 870, 991, 1746, 906, 873, 998, 908,
             1758, 876, 1005, 910, 880}], 
           Line3DBox[{839, 918, 1036, 885, 840, 919, 1759, 1039, 887, 844, 
            929, 1042, 1734, 889, 847, 936, 1045, 1736, 891, 850, 943, 1048, 
            893, 853, 950, 1761, 1051, 895, 856, 957, 1762, 1054, 897, 859, 
            964, 1057, 1742, 899, 862, 971, 1060, 1744, 901, 865, 978, 1063, 
            903, 868, 985, 1764, 1066, 905, 871, 992, 1765, 1069, 907, 874, 
            999, 1072, 1748, 909, 877, 1006, 1075, 911, 881}], 
           Line3DBox[{841, 920, 1037, 921, 1011, 1750, 922, 1040, 923, 1013, 
            930, 1043, 1760, 931, 1015, 937, 1046, 938, 1722, 1017, 944, 1049,
             945, 1019, 1753, 951, 1052, 952, 1021, 958, 1739, 1055, 959, 
            1023, 965, 1058, 1763, 966, 1025, 972, 1061, 973, 1724, 1027, 979,
             1064, 980, 1029, 1757, 986, 1067, 987, 1031, 993, 1747, 1070, 
            994, 1033, 1000, 1073, 1001, 1726, 1035, 1007, 1076, 1008, 882}], 
           Line3DBox[CompressedData["
1:eJwV0DtLgmEYgOE3isYgCIIgKIIgEISgc3Y0O1qmpVmm8UEQCDb0d2pra2tr
ExrabGqqLbB06x90fcPN9TzP94LgeHSbb/SEEGq662VfCFXN6M9eYYNH/OkP
4ZDT6rpdsM4sD5SM7958u52bb7jPPSX0ZX/1vWy+Nu9yR1P6sJ8x4qc32+aM
JtVyK7HGLab17s0E39yKrHCTGxpTx/em26m5zHWuaVQv9hP+elM0r5pXNKJn
e4EFptj2ZpnDenLLM8clLsa/7/sQH92OmeUC5zWoB3vTm1z8P5jnOKsB3duv
eKl/9M8qRw==
            "]]}, {
           Line3DBox[{1134, 1303, 1491, 1302, 1133, 1676, 1301, 1490, 1300, 
            1132, 1675, 1704, 1728, 1489, 1299, 1131, 1674, 1298, 1488, 1297, 
            1130, 1296, 1487, 1750, 1703, 1129, 1295, 1486, 1294, 1128, 1293, 
            1485, 1292, 1127, 1759, 1291, 1484, 1290, 1126, 1289, 1483, 1288, 
            1125, 1702, 1727, 1482, 1287, 1124, 1286, 1481, 1285, 1123, 1284, 
            1480, 1749, 1701, 1122, 1283, 1479, 1282, 1121, 1281, 1478, 1280, 
            1305}], Line3DBox[{1136, 1304, 1492, 1226, 1135, 1306, 1493, 1227,
             1137, 1732, 1307, 1494, 1228, 1138, 1308, 1495, 1229, 1139, 1309,
             1496, 1694, 1733, 1140, 1310, 1497, 1230, 1141, 1311, 1498, 1695,
             1734, 1618, 1312, 1499, 1231, 1619, 1313, 1500, 1232, 1620, 1760,
             1314, 1501, 1233, 1621, 1315, 1502, 1653, 1654, 1622, 1316, 1503,
             1717, 1735, 1655, 1623, 1317, 1504, 1656, 1657, 1624, 1318, 1505,
             1234, 1330}], 
           Line3DBox[{1143, 1319, 1506, 1235, 1142, 1320, 1507, 1236, 1144, 
            1705, 1721, 1508, 1237, 1145, 1321, 1509, 1238, 1146, 1322, 1510, 
            1751, 1239, 1147, 1323, 1511, 1240, 1148, 1324, 1512, 1696, 1736, 
            1625, 1325, 1513, 1241, 1626, 1326, 1514, 1242, 1627, 1706, 1722, 
            1515, 1243, 1628, 1327, 1516, 1658, 1244, 1629, 1328, 1517, 1766, 
            1659, 1245, 1630, 1329, 1518, 1660, 1246, 1631, 1331, 1519, 1247, 
            1332}], Line3DBox[{1162, 1354, 1533, 1353, 1161, 1680, 1681, 1532,
             1352, 1160, 1679, 1768, 1720, 1531, 1351, 1159, 1677, 1678, 1530,
             1350, 1158, 1349, 1529, 1753, 1709, 1157, 1348, 1528, 1347, 1156,
             1346, 1527, 1345, 1155, 1761, 1344, 1526, 1343, 1154, 1342, 1525,
             1341, 1153, 1708, 1729, 1524, 1340, 1152, 1339, 1523, 1338, 1151,
             1337, 1522, 1752, 1707, 1150, 1336, 1521, 1335, 1149, 1334, 1520,
             1333, 1357}], 
           Line3DBox[{1176, 1383, 1547, 1382, 1175, 1684, 1381, 1546, 1380, 
            1174, 1683, 1769, 1379, 1545, 1378, 1173, 1682, 1377, 1544, 1376, 
            1172, 1375, 1543, 1374, 1739, 1171, 1373, 1542, 1372, 1170, 1371, 
            1541, 1370, 1169, 1762, 1369, 1540, 1368, 1168, 1367, 1539, 1366, 
            1167, 1738, 1365, 1538, 1364, 1166, 1363, 1537, 1362, 1165, 1361, 
            1536, 1360, 1737, 1164, 1359, 1535, 1358, 1163, 1356, 1534, 1355, 
            1385}], 
           Line3DBox[{1178, 1384, 1548, 1248, 1177, 1386, 1549, 1249, 1179, 
            1740, 1387, 1550, 1250, 1180, 1388, 1551, 1251, 1181, 1389, 1552, 
            1697, 1741, 1182, 1390, 1553, 1252, 1183, 1391, 1554, 1698, 1742, 
            1632, 1392, 1555, 1253, 1633, 1393, 1556, 1254, 1634, 1763, 1394, 
            1557, 1255, 1635, 1395, 1558, 1661, 1662, 1636, 1396, 1559, 1718, 
            1743, 1663, 1637, 1397, 1560, 1664, 1665, 1638, 1398, 1561, 1256, 
            1410}], Line3DBox[{1185, 1399, 1562, 1257, 1184, 1400, 1563, 1258,
             1186, 1710, 1723, 1564, 1259, 1187, 1401, 1565, 1260, 1188, 1402,
             1566, 1754, 1261, 1189, 1403, 1567, 1262, 1190, 1404, 1568, 1699,
             1744, 1639, 1405, 1569, 1263, 1640, 1406, 1570, 1264, 1641, 1711,
             1724, 1571, 1265, 1642, 1407, 1572, 1666, 1266, 1643, 1408, 1573,
             1719, 1755, 1267, 1644, 1409, 1574, 1667, 1268, 1645, 1411, 1575,
             1269, 1412}], 
           Line3DBox[{1204, 1434, 1589, 1433, 1203, 1689, 1690, 1588, 1432, 
            1202, 1687, 1688, 1731, 1587, 1431, 1201, 1685, 1686, 1586, 1430, 
            1200, 1429, 1585, 1757, 1714, 1199, 1428, 1584, 1427, 1198, 1426, 
            1583, 1425, 1197, 1764, 1424, 1582, 1423, 1196, 1422, 1581, 1421, 
            1195, 1713, 1730, 1580, 1420, 1194, 1419, 1579, 1418, 1193, 1417, 
            1578, 1756, 1712, 1192, 1416, 1577, 1415, 1191, 1414, 1576, 1413, 
            1437}], Line3DBox[{1218, 1463, 1603, 1462, 1217, 1693, 1461, 1602,
             1460, 1216, 1692, 1770, 1459, 1601, 1458, 1215, 1691, 1457, 1600,
             1456, 1214, 1455, 1599, 1454, 1747, 1213, 1453, 1598, 1452, 1212,
             1451, 1597, 1450, 1211, 1765, 1449, 1596, 1448, 1210, 1447, 1595,
             1446, 1209, 1746, 1445, 1594, 1444, 1208, 1443, 1593, 1442, 1207,
             1441, 1592, 1440, 1745, 1206, 1439, 1591, 1438, 1205, 1436, 1590,
             1435, 1465}], 
           Line3DBox[{1220, 1464, 1604, 1270, 1219, 1466, 1605, 1271, 1221, 
            1715, 1725, 1606, 1272, 1222, 1467, 1607, 1273, 1223, 1468, 1608, 
            1758, 1274, 1224, 1469, 1609, 1275, 1225, 1470, 1610, 1700, 1748, 
            1646, 1471, 1611, 1276, 1647, 1472, 1612, 1277, 1648, 1716, 1726, 
            1613, 1278, 1649, 1473, 1614, 1668, 1669, 1650, 1474, 1615, 1767, 
            1670, 1671, 1651, 1475, 1616, 1672, 1673, 1652, 1476, 1617, 1279, 
            1477}]}}},
        VertexNormals->CompressedData["
1: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
dcO59cy0AV3os+n+X/hX/zcuuraC1Z4MgwUxs32O5jInOk2Bfrg/c3P1oj/L
0f3zqn7ccqJX9a2JYekZBw1GQF/Iuw79tmCtSCvpt5Uvv+K53nn2aJD6jKm9
/4pVH0bociXoo1YumId+67ca/bahXRzcS1lag/h/3tN4nPgzfsqDv5t7Dj4R
p8JLic9sAyb8h+dZbq7jXOR3Sofn5RD6eyn/63vxUSxC/Z335YYQ/7v7feA/
K8kF9S8J6m0i9W+/5QnudGI/g5R7NmKwmJR75mUhyvWvOjSf1D90+WA8qb9e
Sx94UXjD3mLbDsYCY82pJ1j+oiG3YzeMbGDEfV8ul9vcyliTcMWsa1E9Q6Dz
ILij8bk/z1nvN+vmB1fyvTSWN8Ontz+sgXyn3r9NE8l3Oi6B6uey/KbcpD+Y
1kyFfqfpW+h30N973l/fu+ePx0PEnz/8MPTfNvyGvsX+K/xdmJrwv3WEei+z
Rwr3LLxXw7i1/NTjwt9tjC22pWdIPZueClV7sPrtmk3Xc8k40OlMfUdek8fd
IePDxAvrMT4MePOBTx/n/p7opxolQm9i0I9yVelxxu2vdUW9ee5bovdPeAf9
DbN71HdhHJVO/FvLV1D+iT/AIx+EJ9dEpDAOLXzFr3i5g1FcUnOW1HNR+hx3
8j2u57MzI8/VMnIs9b0YHPEm49Kc52dGknbwncQLPnLLNjei3zXfD3qdjkng
b+jxbc5f49tugxj4F8dOhf57pAH0hs9meBH/9ZH58K84Zwbu+C5OuWB5BVNF
I1ejqPATY/afvXjvs3VvPyPjjOnTbi7SfxaYyULPK+eG8XCn8YntZDxUqVEE
NzrZBf2Ji/3QN2s9QzsspMfV/X+Nq9s746GP5zPgJvpDkzKgv/S9CP4ufm3w
b+zzA3/eap/8YOMH5u3cvu31VU2MM71laM/t896tJuPnupcz1VnjJ0P5vQTq
Yyy5AOOw/NveyWQc9rgpAj4g1AH9vsfL1Yhe3WgJ+CZ6PD/x13ju6npgDdEv
uTMR/mJak1GfRz/Owf/1jF8Y5++q64K7KVxvanRvZz6bOcl9rGEpI1g4APUU
0OwwJ/qj8q77WXrmCYMxKLdk9k6M/yOuNWP8n+8gDe7f0wW9soaDK9EzeKf/
PY8Ess8jyvU2FkQfsWIA+tfq+qiPmGwr/G0+he4g/n/85cD3878NYY0DzMnV
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
R530f8gw0Wo=
         "]]},
      Axes->False,
      Boxed->False,
      ImageSize->Scaled[1],
      Method->{},
      PlotRange->{{-2, 2}, {-2, 2}, {-4, 0}},
      PlotRangePadding->{Automatic, Automatic, Automatic},
      SphericalRegion->True,
      ImageCache->GraphicsData["CompressedBitmap", "\<\
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
7Eqw9ph0Yn7+Ipq8wYDzRKthGlghnayhyNPv/M3FYky0V0s69QhOKVh5ikcV
QlUPmXgmpSMNlb70+pLO0kvkO+qHWP/PaT/m8mayvNYZWBdT9WKabuObWpIC
JrqlHrtFVW+xjVS9Ik0Qdup1lZCapHNfSTxlSUULliCTvzwqsr27AE5fG18w
zt/5uUrmUI8DJkUxr1x1agl0aShY0ZXP0QMl8SzJWKo4I14l8T1/4TD74w0C
bv7SmcRKnRo0foUyyqqxWcj7QzCqSwkIILqPPEvSz5FO+/xS1ks0b/L8W7+d
QryRvw7SkSx1y+tLr6nLuhWbBBXTKBGopbhEoQkiE1DpWQZAU1x5dmRstRZX
zUvCm2TU9wQTeTJ7ULFFLskTySpMpEsyc2vqISZp2Mo1Rq8cyULdBbU+QsOp
JyIaEWFJVcCXeHPYaEhGJnFJ3ibMk6FGNKF+eNltswXZ5Sp6bbvWPSAVflNg
iH6yKEPTiCFabU1gSPJXwOTBQaN3hXN2xCkGWVH3HqvtiYxcLRLEmPPqNgQE
T+V72zirqJKQIK4q3zpg+Z9wZFTCkYOKS3nCXJksR47kobnaY0rqmsPSwGPI
WUoEaSQh9UkKDYv+i3kxSclDDVEjZgaF8KuXEKtXnnuCAZ31qiHRKsHABs24
0VbH3TybzV9+1tnInuRvJJYCixbQboOKLS97Rf+IeatP762kE58OCONYeAO8
oZ/cZAt+0g0fJHPQLyZLrDiQ/FVMGYE6QkSuFHHomUeUHms5idrlvr/iyquu
HHPlTXb0M65ccOWyK//pyk9c+YUrH7jya/kbP7pJSdryp4SczfYrQJW7jUCV
vzQvAPGH/I+Z/KX1yhytRBob5jup53hcbraPu+9PufKMKy+4stWVl13Z58oh
V17LsOpSWP13ipX9rSu/c+VjjIdVjxS7KItI0Oohq0RlkiTFq2/yB2blr3bk
mVsejqsztvS5qcxZPmfnuWsfdmW5K6tcedKVp1153pWXXNnpyl4F1okCWD9i
sH5ZBsvdGZf4ZXUbIpBRmPH/gaEktzt6SdiWtISnjmM1Xn9ty1ldo5hd5BbV
G8/9nebKHFcWurLMlZWuPOHKBleec+VFhdfBPwAvYhenANYXf8wPmg5ljQiW
h3ZJXrwv+r/GzB/CL53yVQl41Yzgi3aEqzfWlYls8yxXFriyxJXHXPm+K+td
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
NaM=\
\>"]], 
     GraphicsBox[
      {Thickness[0.05], Arrowheads[0.5], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
      ImageSize->Scaled[1.]], 
     StyleBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"\[Times]\"\>",
          StripOnInput->False,
          TextAlignment->Center,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->Scaled[1],
          FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
       Text[
        Style["\[Times]", 
         RGBColor[1, 0, 0], FontSize -> Scaled[1], TextAlignment -> Center]]],
      
      StripOnInput->False,
      Magnification->4 Inherited]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.25], 
       Scaled[0.05], 
       Scaled[0.25], 
       Scaled[0.05], 
       Scaled[0.25]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.01]}}, "Rows" -> {{
        Scaled[0.05]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584297411324872*^9, 3.584297420613785*^9}, 
   3.5842974518283043`*^9, {3.584297488598897*^9, 3.5842975035610437`*^9}, {
   3.584297538537898*^9, 3.584297578584525*^9}, 3.584297753748088*^9, {
   3.584297853129125*^9, 3.584297915812689*^9}, 3.584297959363874*^9, 
   3.584298015202743*^9, {3.584298142332329*^9, 3.584298203216858*^9}, {
   3.584299587275877*^9, 3.584299660972837*^9}, 3.584300533942718*^9, {
   3.584304207056662*^9, 3.584304215486281*^9}, 3.5843964509681673`*^9, 
   3.584396496623745*^9, 3.584396933336581*^9, {3.584396969469193*^9, 
   3.584396997124946*^9}, {3.5843970331280107`*^9, 3.584397091801422*^9}, {
   3.584397135265271*^9, 3.584397145843452*^9}, {3.5843971899258833`*^9, 
   3.5843972122184963`*^9}, {3.584397250530795*^9, 3.5843973694596453`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Covering Graphs and Quotients", "Section",
 CellChangeTimes->{{3.583504537673525*^9, 3.583504582132621*^9}, {
   3.583758401277527*^9, 3.5837584050171013`*^9}, {3.5841982122342453`*^9, 
   3.584198221620942*^9}, 3.5842995028093348`*^9}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"grassman1", "=", 
   RowBox[{"PermutationGroup", "[", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Cycles", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Cycles", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "4"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Cycles", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"1", ",", "4"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "3"}], "}"}]}], "}"}], "]"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cover", "=", 
    RowBox[{"CompleteGraph", "[", 
     RowBox[{"6", ",", 
      RowBox[{"VertexSize", "\[Rule]", "0.3"}], ",", " ", 
      RowBox[{"VertexLabels", "\[Rule]", 
       RowBox[{"Table", "[", 
        RowBox[{
         RowBox[{"i", " ", "\[Rule]", " ", "i"}], ",", " ", 
         RowBox[{"{", 
          RowBox[{"i", ",", " ", "1", ",", " ", "6"}], "}"}]}], "]"}]}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"cover", " ", "=", " ", 
    RowBox[{"SetProperty", "[", 
     RowBox[{"cover", ",", " ", 
      RowBox[{"VertexLabelStyle", "\[Rule]", "15"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"highlightCover", " ", "=", " ", 
   RowBox[{"HighlightGraph", "[", 
    RowBox[{"cover", ",", " ", 
     RowBox[{"CompletePartition", "[", 
      RowBox[{"cover", ",", " ", 
       RowBox[{"GroupOrbits", "[", "grassman1", "]"}]}], "]"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"highlightCover", " ", "=", 
    RowBox[{"SetProperty", "[", 
     RowBox[{"highlightCover", ",", " ", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"VertexStyle", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
           RowBox[{"2", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
           RowBox[{"3", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
           RowBox[{"4", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
           RowBox[{"5", "\[Rule]", "Yellow"}], ",", "\[IndentingNewLine]", 
           RowBox[{"6", "\[Rule]", "Purple"}]}], "\[IndentingNewLine]", 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"VertexShapeFunction", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "\"\<Square\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"2", "\[Rule]", "\"\<Square\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"3", "\[Rule]", "\"\<Square\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"4", "\[Rule]", "\"\<Square\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"5", "\[Rule]", "\"\<Triangle\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"6", "\[Rule]", "\"\<Star\>\""}]}], "}"}]}]}], 
       "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"orbigraph1", "=", 
   RowBox[{"OrbigraphFromGroup", "[", 
    RowBox[{"cover", ",", " ", "grassman1"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"orbigraph1", " ", "=", " ", 
    RowBox[{"SetProperty", "[", 
     RowBox[{"orbigraph1", ",", " ", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"VertexSize", "\[Rule]", ".2"}], ",", "\[IndentingNewLine]", 
        RowBox[{"VertexShapeFunction", "\[Rule]", " ", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", "\"\<Square\>\""}], ",", " ", 
           RowBox[{"2", "\[Rule]", " ", "\"\<Triangle\>\""}], ",", " ", 
           RowBox[{"3", "\[Rule]", "\"\<Star\>\""}]}], "}"}]}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{"VertexStyle", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"1", "\[Rule]", " ", "Red"}], ",", " ", 
           RowBox[{"2", "\[Rule]", "Yellow"}], ",", " ", 
           RowBox[{"3", "\[Rule]", "Purple"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"EdgeLabelStyle", "\[Rule]", "15"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"VertexLabelStyle", "\[Rule]", "15"}]}], 
       "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"Column", "[", 
  RowBox[{
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"PaneSelector", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"1", " ", "\[Rule]", " ", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<What is a covering graph?\>\"", ",", "\"\<Subsection\>\"", 
            ",", " ", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", ".020", "]"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"2", "\[Rule]", " ", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<What is an equitable partition?\>\"", ",", " ", 
            "\"\<Subsection\>\"", ",", " ", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", ".020", "]"}]}]}], "]"}]}], ",", " ", 
         "\[IndentingNewLine]", 
         RowBox[{"3", "\[Rule]", " ", 
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<How do we quotient?\>\"", ",", "\"\<Subsection\>\"", ",", " ", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", ".020", "]"}]}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "[", "time", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"TransitionEffect", "\[Rule]", "\"\<Fade\>\""}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Slider", "[", 
      RowBox[{
       RowBox[{"Dynamic", "[", "time", "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{"1", ",", " ", "3", ",", " ", "1"}], "}"}]}], "]"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"PaneSelector", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"1", " ", "\[Rule]", " ", 
          RowBox[{"SetProperty", "[", 
           RowBox[{"cover", ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"Scaled", "[", ".2", "]"}]}]}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"2", "\[Rule]", " ", 
          RowBox[{"SetProperty", "[", 
           RowBox[{"highlightCover", ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"Scaled", "[", ".2", "]"}]}]}], "]"}]}], " ", ",", 
         "\[IndentingNewLine]", 
         RowBox[{"3", "\[Rule]", " ", 
          RowBox[{"Grid", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"SetProperty", "[", 
                RowBox[{"highlightCover", ",", " ", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", ".2", "]"}]}]}], "]"}], ",", " ", 
               "\[IndentingNewLine]", 
               RowBox[{"SetProperty", "[", 
                RowBox[{"orbigraph1", ",", " ", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", ".2", "]"}]}]}], "]"}]}], 
              "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "}"}], ",",
             " ", "\[IndentingNewLine]", 
            RowBox[{"Spacings", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"Scaled", "[", ".1", "]"}], ",", " ", "0"}], "}"}]}], 
            ",", "\[IndentingNewLine]", 
            RowBox[{"ItemSize", "\[Rule]", "Full"}]}], "]"}]}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Dynamic", "[", "time", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", "Full"}], ",", " ", 
       "\[IndentingNewLine]", 
       RowBox[{"TransitionEffect", "\[Rule]", "\"\<Fade\>\""}], ",", 
       "\[IndentingNewLine]", " ", 
       RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}]}], 
    "\[IndentingNewLine]", "}"}], ",", "Center"}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->CompressedData["
1:eJwdzW1MkgEABGCwFbhMG1OqUc6IsjViuhhJHypaKFIsIItckRY2t7aQ5txa
YrVhg1qZ001jBuLCbJqFBA4Ym1Zac2suEmblXI2ERc6Poq2wpPf4cXt+3G63
9ZxaVp1EIpFyiMApzgbhymBEIPOES+Bk1sYj8J3NI4ddO2dqIOv9/ovwruaM
AZICrDb4QER7DHNm559CBvnFKMxakI/BJ7EUP6wy0AKJnx91v2CruiAOmc4g
NU74gR5Nh8bYYjEciVNE8Bg1IIWqE3wV7JFO10PZelczNA1qW+Feh9UKN11g
9sGOwnQXbA8ke6HNLhuDw7urDpLsEUHIbcyHgvK2wzBplimEdZKuMqhs+iaG
eVaOFJ6ds8lgxLK5Ejas8ySkGXwNUKNga2HttkwzLGWqBxI/w3o79LG7nbDg
2vlP8K339Fd4NNQyB3+aipLJhLxuvmcV4dK+joSBNNYIrIlmj8O1rxg+aKR9
98ObrorXFMIh3ptx+MUZlnMIr9cvl8Pw51wlnM9oqYRdaXoVTE11VcM1pQot
lMzc0sGixvFmWJi0dA/2tgfvJ/pH/yyQ+XuiD0bvMPoTe53yGUxxcx0wPzdv
GtZeoQdhiKpdgJ27eMvQNNzIvUq4Q/SHDzN9WwRwZfupEjgQ9Yrh5YXbl+Ck
/mHGFGF/BZkO/044XoqfRwTuA+ZRGAsUfzxJKKQog5Dr15hvECoOsS2wU3u8
B2bbVg/B3rRFnY5QEtzTBP8DRdWf/g==
  "]],

Cell[BoxData[
 TagBox[GridBox[{
    {
     PaneSelectorBox[{1->
      StyleBox["\<\"What is a covering graph?\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]], 2->
      StyleBox["\<\"What is an equitable partition?\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]], 3->
      StyleBox["\<\"How do we quotient?\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]]}, Dynamic[$CellContext`time],
      Alignment->Center,
      TransitionEffect->"Fade"]},
    {
     SliderBox[Dynamic[$CellContext`time], {1, 3, 1}]},
    {
     PaneSelectorBox[{1->
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5, 6}, {Null, 
            SparseArray[
            Automatic, {6, 6}, 0, {
             1, {{0, 5, 10, 15, 20, 25, 30}, {{2}, {3}, {4}, {5}, {6}, {1}, {
               3}, {4}, {5}, {6}, {1}, {2}, {4}, {5}, {6}, {1}, {2}, {3}, {
               5}, {6}, {1}, {2}, {3}, {4}, {6}, {1}, {2}, {3}, {4}, {5}}}, 
              Pattern}]}, {
           GraphLayout -> "CircularEmbedding", ImageSize -> Scaled[0.2], 
            VertexLabels -> {5 -> 5, 4 -> 4, 6 -> 6, 1 -> 1, 2 -> 2, 3 -> 3}, 
            VertexLabelStyle -> {15}, VertexSize -> {0.3}}]], Typeset`boxes, 
         Typeset`boxes$s2d = GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            LineBox[{{
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$2", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$3", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$6", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$3", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$6", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$6", Automatic, Center]}, {
               DynamicLocation["VertexID$4", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$4", Automatic, Center], 
               DynamicLocation["VertexID$6", Automatic, Center]}, {
               DynamicLocation["VertexID$5", Automatic, Center], 
               DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[{
              TagBox[
               
               DiskBox[{-0.8660254037844389, 0.5000000000000008}, 
                0.14999999999999988`], "DynamicName", BoxID -> "VertexID$1"], 
              
              InsetBox[
               FormBox[
                StyleBox["1", 15, StripOnInput -> False], TraditionalForm], 
               Offset[{2, 2}, 
                DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
             BoxID -> "VertexLabelID$1"], 
            TagBox[{
              TagBox[
               
               DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                0.14999999999999988`], "DynamicName", BoxID -> "VertexID$2"], 
              
              InsetBox[
               FormBox[
                StyleBox["2", 15, StripOnInput -> False], TraditionalForm], 
               Offset[{2, 2}, 
                DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
             BoxID -> "VertexLabelID$2"], 
            TagBox[{
              TagBox[
               DiskBox[{3.8285686989269494`*^-16, -1.}, 0.14999999999999988`],
                "DynamicName", BoxID -> "VertexID$3"], 
              InsetBox[
               FormBox[
                StyleBox["3", 15, StripOnInput -> False], TraditionalForm], 
               Offset[{2, 2}, 
                DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
             BoxID -> "VertexLabelID$3"], 
            TagBox[{
              TagBox[
               
               DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                0.14999999999999988`], "DynamicName", BoxID -> "VertexID$4"], 
              
              InsetBox[
               FormBox[
                StyleBox["4", 15, StripOnInput -> False], TraditionalForm], 
               Offset[{2, 2}, 
                DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
             BoxID -> "VertexLabelID$4"], 
            TagBox[{
              TagBox[
               DiskBox[{0.8660254037844386, 0.4999999999999993}, 
                0.14999999999999988`], "DynamicName", BoxID -> "VertexID$5"], 
              
              InsetBox[
               FormBox[
                StyleBox["5", 15, StripOnInput -> False], TraditionalForm], 
               Offset[{2, 2}, 
                DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
             BoxID -> "VertexLabelID$5"], 
            TagBox[{
              TagBox[
               DiskBox[{1.8369701987210297`*^-16, 1.}, 0.14999999999999988`], 
               "DynamicName", BoxID -> "VertexID$6"], 
              InsetBox[
               FormBox[
                StyleBox["6", 15, StripOnInput -> False], TraditionalForm], 
               Offset[{2, 2}, 
                DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
             BoxID -> "VertexLabelID$6"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{4.1810136689009845`, 
            260.20000000000005`}, {-154.00000000000003`, 142.8114363636059}}],
          
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[0.2]], 2->
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5, 6}, {Null, 
            SparseArray[
            Automatic, {6, 6}, 0, {
             1, {{0, 5, 10, 15, 20, 25, 30}, {{2}, {3}, {4}, {5}, {6}, {1}, {
               3}, {4}, {5}, {6}, {1}, {2}, {4}, {5}, {6}, {1}, {2}, {3}, {
               5}, {6}, {1}, {2}, {3}, {4}, {6}, {1}, {2}, {3}, {4}, {5}}}, 
              Pattern}]}, {
           GraphHighlight -> {1, 3, 5, 4, 6, 2}, 
            GraphHighlightStyle -> {
             1 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
              2 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
              3 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
              4 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
              6 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              5 -> {VertexStyle -> Hue[0.14, 1, 0.9]}}, GraphLayout -> 
            "CircularEmbedding", ImageSize -> Scaled[0.2], 
            VertexLabels -> {5 -> 5, 1 -> 1, 3 -> 3, 2 -> 2, 6 -> 6, 4 -> 4}, 
            VertexLabelStyle -> {15}, 
            VertexShapeFunction -> {
             2 -> "Square", 3 -> "Square", 5 -> "Triangle", 4 -> "Square", 6 -> 
              "Star", 1 -> "Square"}, VertexSize -> {0.3}, 
            VertexStyle -> {
             2 -> RGBColor[1, 0, 0], 4 -> RGBColor[1, 0, 0], 1 -> 
              RGBColor[1, 0, 0], 3 -> RGBColor[1, 0, 0], 5 -> 
              RGBColor[1, 1, 0], 6 -> RGBColor[0.5, 0, 0.5]}}]], 
         Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$2", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[{
              TagBox[
               StyleBox[
                
                RectangleBox[{-0.9983783537844388, 
                 0.36764705000000086`}, {-0.733672453784439, 
                 0.6323529500000007}], 
                Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
               "VertexID$1"], 
              InsetBox[
               FormBox[
                StyleBox["1", 15, StripOnInput -> False], TraditionalForm], 
               Offset[{2, 2}, 
                DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
             BoxID -> "VertexLabelID$1"], 
            TagBox[{
              TagBox[
               StyleBox[
                
                RectangleBox[{-0.9983783537844383, -0.6323529499999994}, \
{-0.7336724537844385, -0.3676470499999995}], 
                Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
               "VertexID$2"], 
              InsetBox[
               FormBox[
                StyleBox["2", 15, StripOnInput -> False], TraditionalForm], 
               Offset[{2, 2}, 
                DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
             BoxID -> "VertexLabelID$2"], 
            TagBox[{
              TagBox[
               StyleBox[
                
                RectangleBox[{-0.13235294999999953`, -1.13235295}, {
                 0.1323529500000003, -0.8676470500000001}], 
                Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
               "VertexID$3"], 
              InsetBox[
               FormBox[
                StyleBox["3", 15, StripOnInput -> False], TraditionalForm], 
               Offset[{2, 2}, 
                DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
             BoxID -> "VertexLabelID$3"], 
            TagBox[{
              TagBox[
               StyleBox[
                
                RectangleBox[{0.733672453784439, -0.6323529500000011}, {
                 0.9983783537844388, -0.3676470500000013}], 
                Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
               "VertexID$4"], 
              InsetBox[
               FormBox[
                StyleBox["4", 15, StripOnInput -> False], TraditionalForm], 
               Offset[{2, 2}, 
                DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
             BoxID -> "VertexLabelID$4"], 
            TagBox[{
              TagBox[
               StyleBox[
                
                PolygonBox[{{0.8660254037844386, 0.6684349999999991}, {
                 0.6983779037844388, 0.37806184999999937`}, {
                 1.0336729037844385`, 0.37806184999999937`}, {
                 0.8660254037844386, 0.6684349999999991}}], 
                Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", 
               BoxID -> "VertexID$5"], 
              InsetBox[
               FormBox[
                StyleBox["5", 15, StripOnInput -> False], TraditionalForm], 
               Offset[{2, 2}, 
                DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
             BoxID -> "VertexLabelID$5"], 
            TagBox[{
              TagBox[
               StyleBox[
                
                PolygonBox[{{1.8369701987210297`*^-16, 
                 1.1764704999999998`}, {-0.04362599999999978, 
                 1.0445056}, {-0.17647049999999964`, 
                 1.04165905}, {-0.07058819999999977, 
                 0.95725375}, {-0.10906484999999974`, 0.8235295000000001}, {
                 1.8369701987210297`*^-16, 0.9033290500000001}, {
                 0.1090648500000001, 0.8235295000000001}, {
                 0.07058820000000013, 0.95725375}, {0.17647050000000003`, 
                 1.04165905}, {0.043626000000000144`, 1.0445056}, {
                 1.8369701987210297`*^-16, 1.1764704999999998`}}], 
                Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
               BoxID -> "VertexID$6"], 
              InsetBox[
               FormBox[
                StyleBox["6", 15, StripOnInput -> False], TraditionalForm], 
               Offset[{2, 2}, 
                DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
               ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, "DynamicName", 
             BoxID -> "VertexLabelID$6"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{1.924055325059868, 
            262.43930669098995`}, {-149.33101984880707`, 140.7943372423799}}],
          
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[0.2]], 3->
      TagBox[GridBox[{
         {
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3, 4, 5, 6}, {Null, 
                SparseArray[
                Automatic, {6, 6}, 0, {
                 1, {{0, 5, 10, 15, 20, 25, 30}, {{2}, {3}, {4}, {5}, {6}, {
                   1}, {3}, {4}, {5}, {6}, {1}, {2}, {4}, {5}, {6}, {1}, {
                   2}, {3}, {5}, {6}, {1}, {2}, {3}, {4}, {6}, {1}, {2}, {
                   3}, {4}, {5}}}, Pattern}]}, {
               GraphHighlight -> {1, 3, 5, 4, 6, 2}, 
                GraphHighlightStyle -> {
                 1 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
                  2 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
                  3 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
                  4 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
                  6 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
                  5 -> {VertexStyle -> Hue[0.14, 1, 0.9]}}, GraphLayout -> 
                "CircularEmbedding", ImageSize -> Scaled[0.2], 
                VertexLabels -> {
                 5 -> 5, 1 -> 1, 3 -> 3, 2 -> 2, 6 -> 6, 4 -> 4}, 
                VertexLabelStyle -> {15}, 
                VertexShapeFunction -> {
                 2 -> "Square", 3 -> "Square", 5 -> "Triangle", 4 -> "Square",
                   6 -> "Star", 1 -> "Square"}, VertexSize -> {0.3}, 
                VertexStyle -> {
                 2 -> RGBColor[1, 0, 0], 4 -> RGBColor[1, 0, 0], 1 -> 
                  RGBColor[1, 0, 0], 3 -> RGBColor[1, 0, 0], 5 -> 
                  RGBColor[1, 1, 0], 6 -> RGBColor[0.5, 0, 0.5]}}]], 
             Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], 
                LineBox[{
                  DynamicLocation["VertexID$1", Automatic, Center], 
                  DynamicLocation["VertexID$2", Automatic, Center]}], 
                LineBox[{
                  DynamicLocation["VertexID$1", Automatic, Center], 
                  DynamicLocation["VertexID$3", Automatic, Center]}], 
                LineBox[{
                  DynamicLocation["VertexID$1", Automatic, Center], 
                  DynamicLocation["VertexID$4", Automatic, Center]}], 
                LineBox[{
                  DynamicLocation["VertexID$1", Automatic, Center], 
                  DynamicLocation["VertexID$5", Automatic, Center]}], 
                LineBox[{
                  DynamicLocation["VertexID$1", Automatic, Center], 
                  DynamicLocation["VertexID$6", Automatic, Center]}], 
                LineBox[{
                  DynamicLocation["VertexID$2", Automatic, Center], 
                  DynamicLocation["VertexID$3", Automatic, Center]}], 
                LineBox[{
                  DynamicLocation["VertexID$2", Automatic, Center], 
                  DynamicLocation["VertexID$4", Automatic, Center]}], 
                LineBox[{
                  DynamicLocation["VertexID$2", Automatic, Center], 
                  DynamicLocation["VertexID$5", Automatic, Center]}], 
                LineBox[{
                  DynamicLocation["VertexID$2", Automatic, Center], 
                  DynamicLocation["VertexID$6", Automatic, Center]}], 
                LineBox[{
                  DynamicLocation["VertexID$3", Automatic, Center], 
                  DynamicLocation["VertexID$4", Automatic, Center]}], 
                LineBox[{
                  DynamicLocation["VertexID$3", Automatic, Center], 
                  DynamicLocation["VertexID$5", Automatic, Center]}], 
                LineBox[{
                  DynamicLocation["VertexID$3", Automatic, Center], 
                  DynamicLocation["VertexID$6", Automatic, Center]}], 
                LineBox[{
                  DynamicLocation["VertexID$4", Automatic, Center], 
                  DynamicLocation["VertexID$5", Automatic, Center]}], 
                LineBox[{
                  DynamicLocation["VertexID$4", Automatic, Center], 
                  DynamicLocation["VertexID$6", Automatic, Center]}], 
                LineBox[{
                  DynamicLocation["VertexID$5", Automatic, Center], 
                  DynamicLocation["VertexID$6", Automatic, Center]}]}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[{
                  TagBox[
                   StyleBox[
                    
                    RectangleBox[{-0.9983783537844388, 
                    0.36764705000000086`}, {-0.733672453784439, 
                    0.6323529500000007}], 
                    Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", 
                   BoxID -> "VertexID$1"], 
                  InsetBox[
                   FormBox[
                    StyleBox["1", 15, StripOnInput -> False], 
                    TraditionalForm], 
                   Offset[{2, 2}, 
                    DynamicLocation["VertexID$1", Automatic, {Right, Top}]], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                 "DynamicName", BoxID -> "VertexLabelID$1"], 
                TagBox[{
                  TagBox[
                   StyleBox[
                    
                    RectangleBox[{-0.9983783537844383, -0.6323529499999994}, \
{-0.7336724537844385, -0.3676470499999995}], 
                    Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", 
                   BoxID -> "VertexID$2"], 
                  InsetBox[
                   FormBox[
                    StyleBox["2", 15, StripOnInput -> False], 
                    TraditionalForm], 
                   Offset[{2, 2}, 
                    DynamicLocation["VertexID$2", Automatic, {Right, Top}]], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                 "DynamicName", BoxID -> "VertexLabelID$2"], 
                TagBox[{
                  TagBox[
                   StyleBox[
                    
                    RectangleBox[{-0.13235294999999953`, -1.13235295}, {
                    0.1323529500000003, -0.8676470500000001}], 
                    Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", 
                   BoxID -> "VertexID$3"], 
                  InsetBox[
                   FormBox[
                    StyleBox["3", 15, StripOnInput -> False], 
                    TraditionalForm], 
                   Offset[{2, 2}, 
                    DynamicLocation["VertexID$3", Automatic, {Right, Top}]], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                 "DynamicName", BoxID -> "VertexLabelID$3"], 
                TagBox[{
                  TagBox[
                   StyleBox[
                    
                    RectangleBox[{0.733672453784439, -0.6323529500000011}, {
                    0.9983783537844388, -0.3676470500000013}], 
                    Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", 
                   BoxID -> "VertexID$4"], 
                  InsetBox[
                   FormBox[
                    StyleBox["4", 15, StripOnInput -> False], 
                    TraditionalForm], 
                   Offset[{2, 2}, 
                    DynamicLocation["VertexID$4", Automatic, {Right, Top}]], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                 "DynamicName", BoxID -> "VertexLabelID$4"], 
                TagBox[{
                  TagBox[
                   StyleBox[
                    
                    PolygonBox[{{0.8660254037844386, 0.6684349999999991}, {
                    0.6983779037844388, 0.37806184999999937`}, {
                    1.0336729037844385`, 0.37806184999999937`}, {
                    0.8660254037844386, 0.6684349999999991}}], 
                    Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", 
                   BoxID -> "VertexID$5"], 
                  InsetBox[
                   FormBox[
                    StyleBox["5", 15, StripOnInput -> False], 
                    TraditionalForm], 
                   Offset[{2, 2}, 
                    DynamicLocation["VertexID$5", Automatic, {Right, Top}]], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                 "DynamicName", BoxID -> "VertexLabelID$5"], 
                TagBox[{
                  TagBox[
                   StyleBox[
                    
                    PolygonBox[{{1.8369701987210297`*^-16, 
                    1.1764704999999998`}, {-0.04362599999999978, 
                    1.0445056}, {-0.17647049999999964`, 
                    1.04165905}, {-0.07058819999999977, 
                    0.95725375}, {-0.10906484999999974`, 
                    0.8235295000000001}, {1.8369701987210297`*^-16, 
                    0.9033290500000001}, {0.1090648500000001, 
                    0.8235295000000001}, {0.07058820000000013, 0.95725375}, {
                    0.17647050000000003`, 1.04165905}, {0.043626000000000144`,
                     1.0445056}, {1.8369701987210297`*^-16, 
                    1.1764704999999998`}}], 
                    Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName",
                    BoxID -> "VertexID$6"], 
                  InsetBox[
                   FormBox[
                    StyleBox["6", 15, StripOnInput -> False], 
                    TraditionalForm], 
                   Offset[{2, 2}, 
                    DynamicLocation["VertexID$6", Automatic, {Right, Top}]], 
                   ImageScaled[{0, 0}], BaseStyle -> "Graphics"]}, 
                 "DynamicName", BoxID -> 
                 "VertexLabelID$6"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{1.4382383923073263`, 
                239.03930669098986`}, {-137.3475050938878, 
                127.83258527252647`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.2]], 
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              
              Graph[{1, 2, 3}, {
               SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 3, 5, 7}, {{1}, {2}, {3}, {1}, {3}, {1}, {2}}}, {1, 
                  1, 1, 1, 1, 1, 1}}], Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {15}, 
                EdgeWeight -> {3, 1, 1, 4, 1, 4, 1}, ImageSize -> Scaled[0.2],
                 VertexLabelStyle -> {15}, 
                VertexShapeFunction -> {
                 2 -> "Triangle", 3 -> "Star", 1 -> "Square"}, 
                VertexSize -> {0.2}, 
                VertexStyle -> {
                 1 -> RGBColor[1, 0, 0], 2 -> RGBColor[1, 1, 0], 3 -> 
                  RGBColor[0.5, 0, 0.5]}}]], Typeset`boxes, 
             Typeset`boxes$s2d = GraphicsGroupBox[{{
                Arrowheads[0.04158219578146897], 
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], {
                    0.6873904251757703, -0.08915602018494104}, {
                    0.7430802511242329, -0.2882334630989339}, {
                    0.6836720610015965, -0.4151939759099758}, {
                    0.30722904122918515`, -0.413857514310497}, {
                    0.2487238169004704, -0.2864783810384543}, {
                    0.3058257650517279, -0.08780137555297982}, 
                    DynamicLocation["VertexID$1", Automatic, Center]}, 
                    SplineDegree -> 7]], "DynamicName", BoxID -> 
                  "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 15, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], {
                    0.6142573696809985, 0.5102397598812024}, 
                    DynamicLocation["VertexID$2", Automatic, Center]}]], 
                  "DynamicName", BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 15, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$1", Automatic, Center], {
                    0.1137092818331808, 0.35673507828119033`}, 
                    DynamicLocation["VertexID$3", Automatic, Center]}]], 
                  "DynamicName", BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 15, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], {
                    0.8826585025027763, 0.3540051804647464}, 
                    DynamicLocation["VertexID$1", Automatic, Center]}]], 
                  "DynamicName", BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"4\"", 15, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$2", Automatic, Center], {
                    0.49944556895469644`, 0.7107402587459368}, 
                    DynamicLocation["VertexID$3", Automatic, Center]}]], 
                  "DynamicName", BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 15, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], {
                    0.3832129335480799, 0.5110599453486782}, 
                    DynamicLocation["VertexID$1", Automatic, Center]}]], 
                  "DynamicName", BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"4\"", 15, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  ArrowBox[
                   BezierCurveBox[{
                    DynamicLocation["VertexID$3", Automatic, Center], {
                    0.5005480878478179, 1.0212997052298805`}, 
                    DynamicLocation["VertexID$2", Automatic, Center]}]], 
                  "DynamicName", BoxID -> "EdgeLabelID$7"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 15, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$7", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  RectangleBox[{0.40868692018231173`, -0.08823529519894883}, {
                   0.5851575105802094, 0.08823529519894883}], 
                  RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  PolygonBox[{{0.9999936568025142, 0.9765349342360353}, {
                   0.8882286628838613, 0.7829528447692071}, {
                   1.1117586507211672`, 0.7829528447692071}, {
                   0.9999936568025142, 0.9765349342360353}}], 
                  RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  PolygonBox[{{0., 0.9854420172284705}, {-0.02908399841748402,
                    0.8974654220154452}, {-0.11764699359860206`, 
                   0.8955677221187027}, {-0.04705879743944083, 
                   0.8392975251804717}, {-0.0727098960437155, 
                   0.7501480300312663}, {0., 0.803347727136569}, {
                   0.0727098960437155, 0.7501480300312663}, {
                   0.04705879743944083, 0.8392975251804717}, {
                   0.11764699359860206`, 0.8955677221187027}, {
                   0.02908399841748402, 0.8974654220154452}, {0., 
                   0.9854420172284705}}], 
                  RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{0.7606933090100938, 
                234.2393066909899}, {-143.23637309811417`, 
                134.23930669098993`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.2]]}
        },
        AutoDelete->False,
        GridBoxItemSize->{"Columns" -> {{All}}, "Rows" -> {{All}}},
        GridBoxSpacings->{"Columns" -> {{
             Scaled[0.1]}}, "Rows" -> {{0}}}],
       "Grid"]}, Dynamic[$CellContext`time],
      Alignment->Center,
      ImageSize->Full,
      TransitionEffect->"Fade"]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{{3.583761233451836*^9, 3.5837612461583757`*^9}, 
   3.5837682732598867`*^9, 3.5837689136165457`*^9, 3.583774925537511*^9, 
   3.583775176900548*^9, 3.583781838826046*^9, 3.58378278373595*^9, 
   3.583783406387458*^9, 3.5837866740946302`*^9, 3.5837871497520237`*^9, 
   3.583949366260417*^9, 3.583949907375862*^9, 3.583950021379196*^9, 
   3.583950904635079*^9, 3.584104156676177*^9, 3.5841052599936666`*^9, 
   3.584105837544619*^9, 3.5841879495098886`*^9, 3.584198658544792*^9, {
   3.584212697963397*^9, 3.58421276365201*^9}, 3.5842128657346287`*^9, 
   3.584213140827325*^9, 3.584279034517522*^9, 3.584297754275489*^9, {
   3.5842982423886547`*^9, 3.584298250091817*^9}, {3.5842982929289923`*^9, 
   3.584298424548256*^9}, 3.584300534550603*^9, 3.584304171134817*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dwnArrw", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Arrowheads", "[", ".1", "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "0"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", ".5"}]}], "}"}]}], "}"}], "]"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"badOrbi", " ", "=", " ", 
     RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AdjacencyOrbigraph", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "2", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"VertexSize", " ", "\[Rule]", " ", ".2"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"1", " ", "\[Rule]", " ", "Red"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"2", "\[Rule]", " ", "Yellow"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"3", "\[Rule]", "Purple"}]}], "\[IndentingNewLine]", 
           "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"EdgeLabelStyle", " ", "\[Rule]", " ", "15"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"VertexShapeFunction", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"1", "\[Rule]", " ", "\"\<Triangle\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"2", "\[Rule]", "\"\<Square\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"3", "\[Rule]", "\"\<Star\>\""}]}], "\[IndentingNewLine]",
            "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"Scaled", "[", ".4", "]"}]}]}], "\[IndentingNewLine]", 
        "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"goodOrbi", " ", "=", " ", 
     RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AdjacencyOrbigraph", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "2"}], "}"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"VertexSize", "\[Rule]", ".2"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"EdgeLabelStyle", " ", "\[Rule]", " ", "15"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"1", "\[Rule]", " ", "Red"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"2", "\[Rule]", " ", "Yellow"}]}], "\[IndentingNewLine]", 
           "}"}]}], ",", "\[IndentingNewLine]", " ", 
         RowBox[{"VertexShapeFunction", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"1", "\[Rule]", " ", "\"\<Triangle\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"2", "\[Rule]", " ", "\"\<Square\>\""}]}], 
           "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"Scaled", "[", ".4", "]"}]}]}], "\[IndentingNewLine]", 
        "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"goodCover", " ", "=", " ", 
     RowBox[{"SetProperty", "[", 
      RowBox[{
       RowBox[{"CreateFiniteCoveringGraph", "[", 
        RowBox[{"Normal", "@", 
         RowBox[{"WeightedAdjacencyMatrix", "@", "goodOrbi"}]}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ImageSize", "\[Rule]", 
        RowBox[{"Scaled", "[", ".4", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"goodUCover", " ", "=", " ", 
     RowBox[{"SetProperty", "[", 
      RowBox[{
       RowBox[{"CreateUniversalCovering", "[", 
        RowBox[{"goodOrbi", ",", "4"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"VertexSize", "\[Rule]", ".3"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"Scaled", "[", ".4", "]"}]}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"badUCover", " ", "=", " ", 
     RowBox[{"SetProperty", "[", 
      RowBox[{
       RowBox[{"CreateUniversalCovering", "[", 
        RowBox[{"badOrbi", ",", "4"}], "]"}], ",", " ", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"VertexSize", "\[Rule]", ".3"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"Scaled", "[", ".4", "]"}]}]}], "}"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"showcover", " ", "=", " ", "False"}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Good Orbigraph\>\"", ",", " ", "\"\<Subsection\>\"", ",", " ", 
           
           RowBox[{"FontSize", "\[Rule]", " ", 
            RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Style", "[", 
          RowBox[{
          "\"\<Bad Orbigraph\>\"", ",", " ", "\"\<Subsection\>\"", ",", " ", 
           RowBox[{"FontSize", "\[Rule]", 
            RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PaneSelector", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"False", " ", "\[Rule]", " ", 
              RowBox[{"Checkbox", "[", 
               RowBox[{"Dynamic", "[", "showcover", "]"}], "]"}]}], ",", 
             "\[IndentingNewLine]", 
             RowBox[{"True", " ", "\[Rule]", " ", "goodUCover"}]}], 
            "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Dynamic", "[", "showcover", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Alignment", "\[Rule]", "Center"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PaneSelector", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"True", " ", "\[Rule]", " ", "badUCover"}], 
            "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Dynamic", "[", "showcover", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Alignment", "\[Rule]", "Center"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"PaneSelector", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"True", " ", "\[Rule]", " ", 
             RowBox[{"Graphics", "[", 
              RowBox[{"dwnArrw", ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"Scaled", "[", ".3", "]"}]}]}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Dynamic", "[", "showcover", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Alignment", "\[Rule]", "Center"}]}], 
          "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"PaneSelector", "[", 
          RowBox[{
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{"True", " ", "\[Rule]", " ", 
             RowBox[{"Graphics", "[", 
              RowBox[{"dwnArrw", ",", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"Scaled", "[", ".3", "]"}]}]}], "]"}]}], 
            "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Dynamic", "[", "showcover", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Alignment", "\[Rule]", "Center"}]}], 
          "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"goodCover", ",", "\[IndentingNewLine]", 
         RowBox[{"Magnify", "[", 
          RowBox[{
           RowBox[{"Text", "[", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<  \[ScriptX]\>\"", ",", " ", "Red", ",", " ", 
              RowBox[{"FontSize", "->", 
               RowBox[{"Scaled", "[", ".2", "]"}]}]}], "]"}], "]"}], ",", " ",
            "4"}], "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Graphics", "[", 
          RowBox[{"dwnArrw", ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"Scaled", "[", ".3", "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Graphics", "[", 
          RowBox[{"dwnArrw", ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"Scaled", "[", ".3", "]"}]}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"goodOrbi", ",", "\[IndentingNewLine]", "badOrbi"}], 
        "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Alignment", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Right", ",", " ", "Left"}], "}"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Scaled", "[", ".2", "]"}], ",", " ", 
        RowBox[{"Scaled", "[", ".01", "]"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Background", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"White", ",", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"2", ",", "1"}], "}"}], "\[Rule]", "Red"}], "}"}]}], 
       "}"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"ItemSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"Scaled", "[", ".5", "]"}], ",", " ", 
         RowBox[{"Scaled", "[", ".5", "]"}]}], "}"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.583689204783654*^9, 
   3.5836892059379377`*^9}, {3.583689247574144*^9, 3.583689253766901*^9}, 
   3.5836894292191153`*^9, 3.583690035795977*^9, 3.583692209784424*^9, {
   3.583775088515678*^9, 3.583775101231744*^9}, {3.583786434962036*^9, 
   3.583786483895177*^9}, {3.5838692486544113`*^9, 3.583869272224636*^9}, {
   3.58386934775286*^9, 3.583869350350371*^9}, {3.583869506301964*^9, 
   3.5838695147494707`*^9}, {3.5838698274605713`*^9, 3.583869876444372*^9}, {
   3.583950970921329*^9, 3.583950983399239*^9}, {3.584106329957271*^9, 
   3.5841063464142447`*^9}, {3.584125333308248*^9, 3.584125333540291*^9}, {
   3.584195107763858*^9, 3.584195138631399*^9}, {3.584195302158284*^9, 
   3.584195374825238*^9}, {3.584195454266306*^9, 3.5841955032225103`*^9}, {
   3.584195599408515*^9, 3.584195639270626*^9}, {3.584195677525853*^9, 
   3.584195683081524*^9}, {3.584196554938385*^9, 3.584196558322584*^9}, {
   3.5841977797627583`*^9, 3.584197787199843*^9}, {3.584197824378058*^9, 
   3.584197990483066*^9}, {3.584198058948021*^9, 3.5841981594176073`*^9}, {
   3.584208745561983*^9, 3.584208746441575*^9}, {3.5842087981701307`*^9, 
   3.584208855354003*^9}, {3.584298446287365*^9, 3.584298529295892*^9}, {
   3.584298694359271*^9, 3.584299014467272*^9}, {3.58429907002599*^9, 
   3.5842991415998363`*^9}, {3.584299188646434*^9, 3.5842991952765713`*^9}, {
   3.584299271505011*^9, 3.584299272791916*^9}, {3.584299353223269*^9, 
   3.5842994681249866`*^9}, {3.584299546973187*^9, 3.5842995509343367`*^9}, {
   3.5842996701139727`*^9, 3.5842997584997377`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     PaneSelectorBox[{False->
      CheckboxBox[Dynamic[$CellContext`showcover]], True->
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{{1}, {{
              DirectedEdge[1, 2], 1}}, {{
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 2], 3}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 2], 1}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 2], 2}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 2], 1}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 2], 2}}, {{
              DirectedEdge[1, 2], 3}, {
              DirectedEdge[2, 2], 1}}, {{
              DirectedEdge[1, 2], 3}, {
              DirectedEdge[2, 2], 2}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 1], 1}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 2], 2}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 1], 1}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 2], 2}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 1], 1}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 2], 2}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 1], 1}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 2], 2}}, {{
              DirectedEdge[1, 2], 3}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 1], 1}}, {{
              DirectedEdge[1, 2], 3}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 2], 2}}, {{
              DirectedEdge[1, 2], 3}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 1], 1}}, {{
              DirectedEdge[1, 2], 3}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 2], 2}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 1], 1}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 1], 1}, {
              DirectedEdge[1, 2], 3}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 1], 1}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 2], 2}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 1], 1}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 1], 1}, {
              DirectedEdge[1, 2], 3}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 1], 1}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 2], 2}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 1], 1}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 1], 1}, {
              DirectedEdge[1, 2], 3}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 1], 1}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 2], 2}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 1], 1}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 1], 1}, {
              DirectedEdge[1, 2], 3}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 1], 1}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 2], 2}}, {{
              DirectedEdge[1, 2], 3}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 1], 1}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 2], 3}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 1], 1}, {
              DirectedEdge[1, 2], 3}}, {{
              DirectedEdge[1, 2], 3}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 1], 1}}, {{
              DirectedEdge[1, 2], 3}, {
              DirectedEdge[2, 2], 1}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 2], 2}}, {{
              DirectedEdge[1, 2], 3}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 1], 1}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 2], 3}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 1], 1}, {
              DirectedEdge[1, 2], 3}}, {{
              DirectedEdge[1, 2], 3}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 1], 1}}, {{
              DirectedEdge[1, 2], 3}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 2], 2}, {
              DirectedEdge[2, 2], 2}}}, {
           Null, {{1, 2}, {1, 3}, {1, 4}, {2, 5}, {2, 6}, {3, 7}, {3, 8}, {4, 
            9}, {4, 10}, {5, 11}, {5, 12}, {6, 13}, {6, 14}, {7, 15}, {7, 
            16}, {8, 17}, {8, 18}, {9, 19}, {9, 20}, {10, 21}, {10, 22}, {11, 
            23}, {11, 24}, {12, 25}, {12, 26}, {13, 27}, {13, 28}, {14, 29}, {
            14, 30}, {15, 31}, {15, 32}, {16, 33}, {16, 34}, {17, 35}, {17, 
            36}, {18, 37}, {18, 38}, {19, 39}, {19, 40}, {20, 41}, {20, 42}, {
            21, 43}, {21, 44}, {22, 45}, {22, 46}}}, {
           GraphLayout -> "RadialEmbedding", ImageSize -> Scaled[0.4], 
            VertexShapeFunction -> {{{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 1}} -> "Square", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 3}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> "Square", {1} -> "Triangle", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 3}} -> "Square", {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 3}} -> "Square", {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 1}} -> "Square", {{
                 DirectedEdge[1, 2], 3}} -> "Square", {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 3}} -> "Square", {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 3}} -> "Square", {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 1}} -> "Square", {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 1}} -> "Square", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 3}} -> "Square", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> "Square"}, VertexSize -> {0.3}, 
            VertexStyle -> {{{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 3}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 3}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 3}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 1}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 3}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 1}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 3}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 1}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}} -> RGBColor[1, 0, 0], {1} -> 
              RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 3}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 3}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 2}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 3}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 2], 1}, {
                 DirectedEdge[2, 2], 2}} -> RGBColor[1, 1, 0]}}]], 
         Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            LineBox[{{
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$2", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$3", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$6", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$8", Automatic, Center]}, {
               DynamicLocation["VertexID$4", Automatic, Center], 
               DynamicLocation["VertexID$9", Automatic, Center]}, {
               DynamicLocation["VertexID$4", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}, {
               DynamicLocation["VertexID$5", Automatic, Center], 
               DynamicLocation["VertexID$11", Automatic, Center]}, {
               DynamicLocation["VertexID$5", Automatic, Center], 
               DynamicLocation["VertexID$12", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$13", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$14", Automatic, Center]}, {
               DynamicLocation["VertexID$7", Automatic, Center], 
               DynamicLocation["VertexID$15", Automatic, Center]}, {
               DynamicLocation["VertexID$7", Automatic, Center], 
               DynamicLocation["VertexID$16", Automatic, Center]}, {
               DynamicLocation["VertexID$8", Automatic, Center], 
               DynamicLocation["VertexID$17", Automatic, Center]}, {
               DynamicLocation["VertexID$8", Automatic, Center], 
               DynamicLocation["VertexID$18", Automatic, Center]}, {
               DynamicLocation["VertexID$9", Automatic, Center], 
               DynamicLocation["VertexID$19", Automatic, Center]}, {
               DynamicLocation["VertexID$9", Automatic, Center], 
               DynamicLocation["VertexID$20", Automatic, Center]}, {
               DynamicLocation["VertexID$10", Automatic, Center], 
               DynamicLocation["VertexID$21", Automatic, Center]}, {
               DynamicLocation["VertexID$10", Automatic, Center], 
               DynamicLocation["VertexID$22", Automatic, Center]}, {
               DynamicLocation["VertexID$11", Automatic, Center], 
               DynamicLocation["VertexID$23", Automatic, Center]}, {
               DynamicLocation["VertexID$11", Automatic, Center], 
               DynamicLocation["VertexID$24", Automatic, Center]}, {
               DynamicLocation["VertexID$12", Automatic, Center], 
               DynamicLocation["VertexID$25", Automatic, Center]}, {
               DynamicLocation["VertexID$12", Automatic, Center], 
               DynamicLocation["VertexID$26", Automatic, Center]}, {
               DynamicLocation["VertexID$13", Automatic, Center], 
               DynamicLocation["VertexID$27", Automatic, Center]}, {
               DynamicLocation["VertexID$13", Automatic, Center], 
               DynamicLocation["VertexID$28", Automatic, Center]}, {
               DynamicLocation["VertexID$14", Automatic, Center], 
               DynamicLocation["VertexID$29", Automatic, Center]}, {
               DynamicLocation["VertexID$14", Automatic, Center], 
               DynamicLocation["VertexID$30", Automatic, Center]}, {
               DynamicLocation["VertexID$15", Automatic, Center], 
               DynamicLocation["VertexID$31", Automatic, Center]}, {
               DynamicLocation["VertexID$15", Automatic, Center], 
               DynamicLocation["VertexID$32", Automatic, Center]}, {
               DynamicLocation["VertexID$16", Automatic, Center], 
               DynamicLocation["VertexID$33", Automatic, Center]}, {
               DynamicLocation["VertexID$16", Automatic, Center], 
               DynamicLocation["VertexID$34", Automatic, Center]}, {
               DynamicLocation["VertexID$17", Automatic, Center], 
               DynamicLocation["VertexID$35", Automatic, Center]}, {
               DynamicLocation["VertexID$17", Automatic, Center], 
               DynamicLocation["VertexID$36", Automatic, Center]}, {
               DynamicLocation["VertexID$18", Automatic, Center], 
               DynamicLocation["VertexID$37", Automatic, Center]}, {
               DynamicLocation["VertexID$18", Automatic, Center], 
               DynamicLocation["VertexID$38", Automatic, Center]}, {
               DynamicLocation["VertexID$19", Automatic, Center], 
               DynamicLocation["VertexID$39", Automatic, Center]}, {
               DynamicLocation["VertexID$19", Automatic, Center], 
               DynamicLocation["VertexID$40", Automatic, Center]}, {
               DynamicLocation["VertexID$20", Automatic, Center], 
               DynamicLocation["VertexID$41", Automatic, Center]}, {
               DynamicLocation["VertexID$20", Automatic, Center], 
               DynamicLocation["VertexID$42", Automatic, Center]}, {
               DynamicLocation["VertexID$21", Automatic, Center], 
               DynamicLocation["VertexID$43", Automatic, Center]}, {
               DynamicLocation["VertexID$21", Automatic, Center], 
               DynamicLocation["VertexID$44", Automatic, Center]}, {
               DynamicLocation["VertexID$22", Automatic, Center], 
               DynamicLocation["VertexID$45", Automatic, Center]}, {
               DynamicLocation["VertexID$22", Automatic, Center], 
               DynamicLocation["VertexID$46", Automatic, Center]}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{3.491679184531429, 3.6399781485886966`}, {
               3.3440735765711422`, 3.3843184737286873`}, {
               3.6392847924917153`, 3.3843184737286873`}, {3.491679184531429, 
               3.6399781485886966`}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$1"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{2.612654779844559, 3.8153748336168958`}, {
               2.845715668316948, 4.048435722089285}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$2"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{3.3751487402952343`, 2.4946965536519117`}, {
               3.6082096287676233`, 2.7277574421243007`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{4.13764270074591, 3.815374833616895}, {
               4.370703589218299, 4.048435722089284}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$4"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{2.494696553651912, 4.900136661196584}, {
               2.727757442124301, 5.1331975496689735`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$5"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{1.6142443670085895`, 3.375148740295235}, {
               1.8473052554809781`, 3.608209628767624}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$6"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{2.4946965536519112`, 1.8501608193938843`}, {
               2.7277574421243003`, 2.083221707866273}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$7"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{4.2556009269385555`, 1.8501608193938832`}, {
               4.4886618154109446`, 2.083221707866272}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$8"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{5.136053113581879, 3.375148740295234}, {
               5.3691140020542685`, 3.608209628767623}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$9"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{4.255600926938558, 4.900136661196584}, {
               4.488661815410947, 5.1331975496689735`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$10"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{2.8080458019150756`, 6.1913326662631025`}, {
               2.660440193954789, 5.935672991403093}, {2.955651409875362, 
               5.935672991403093}, {2.8080458019150756`, 
               6.1913326662631025`}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$11"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{1.5074276052371833`, 5.242869875353286}, {
               1.740488493709572, 5.475930763825675}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$12"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{0.9403246668570246, 4.323611531205052}, {
               0.7927190588967383, 4.067951856345043}, {1.087930274817311, 
               4.067951856345043}, {0.9403246668570246, 4.323611531205052}}], 
              
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$13"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{0.8237942226208295, 2.691515357678882}, {
               1.056855111093218, 2.924576246151271}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$14"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{1.6239580494733772`, 1.7722570135306457`}, {
               1.4763524415130909`, 1.5165973386706362`}, {
               1.7715636574336635`, 1.5165973386706362`}, {
               1.6239580494733772`, 1.7722570135306457`}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$15"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{2.691515357678881, 0.8237942226208295}, {
               2.92457624615127, 1.056855111093218}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$16"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{4.175312567147781, 1.0886236309142918`}, {
               4.027706959187495, 0.8329639560542823}, {4.322918175108067, 
               0.8329639560542823}, {4.175312567147781, 
               1.0886236309142918`}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$17"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{5.242869875353284, 1.507427605237181}, {
               5.475930763825673, 1.7404884937095695`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$18"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{6.043033702205834, 2.9563447659723434`}, {
               5.895428094245548, 2.700685091112334}, {6.19063931016612, 
               2.700685091112334}, {6.043033702205834, 2.9563447659723434`}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$19"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{5.92650325796964, 4.058782122911587}, {
               6.159564146442029, 4.291843011383976}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$20"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{5.359400319589483, 5.507699283646747}, {
               5.211794711629197, 5.252039608786737}, {5.507005927549769, 
               5.252039608786737}, {5.359400319589483, 5.507699283646747}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$21"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{4.0587821229115875`, 5.92650325796964}, {
               4.2918430113839765`, 6.159564146442029}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$22"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{2.915460454877751, 6.866827924826663}, {
               3.14852134335014, 7.099888813299052}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$23"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{2.0274108810231732`, 6.628875758673526}, {
               2.2604717694955623`, 6.861936647145915}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$24"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{1.3477378592720615`, 6.434016881549505}, {
               1.2001322513117751`, 6.178357206689496}, {1.4953434672323478`, 
               6.178357206689496}, {1.3477378592720615`, 6.434016881549505}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$25"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{0.5811100073344273, 5.519090065554603}, {
               0.8141708958068159, 5.752150954026992}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$26"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{0.12142172191694353`, 4.722886599567297}, {
               0.35448261038933215`, 4.955947488039686}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$27"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{-0.11653044423619344`, 3.8348370257127216`}, {
               0.11653044423619521`, 4.06789791418511}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$28"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{0., 3.1802898631712133`}, {-0.14760560796028638`, 
               2.924630188311204}, {0.14760560796028638`, 
               2.924630188311204}, {0., 3.1802898631712133`}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$29"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{0.12142172191694175`, 2.027410881023175}, {
               0.3544826103893304, 2.260471769495564}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$30"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{0.5811100073344269, 1.2312074150358672`}, {
               0.8141708958068155, 1.4642683035082558`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$31"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{1.2312074150358663`, 0.5811100073344277}, {
               1.4642683035082549`, 0.8141708958068163}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$32"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{2.1439413252593655`, 0.38625113021040586`}, {
               1.9963357172990792`, 0.1305914553503964}, {2.291546933219652, 
               0.1305914553503964}, {2.1439413252593655`, 
               0.38625113021040586`}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$33"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{2.91546045487775, -0.11653044423619388`}, {
               3.148521343350139, 0.11653044423619477`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$34"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{3.8348370257127176`, -0.11653044423619432`}, {
               4.067897914185107, 0.11653044423619432`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$35"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{4.7228865995672935`, 0.12142172191694175`}, {
               4.9559474880396825`, 0.3544826103893304}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$36"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{5.635620509790794, 0.845939415627887}, {
               5.488014901830508, 0.5902797407678775}, {5.78322611775108, 
               0.5902797407678775}, {5.635620509790794, 0.845939415627887}}], 
              
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$37"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{6.169187473256039, 1.2312074150358636`}, {
               6.402248361728428, 1.4642683035082522`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$38"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{6.628875758673526, 2.0274108810231706`}, {
               6.861936647145915, 2.2604717694955596`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$39"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{6.866827924826663, 2.9154604548777496`}, {
               7.099888813299052, 3.1485213433501387`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$40"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{6.983358369062858, 4.0996664340061795`}, {
               6.8357527611025715`, 3.84400675914617}, {7.130963977023144, 
               3.84400675914617}, {6.983358369062858, 4.0996664340061795`}}], 
              
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$41"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{6.628875758673527, 4.7228865995672935`}, {
               6.8619366471459164`, 4.9559474880396825`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$42"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{6.169187473256044, 5.519090065554599}, {
               6.402248361728433, 5.752150954026988}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$43"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{5.519090065554605, 6.169187473256039}, {
               5.752150954026994, 6.402248361728428}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$44"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{4.8394170438034925`, 6.893705166966988}, {
               4.691811435843206, 6.638045492106979}, {4.987022651763779, 
               6.638045492106979}, {4.8394170438034925`, 6.893705166966988}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$45"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{3.834837025712719, 6.866827924826663}, {
               4.0678979141851075`, 7.099888813299052}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$46"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{0.7606933090100938, 
            218.2393066909899}, {-109.53450669098989`, 105.3889071411135}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[0.4]]}, Dynamic[$CellContext`showcover],
      Alignment->Center], 
     PaneSelectorBox[{True->
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{{1}, {{
              DirectedEdge[1, 2], 1}}, {{
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 3], 1}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 1}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 2}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 1}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 2}}, {{
              DirectedEdge[1, 3], 1}, {
              DirectedEdge[3, 1], 2}}, {{
              DirectedEdge[1, 3], 1}, {
              DirectedEdge[3, 2], 1}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 1}, {
              DirectedEdge[3, 1], 1}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 1}, {
              DirectedEdge[3, 1], 2}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 2}, {
              DirectedEdge[3, 1], 1}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 2}, {
              DirectedEdge[3, 1], 2}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 1}, {
              DirectedEdge[3, 1], 1}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 1}, {
              DirectedEdge[3, 1], 2}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 2}, {
              DirectedEdge[3, 1], 1}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 2}, {
              DirectedEdge[3, 1], 2}}, {{
              DirectedEdge[1, 3], 1}, {
              DirectedEdge[3, 1], 2}, {
              DirectedEdge[1, 2], 1}}, {{
              DirectedEdge[1, 3], 1}, {
              DirectedEdge[3, 1], 2}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 3], 1}, {
              DirectedEdge[3, 2], 1}, {
              DirectedEdge[2, 1], 1}}, {{
              DirectedEdge[1, 3], 1}, {
              DirectedEdge[3, 2], 1}, {
              DirectedEdge[2, 3], 2}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 1}, {
              DirectedEdge[3, 1], 1}, {
              DirectedEdge[1, 2], 1}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 1}, {
              DirectedEdge[3, 1], 1}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 1}, {
              DirectedEdge[3, 1], 2}, {
              DirectedEdge[1, 2], 1}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 1}, {
              DirectedEdge[3, 1], 2}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 2}, {
              DirectedEdge[3, 1], 1}, {
              DirectedEdge[1, 2], 1}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 2}, {
              DirectedEdge[3, 1], 1}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 2}, {
              DirectedEdge[3, 1], 2}, {
              DirectedEdge[1, 2], 1}}, {{
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 2}, {
              DirectedEdge[3, 1], 2}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 1}, {
              DirectedEdge[3, 1], 1}, {
              DirectedEdge[1, 2], 1}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 1}, {
              DirectedEdge[3, 1], 1}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 1}, {
              DirectedEdge[3, 1], 2}, {
              DirectedEdge[1, 2], 1}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 1}, {
              DirectedEdge[3, 1], 2}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 2}, {
              DirectedEdge[3, 1], 1}, {
              DirectedEdge[1, 2], 1}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 2}, {
              DirectedEdge[3, 1], 1}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 2}, {
              DirectedEdge[3, 1], 2}, {
              DirectedEdge[1, 2], 1}}, {{
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 2}, {
              DirectedEdge[3, 1], 2}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 3], 1}, {
              DirectedEdge[3, 1], 2}, {
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 1}}, {{
              DirectedEdge[1, 3], 1}, {
              DirectedEdge[3, 1], 2}, {
              DirectedEdge[1, 2], 1}, {
              DirectedEdge[2, 3], 2}}, {{
              DirectedEdge[1, 3], 1}, {
              DirectedEdge[3, 1], 2}, {
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 1}}, {{
              DirectedEdge[1, 3], 1}, {
              DirectedEdge[3, 1], 2}, {
              DirectedEdge[1, 2], 2}, {
              DirectedEdge[2, 3], 2}}, {{
              DirectedEdge[1, 3], 1}, {
              DirectedEdge[3, 2], 1}, {
              DirectedEdge[2, 1], 1}, {
              DirectedEdge[1, 2], 2}}, {{
              DirectedEdge[1, 3], 1}, {
              DirectedEdge[3, 2], 1}, {
              DirectedEdge[2, 1], 1}, {
              DirectedEdge[1, 3], 1}}, {{
              DirectedEdge[1, 3], 1}, {
              DirectedEdge[3, 2], 1}, {
              DirectedEdge[2, 3], 2}, {
              DirectedEdge[3, 1], 1}}, {{
              DirectedEdge[1, 3], 1}, {
              DirectedEdge[3, 2], 1}, {
              DirectedEdge[2, 3], 2}, {
              DirectedEdge[3, 1], 2}}}, {
           Null, {{1, 2}, {1, 3}, {1, 4}, {2, 5}, {2, 6}, {3, 7}, {3, 8}, {4, 
            9}, {4, 10}, {5, 11}, {5, 12}, {6, 13}, {6, 14}, {7, 15}, {7, 
            16}, {8, 17}, {8, 18}, {9, 19}, {9, 20}, {10, 21}, {10, 22}, {11, 
            23}, {11, 24}, {12, 25}, {12, 26}, {13, 27}, {13, 28}, {14, 29}, {
            14, 30}, {15, 31}, {15, 32}, {16, 33}, {16, 34}, {17, 35}, {17, 
            36}, {18, 37}, {18, 38}, {19, 39}, {19, 40}, {20, 41}, {20, 42}, {
            21, 43}, {21, 44}, {22, 45}, {22, 46}}}, {
           GraphLayout -> "RadialEmbedding", ImageSize -> Scaled[0.4], 
            VertexShapeFunction -> {{{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}} -> "Star", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 1}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 1}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 1}} -> "Square", {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 2}} -> "Triangle", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 3], 1}} -> "Star", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 2}} -> "Square", {1} -> "Triangle", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 2}} -> "Triangle", {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}} -> "Star", {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 1], 2}} -> "Triangle", {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 2], 1}, {
                 DirectedEdge[2, 3], 2}} -> "Star", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 1}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}} -> "Star", {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 2], 1}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 1}} -> "Square", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}} -> "Star", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 2}} -> "Triangle", {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}} -> "Star", {{
                 DirectedEdge[1, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 1}} -> "Square", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 1}} -> "Square", {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 3], 1}} -> "Star", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 1}} -> "Square", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}} -> "Star", {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 2}} -> "Triangle", {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}} -> "Star", {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 2], 1}, {
                 DirectedEdge[2, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 2}} -> "Square", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 1}} -> "Square", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 2}} -> "Triangle", {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}} -> "Star", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 1}} -> "Triangle", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 1}} -> "Square", {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 2}} -> "Square"}, VertexSize -> {0.3}, 
            VertexStyle -> {{{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}} -> RGBColor[0.5, 0, 0.5], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 2], 1}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 2], 1}, {
                 DirectedEdge[2, 3], 2}} -> RGBColor[0.5, 0, 0.5], {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 1], 2}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 2}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 2}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 2}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 2}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}} -> RGBColor[0.5, 0, 0.5], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 2], 1}, {
                 DirectedEdge[2, 1], 1}, {
                 DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}} -> RGBColor[0.5, 0, 0.5], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}} -> RGBColor[0.5, 0, 0.5], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 2}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                 DirectedEdge[1, 2], 2}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {1} -> 
              RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 2], 1}, {
                 DirectedEdge[2, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 3], 1}, {
                 DirectedEdge[3, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 1}} -> RGBColor[1, 0, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 2}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 2}, {
                 DirectedEdge[1, 2], 2}} -> RGBColor[1, 1, 0], {{
                 DirectedEdge[1, 2], 1}, {
                 DirectedEdge[2, 3], 1}, {
                 DirectedEdge[3, 1], 1}, {
                 DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0]}}]], 
         Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            LineBox[{{
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$2", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$3", Automatic, Center]}, {
               DynamicLocation["VertexID$1", Automatic, Center], 
               DynamicLocation["VertexID$4", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$5", Automatic, Center]}, {
               DynamicLocation["VertexID$2", Automatic, Center], 
               DynamicLocation["VertexID$6", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$7", Automatic, Center]}, {
               DynamicLocation["VertexID$3", Automatic, Center], 
               DynamicLocation["VertexID$8", Automatic, Center]}, {
               DynamicLocation["VertexID$4", Automatic, Center], 
               DynamicLocation["VertexID$9", Automatic, Center]}, {
               DynamicLocation["VertexID$4", Automatic, Center], 
               DynamicLocation["VertexID$10", Automatic, Center]}, {
               DynamicLocation["VertexID$5", Automatic, Center], 
               DynamicLocation["VertexID$11", Automatic, Center]}, {
               DynamicLocation["VertexID$5", Automatic, Center], 
               DynamicLocation["VertexID$12", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$13", Automatic, Center]}, {
               DynamicLocation["VertexID$6", Automatic, Center], 
               DynamicLocation["VertexID$14", Automatic, Center]}, {
               DynamicLocation["VertexID$7", Automatic, Center], 
               DynamicLocation["VertexID$15", Automatic, Center]}, {
               DynamicLocation["VertexID$7", Automatic, Center], 
               DynamicLocation["VertexID$16", Automatic, Center]}, {
               DynamicLocation["VertexID$8", Automatic, Center], 
               DynamicLocation["VertexID$17", Automatic, Center]}, {
               DynamicLocation["VertexID$8", Automatic, Center], 
               DynamicLocation["VertexID$18", Automatic, Center]}, {
               DynamicLocation["VertexID$9", Automatic, Center], 
               DynamicLocation["VertexID$19", Automatic, Center]}, {
               DynamicLocation["VertexID$9", Automatic, Center], 
               DynamicLocation["VertexID$20", Automatic, Center]}, {
               DynamicLocation["VertexID$10", Automatic, Center], 
               DynamicLocation["VertexID$21", Automatic, Center]}, {
               DynamicLocation["VertexID$10", Automatic, Center], 
               DynamicLocation["VertexID$22", Automatic, Center]}, {
               DynamicLocation["VertexID$11", Automatic, Center], 
               DynamicLocation["VertexID$23", Automatic, Center]}, {
               DynamicLocation["VertexID$11", Automatic, Center], 
               DynamicLocation["VertexID$24", Automatic, Center]}, {
               DynamicLocation["VertexID$12", Automatic, Center], 
               DynamicLocation["VertexID$25", Automatic, Center]}, {
               DynamicLocation["VertexID$12", Automatic, Center], 
               DynamicLocation["VertexID$26", Automatic, Center]}, {
               DynamicLocation["VertexID$13", Automatic, Center], 
               DynamicLocation["VertexID$27", Automatic, Center]}, {
               DynamicLocation["VertexID$13", Automatic, Center], 
               DynamicLocation["VertexID$28", Automatic, Center]}, {
               DynamicLocation["VertexID$14", Automatic, Center], 
               DynamicLocation["VertexID$29", Automatic, Center]}, {
               DynamicLocation["VertexID$14", Automatic, Center], 
               DynamicLocation["VertexID$30", Automatic, Center]}, {
               DynamicLocation["VertexID$15", Automatic, Center], 
               DynamicLocation["VertexID$31", Automatic, Center]}, {
               DynamicLocation["VertexID$15", Automatic, Center], 
               DynamicLocation["VertexID$32", Automatic, Center]}, {
               DynamicLocation["VertexID$16", Automatic, Center], 
               DynamicLocation["VertexID$33", Automatic, Center]}, {
               DynamicLocation["VertexID$16", Automatic, Center], 
               DynamicLocation["VertexID$34", Automatic, Center]}, {
               DynamicLocation["VertexID$17", Automatic, Center], 
               DynamicLocation["VertexID$35", Automatic, Center]}, {
               DynamicLocation["VertexID$17", Automatic, Center], 
               DynamicLocation["VertexID$36", Automatic, Center]}, {
               DynamicLocation["VertexID$18", Automatic, Center], 
               DynamicLocation["VertexID$37", Automatic, Center]}, {
               DynamicLocation["VertexID$18", Automatic, Center], 
               DynamicLocation["VertexID$38", Automatic, Center]}, {
               DynamicLocation["VertexID$19", Automatic, Center], 
               DynamicLocation["VertexID$39", Automatic, Center]}, {
               DynamicLocation["VertexID$19", Automatic, Center], 
               DynamicLocation["VertexID$40", Automatic, Center]}, {
               DynamicLocation["VertexID$20", Automatic, Center], 
               DynamicLocation["VertexID$41", Automatic, Center]}, {
               DynamicLocation["VertexID$20", Automatic, Center], 
               DynamicLocation["VertexID$42", Automatic, Center]}, {
               DynamicLocation["VertexID$21", Automatic, Center], 
               DynamicLocation["VertexID$43", Automatic, Center]}, {
               DynamicLocation["VertexID$21", Automatic, Center], 
               DynamicLocation["VertexID$44", Automatic, Center]}, {
               DynamicLocation["VertexID$22", Automatic, Center], 
               DynamicLocation["VertexID$45", Automatic, Center]}, {
               DynamicLocation["VertexID$22", Automatic, Center], 
               DynamicLocation["VertexID$46", Automatic, Center]}}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{3.491679184531429, 3.6399781485886966`}, {
               3.3440735765711422`, 3.3843184737286873`}, {
               3.6392847924917153`, 3.3843184737286873`}, {3.491679184531429, 
               3.6399781485886966`}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$1"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{2.612654779844559, 3.8153748336168958`}, {
               2.845715668316948, 4.048435722089285}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$2"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{3.3751487402952343`, 2.4946965536519117`}, {
               3.6082096287676233`, 2.7277574421243007`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{4.254173144982104, 4.08727911545613}, {
               4.215762537887603, 3.9710903306909624`}, {4.098799307379064, 
               3.968584079519073}, {4.192023609940888, 3.8942692485697874`}, {
               4.158146759313678, 3.776531440250049}, {4.254173144982104, 
               3.846791128540702}, {4.3501995306505306`, 3.776531440250049}, {
               4.316322680023321, 3.8942692485697874`}, {4.4095469825851445`, 
               3.968584079519073}, {4.292583752076606, 3.9710903306909624`}, {
               4.254173144982104, 4.08727911545613}}], 
              RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$4"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{2.6112269978881066`, 5.172040943035819}, {
               2.572816390793605, 5.055852158270652}, {2.4558531602850664`, 
               5.0533459070987625`}, {2.5490774628468906`, 
               4.979031076149477}, {2.515200612219681, 4.861293267829739}, {
               2.6112269978881066`, 4.931552956120392}, {2.7072533835565324`, 
               4.861293267829739}, {2.6733765329293226`, 4.979031076149477}, {
               2.766600835491147, 5.0533459070987625`}, {2.6496376049826083`, 
               5.055852158270652}, {2.6112269978881066`, 5.172040943035819}}], 
              RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$5"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{1.7307748112447838`, 3.64705302213447}, {
               1.6923642041502822`, 3.5308642373693027`}, {
               1.5754009736417434`, 3.5283579861974133`}, {
               1.6686252762035676`, 3.4540431552481277`}, {
               1.6347484255763578`, 3.3363053469283894`}, {
               1.7307748112447838`, 3.4065650352190424`}, {
               1.8268011969132099`, 3.3363053469283894`}, {1.792924346286, 
               3.4540431552481277`}, {1.8861486488478243`, 
               3.5283579861974133`}, {1.7691854183392854`, 
               3.5308642373693027`}, {1.7307748112447838`, 
               3.64705302213447}}], 
              RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$6"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{2.6112269978881057`, 2.122065101233119}, {
               2.572816390793604, 2.0058763164679516`}, {2.4558531602850655`, 
               2.003370065296062}, {2.5490774628468897`, 
               1.9290552343467766`}, {2.51520061221968, 
               1.8113174260270382`}, {2.6112269978881057`, 
               1.8815771143176914`}, {2.7072533835565316`, 
               1.8113174260270382`}, {2.6733765329293218`, 
               1.9290552343467766`}, {2.766600835491146, 2.003370065296062}, {
               2.6496376049826074`, 2.0058763164679516`}, {
               2.6112269978881057`, 2.122065101233119}}], 
              RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$7"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{4.37213137117475, 2.122065101233118}, {
               4.333720764080248, 2.0058763164679507`}, {4.21675753357171, 
               2.003370065296061}, {4.309981836133534, 1.9290552343467755`}, {
               4.276104985506324, 1.811317426027037}, {4.37213137117475, 
               1.8815771143176903`}, {4.468157756843176, 1.811317426027037}, {
               4.4342809062159665`, 1.9290552343467755`}, {4.52750520877779, 
               2.003370065296061}, {4.410541978269252, 2.0058763164679507`}, {
               4.37213137117475, 2.122065101233118}}], 
              RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$8"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{5.252583557818074, 3.639978148588696}, {
               5.104977949857788, 3.384318473728687}, {5.40018916577836, 
               3.384318473728687}, {5.252583557818074, 3.639978148588696}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$9"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{4.255600926938558, 4.900136661196584}, {
               4.488661815410947, 5.1331975496689735`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$10"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{2.8080458019150756`, 6.1913326662631025`}, {
               2.660440193954789, 5.935672991403093}, {2.955651409875362, 
               5.935672991403093}, {2.8080458019150756`, 
               6.1913326662631025`}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$11"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{1.6239580494733776`, 5.507699283646748}, {
               1.4763524415130913`, 5.252039608786739}, {1.771563657433664, 
               5.252039608786739}, {1.6239580494733776`, 5.507699283646748}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$12"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{0.9403246668570246, 4.323611531205052}, {
               0.7927190588967383, 4.067951856345043}, {1.087930274817311, 
               4.067951856345043}, {0.9403246668570246, 4.323611531205052}}], 
              
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$13"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{0.9403246668570238, 2.9563447659723443`}, {
               0.7927190588967374, 2.700685091112335}, {1.08793027481731, 
               2.700685091112335}, {0.9403246668570238, 
               2.9563447659723443`}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$14"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{1.6239580494733772`, 1.7722570135306457`}, {
               1.4763524415130909`, 1.5165973386706362`}, {
               1.7715636574336635`, 1.5165973386706362`}, {
               1.6239580494733772`, 1.7722570135306457`}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$15"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{2.8080458019150756`, 1.0886236309142918`}, {
               2.660440193954789, 0.8329639560542823}, {2.955651409875362, 
               0.8329639560542823}, {2.8080458019150756`, 
               1.0886236309142918`}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$16"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{4.175312567147781, 1.0886236309142918`}, {
               4.027706959187495, 0.8329639560542823}, {4.322918175108067, 
               0.8329639560542823}, {4.175312567147781, 
               1.0886236309142918`}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$17"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{5.359400319589478, 1.7722570135306432`}, {
               5.211794711629192, 1.5165973386706337`}, {5.5070059275497645`, 
               1.5165973386706337`}, {5.359400319589478, 
               1.7722570135306432`}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$18"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{5.92650325796964, 2.691515357678881}, {
               6.159564146442029, 2.92457624615127}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$19"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{5.92650325796964, 4.058782122911587}, {
               6.159564146442029, 4.291843011383976}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$20"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{5.359400319589483, 5.507699283646747}, {
               5.211794711629197, 5.252039608786737}, {5.507005927549769, 
               5.252039608786737}, {5.359400319589483, 5.507699283646747}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$21"], 
            TagBox[
             StyleBox[
              PolygonBox[{{4.175312567147782, 6.1984075398088745`}, {
               4.13690196005328, 6.082218755043708}, {4.019938729544742, 
               6.079712503871818}, {4.1131630321065655`, 6.005397672922532}, {
               4.079286181479356, 5.887659864602794}, {4.175312567147782, 
               5.957919552893447}, {4.271338952816208, 5.887659864602794}, {
               4.237462102188998, 6.005397672922532}, {4.330686404750822, 
               6.079712503871818}, {4.213723174242284, 6.082218755043708}, {
               4.175312567147782, 6.1984075398088745`}}], 
              RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$22"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{2.915460454877751, 6.866827924826663}, {
               3.14852134335014, 7.099888813299052}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$23"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{2.0274108810231732`, 6.628875758673526}, {
               2.2604717694955623`, 6.861936647145915}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$24"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{1.2312074150358672`, 6.169187473256042}, {
               1.4642683035082558`, 6.402248361728431}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$25"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{0.5811100073344273, 5.519090065554603}, {
               0.8141708958068159, 5.752150954026992}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$26"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{0.12142172191694353`, 4.722886599567297}, {
               0.35448261038933215`, 4.955947488039686}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$27"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{-0.11653044423619344`, 3.8348370257127216`}, {
               0.11653044423619521`, 4.06789791418511}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$28"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{-0.11653044423619432`, 2.915460454877751}, {
               0.11653044423619432`, 3.14852134335014}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$29"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{0.12142172191694175`, 2.027410881023175}, {
               0.3544826103893304, 2.260471769495564}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$30"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{0.5811100073344269, 1.2312074150358672`}, {
               0.8141708958068155, 1.4642683035082558`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$31"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{1.2312074150358663`, 0.5811100073344277}, {
               1.4642683035082549`, 0.8141708958068163}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$32"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{2.027410881023171, 0.12142172191694353`}, {
               2.26047176949556, 0.35448261038933215`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$33"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{2.91546045487775, -0.11653044423619388`}, {
               3.148521343350139, 0.11653044423619477`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$34"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{3.8348370257127176`, -0.11653044423619432`}, {
               4.067897914185107, 0.11653044423619432`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$35"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{4.7228865995672935`, 0.12142172191694175`}, {
               4.9559474880396825`, 0.3544826103893304}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$36"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{5.519090065554599, 0.5811100073344246}, {
               5.752150954026988, 0.8141708958068132}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$37"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{6.169187473256039, 1.2312074150358636`}, {
               6.402248361728428, 1.4642683035082522`}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$38"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{6.74540620290972, 2.2993151628624053`}, {
               6.7069955958152185`, 2.183126378097238}, {6.59003236530668, 
               2.1806201269253487`}, {6.683256667868504, 2.106305295976063}, {
               6.649379817241294, 1.9885674876563246`}, {6.74540620290972, 
               2.058827175946978}, {6.841432588578146, 1.9885674876563246`}, {
               6.807555737950937, 2.106305295976063}, {6.90078004051276, 
               2.1806201269253487`}, {6.783816810004222, 2.183126378097238}, {
               6.74540620290972, 2.2993151628624053`}}], 
              RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$39"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{6.983358369062858, 3.1873647367169844`}, {
               6.944947761968356, 3.071175951951817}, {6.827984531459817, 
               3.0686697007799277`}, {6.921208834021641, 2.994354869830642}, {
               6.887331983394431, 2.876617061510904}, {6.983358369062858, 
               2.946876749801557}, {7.079384754731284, 2.876617061510904}, {
               7.045507904104074, 2.994354869830642}, {7.138732206665898, 
               3.0686697007799277`}, {7.021768976157359, 3.071175951951817}, {
               6.983358369062858, 3.1873647367169844`}}], 
              RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$40"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{6.983358369062858, 4.106741307551952}, {
               6.944947761968356, 3.9905525227867846`}, {6.827984531459817, 
               3.988046271614895}, {6.921208834021641, 3.9137314406656096`}, {
               6.887331983394431, 3.7959936323458714`}, {6.983358369062858, 
               3.8662533206365244`}, {7.079384754731284, 
               3.7959936323458714`}, {7.045507904104074, 
               3.9137314406656096`}, {7.138732206665898, 3.988046271614895}, {
               7.021768976157359, 3.9905525227867846`}, {6.983358369062858, 
               4.106741307551952}}], 
              RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$41"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{6.745406202909722, 4.994790881406528}, {
               6.70699559581522, 4.8786020966413615`}, {6.590032365306682, 
               4.876095845469472}, {6.6832566678685055`, 4.801781014520186}, {
               6.649379817241296, 4.684043206200448}, {6.745406202909722, 
               4.754302894491101}, {6.841432588578148, 4.684043206200448}, {
               6.807555737950938, 4.801781014520186}, {6.900780040512762, 
               4.876095845469472}, {6.7838168100042235`, 
               4.8786020966413615`}, {6.745406202909722, 4.994790881406528}}], 
              RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$42"], 
            TagBox[
             StyleBox[
              
              RectangleBox[{6.169187473256044, 5.519090065554599}, {
               6.402248361728433, 5.752150954026988}], 
              RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$43"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{5.635620509790799, 6.4410917550952735`}, {
               5.597209902696298, 6.324902970330107}, {5.480246672187759, 
               6.322396719158217}, {5.573470974749583, 6.248081888208931}, {
               5.539594124122373, 6.130344079889193}, {5.635620509790799, 
               6.200603768179846}, {5.7316468954592255`, 6.130344079889193}, {
               5.697770044832016, 6.248081888208931}, {5.7909943473938394`, 
               6.322396719158217}, {5.674031116885301, 6.324902970330107}, {
               5.635620509790799, 6.4410917550952735`}}], 
              RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$44"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{4.8394170438034925`, 6.893705166966988}, {
               4.691811435843206, 6.638045492106979}, {4.987022651763779, 
               6.638045492106979}, {4.8394170438034925`, 6.893705166966988}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$45"], 
            TagBox[
             StyleBox[
              
              PolygonBox[{{3.9513674699489134`, 7.131657333120126}, {
               3.803761861988627, 6.8759976582601166`}, {4.0989730779092, 
               6.8759976582601166`}, {3.9513674699489134`, 
               7.131657333120126}}], 
              RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$46"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{1.1406933090100946`, 
            218.2393066909899}, {-111.23930669098989`, 105.47909393186147`}}],
          
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[0.4]]}, Dynamic[$CellContext`showcover],
      Alignment->Center]},
    {
     PaneSelectorBox[{True->
      GraphicsBox[
       {Arrowheads[0.1], ArrowBox[{{0, 0}, {0, -0.5}}]},
       ImageSize->Scaled[0.3]]}, Dynamic[$CellContext`showcover],
      Alignment->Center], 
     PaneSelectorBox[{True->
      GraphicsBox[
       {Arrowheads[0.1], ArrowBox[{{0, 0}, {0, -0.5}}]},
       ImageSize->Scaled[0.3]]}, Dynamic[$CellContext`showcover],
      Alignment->Center]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4}, {Null, 
           SparseArray[
           Automatic, {4, 4}, 0, {
            1, {{0, 3, 6, 9, 12}, {{2}, {3}, {4}, {1}, {3}, {4}, {1}, {2}, {
              4}, {1}, {2}, {3}}}, Pattern}]}, {GraphHighlight -> {3, 1, 
             UndirectedEdge[2, 3], 
             UndirectedEdge[3, 4], 
             UndirectedEdge[2, 4], 4, 2}, 
           GraphHighlightStyle -> {
            UndirectedEdge[2, 4] -> {EdgeStyle -> Hue[0.14, 1, 0.9]}, 
             4 -> {VertexStyle -> Hue[0.14, 1, 0.9]}, 
             UndirectedEdge[3, 4] -> {EdgeStyle -> Hue[0.14, 1, 0.9]}, 
             2 -> {VertexStyle -> Hue[0.14, 1, 0.9]}, 
             1 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
             UndirectedEdge[2, 3] -> {EdgeStyle -> Hue[0.14, 1, 0.9]}, 
             3 -> {VertexStyle -> Hue[0.14, 1, 0.9]}}, ImageSize -> 
           Scaled[0.4], VertexSize -> {0.2}}]], Typeset`boxes, 
        Typeset`boxes$s2d = GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$2", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$3", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$4", Automatic, Center]}], 
           StyleBox[
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}], 
            Hue[0.14, 1, 0.9], StripOnInput -> False], 
           StyleBox[
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}], 
            Hue[0.14, 1, 0.9], StripOnInput -> False], 
           StyleBox[
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}], 
            Hue[0.14, 1, 0.9], StripOnInput -> False]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             DiskBox[{-1., 1.0106430996148606`*^-15}, 0.1414213562373094], 
             Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$1"], 
           TagBox[
            StyleBox[
             DiskBox[{6.049014748177263*^-16, -1.}, 0.1414213562373094], 
             Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$2"], 
           TagBox[
            StyleBox[
             DiskBox[{1., -1.133107779529596*^-15}, 0.1414213562373094], 
             Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$3"], 
           TagBox[
            StyleBox[
             DiskBox[{-7.044813998280222*^-16, 1.}, 0.1414213562373094], 
             Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$4"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{3.3799999999999937`, 
           215.62}, {-108.79519999999998`, 103.44480000000003`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[0.4]], 
     StyleBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"  \[ScriptX]\"\>",
          StripOnInput->False,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->Scaled[0.2],
          FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
       Text[
        Style["  \[ScriptX]", 
         RGBColor[1, 0, 0], FontSize -> Scaled[0.2]]]],
      StripOnInput->False,
      Magnification->4 Inherited]},
    {
     GraphicsBox[
      {Arrowheads[0.1], ArrowBox[{{0, 0}, {0, -0.5}}]},
      ImageSize->Scaled[0.3]], 
     GraphicsBox[
      {Arrowheads[0.1], ArrowBox[{{0, 0}, {0, -0.5}}]},
      ImageSize->Scaled[0.3]]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2}, {
          SparseArray[
           Automatic, {2, 2}, 0, {
            1, {{0, 1, 3}, {{2}, {1}, {2}}}, {1, 1, 1}}], Null}, {
          EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {15}, 
           EdgeWeight -> {3, 1, 2}, ImageSize -> Scaled[0.4], 
           VertexShapeFunction -> {1 -> "Triangle", 2 -> "Square"}, 
           VertexSize -> {0.2}, 
           VertexStyle -> {2 -> RGBColor[1, 1, 0], 1 -> RGBColor[1, 0, 0]}}]],
         Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
           Arrowheads[0.041582132564841494`], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation["VertexID$1", Automatic, Center], {
                0.4999999999999999, -0.15528070821816992`}, 
                DynamicLocation["VertexID$2", Automatic, Center]}]], 
             "DynamicName", BoxID -> "EdgeLabelID$1"], 
            InsetBox[
             FormBox[
              StyleBox["\"3\"", 15, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$1", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation["VertexID$2", Automatic, Center], {
                0.5000000000000002, 0.15528070821816992`}, 
                DynamicLocation["VertexID$1", Automatic, Center]}]], 
             "DynamicName", BoxID -> "EdgeLabelID$2"], 
            InsetBox[
             FormBox[
              StyleBox["\"1\"", 15, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$2", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation[
                "VertexID$2", Automatic, 
                 Center], {-0.08847925546776056, -0.19078353238530235`}, \
{-0.2873577330053514, -0.24717977484589643`}, {-0.41452835747980865`, \
-0.18822269607102315`}, {-0.41452835747980865`, 
                0.18822269607102307`}, {-0.2873577330053514, 
                0.24717977484589637`}, {-0.08847925546776059, 
                0.1907835323853023}, 
                DynamicLocation["VertexID$2", Automatic, Center]}, 
               SplineDegree -> 7]], "DynamicName", BoxID -> "EdgeLabelID$3"], 
            
            InsetBox[
             FormBox[
              StyleBox["\"2\"", 15, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$3", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             PolygonBox[{{1., 0.11229}, {0.888235, -0.0812921}, {
              1.1117650000000001`, -0.0812921}, {1., 0.11229}}], 
             RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$1"], 
           TagBox[
            StyleBox[
             
             RectangleBox[{-0.08823530000000002, -0.08823530000000002}, {
              0.08823530000000002, 0.08823530000000002}], 
             RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$2"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{0.7606933090100947, 
           217.2393066909899}, {-40.239306690989906`, 35.239306690989906`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[0.4]], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
           Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {15}, 
           EdgeWeight -> {2, 1, 1, 2, 2, 1}, ImageSize -> Scaled[0.4], 
           VertexShapeFunction -> {
            3 -> "Star", 1 -> "Triangle", 2 -> "Square"}, VertexSize -> {0.2},
            VertexStyle -> {
            2 -> RGBColor[1, 1, 0], 1 -> RGBColor[1, 0, 0], 3 -> 
             RGBColor[0.5, 0, 0.5]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Arrowheads[0.03555748430834104], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation["VertexID$1", Automatic, Center], {
                8.437694987151189*^-16, -0.23104592393085188`}, 
                DynamicLocation["VertexID$2", Automatic, Center]}]], 
             "DynamicName", BoxID -> "EdgeLabelID$1"], 
            InsetBox[
             FormBox[
              StyleBox["\"2\"", 15, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$1", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation[
                "VertexID$1", Automatic, Center], {-0.6659337642194738, 
                0.3844770380345749}, 
                DynamicLocation["VertexID$3", Automatic, Center]}]], 
             "DynamicName", BoxID -> "EdgeLabelID$2"], 
            InsetBox[
             FormBox[
              StyleBox["\"1\"", 15, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$2", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation[
                "VertexID$2", Automatic, 
                 Center], {-3.4416913763379854`*^-16, -0.7689540760691488}, 
                DynamicLocation["VertexID$1", Automatic, Center]}]], 
             "DynamicName", BoxID -> "EdgeLabelID$3"], 
            InsetBox[
             FormBox[
              StyleBox["\"1\"", 15, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$3", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation["VertexID$2", Automatic, Center], {
                0.20009163956496426`, 0.11552296196542552`}, 
                DynamicLocation["VertexID$3", Automatic, Center]}]], 
             "DynamicName", BoxID -> "EdgeLabelID$4"], 
            InsetBox[
             FormBox[
              StyleBox["\"2\"", 15, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$4", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation[
                "VertexID$3", Automatic, Center], {-0.20009163956496454`, 
                0.11552296196542586`}, 
                DynamicLocation["VertexID$1", Automatic, Center]}]], 
             "DynamicName", BoxID -> "EdgeLabelID$5"], 
            InsetBox[
             FormBox[
              StyleBox["\"2\"", 15, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$5", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation["VertexID$3", Automatic, Center], {
                0.6659337642194748, 0.38447703803457334`}, 
                DynamicLocation["VertexID$2", Automatic, Center]}]], 
             "DynamicName", BoxID -> "EdgeLabelID$6"], 
            InsetBox[
             FormBox[
              StyleBox["\"1\"", 15, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$6", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             PolygonBox[{{-0.8660254037844384, -0.3055080148180902}, \
{-1.0596080622923738`, -0.6408020474539693}, {-0.6724427452765028, \
-0.6408020474539693}, {-0.8660254037844384, -0.3055080148180902}}], 
             RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$1"], 
           TagBox[
            StyleBox[
             
             RectangleBox[{0.7131973811633568, -0.6528280226210833}, {
              1.0188534264055211`, -0.34717197737891914`}], 
             RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$2"], 
           TagBox[
            StyleBox[
             
             PolygonBox[{{1.8369701987210297`*^-16, 
              1.2037705813580557`}, {-0.05037496568733303, 
              1.0513906402808917`}, {-0.20377058135805542`, 
              1.0481037274633682`}, {-0.08150823254322208, 
              0.9506408821113059}, {-0.1259372410132521, 
              0.7962294186419444}, {1.8369701987210297`*^-16, 
              0.8883740019893663}, {0.1259372410132525, 0.7962294186419444}, {
              0.08150823254322244, 0.9506408821113059}, {0.2037705813580558, 
              1.0481037274633682`}, {0.05037496568733339, 
              1.0513906402808917`}, {1.8369701987210297`*^-16, 
              1.2037705813580557`}}], 
             RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{0.7606933090100938, 
           217.8593066909899}, {-106.2393066909899, 100.2393066909899}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[0.4]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Right, Left}},
   GridBoxBackground->{"Columns" -> {{
        GrayLevel[1]}}, "Rows" -> {{2, 1} -> RGBColor[1, 0, 0]}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.5], 
       Scaled[0.5]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.2]}}, "Rows" -> {{
        Scaled[0.01]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.583869831664446*^9, 3.583869876863771*^9}, 
   3.583949366440621*^9, 3.583949907500833*^9, 3.5839500214883347`*^9, 
   3.583950904774633*^9, {3.5839509734782467`*^9, 3.5839509837982264`*^9}, 
   3.584104157010614*^9, 3.584105260084139*^9, 3.584105837774911*^9, {
   3.584106334967215*^9, 3.584106347229438*^9}, 3.584125342900259*^9, {
   3.584195115649062*^9, 3.584195139028883*^9}, 3.584195330744145*^9, 
   3.584195375449501*^9, {3.5841954804909687`*^9, 3.584195503815028*^9}, {
   3.584195614325659*^9, 3.5841956404351482`*^9}, 3.5841956834550867`*^9, {
   3.5841978351554823`*^9, 3.584197991188819*^9}, {3.584198072032888*^9, 
   3.584198174326706*^9}, 3.584198658711443*^9, 3.584208752043537*^9, 
   3.584208801729361*^9, {3.584208831983333*^9, 3.584208855842201*^9}, 
   3.584212867327746*^9, 3.5842131423129053`*^9, 3.584279034741778*^9, 
   3.584297754472941*^9, {3.5842984739371243`*^9, 3.584298529943193*^9}, {
   3.584298704885323*^9, 3.584298721118188*^9}, {3.584298754968186*^9, 
   3.5842989244824743`*^9}, 3.5842989695392857`*^9, 3.5842990148729973`*^9, {
   3.584299073055719*^9, 3.5842991223401613`*^9}, {3.584299390246228*^9, 
   3.584299424658546*^9}, {3.584299454843287*^9, 3.584299461522194*^9}, {
   3.584299671077484*^9, 3.584299759140308*^9}, 3.584300534766987*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Universal Covering Tree", "Section",
 CellChangeTimes->{{3.583504537673525*^9, 3.583504582132621*^9}, {
  3.583509437760704*^9, 3.583509440334321*^9}, {3.583604913812951*^9, 
  3.5836049144171343`*^9}, {3.584198228210197*^9, 3.584198235305292*^9}, {
  3.584299484336187*^9, 3.584299486782975*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"sizes", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"SetProperty", "[", 
        RowBox[{
         RowBox[{"CreateUniversalCovering", "[", 
          RowBox[{"orbigraph1", ",", " ", "#"}], "]"}], ",", " ", 
         RowBox[{"VertexSize", "\[Rule]", " ", ".2"}]}], "]"}], " ", "&"}], "/@",
       " ", 
      RowBox[{"Range", "[", "3", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GraphPlotRange", "[", "graph_Graph", "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"embedding", " ", "=", " ", 
        RowBox[{"GraphEmbedding", "@", "graph"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{"First", " ", "/@", " ", "embedding"}], "]"}], "-", "1"}],
           ",", " ", 
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"First", "/@", "embedding"}], "]"}], "+", "1"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{"Last", "/@", "embedding"}], "]"}], "-", "1"}], ",", " ", 
          
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"Last", "/@", "embedding"}], "]"}], "+", "1"}]}], "}"}]}],
        "}"}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SetProperty", "[", 
         RowBox[{"orbigraph1", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeLabelStyle", "\[Rule]", "20"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"Scaled", "[", ".5", "]"}]}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListAnimate", "[", 
         RowBox[{"sizes", ",", " ", 
          RowBox[{"DefaultDuration", "\[Rule]", "3"}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Scaled", "[", ".5", "]"}], ",", " ", 
             RowBox[{"Scaled", "[", ".5", "]"}]}], "}"}]}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Alignment", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Right", ",", " ", "Left"}], "}"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ItemSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"Scaled", "[", ".5", "]"}], ",", " ", 
         RowBox[{"Scaled", "[", ".5", " ", "]"}]}], "}"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Scaled", "[", ".1", "]"}], ",", " ", "0"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, {
   3.583761360477338*^9, 3.5837614259457207`*^9}, {3.5837618346740417`*^9, 
   3.5837618899534597`*^9}, {3.583762127115325*^9, 3.583762177566827*^9}, {
   3.583762559882112*^9, 3.5837625688253813`*^9}, {3.5837651873977118`*^9, 
   3.583765216202577*^9}, 3.583951101617882*^9, {3.5839513736268377`*^9, 
   3.5839514482578297`*^9}, {3.5841044971600523`*^9, 
   3.5841045451374083`*^9}, {3.584208705656846*^9, 3.5842087166706047`*^9}, {
   3.584299799156002*^9, 3.584299823188484*^9}, {3.584299864965108*^9, 
   3.584299865477852*^9}, {3.584299902377254*^9, 3.584300059953788*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
          SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 3, 5, 7}, {{1}, {2}, {3}, {1}, {3}, {1}, {2}}}, {1, 1, 1, 
             1, 1, 1, 1}}], Null}, {
          EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
           EdgeWeight -> {3, 1, 1, 4, 1, 4, 1}, ImageSize -> Scaled[0.5], 
           VertexLabelStyle -> {20}, 
           VertexShapeFunction -> {
            2 -> "Triangle", 3 -> "Star", 1 -> "Square"}, VertexSize -> {0.2},
            VertexStyle -> {
            1 -> RGBColor[1, 0, 0], 2 -> RGBColor[1, 1, 0], 3 -> 
             RGBColor[0.5, 0, 0.5]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Arrowheads[0.04158219578146897], 
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation["VertexID$1", Automatic, Center], {
                0.6873904251757703, -0.08915602018494104}, {
                0.7430802511242329, -0.2882334630989339}, {
                0.6836720610015965, -0.4151939759099758}, {
                0.30722904122918515`, -0.413857514310497}, {
                0.2487238169004704, -0.2864783810384543}, {
                0.3058257650517279, -0.08780137555297982}, 
                DynamicLocation["VertexID$1", Automatic, Center]}, 
               SplineDegree -> 7]], "DynamicName", BoxID -> "EdgeLabelID$1"], 
            
            InsetBox[
             FormBox[
              StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$1", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation["VertexID$1", Automatic, Center], {
                0.6142573696809985, 0.5102397598812024}, 
                DynamicLocation["VertexID$2", Automatic, Center]}]], 
             "DynamicName", BoxID -> "EdgeLabelID$2"], 
            InsetBox[
             FormBox[
              StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$2", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation["VertexID$1", Automatic, Center], {
                0.1137092818331808, 0.35673507828119033`}, 
                DynamicLocation["VertexID$3", Automatic, Center]}]], 
             "DynamicName", BoxID -> "EdgeLabelID$3"], 
            InsetBox[
             FormBox[
              StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$3", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation["VertexID$2", Automatic, Center], {
                0.8826585025027763, 0.3540051804647464}, 
                DynamicLocation["VertexID$1", Automatic, Center]}]], 
             "DynamicName", BoxID -> "EdgeLabelID$4"], 
            InsetBox[
             FormBox[
              StyleBox["\"4\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$4", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation["VertexID$2", Automatic, Center], {
                0.49944556895469644`, 0.7107402587459368}, 
                DynamicLocation["VertexID$3", Automatic, Center]}]], 
             "DynamicName", BoxID -> "EdgeLabelID$5"], 
            InsetBox[
             FormBox[
              StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$5", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation["VertexID$3", Automatic, Center], {
                0.3832129335480799, 0.5110599453486782}, 
                DynamicLocation["VertexID$1", Automatic, Center]}]], 
             "DynamicName", BoxID -> "EdgeLabelID$6"], 
            InsetBox[
             FormBox[
              StyleBox["\"4\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$6", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             ArrowBox[
              BezierCurveBox[{
                DynamicLocation["VertexID$3", Automatic, Center], {
                0.5005480878478179, 1.0212997052298805`}, 
                DynamicLocation["VertexID$2", Automatic, Center]}]], 
             "DynamicName", BoxID -> "EdgeLabelID$7"], 
            InsetBox[
             FormBox[
              StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$7", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             RectangleBox[{0.40868692018231173`, -0.08823529519894883}, {
              0.5851575105802094, 0.08823529519894883}], 
             RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$1"], 
           TagBox[
            StyleBox[
             
             PolygonBox[{{0.9999936568025142, 0.9765349342360353}, {
              0.8882286628838613, 0.7829528447692071}, {1.1117586507211672`, 
              0.7829528447692071}, {0.9999936568025142, 0.9765349342360353}}], 
             RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$2"], 
           TagBox[
            StyleBox[
             
             PolygonBox[{{0., 0.9854420172284705}, {-0.02908399841748402, 
              0.8974654220154452}, {-0.11764699359860206`, 
              0.8955677221187027}, {-0.04705879743944083, 
              0.8392975251804717}, {-0.0727098960437155, 
              0.7501480300312663}, {0., 0.803347727136569}, {
              0.0727098960437155, 0.7501480300312663}, {0.04705879743944083, 
              0.8392975251804717}, {0.11764699359860206`, 
              0.8955677221187027}, {0.02908399841748402, 
              0.8974654220154452}, {0., 0.9854420172284705}}], 
             RGBColor[0.5, 0, 0.5], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{1.7606933090100938`, 
           293.2393066909899}, {-178.65483752641757`, 167.2393066909899}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[0.5]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i3$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {
        "\"min\"" :> {$CellContext`i3$$ = 1}, 
         "\"max\"" :> {$CellContext`i3$$ = 3}}, Typeset`bookmarkMode$$ = 
        "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{{
           Hold[$CellContext`i3$$], 1, ""}, 1, 3, 1}}, Typeset`size$$ = 
        Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`i3$846$$ = 0}, 
        PaneBox[
         PanelBox[
          DynamicWrapperBox[GridBox[{
             {
              ItemBox[
               ItemBox[
                TagBox[
                 StyleBox[GridBox[{
                    {"\<\"\"\>", 
                    AnimatorBox[Dynamic[$CellContext`i3$$], {1, 3, 1},
                    AnimationRate->Automatic,
                    
                    AppearanceElements->{
                    "ProgressSlider", "PlayPauseButton", 
                    "FasterSlowerButtons", "DirectionButton"},
                    AutoAction->False,
                    DefaultDuration->3,
                    DisplayAllSteps->True,
                    PausedTime->0.]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "ListAnimateLabel",
                  StripOnInput->False],
                 {"ControlArea", Top}],
                Alignment->{Automatic, Inherited},
                StripOnInput->False],
               Background->None,
               StripOnInput->False]},
             {
              ItemBox[
               TagBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   PaneSelectorBox[{1->
                    GraphicsBox[
                    NamespaceBox["NetworkGraphics",
                    DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{{1}, {{
                    DirectedEdge[1, 1], 1}}, {{
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 3], 1}}}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}}}, {
                    GraphLayout -> "RadialEmbedding", 
                    VertexShapeFunction -> {{{
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 1}} -> "Square", {{
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 1], 3}} -> "Square", {1} -> "Square"}, 
                    VertexSize -> {0.2}, VertexStyle -> {{{
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 1], 1}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {1} -> 
                    RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0]}}]], 
                    Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.8628212162951536, 0.9117647}, {
                    1.0392918162951537`, 1.0882353}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.2750359640026806, 1.7207816943749474`}, {
                    0.45150656400268063`, 1.8972522943749475`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{-0.0882353, 0.6027477056250528}, {0.0882353,
                     0.7792183056250528}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.8628212162951534, -0.0882353}, {
                    1.0392918162951534`, 0.0882353}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{1.9021130325903073`, 0.8032730056250523}, {
                    1.7903480325903074`, 0.6096909056250523}, {
                    2.0138780325903074`, 0.6096909056250523}, {
                    1.9021130325903073`, 0.8032730056250523}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{1.538841768587627, 1.9266639943749473`}, {
                    1.5097577685876271`, 1.8386873943749473`}, {
                    1.421194768587627, 1.8367896943749473`}, {
                    1.491782968587627, 1.7805194943749472`}, {
                    1.466131868587627, 1.6913699943749472`}, {
                    1.538841768587627, 1.7445696943749471`}, {
                    1.611551668587627, 1.6913699943749472`}, {
                    1.585900568587627, 1.7805194943749472`}, {
                    1.656488768587627, 1.8367896943749473`}, {
                    1.567925768587627, 1.8386873943749473`}, {
                    1.538841768587627, 1.9266639943749473`}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> 
                    "VertexID$6"]}}], $CellContext`flag}, 
                    TagBox[
                    
                    DynamicBox[GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                    
                    ImageSizeCache->{{2.220693309010098, 
                    270.2393066909899}, {-132.2393066909899, 
                    125.68753712469913`}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                    AllowKernelInitialization->False,
                    UnsavedVariables:>{$CellContext`flag}]],
                    
                    DefaultBaseStyle->{
                    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]},
                    FrameTicks->None], 2->
                    GraphicsBox[
                    NamespaceBox["NetworkGraphics",
                    DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{{1}, {{
                    DirectedEdge[1, 1], 1}}, {{
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}}}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 7}, {2,
                     8}, {2, 9}, {2, 10}, {3, 11}, {3, 12}, {3, 13}, {3, 
                    14}, {4, 15}, {4, 16}, {4, 17}, {4, 18}, {5, 19}, {5, 
                    20}, {5, 21}, {5, 22}, {6, 23}, {6, 24}, {6, 25}, {6, 
                    26}}}, {
                    GraphLayout -> "RadialEmbedding", 
                    VertexShapeFunction -> {{{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 1}} -> "Square", {{
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {1} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}} -> "Square", {{
                    DirectedEdge[1, 1], 2}} -> "Square"}, VertexSize -> {0.2},
                     VertexStyle -> {{{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {1} -> 
                    RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 1], 1}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0]}}]], 
                    Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$7", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$8", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$9", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$10", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$11", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$12", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$13", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$14", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$15", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$16", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$17", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$18", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$19", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$20", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$21", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$22", Automatic, Center]}, {
                    DynamicLocation["VertexID$6", Automatic, Center], 
                    DynamicLocation["VertexID$23", Automatic, Center]}, {
                    DynamicLocation["VertexID$6", Automatic, Center], 
                    DynamicLocation["VertexID$24", Automatic, Center]}, {
                    DynamicLocation["VertexID$6", Automatic, Center], 
                    DynamicLocation["VertexID$25", Automatic, Center]}, {
                    DynamicLocation["VertexID$6", Automatic, Center], 
                    DynamicLocation["VertexID$26", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{1.7571961089681531`, 1.7571961089681531`}, {
                    1.8582484987734826`, 1.8582484987734826`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{1.2192974283908409`, 2.4975501279600647`}, {
                    1.3203498181961704`, 2.598602517765394}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.8868577612903388, 1.4744060374208283`}, {
                    0.987910151095668, 1.5754584272261578`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{1.757196108968153, 0.8420682140789802}, {
                    1.8582484987734824`, 0.9431206038843095}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{2.6780606515486323`, 1.5892328741938122`}, {
                    2.6140606405179416`, 1.4783819232221815`}, {
                    2.742060662579323, 1.4783819232221815`}, {
                    2.6780606515486323`, 1.5892328741938122`}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{2.3456209844481304`, 2.6154445445576044`}, {
                    2.3289666085628657`, 2.565066489080105}, {
                    2.2782527627532554`, 2.563979808805127}, {
                    2.3186736957701806`, 2.531757794572593}, {
                    2.3039851019979856`, 2.4807081011678545`}, {
                    2.3456209844481304`, 2.5111718544611885`}, {
                    2.387256866898275, 2.4807081011678545`}, {
                    2.37256827312608, 2.531757794572593}, {
                    2.4129892061430054`, 2.563979808805127}, {
                    2.362275360333395, 2.565066489080105}, {
                    2.3456209844481304`, 2.6154445445576044`}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$6"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{1.4708810236073924`, 3.564918412838971}, {
                    1.5719334134127219`, 3.6659708026443005`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$7"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.9262773683154832, 3.3879659585941932`}, {
                    1.0273297581208125`, 3.4890183483995227`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$8"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{0.5135360236126092, 3.1662092259993466`}, {
                    0.44953601258191833`, 3.0553582750277157`}, {
                    0.5775360346433001, 3.0553582750277157`}, {
                    0.5135360236126092, 3.1662092259993466`}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$9"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{0.1769524542447778, 2.7060092662183632`}, {
                    0.16029807835951307`, 2.655631210740864}, {
                    0.10958423254990297`, 2.654544530465886}, {
                    0.15000516556682786`, 2.6223225162333517`}, {
                    0.13531657179463305`, 2.5712728228286132`}, {
                    0.1769524542447778, 2.6017365761219473`}, {
                    0.21858833669492253`, 2.5712728228286132`}, {
                    0.20389974292272772`, 2.6223225162333517`}, {
                    0.24432067593965262`, 2.654544530465886}, {
                    0.1936068301300425, 2.655631210740864}, {
                    0.1769524542447778, 2.7060092662183632`}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$10"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{-0.05052619490266466, 2.043511194328914}, {
                    0.05052619490266466, 2.1445635841342434`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$11"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{-0.05052619490266466, 
                    1.4708810236073926`}, {0.05052619490266466, 
                    1.571933413412722}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$12"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{0.17695245424477757`, 1.0411042050884676`}, {
                    0.11295244321408673`, 0.9302532541168369}, {
                    0.2409524652754684, 0.9302532541168369}, {
                    0.17695245424477757`, 1.0411042050884676`}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$13"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{0.513536023612609, 0.580904245307484}, {
                    0.4968816477273442, 0.530526189829985}, {
                    0.44616780191773414`, 0.5294395095550067}, {
                    0.48658873493465904`, 0.4972174953224726}, {
                    0.4719001411624642, 0.44616780191773436`}, {
                    0.513536023612609, 0.4766315552110681}, {
                    0.5551719060627537, 0.44616780191773436`}, {
                    0.5404833122905589, 0.4972174953224726}, {
                    0.5809042453074837, 0.5294395095550067}, {
                    0.5301903994978737, 0.530526189829985}, {
                    0.513536023612609, 0.580904245307484}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$14"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.9262773683154828, 0.12642625934211313`}, {
                    1.027329758120812, 0.22747864914744245`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$15"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{1.470881023607392, -0.05052619490266466}, {
                    1.5719334134127214`, 0.05052619490266466}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$16"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{2.0940373892315782`, 0.06430064187031964}, {
                    2.0300373782008876`, -0.046550309101310985`}, {
                    2.158037400262269, -0.046550309101310985`}, {
                    2.0940373892315782`, 0.06430064187031964}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$17"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{2.638641044523488, 0.2443206759396524}, {
                    2.621986668638223, 0.1939426204621534}, {
                    2.571272822828613, 0.19285594018717517`}, {
                    2.611693755845538, 0.16063392595464102`}, {
                    2.597005162073343, 0.10958423254990275`}, {
                    2.638641044523488, 0.14004798584323647`}, {
                    2.6802769269736326`, 0.10958423254990275`}, {
                    2.6655883332014376`, 0.16063392595464102`}, {
                    2.706009266218363, 0.19285594018717517`}, {
                    2.6552954204087524`, 0.1939426204621534}, {
                    2.638641044523488, 0.2443206759396524}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$18"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{3.0513823892263616`, 
                    0.46300982870994434`}, {3.152434779031691, 
                    0.5640622185152736}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$19"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{3.3879659585941932`, 0.9262773683154827}, {
                    3.4890183483995227`, 1.027329758120812}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$20"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{3.564918412838971, 1.470881023607392}, {
                    3.6659708026443005`, 1.5719334134127214`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$21"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{3.615444607741636, 2.1614056109264532`}, {
                    3.598790231856371, 2.111027555448954}, {3.548076386046761,
                     2.109940875173976}, {3.588497319063686, 
                    2.0777188609414416`}, {3.573808725291491, 
                    2.0266691675367032`}, {3.615444607741636, 
                    2.0571329208300373`}, {3.6570804901917806`, 
                    2.0266691675367032`}, {3.6423918964195856`, 
                    2.0777188609414416`}, {3.682812829436511, 
                    2.109940875173976}, {3.6320989836269004`, 
                    2.111027555448954}, {3.615444607741636, 
                    2.1614056109264532`}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$22"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{3.3879659585941937`, 2.588114849620823}, {
                    3.489018348399523, 2.6891672394261525`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$23"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{3.051382389226362, 3.0513823892263616`}, {
                    3.1524347790316916`, 3.152434779031691}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$24"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{2.588114849620824, 3.3879659585941932`}, {
                    2.6891672394261534`, 3.4890183483995227`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$25"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{2.094037389231579, 3.6797452496119556`}, {
                    2.0300373782008885`, 3.5688942986403247`}, {
                    2.1580374002622698`, 3.5688942986403247`}, {
                    2.094037389231579, 3.6797452496119556`}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$26"]}}], $CellContext`flag}, 
                    TagBox[
                    
                    DynamicBox[GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                    
                    ImageSizeCache->{{-0.499306690989906, 
                    122.23930669098989`}, {-64.2393066909899, 
                    59.239306690989906`}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                    AllowKernelInitialization->False,
                    UnsavedVariables:>{$CellContext`flag}]],
                    
                    DefaultBaseStyle->{
                    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]},
                    FrameTicks->None], 3->
                    GraphicsBox[
                    NamespaceBox["NetworkGraphics",
                    DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{{1}, {{
                    DirectedEdge[1, 1], 1}}, {{
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}}, {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}}, {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}}, {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}, {
                    DirectedEdge[1, 1], 1}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}, {
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}, {
                    DirectedEdge[1, 1], 1}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}, {
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}, {
                    DirectedEdge[1, 1], 1}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}, {
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 1}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 2}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 3}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 4}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 1], 1}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}, {
                    DirectedEdge[1, 1], 1}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}, {
                    DirectedEdge[1, 1], 1}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}, {
                    DirectedEdge[1, 1], 2}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}, {
                    DirectedEdge[1, 1], 3}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 1}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 2}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 3}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 4}}}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {1, 6}, {2, 7}, {2,
                     8}, {2, 9}, {2, 10}, {3, 11}, {3, 12}, {3, 13}, {3, 
                    14}, {4, 15}, {4, 16}, {4, 17}, {4, 18}, {5, 19}, {5, 
                    20}, {5, 21}, {5, 22}, {6, 23}, {6, 24}, {6, 25}, {6, 
                    26}, {7, 27}, {7, 28}, {7, 29}, {7, 30}, {8, 31}, {8, 
                    32}, {8, 33}, {8, 34}, {9, 35}, {9, 36}, {9, 37}, {9, 
                    38}, {10, 39}, {10, 40}, {10, 41}, {10, 42}, {11, 43}, {
                    11, 44}, {11, 45}, {11, 46}, {12, 47}, {12, 48}, {12, 
                    49}, {12, 50}, {13, 51}, {13, 52}, {13, 53}, {13, 54}, {
                    14, 55}, {14, 56}, {14, 57}, {14, 58}, {15, 59}, {15, 
                    60}, {15, 61}, {15, 62}, {16, 63}, {16, 64}, {16, 65}, {
                    16, 66}, {17, 67}, {17, 68}, {17, 69}, {17, 70}, {18, 
                    71}, {18, 72}, {18, 73}, {18, 74}, {19, 75}, {19, 76}, {
                    19, 77}, {19, 78}, {20, 79}, {20, 80}, {20, 81}, {20, 
                    82}, {21, 83}, {21, 84}, {21, 85}, {21, 86}, {22, 87}, {
                    22, 88}, {22, 89}, {22, 90}, {23, 91}, {23, 92}, {23, 
                    93}, {23, 94}, {24, 95}, {24, 96}, {24, 97}, {24, 98}, {
                    25, 99}, {25, 100}, {25, 101}, {25, 102}, {26, 103}, {26, 
                    104}, {26, 105}, {26, 106}}}, {
                    GraphLayout -> "RadialEmbedding", 
                    VertexShapeFunction -> {{{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 4}} -> "Square", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 1}} -> "Square", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}} -> "Square", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {1} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}} -> "Square", {{
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}} -> "Square", {{
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}, {
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}, {
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}, {
                    DirectedEdge[1, 1], 1}} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}, {
                    DirectedEdge[1, 1], 1}} -> "Square", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 1}} -> "Square", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 1}} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 4}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}, {
                    DirectedEdge[1, 1], 1}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 1], 1}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}, {
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}} -> "Square", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}, {
                    DirectedEdge[1, 1], 1}} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}, {
                    DirectedEdge[1, 1], 1}} -> "Square", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}, {
                    DirectedEdge[1, 3], 1}} -> "Star", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}} -> "Square", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}} -> "Square", {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}} -> "Square", {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}} -> "Square", {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> "Triangle", {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}, {
                    DirectedEdge[1, 3], 1}} -> "Star"}, VertexSize -> {0.2}, 
                    VertexStyle -> {{{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}, {
                    DirectedEdge[1, 1], 1}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 4}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}, {
                    DirectedEdge[1, 1], 1}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 1], 1}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 4}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}, {
                    DirectedEdge[1, 1], 1}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}, {
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}, {
                    DirectedEdge[1, 1], 1}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}, {
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}, {
                    DirectedEdge[1, 1], 1}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 1}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {1} -> 
                    RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}, {
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 1], 1}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 1}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 4}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 1], 1}, {
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}, {
                    DirectedEdge[1, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 2}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}} -> RGBColor[0.5, 0, 0.5], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 3}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 2}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 3}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 1], 3}, {
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 1], 4}} -> RGBColor[1, 0, 0], {{
                    DirectedEdge[1, 2], 1}} -> RGBColor[1, 1, 0]}}]], 
                    Typeset`boxes, Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$7", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$8", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$9", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$10", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$11", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$12", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$13", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$14", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$15", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$16", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$17", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$18", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$19", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$20", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$21", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$22", Automatic, Center]}, {
                    DynamicLocation["VertexID$6", Automatic, Center], 
                    DynamicLocation["VertexID$23", Automatic, Center]}, {
                    DynamicLocation["VertexID$6", Automatic, Center], 
                    DynamicLocation["VertexID$24", Automatic, Center]}, {
                    DynamicLocation["VertexID$6", Automatic, Center], 
                    DynamicLocation["VertexID$25", Automatic, Center]}, {
                    DynamicLocation["VertexID$6", Automatic, Center], 
                    DynamicLocation["VertexID$26", Automatic, Center]}, {
                    DynamicLocation["VertexID$7", Automatic, Center], 
                    DynamicLocation["VertexID$27", Automatic, Center]}, {
                    DynamicLocation["VertexID$7", Automatic, Center], 
                    DynamicLocation["VertexID$28", Automatic, Center]}, {
                    DynamicLocation["VertexID$7", Automatic, Center], 
                    DynamicLocation["VertexID$29", Automatic, Center]}, {
                    DynamicLocation["VertexID$7", Automatic, Center], 
                    DynamicLocation["VertexID$30", Automatic, Center]}, {
                    DynamicLocation["VertexID$8", Automatic, Center], 
                    DynamicLocation["VertexID$31", Automatic, Center]}, {
                    DynamicLocation["VertexID$8", Automatic, Center], 
                    DynamicLocation["VertexID$32", Automatic, Center]}, {
                    DynamicLocation["VertexID$8", Automatic, Center], 
                    DynamicLocation["VertexID$33", Automatic, Center]}, {
                    DynamicLocation["VertexID$8", Automatic, Center], 
                    DynamicLocation["VertexID$34", Automatic, Center]}, {
                    DynamicLocation["VertexID$9", Automatic, Center], 
                    DynamicLocation["VertexID$35", Automatic, Center]}, {
                    DynamicLocation["VertexID$9", Automatic, Center], 
                    DynamicLocation["VertexID$36", Automatic, Center]}, {
                    DynamicLocation["VertexID$9", Automatic, Center], 
                    DynamicLocation["VertexID$37", Automatic, Center]}, {
                    DynamicLocation["VertexID$9", Automatic, Center], 
                    DynamicLocation["VertexID$38", Automatic, Center]}, {
                    DynamicLocation["VertexID$10", Automatic, Center], 
                    DynamicLocation["VertexID$39", Automatic, Center]}, {
                    DynamicLocation["VertexID$10", Automatic, Center], 
                    DynamicLocation["VertexID$40", Automatic, Center]}, {
                    DynamicLocation["VertexID$10", Automatic, Center], 
                    DynamicLocation["VertexID$41", Automatic, Center]}, {
                    DynamicLocation["VertexID$10", Automatic, Center], 
                    DynamicLocation["VertexID$42", Automatic, Center]}, {
                    DynamicLocation["VertexID$11", Automatic, Center], 
                    DynamicLocation["VertexID$43", Automatic, Center]}, {
                    DynamicLocation["VertexID$11", Automatic, Center], 
                    DynamicLocation["VertexID$44", Automatic, Center]}, {
                    DynamicLocation["VertexID$11", Automatic, Center], 
                    DynamicLocation["VertexID$45", Automatic, Center]}, {
                    DynamicLocation["VertexID$11", Automatic, Center], 
                    DynamicLocation["VertexID$46", Automatic, Center]}, {
                    DynamicLocation["VertexID$12", Automatic, Center], 
                    DynamicLocation["VertexID$47", Automatic, Center]}, {
                    DynamicLocation["VertexID$12", Automatic, Center], 
                    DynamicLocation["VertexID$48", Automatic, Center]}, {
                    DynamicLocation["VertexID$12", Automatic, Center], 
                    DynamicLocation["VertexID$49", Automatic, Center]}, {
                    DynamicLocation["VertexID$12", Automatic, Center], 
                    DynamicLocation["VertexID$50", Automatic, Center]}, {
                    DynamicLocation["VertexID$13", Automatic, Center], 
                    DynamicLocation["VertexID$51", Automatic, Center]}, {
                    DynamicLocation["VertexID$13", Automatic, Center], 
                    DynamicLocation["VertexID$52", Automatic, Center]}, {
                    DynamicLocation["VertexID$13", Automatic, Center], 
                    DynamicLocation["VertexID$53", Automatic, Center]}, {
                    DynamicLocation["VertexID$13", Automatic, Center], 
                    DynamicLocation["VertexID$54", Automatic, Center]}, {
                    DynamicLocation["VertexID$14", Automatic, Center], 
                    DynamicLocation["VertexID$55", Automatic, Center]}, {
                    DynamicLocation["VertexID$14", Automatic, Center], 
                    DynamicLocation["VertexID$56", Automatic, Center]}, {
                    DynamicLocation["VertexID$14", Automatic, Center], 
                    DynamicLocation["VertexID$57", Automatic, Center]}, {
                    DynamicLocation["VertexID$14", Automatic, Center], 
                    DynamicLocation["VertexID$58", Automatic, Center]}, {
                    DynamicLocation["VertexID$15", Automatic, Center], 
                    DynamicLocation["VertexID$59", Automatic, Center]}, {
                    DynamicLocation["VertexID$15", Automatic, Center], 
                    DynamicLocation["VertexID$60", Automatic, Center]}, {
                    DynamicLocation["VertexID$15", Automatic, Center], 
                    DynamicLocation["VertexID$61", Automatic, Center]}, {
                    DynamicLocation["VertexID$15", Automatic, Center], 
                    DynamicLocation["VertexID$62", Automatic, Center]}, {
                    DynamicLocation["VertexID$16", Automatic, Center], 
                    DynamicLocation["VertexID$63", Automatic, Center]}, {
                    DynamicLocation["VertexID$16", Automatic, Center], 
                    DynamicLocation["VertexID$64", Automatic, Center]}, {
                    DynamicLocation["VertexID$16", Automatic, Center], 
                    DynamicLocation["VertexID$65", Automatic, Center]}, {
                    DynamicLocation["VertexID$16", Automatic, Center], 
                    DynamicLocation["VertexID$66", Automatic, Center]}, {
                    DynamicLocation["VertexID$17", Automatic, Center], 
                    DynamicLocation["VertexID$67", Automatic, Center]}, {
                    DynamicLocation["VertexID$17", Automatic, Center], 
                    DynamicLocation["VertexID$68", Automatic, Center]}, {
                    DynamicLocation["VertexID$17", Automatic, Center], 
                    DynamicLocation["VertexID$69", Automatic, Center]}, {
                    DynamicLocation["VertexID$17", Automatic, Center], 
                    DynamicLocation["VertexID$70", Automatic, Center]}, {
                    DynamicLocation["VertexID$18", Automatic, Center], 
                    DynamicLocation["VertexID$71", Automatic, Center]}, {
                    DynamicLocation["VertexID$18", Automatic, Center], 
                    DynamicLocation["VertexID$72", Automatic, Center]}, {
                    DynamicLocation["VertexID$18", Automatic, Center], 
                    DynamicLocation["VertexID$73", Automatic, Center]}, {
                    DynamicLocation["VertexID$18", Automatic, Center], 
                    DynamicLocation["VertexID$74", Automatic, Center]}, {
                    DynamicLocation["VertexID$19", Automatic, Center], 
                    DynamicLocation["VertexID$75", Automatic, Center]}, {
                    DynamicLocation["VertexID$19", Automatic, Center], 
                    DynamicLocation["VertexID$76", Automatic, Center]}, {
                    DynamicLocation["VertexID$19", Automatic, Center], 
                    DynamicLocation["VertexID$77", Automatic, Center]}, {
                    DynamicLocation["VertexID$19", Automatic, Center], 
                    DynamicLocation["VertexID$78", Automatic, Center]}, {
                    DynamicLocation["VertexID$20", Automatic, Center], 
                    DynamicLocation["VertexID$79", Automatic, Center]}, {
                    DynamicLocation["VertexID$20", Automatic, Center], 
                    DynamicLocation["VertexID$80", Automatic, Center]}, {
                    DynamicLocation["VertexID$20", Automatic, Center], 
                    DynamicLocation["VertexID$81", Automatic, Center]}, {
                    DynamicLocation["VertexID$20", Automatic, Center], 
                    DynamicLocation["VertexID$82", Automatic, Center]}, {
                    DynamicLocation["VertexID$21", Automatic, Center], 
                    DynamicLocation["VertexID$83", Automatic, Center]}, {
                    DynamicLocation["VertexID$21", Automatic, Center], 
                    DynamicLocation["VertexID$84", Automatic, Center]}, {
                    DynamicLocation["VertexID$21", Automatic, Center], 
                    DynamicLocation["VertexID$85", Automatic, Center]}, {
                    DynamicLocation["VertexID$21", Automatic, Center], 
                    DynamicLocation["VertexID$86", Automatic, Center]}, {
                    DynamicLocation["VertexID$22", Automatic, Center], 
                    DynamicLocation["VertexID$87", Automatic, Center]}, {
                    DynamicLocation["VertexID$22", Automatic, Center], 
                    DynamicLocation["VertexID$88", Automatic, Center]}, {
                    DynamicLocation["VertexID$22", Automatic, Center], 
                    DynamicLocation["VertexID$89", Automatic, Center]}, {
                    DynamicLocation["VertexID$22", Automatic, Center], 
                    DynamicLocation["VertexID$90", Automatic, Center]}, {
                    DynamicLocation["VertexID$23", Automatic, Center], 
                    DynamicLocation["VertexID$91", Automatic, Center]}, {
                    DynamicLocation["VertexID$23", Automatic, Center], 
                    DynamicLocation["VertexID$92", Automatic, Center]}, {
                    DynamicLocation["VertexID$23", Automatic, Center], 
                    DynamicLocation["VertexID$93", Automatic, Center]}, {
                    DynamicLocation["VertexID$23", Automatic, Center], 
                    DynamicLocation["VertexID$94", Automatic, Center]}, {
                    DynamicLocation["VertexID$24", Automatic, Center], 
                    DynamicLocation["VertexID$95", Automatic, Center]}, {
                    DynamicLocation["VertexID$24", Automatic, Center], 
                    DynamicLocation["VertexID$96", Automatic, Center]}, {
                    DynamicLocation["VertexID$24", Automatic, Center], 
                    DynamicLocation["VertexID$97", Automatic, Center]}, {
                    DynamicLocation["VertexID$24", Automatic, Center], 
                    DynamicLocation["VertexID$98", Automatic, Center]}, {
                    DynamicLocation["VertexID$25", Automatic, Center], 
                    DynamicLocation["VertexID$99", Automatic, Center]}, {
                    DynamicLocation["VertexID$25", Automatic, Center], 
                    DynamicLocation["VertexID$100", Automatic, Center]}, {
                    DynamicLocation["VertexID$25", Automatic, Center], 
                    DynamicLocation["VertexID$101", Automatic, Center]}, {
                    DynamicLocation["VertexID$25", Automatic, Center], 
                    DynamicLocation["VertexID$102", Automatic, Center]}, {
                    DynamicLocation["VertexID$26", Automatic, Center], 
                    DynamicLocation["VertexID$103", Automatic, Center]}, {
                    DynamicLocation["VertexID$26", Automatic, Center], 
                    DynamicLocation["VertexID$104", Automatic, Center]}, {
                    DynamicLocation["VertexID$26", Automatic, Center], 
                    DynamicLocation["VertexID$105", Automatic, Center]}, {
                    DynamicLocation["VertexID$26", Automatic, Center], 
                    DynamicLocation["VertexID$106", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{2.862640568823611, 2.8626405688236116`}, {
                    2.9026142441701115`, 2.902614244170112}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$1"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{2.2974161755028497`, 3.640605204799595}, {
                    2.33738985084935, 3.6805788801460952`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$2"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{1.9480882891600804`, 2.5654845199262253`}, {
                    1.9880619645065802`, 2.6054581952727256`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{2.862640568823611, 1.901023394666418}, {
                    2.9026142441701115`, 1.9409970700129178`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{3.7971796861603924`, 2.6109070052634964`}, {
                    3.7718629601725984`, 2.5670572760831476`}, {
                    3.8224964121481864`, 2.5670572760831476`}, {
                    3.7971796861603924`, 2.6109070052634964`}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{3.447851799817623, 3.6872411442693465`}, {
                    3.4412637654720855`, 3.667312906667792}, {
                    3.4212026980211214`, 3.6668830444487877`}, {
                    3.4371921590990224`, 3.6541368606284648`}, {
                    3.431381736605527, 3.6339429406763437`}, {
                    3.447851799817623, 3.645993602578843}, {3.464321863029719,
                     3.6339429406763437`}, {3.458511440536223, 
                    3.6541368606284648`}, {3.474500901614124, 
                    3.6668830444487877`}, {3.45443983416316, 
                    3.667312906667792}, {3.447851799817623, 
                    3.6872411442693465`}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$6"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{2.561780432398053, 4.762196710885821}, {
                    2.6017541077445534`, 4.802170386232321}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$7"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{1.9895104459161008`, 4.576254920714896}, {
                    2.029484121262601, 4.616228596061396}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$8"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{1.522695356992867, 4.267995103664878}, {
                    1.4973786310050732`, 4.224145374484529}, {
                    1.5480120829806607`, 4.224145374484529}, {
                    1.522695356992867, 4.267995103664878}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$9"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{1.1690130546055777`, 3.782406631200874}, {
                    1.1624250202600401`, 3.7624783935993196`}, {
                    1.1423639528090763`, 3.7620485313803154`}, {
                    1.158353413886977, 3.7493023475599925`}, {
                    1.152542991393482, 3.7291084276078714`}, {
                    1.1690130546055777`, 3.741159089510371}, {
                    1.1854831178176735`, 3.7291084276078714`}, {
                    1.1796726953241783`, 3.7493023475599925`}, {
                    1.195662156402079, 3.7620485313803154`}, {
                    1.1756010889511153`, 3.7624783935993196`}, {
                    1.1690130546055777`, 3.782406631200874}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$10"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.9630844267614023, 3.16350070524917}, {
                    1.0030581021079021`, 3.2034743805956705`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$11"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.9630844267614023, 2.5617804323980535`}, {
                    1.0030581021079021`, 2.601754107744554}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$12"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{1.1690130546055775`, 2.0349329312533726`}, {
                    1.1436963286177837`, 1.9910832020730238`}, {
                    1.1943297805933712`, 1.9910832020730238`}, {
                    1.1690130546055775`, 2.0349329312533726`}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$13"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{1.5226953569928667`, 1.5493444587893688`}, {
                    1.5161073226473292`, 1.5294162211878142`}, {
                    1.4960462551963654`, 1.5289863589688097`}, {
                    1.5120357162742661`, 1.516240175148487}, {
                    1.506225293780771, 1.496046255196366}, {
                    1.5226953569928667`, 1.5080969170988654`}, {
                    1.5391654202049625`, 1.496046255196366}, {
                    1.5333549977114673`, 1.516240175148487}, {
                    1.549344458789368, 1.5289863589688097`}, {
                    1.5292833913384043`, 1.5294162211878142`}, {
                    1.5226953569928667`, 1.5493444587893688`}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$14"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{1.9895104459161004`, 1.1490262169323282`}, {
                    2.0294841212626005`, 1.188999892278828}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$15"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{2.5617804323980526`, 0.9630844267614027}, {
                    2.601754107744553, 1.0030581021079026`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$16"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{3.1834875429224194`, 1.0085069120986743`}, {
                    3.1581708169346254`, 0.9646571829183253}, {
                    3.2088042689102134`, 0.9646571829183253}, {
                    3.1834875429224194`, 1.0085069120986743`}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$17"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{3.755757529404372, 1.1956621564020793`}, {
                    3.7491694950588346`, 1.1757339188005247`}, {
                    3.7291084276078705`, 1.1753040565815203`}, {
                    3.7450978886857715`, 1.1625578727611976`}, {
                    3.739287466192276, 1.1423639528090765`}, {
                    3.755757529404372, 1.154414614711576}, {3.772227592616468,
                     1.1423639528090765`}, {3.7664171701229723`, 
                    1.1625578727611976`}, {3.7824066312008733`, 
                    1.1753040565815203`}, {3.7623455637499092`, 
                    1.1757339188005247`}, {3.755757529404372, 
                    1.1956621564020793`}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$18"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{4.2225726183276056`, 1.5027085193196172`}, {
                    4.262546293674106, 1.5426821946661171`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$19"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{4.576254920714895, 1.9895104459161008`}, {
                    4.616228596061395, 2.029484121262601}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$20"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{4.76219671088582, 2.5617804323980526`}, {
                    4.80217038623232, 2.601754107744553}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$21"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{4.78218354855907, 3.210136644718921}, {
                    4.775595514213532, 3.190208407117366}, {4.755534446762568,
                     3.189778544898362}, {4.77152390784047, 
                    3.177032361078039}, {4.765713485346974, 
                    3.156838441125918}, {4.78218354855907, 
                    3.1688891030284174`}, {4.798653611771166, 
                    3.156838441125918}, {4.79284318927767, 
                    3.177032361078039}, {4.808832650355572, 
                    3.189778544898362}, {4.788771582904608, 
                    3.190208407117366}, {4.78218354855907, 
                    3.210136644718921}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$22"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{4.576254920714895, 3.7357706917311218`}, {
                    4.616228596061395, 3.775744367077622}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$23"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{4.2225726183276056`, 4.2225726183276056`}, {
                    4.262546293674106, 4.262546293674106}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$24"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{3.735770691731122, 4.576254920714895}, {
                    3.7757443670776225`, 4.616228596061395}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$25"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{3.1834875429224203`, 4.807619196223093}, {
                    3.1581708169346263`, 4.763769467042743}, {
                    3.2088042689102143`, 4.763769467042743}, {
                    3.1834875429224203`, 4.807619196223093}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$26"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{2.7493818295591086`, 5.7452679753204725`}, {
                    2.789355504905609, 5.785241650666973}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$27"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{2.523562628820021, 5.727495618788535}, {
                    2.5635363041665213`, 5.767469294135036}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$28"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{2.3198207940091624`, 5.73748296354986}, {
                    2.2945040680213684`, 5.693633234369511}, {
                    2.3451375199969564`, 5.693633234369511}, {
                    2.3198207940091624`, 5.73748296354986}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$29"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{2.099562011443231, 5.685816962487414}, {
                    2.0929739770976936`, 5.66588872488586}, {
                    2.0729129096467296`, 5.6654588626668545`}, {
                    2.0889023707246306`, 5.652712678846532}, {
                    2.083091948231135, 5.632518758894411}, {2.099562011443231,
                     5.64456942079691}, {2.116032074655327, 
                    5.632518758894411}, {2.1102216521618313`, 
                    5.652712678846532}, {2.1262111132397323`, 
                    5.6654588626668545`}, {2.1061500457887683`, 
                    5.66588872488586}, {2.099562011443231, 
                    5.685816962487414}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$30"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{1.8641442497602225`, 5.569183272629238}, {
                    1.9041179251067224`, 5.609156947975738}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$31"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{1.65486938759121, 5.482498786455072}, {
                    1.6948430629377098`, 5.522472461801573}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$32"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{1.4730276740524157`, 5.4250844885152185`}, {
                    1.447710948064622, 5.381234759334869}, {
                    1.4983444000402095`, 5.381234759334869}, {
                    1.4730276740524157`, 5.4250844885152185`}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$33"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{1.279889773930371, 5.307942885233218}, {
                    1.2733017395848334`, 5.288014647631663}, {
                    1.2532406721338696`, 5.287584785412658}, {
                    1.2692301332117704`, 5.274838601592336}, {
                    1.2634197107182752`, 5.254644681640214}, {
                    1.279889773930371, 5.266695343542714}, {
                    1.2963598371424667`, 5.254644681640214}, {
                    1.2905494146489715`, 5.274838601592336}, {
                    1.3065388757268723`, 5.287584785412658}, {
                    1.2864778082759085`, 5.288014647631663}, {
                    1.279889773930371, 5.307942885233218}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$34"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{1.076646446604192, 5.128163312497638}, {
                    1.116620121950692, 5.1681369878441386`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$35"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.9044012046180598, 4.981051978154302}, {
                    0.9443748799645597, 5.021025653500803}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$36"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.7442291594929211, 4.820879933029163}, {
                    0.784202834839421, 4.860853608375663}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$37"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{0.6171046628228347, 4.695270630512783}, {
                    0.6105166284772973, 4.6753423929112286`}, {
                    0.5904555610263333, 4.6749125306922235`}, {
                    0.6064450221042341, 4.662166346871901}, {
                    0.600634599610739, 4.6419724269197795`}, {
                    0.6171046628228347, 4.654023088822279}, {
                    0.6335747260349305, 4.6419724269197795`}, {
                    0.6277643035414353, 4.662166346871901}, {
                    0.6437537646193361, 4.6749125306922235`}, {
                    0.6236926971683722, 4.6753423929112286`}, {
                    0.6171046628228347, 4.695270630512783}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$38"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.4639741918837574, 4.465378201390103}, {
                    0.5039478672302573, 4.505351876736603}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$39"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.3456191344692769, 4.272240301268058}, {
                    0.38559280981577687`, 4.312213976614558}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$40"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.24278235119215072`, 4.070411750056014}, {
                    0.2827560265386507, 4.110385425402514}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$41"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{0.17608470269123577`, 3.906559373224273}, {
                    0.15076797670344197`, 3.862709644043924}, {
                    0.20140142867902958`, 3.862709644043924}, {
                    0.17608470269123577`, 3.906559373224273}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$42"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.08610011462956031, 3.645705963877242}, {
                    0.12607378997606025`, 3.6856796392237423`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$43"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.03322065943463422, 3.4254471813113114`}, {
                    0.07319433478113417, 3.4654208566578117`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$44"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{0.017772356531937206`, 
                    3.2471409941644733`}, {-0.007544369455856605, 
                    3.2032912649841245`}, {0.043089082519731016`, 
                    3.2032912649841245`}, {0.017772356531937206`, 
                    3.2471409941644733`}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$45"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{0., 
                    3.022535247557867}, {-0.006588034345537468, 
                    3.0026070099563125`}, {-0.02664910179650139, 
                    3.0021771477373083`}, {-0.010659640718600557`, 
                    2.9894309639169854`}, {-0.01647006321209582, 
                    2.9692370439648643`}, {0., 2.9812877058673637`}, {
                    0.01647006321209582, 2.9692370439648643`}, {
                    0.010659640718600557`, 2.9894309639169854`}, {
                    0.02664910179650139, 3.0021771477373083`}, {
                    0.006588034345537468, 3.0026070099563125`}, {0., 
                    3.022535247557867}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$46"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{-0.019986837673249973`, 
                    2.7493818295591086`}, {0.019986837673249973`, 
                    2.789355504905609}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$47"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{-0.002214481141312768, 
                    2.5235626288200224`}, {0.03775919420518718, 
                    2.5635363041665227`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$48"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{0.053207497107884194`, 
                    2.3452564416731843`}, {0.027890771120090384`, 
                    2.3014067124928355`}, {0.078524223095678, 
                    2.3014067124928355`}, {0.053207497107884194`, 
                    2.3452564416731843`}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$49"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{0.10608695230280984`, 2.126211113239733}, {
                    0.09949891795727238, 2.1062828756381786`}, {
                    0.07943785050630846, 2.1058530134191744`}, {
                    0.09542731158420929, 2.0931068295988515`}, {
                    0.08961688909071402, 2.0729129096467305`}, {
                    0.10608695230280984`, 2.08496357154923}, {
                    0.12255701551490567`, 2.0729129096467305`}, {
                    0.1167465930214104, 2.0931068295988515`}, {
                    0.13273605409931125`, 2.1058530134191744`}, {
                    0.11267498664834731`, 2.1062828756381786`}, {
                    0.10608695230280984`, 2.126211113239733}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$50"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.15609786501798537`, 
                    1.8641442497602223`}, {0.1960715403644853, 
                    1.9041179251067222`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$51"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.24278235119215028`, 
                    1.6548693875912104`}, {0.28275602653865023`, 
                    1.6948430629377103`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$52"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.34561913446927645`, 
                    1.4530408363791665`}, {0.3855928098157764, 
                    1.4930145117256663`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$53"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{0.4839610295570069, 1.3065388757268728`}, {
                    0.4773729952114695, 1.2866106381253182`}, {
                    0.45731192776050555`, 1.2861807759063137`}, {
                    0.4733013888384064, 1.2734345920859913`}, {
                    0.4674909663449111, 1.25324067213387}, {
                    0.4839610295570069, 1.2652913340363694`}, {
                    0.5004310927691027, 1.25324067213387}, {
                    0.49462067027560747`, 1.2734345920859913`}, {
                    0.5106101313535083, 1.2861807759063137`}, {
                    0.4905490639025444, 1.2866106381253182`}, {
                    0.4839610295570069, 1.3065388757268728`}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$54"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.5971178251495843, 1.0766464466041925`}, {
                    0.6370915004960842, 1.1166201219506924`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$55"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.7442291594929207, 0.9044012046180607}, {
                    0.7842028348394205, 0.9443748799645606}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$56"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{0.9044012046180585, 0.744229159492922}, {
                    0.9443748799645584, 0.7842028348394219}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$57"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{1.0966332842774411`, 0.6425403104868567}, {
                    1.0713165582896473`, 0.5986905813065078}, {
                    1.1219500102652349`, 0.5986905813065078}, {
                    1.0966332842774411`, 0.6425403104868567}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$58"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{1.2599029362571204`, 
                    0.46397419188375827`}, {1.2998766116036202`, 
                    0.5039478672302582}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$59"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{1.4530408363791676`, 0.345619134469276}, {
                    1.4930145117256675`, 0.385592809815776}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$60"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{1.6748562252644614`, 0.28820483652942175`}, {
                    1.6495394992766677`, 0.24435510734907284`}, {
                    1.7001729512522552`, 0.24435510734907284`}, {
                    1.6748562252644614`, 0.28820483652942175`}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$61"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{1.884131087433476, 0.20273380448773584`}, {
                    1.8775430530879385`, 0.18280556688618133`}, {
                    1.8574819856369746`, 0.18237570466717684`}, {
                    1.8734714467148754`, 0.16962952084685423`}, {
                    1.8676610242213803`, 0.14943560089473304`}, {
                    1.884131087433476, 0.16148626279723235`}, {
                    1.9006011506455718`, 0.14943560089473304`}, {
                    1.8947907281520766`, 0.16962952084685423`}, {
                    1.9107801892299774`, 0.18237570466717684`}, {
                    1.8907191217790136`, 0.18280556688618133`}, {
                    1.884131087433476, 0.20273380448773584`}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$62"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{2.079575173769981, 0.08610011462956076}, {
                    2.119548849116481, 0.1260737899760607}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$63"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{2.2998339563359136`, 0.03322065943463422}, {
                    2.339807631682414, 0.07319433478113417}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$64"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{2.5435494664932734`, 
                    0.043208004195958744`}, {
                    2.5182327405054794`, -0.0006417249843902045}, {
                    2.5688661924810674`, -0.0006417249843902045}, {
                    2.5435494664932734`, 0.043208004195958744`}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$65"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{2.7693686672323623`, 0.02664910179650139}, {
                    2.762780632886825, 0.0067208641949468755`}, {
                    2.742719565435861, 0.0062910019759423895`}, {
                    2.758709026513762, -0.006455181844380209}, {
                    2.7528986040202663`, -0.02664910179650139}, {
                    2.7693686672323623`, -0.014598439894002092`}, {
                    2.7858387304444583`, -0.02664910179650139}, {
                    2.7800283079509627`, -0.006455181844380209}, {
                    2.7960177690288637`, 0.0062910019759423895`}, {
                    2.7759567015778996`, 0.0067208641949468755`}, {
                    2.7693686672323623`, 0.02664910179650139}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$66"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{2.975899308088114, -0.01998683767324953}, {
                    3.0158729834346145`, 0.019986837673250418`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$67"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{
                    3.201718508827203, -0.0022144811413123237`}, {
                    3.2416921841737034`, 0.03775919420518763}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$68"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{3.4254471813113128`, 
                    0.033220659434635105`}, {3.465420856657813, 
                    0.07319433478113506}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$69"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{3.6656928015504957`, 0.13273605409931347`}, {
                    3.6591047672049584`, 0.11280781649775894`}, {
                    3.6390436997539943`, 0.11237795427875445`}, {
                    3.6550331608318953`, 0.09963177045843186}, {
                    3.6492227383383997`, 0.07943785050631068}, {
                    3.6656928015504957`, 0.09148851240880998}, {
                    3.6821628647625917`, 0.07943785050631068}, {
                    3.676352442269096, 0.09963177045843186}, {
                    3.692341903346997, 0.11237795427875445`}, {
                    3.672280835896033, 0.11280781649775894`}, {
                    3.6656928015504957`, 0.13273605409931347`}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$70"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{3.8611368878870005`, 0.1560978650179858}, {
                    3.901110563233501, 0.19607154036448574`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$71"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{4.070411750056015, 0.24278235119215205`}, {
                    4.110385425402515, 0.282756026538652}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$72"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{4.2722403012680585`, 0.3456191344692778}, {
                    4.312213976614559, 0.38559280981577776`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$73"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{4.485365039063356, 0.5093966772210315}, {
                    4.460048313075562, 0.46554694804068264`}, {
                    4.5106817650511495`, 0.46554694804068264`}, {
                    4.485365039063356, 0.5093966772210315}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$74"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{4.64863469104303, 0.5971178251495843}, {
                    4.688608366389531, 0.6370915004960842}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$75"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{4.820879933029165, 0.7442291594929225}, {
                    4.860853608375665, 0.7842028348394223}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$76"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{4.981051978154302, 0.9044012046180614}, {
                    5.021025653500803, 0.9443748799645613}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$77"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{5.148150150170891, 1.123282386073947}, {
                    5.141562115825353, 1.1033541484723923`}, {
                    5.121501048374389, 1.102924286253388}, {5.137490509452291,
                     1.0901781024330655`}, {5.131680086958795, 
                    1.0699841824809442`}, {5.148150150170891, 
                    1.0820348443834436`}, {5.164620213382987, 
                    1.0699841824809442`}, {5.158809790889491, 
                    1.0901781024330655`}, {5.174799251967393, 
                    1.102924286253388}, {5.154738184516429, 
                    1.1033541484723923`}, {5.148150150170891, 
                    1.123282386073947}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$78"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{5.261306945763464, 1.2599029362571208`}, {
                    5.301280621109965, 1.2998766116036207`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$79"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{5.3796620031779465`, 1.4530408363791678`}, {
                    5.419635678524447, 1.4930145117256677`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$80"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{5.482498786455072, 1.6548693875912117`}, {
                    5.522472461801573, 1.6948430629377116`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$81"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{5.589170110302488, 1.9107801892299774`}, {
                    5.58258207595695, 1.8908519516284228`}, {
                    5.562521008505986, 1.8904220894094184`}, {
                    5.578510469583888, 1.8776759055890957`}, {
                    5.572700047090392, 1.8574819856369746`}, {
                    5.589170110302488, 1.869532647539474}, {5.605640173514584,
                     1.8574819856369746`}, {5.599829751021089, 
                    1.8776759055890957`}, {5.61581921209899, 
                    1.8904220894094184`}, {5.595758144648026, 
                    1.8908519516284228`}, {5.589170110302488, 
                    1.9107801892299774`}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$82"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{5.639181023017662, 2.079575173769981}, {
                    5.6791546983641625`, 2.119548849116481}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$83"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{5.692060478212588, 2.299833956335914}, {
                    5.732034153559089, 2.3398076316824143`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$84"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{5.727495618788535, 2.5235626288200237`}, {
                    5.767469294135036, 2.563536304166524}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$85"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{5.765254812993723, 2.796017769028864}, {
                    5.758666778648185, 2.7760895314273095`}, {
                    5.738605711197221, 2.7756596692083053`}, {
                    5.754595172275122, 2.7629134853879824`}, {
                    5.748784749781627, 2.7427195654358614`}, {
                    5.765254812993723, 2.7547702273383607`}, {
                    5.781724876205819, 2.7427195654358614`}, {
                    5.775914453712323, 2.7629134853879824`}, {
                    5.7919039147902245`, 2.7756596692083053`}, {
                    5.7718428473392605`, 2.7760895314273095`}, {
                    5.765254812993723, 2.796017769028864}}], 
                    RGBColor[0.5, 0, 0.5], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$86"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{5.7452679753204725`, 2.975899308088114}, {
                    5.785241650666973, 3.0158729834346145`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$87"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{5.727495618788535, 3.201718508827203}, {
                    5.767469294135036, 3.2416921841737034`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$88"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{5.692060478212588, 3.4254471813113128`}, {
                    5.732034153559089, 3.465420856657813}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$89"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{5.63918102301766, 3.645705963877246}, {
                    5.679154698364161, 3.6856796392237463`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$90"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{5.569183272629237, 3.8611368878870005`}, {
                    5.6091569479757375`, 3.901110563233501}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$91"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{5.4824987864550705`, 4.0704117500560155`}, {
                    5.522472461801571, 4.110385425402516}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$92"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{5.379662003177946, 4.2722403012680585`}, {
                    5.419635678524446, 4.312213976614559}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$93"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{5.2812937834367135`, 4.510800686727378}, {
                    5.25597705744892, 4.466950957547028}, {5.306610509424507, 
                    4.466950957547028}, {5.2812937834367135`, 
                    4.510800686727378}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$94"], 
                    TagBox[
                    StyleBox[
                    RectangleBox[{5.128163312497638, 4.648634691043031}, {
                    5.1681369878441386`, 4.6886083663895315`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$95"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{4.981051978154301, 4.820879933029165}, {
                    5.021025653500801, 4.860853608375665}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$96"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{4.820879933029162, 4.981051978154303}, {
                    4.860853608375662, 5.0210256535008035`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$97"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{4.668621528716278, 5.173585797834914}, {
                    4.643304802728484, 5.129736068654564}, {4.693938254704071,
                     5.129736068654564}, {4.668621528716278, 
                    5.173585797834914}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$98"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{4.465378201390103, 5.261306945763465}, {
                    4.505351876736603, 5.3012806211099655`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$99"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{4.272240301268055, 5.379662003177947}, {
                    4.312213976614555, 5.419635678524448}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$100"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{4.070411750056011, 5.482498786455073}, {
                    4.110385425402511, 5.5224724618015735`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$101"], 
                    TagBox[
                    StyleBox[
                    
                    PolygonBox[{{3.881123725560247, 5.614605757966511}, {
                    3.855806999572453, 5.570756028786161}, {3.906440451548041,
                     5.570756028786161}, {3.881123725560247, 
                    5.614605757966511}}], 
                    RGBColor[1, 1, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$102"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{3.645705963877242, 5.639181023017662}, {
                    3.6856796392237423`, 5.6791546983641625`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$103"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{3.425447181311309, 5.692060478212589}, {
                    3.4654208566578095`, 5.7320341535590895`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$104"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{3.201718508827199, 5.727495618788536}, {
                    3.2416921841736994`, 5.7674692941350365`}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$105"], 
                    TagBox[
                    StyleBox[
                    
                    RectangleBox[{2.9758993080881107`, 5.745267975320473}, {
                    3.015872983434611, 5.785241650666974}], 
                    RGBColor[1, 0, 0], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$106"]}}], $CellContext`flag}, 
                    TagBox[
                    
                    DynamicBox[GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                    ImageSizeCache->{{-1.2393066909899062`, 
                    120.23930669098989`}, {-63.363562905405836`, 
                    58.23930669098991}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                    AllowKernelInitialization->False,
                    UnsavedVariables:>{$CellContext`flag}]],
                    
                    DefaultBaseStyle->{
                    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]},
                    FrameTicks->None]}, Dynamic[$CellContext`i3$$],
                    Alignment->Automatic,
                    ImageSize->{
                    Scaled[0.5], 
                    Scaled[0.5]}],
                   Identity,
                   Editable->True,
                   Selectable->True],
                  ImageMargins->10],
                 Deployed->False,
                 StripOnInput->False,
                 ScriptLevel->0,
                 GraphicsBoxOptions->{PreserveImageOptions->True},
                 Graphics3DBoxOptions->{PreserveImageOptions->True}],
                Identity,
                Editable->False,
                Selectable->False],
               Alignment->{Left, Center},
               Background->GrayLevel[1],
               Frame->1,
               FrameStyle->GrayLevel[0, 0.2],
               ItemSize->Automatic,
               StripOnInput->False]}
            },
            AutoDelete->False,
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}},
               "RowsIndexed" -> {}},
            
            GridBoxDividers->{
             "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{False}}, "RowsIndexed" -> {}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.7], {
                 Offset[0.5599999999999999]}, 
                Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.4], {
                 Offset[0.8]}, 
                Offset[0.4]}, "RowsIndexed" -> {}}], If[
            CurrentValue["SelectionOver"], 
            Manipulate`Dump`ReadControllerState[
             Map[Manipulate`Dump`updateOneVar[#, 
               CurrentValue["PreviousFormatTime"], 
               CurrentValue["CurrentFormatTime"]]& , {
               
               Manipulate`Dump`controllerLink[{$CellContext`i3$$, \
$CellContext`i3$846$$}, "X1", 
                If["DefaultAbsolute", True, "JB1"], False, {1, 3, 1}, 3, 
                1.]}], 
             
             CurrentValue[{
              "ControllerData", {
               "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
           ImageSizeCache->{309., {159.375, 165.125}}],
          DefaultBaseStyle->{},
          FrameMargins->{{5, 5}, {5, 5}}],
         BaselinePosition->Automatic,
         ImageMargins->0],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Right, Left}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.5], 
       Scaled[0.5]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.1]}}, "Rows" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.584299812517757*^9, 3.584299866099429*^9, {3.584299906346855*^9, 
   3.584300060553175*^9}, 3.5843005349856873`*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Characterization of Good and Bad Orbigraphs", "Section",
 CellChangeTimes->{{3.583504537673525*^9, 3.583504582132621*^9}, {
  3.583509437760704*^9, 3.583509440334321*^9}, {3.583604913812951*^9, 
  3.5836049144171343`*^9}, {3.583604949342388*^9, 3.583604952190271*^9}, {
  3.583611444032045*^9, 3.5836114865967817`*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 StyleBox["Good:",
  FontWeight->"Bold"],
 " only \[OpenCurlyDoubleQuote]balanced\[CloseCurlyDoubleQuote] cycles"
}], "Item",
 CellChangeTimes->{{3.583603153527471*^9, 3.5836031912009563`*^9}, {
  3.583604909628951*^9, 3.583604921172461*^9}, {3.583605049452754*^9, 
  3.583605149692397*^9}, {3.583611519709037*^9, 3.583611520364934*^9}, {
  3.583611614267494*^9, 3.583611621170806*^9}, {3.5836117425548553`*^9, 
  3.583611750895398*^9}, {3.5837587699890127`*^9, 3.5837587737621737`*^9}, {
  3.583760717195385*^9, 3.5837607350850286`*^9}}],

Cell[TextData[{
 StyleBox["Bad:",
  FontWeight->"Bold"],
 " at least one \[OpenCurlyDoubleQuote]unbalanced\[CloseCurlyDoubleQuote] \
cycle"
}], "Item",
 CellChangeTimes->{{3.583603153527471*^9, 3.5836031912009563`*^9}, {
  3.583604909628951*^9, 3.583604921172461*^9}, {3.583605049452754*^9, 
  3.583605143390977*^9}, {3.583611754270728*^9, 3.583611756297846*^9}, {
  3.583760720964121*^9, 3.583760736429329*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"badOrbi", " ", "=", " ", 
    RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AdjacencyOrbigraph", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "3", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"VertexSize", " ", "\[Rule]", " ", ".1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"EdgeStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Thick", ",", " ", "Black"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"EdgeLabelStyle", "\[Rule]", "20"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"1", " ", "\[Rule]", " ", "Red"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"2", "\[Rule]", " ", "Yellow"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"3", "\[Rule]", "Purple"}]}], "\[IndentingNewLine]", 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"VertexShapeFunction", "\[Rule]", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", " ", "\"\<Triangle\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"2", "\[Rule]", "\"\<Square\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"3", "\[Rule]", "\"\<Star\>\""}]}], "\[IndentingNewLine]", 
          "}"}]}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"goodOrbi", " ", "=", " ", 
    RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AdjacencyOrbigraph", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"VertexSize", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"EdgeStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Thick", ",", " ", "Black"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"EdgeLabelStyle", "\[Rule]", "20"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"1", " ", "\[Rule]", " ", "Red"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"2", "\[Rule]", " ", "Yellow"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"3", "\[Rule]", "Purple"}]}], "\[IndentingNewLine]", 
          "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"VertexShapeFunction", "\[Rule]", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"1", "\[Rule]", " ", "\"\<Triangle\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"2", "\[Rule]", "\"\<Square\>\""}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"3", "\[Rule]", "\"\<Star\>\""}]}], "\[IndentingNewLine]", 
          "}"}]}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dwnArrw", " ", "=", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Arrowheads", "[", ".1", "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", ".3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", ".3"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edgesToHighlight", " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", " ", "Green"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[DirectedEdge]", "2"}], ",", " ", "Green"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[DirectedEdge]", "3"}], ",", " ", "Green"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[DirectedEdge]", "1"}], ",", "Green"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[DirectedEdge]", "3"}], ",", "Red"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[DirectedEdge]", "2"}], ",", "Red"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[DirectedEdge]", "1"}], ",", "Red"}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"textFrames", " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<3\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<3\[Times]3\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<3\[Times]3\[Times]3\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<3\[Times]3\[Times]3\[NotEqual]1\>\"", ",", " ", 
        "\"\<Subsection\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<3\[Times]3\[Times]3\[NotEqual]1\[Times]1\>\"", ",", " ", 
        "\"\<Subsection\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<3\[Times]3\[Times]3\[NotEqual]1\[Times]1\[Times]1\>\"", ",", " ", 
        "\"\<Subsection\>\""}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edgesToHighlight2", " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", " ", "Green"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[DirectedEdge]", "2"}], ",", "Green"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[DirectedEdge]", "3"}], ",", "Green"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[DirectedEdge]", "1"}], ",", "Green"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[DirectedEdge]", "3"}], ",", "Red"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[DirectedEdge]", "2"}], ",", "Red"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[DirectedEdge]", "1"}], ",", "Red"}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"textFrames2", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<1\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<1\[Times]3\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1\[Times]3\[Times]2\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1\[Times]3\[Times]2=3\>\"", ",", " ", "\"\<Subsection\>\""}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1\[Times]3\[Times]2=3\[Times]2\>\"", ",", " ", 
        "\"\<Subsection\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1\[Times]3\[Times]2=3\[Times]2\[Times]1\>\"", ",", " ", 
        "\"\<Subsection\>\""}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]",
   "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Grid", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Style", "[", 
         RowBox[{
         "\"\<Good Orbigraph\>\"", ",", " ", "\"\<Subsection\>\"", ",", 
          RowBox[{"FontSize", "\[Rule]", 
           RowBox[{"Scaled", "[", ".02", "]"}]}], ",", " ", 
          RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Pane", "[", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Bad Orbigraph\>\"", ",", " ", "\"\<Subsection\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}], ",", " ", 
          RowBox[{"Scaled", "[", ".5", "]"}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"HighlightGraph", "[", 
                RowBox[{"goodOrbi", ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Style", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"First", "@", 
                    RowBox[{
                    "edgesToHighlight2", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Last", "@", 
                    RowBox[{
                    "edgesToHighlight2", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}]}], ",", " ", "Thick"}], "]"}]}],
                     "\[IndentingNewLine]", "]"}], "&"}], "/@", 
                  RowBox[{"Range", "[", "d", "]"}]}]}], "\[IndentingNewLine]",
                 "]"}], ",", " ", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"Scaled", "[", ".5", "]"}]}]}], "]"}], ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"Style", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"First", "@", 
                RowBox[{
                "textFrames2", "\[LeftDoubleBracket]", "d", 
                 "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Last", "@", 
                RowBox[{
                "textFrames2", "\[LeftDoubleBracket]", "d", 
                 "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"Scaled", "[", ".020", "]"}]}]}], 
              "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", " ", 
          RowBox[{"{", 
           RowBox[{"d", ",", " ", "1", ",", " ", "7", ",", "1"}], "}"}]}], 
         "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"HighlightGraph", "[", 
                RowBox[{"badOrbi", ",", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"Style", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"First", "@", 
                    RowBox[{
                    "edgesToHighlight", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Last", "@", 
                    RowBox[{
                    "edgesToHighlight", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}]}], ",", " ", "Thick"}], "]"}]}],
                     "\[IndentingNewLine]", "]"}], "&"}], "/@", 
                  RowBox[{"Range", "[", "d", "]"}]}]}], "\[IndentingNewLine]",
                 "]"}], ",", "\[IndentingNewLine]", 
               RowBox[{"ImageSize", "\[Rule]", 
                RowBox[{"Scaled", "[", ".5", "]"}]}]}], "]"}], ",", 
             "\[IndentingNewLine]", "\[IndentingNewLine]", 
             RowBox[{"Style", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"First", "@", 
                RowBox[{
                "textFrames", "\[LeftDoubleBracket]", "d", 
                 "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Last", "@", 
                RowBox[{
                "textFrames", "\[LeftDoubleBracket]", "d", 
                 "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"Scaled", "[", ".02", "]"}]}]}], 
              "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", " ", 
          RowBox[{"{", 
           RowBox[{"d", ",", " ", "1", ",", " ", "7", ",", "1"}], "}"}]}], 
         "]"}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
     "}"}], ",", "\[IndentingNewLine]", 
    StyleBox[
     RowBox[{"Alignment", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Right", ",", " ", "Left"}], "}"}], "}"}]}],
     CellOpen->False], 
    StyleBox[",",
     CellOpen->False], 
    StyleBox["\[IndentingNewLine]",
     CellOpen->False], 
    StyleBox[
     RowBox[{"ItemSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"Scaled", "[", ".5", "]"}], ",", " ", 
         RowBox[{"Scaled", "[", ".5", " ", "]"}]}], "}"}], "}"}]}],
     CellOpen->False], 
    StyleBox[",",
     CellOpen->False], 
    StyleBox["\[IndentingNewLine]",
     CellOpen->False], 
    StyleBox[
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Scaled", "[", ".1", "]"}], ",", " ", 
        RowBox[{"Scaled", "[", ".01", "]"}]}], "}"}]}],
     CellOpen->False]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
      StripOnInput->False,
      TextAlignment->Center,
      FontSize->Scaled[0.02]], 
     PaneBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      ImageSize->Scaled[0.5]]},
    {
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`d$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`d$$], 1, 7, 1}}, Typeset`size$$ = {
        271., {138.625, 144.375}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`d$21546$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`d$$ = 1}, 
          "ControllerVariables" :> {
            Hold[$CellContext`d$$, $CellContext`d$21546$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Column[{
             SetProperty[
              HighlightGraph[$CellContext`goodOrbi, 
               Map[Style[
                 First[
                  Part[$CellContext`edgesToHighlight2, #]], 
                 Directive[
                  Last[
                   Part[$CellContext`edgesToHighlight2, #]], Thick]]& , 
                Range[$CellContext`d$$]]], ImageSize -> Scaled[0.5]], 
             Style[
              First[
               Part[$CellContext`textFrames2, $CellContext`d$$]], 
              Last[
               Part[$CellContext`textFrames2, $CellContext`d$$]], FontSize -> 
              Scaled[0.02]]}], 
          "Specifications" :> {{$CellContext`d$$, 1, 7, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{316., {184., 189.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`d$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
        Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{
          Hold[$CellContext`d$$], 1, 7, 1}}, Typeset`size$$ = {
        271., {139.625, 145.375}}, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`d$21563$$ = 0}, 
        DynamicBox[Manipulate`ManipulateBoxes[
         1, StandardForm, "Variables" :> {$CellContext`d$$ = 1}, 
          "ControllerVariables" :> {
            Hold[$CellContext`d$$, $CellContext`d$21563$$, 0]}, 
          "OtherVariables" :> {
           Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
            Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
            Typeset`specs$$, Typeset`size$$, Typeset`update$$, 
            Typeset`initDone$$, Typeset`skipInitDone$$}, "Body" :> Column[{
             SetProperty[
              HighlightGraph[$CellContext`badOrbi, 
               Map[Style[
                 First[
                  Part[$CellContext`edgesToHighlight, #]], 
                 Directive[
                  Last[
                   Part[$CellContext`edgesToHighlight, #]], Thick]]& , 
                Range[$CellContext`d$$]]], ImageSize -> Scaled[0.5]], 
             Style[
              First[
               Part[$CellContext`textFrames, $CellContext`d$$]], 
              Last[
               Part[$CellContext`textFrames, $CellContext`d$$]], FontSize -> 
              Scaled[0.02]]}], 
          "Specifications" :> {{$CellContext`d$$, 1, 7, 1}}, "Options" :> {}, 
          "DefaultOptions" :> {}],
         ImageSizeCache->{316., {185., 190.}},
         SingleEvaluation->True],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "Manipulate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Right, Left}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.5], 
       Scaled[0.5]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.1]}}, "Rows" -> {{
        Scaled[0.01]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.583605304103899*^9, 3.583605321171246*^9}, {
   3.583605362409018*^9, 3.583605372188094*^9}, {3.5836054139039583`*^9, 
   3.583605487579677*^9}, {3.583608112895891*^9, 3.583608155791032*^9}, 
   3.583608355191963*^9, {3.583608459615102*^9, 3.583608484018375*^9}, {
   3.58360859690518*^9, 3.58360860221242*^9}, {3.5836087119445677`*^9, 
   3.583608717320716*^9}, 3.583609037736796*^9, {3.583609090017983*^9, 
   3.5836091389814787`*^9}, {3.583609559929267*^9, 3.583609578555271*^9}, {
   3.58360995936835*^9, 3.583609998501627*^9}, {3.5836100997640953`*^9, 
   3.583610145998011*^9}, {3.583610280352467*^9, 3.583610287085137*^9}, {
   3.583610465015502*^9, 3.583610523510083*^9}, 3.583610602963153*^9, {
   3.583610647225931*^9, 3.583610668588819*^9}, 3.583610709898843*^9, {
   3.5836108225683002`*^9, 3.5836108522339067`*^9}, {3.583610898313843*^9, 
   3.583610967841791*^9}, 3.5836110068076353`*^9, 3.58361140564638*^9, 
   3.583611806765967*^9, 3.5836118977490797`*^9, 3.583612027020878*^9, {
   3.583612065206584*^9, 3.583612083086989*^9}, {3.58361221320543*^9, 
   3.583612236773549*^9}, {3.58361227836779*^9, 3.583612285262623*^9}, {
   3.583612327222267*^9, 3.583612360116243*^9}, {3.583612454512353*^9, 
   3.583612475465673*^9}, {3.5836125400271177`*^9, 3.5836125611415043`*^9}, {
   3.5836125933283863`*^9, 3.5836126133282013`*^9}, 3.5836126599600143`*^9, {
   3.583612822437046*^9, 3.5836128650940237`*^9}, 3.583613057461712*^9, {
   3.583613202420528*^9, 3.5836132667874527`*^9}, 3.583613753475609*^9, 
   3.5836138566791353`*^9, {3.583613890974971*^9, 3.583613918351927*^9}, {
   3.5836141459147377`*^9, 3.583614153893908*^9}, {3.5836142255435133`*^9, 
   3.583614244280182*^9}, 3.583614298189299*^9, {3.583614339726673*^9, 
   3.583614360651346*^9}, 3.583614446970199*^9, 3.583614559150749*^9, {
   3.5836146295413113`*^9, 3.583614656230777*^9}, {3.58361478366778*^9, 
   3.583614796457695*^9}, {3.583674943784747*^9, 3.58367499870958*^9}, {
   3.583675081001998*^9, 3.583675113451252*^9}, {3.583675200118129*^9, 
   3.583675298875119*^9}, 3.5836763872520447`*^9, 3.583763499258793*^9, 
   3.5837635869903803`*^9, 3.583763638916*^9, 3.583764359185445*^9, 
   3.5837644159343863`*^9, 3.58376465210748*^9, {3.583764872815*^9, 
   3.583764889196328*^9}, {3.583765020971201*^9, 3.583765032227013*^9}, 
   3.583765946475883*^9, {3.583766038808607*^9, 3.583766128779747*^9}, 
   3.5837681990428247`*^9, {3.5837682512427673`*^9, 3.583768340615632*^9}, 
   3.5837683737455797`*^9, {3.58376841031628*^9, 3.583768429195877*^9}, {
   3.583768461335519*^9, 3.5837685201165237`*^9}, 3.58376855283078*^9, {
   3.583768605762587*^9, 3.5837686257621717`*^9}, 3.583768915688692*^9, 
   3.5837749270571747`*^9, 3.583775178455619*^9, 3.5837818408611517`*^9, 
   3.5837827853970327`*^9, 3.5837834083663473`*^9, 3.5837866779918528`*^9, 
   3.5837871623658543`*^9, 3.583949367785261*^9, 3.583949908676858*^9, 
   3.5839500230620003`*^9, 3.5839509060255737`*^9, 3.584104158659223*^9, {
   3.584104968072639*^9, 3.584105015291072*^9}, 3.584105262241356*^9, 
   3.584105842549961*^9, {3.58418829045935*^9, 3.584188326119816*^9}, {
   3.5841884187400913`*^9, 3.584188441289866*^9}, 3.5841884746416817`*^9, {
   3.584188522053149*^9, 3.5841885318716803`*^9}, {3.584188656258523*^9, 
   3.58418869866539*^9}, 3.5841888407609177`*^9, {3.584188892242334*^9, 
   3.584188905155102*^9}, {3.5841891335399303`*^9, 3.584189170729189*^9}, {
   3.58419373945798*^9, 3.584193758954151*^9}, 3.584198659424069*^9, 
   3.584212838638012*^9, 3.584212870430223*^9, {3.58421292118188*^9, 
   3.584212944853524*^9}, 3.584213145342534*^9, 3.584279035768653*^9, 
   3.584283888511265*^9, 3.584283932748336*^9, 3.584284031661586*^9, 
   3.584297755067601*^9, {3.584300535279093*^9, 3.584300630489359*^9}, 
   3.584300735372225*^9, 3.584300770201882*^9, 3.584300807637121*^9, {
   3.5843008604043617`*^9, 3.5843008797232323`*^9}, 3.584300926420682*^9, {
   3.5843010009166327`*^9, 3.584301009034658*^9}, {3.584301050341794*^9, 
   3.584301205764964*^9}, {3.584301240444037*^9, 3.5843012523313026`*^9}, {
   3.5843013129650803`*^9, 3.58430136415215*^9}, {3.584301395432461*^9, 
   3.584301421405188*^9}, {3.584301459433737*^9, 3.584301529615856*^9}, {
   3.58430157448633*^9, 3.584301602764497*^9}, 3.584304314158242*^9},
 TextAlignment->Center]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Example: Good Orbigraph", "Section",
 CellChangeTimes->{{3.583504537673525*^9, 3.583504582132621*^9}, {
  3.583509437760704*^9, 3.583509440334321*^9}, {3.583604913812951*^9, 
  3.5836049144171343`*^9}, {3.583604949342388*^9, 3.583604952190271*^9}, {
  3.583611444032045*^9, 3.5836114865967817`*^9}, {3.5836753545761843`*^9, 
  3.583675361473876*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"GenerateRandomReversibleOrbigraph", "[", 
     RowBox[{"n_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"randOrbi", " ", "=", " ", 
         RowBox[{"GenerateRandomOrbigraph", "[", 
          RowBox[{"n", ",", " ", "k"}], "]"}]}], ",", " ", 
        RowBox[{"tries", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"tries", " ", "\[LessEqual]", " ", "400"}], " ", "&&", " ", 
           RowBox[{"Not", "[", 
            RowBox[{"ConnectedOrbigraphQ", "[", "randOrbi", "]"}], "]"}]}], 
          " ", "||", " ", 
          RowBox[{"Not", "[", 
           RowBox[{"OrbigraphReversibleQ", "[", "randOrbi", "]"}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"randOrbi", " ", "=", " ", 
           RowBox[{"GenerateRandomOrbigraph", "[", 
            RowBox[{"n", ",", " ", "k"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"tries", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "randOrbi", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"randOrbi", " ", "=", " ", 
     RowBox[{"Style", "[", 
      RowBox[{"\"\<Nothing\>\"", ",", " ", "\"\<Subsubsection\>\"", ",", 
       RowBox[{"FontSize", "\[Rule]", 
        RowBox[{"Scaled", "[", ".015", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"coveringGraph", " ", "=", " ", 
     RowBox[{"Style", "[", 
      RowBox[{
      "\"\<Nothing\>\"", ",", " ", "\"\<Subsubsection\>\"", ",", " ", 
       RowBox[{"FontSize", "\[Rule]", 
        RowBox[{"Scaled", "[", ".015", "]"}]}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Button", "[", 
         RowBox[{
         "\"\<Random Orbigraph\>\"", ",", " ", "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"coveringGraph", " ", "=", " ", 
             RowBox[{"Style", "[", 
              RowBox[{"\"\<Nothing\>\"", ",", " ", "\"\<Subsubsection\>\""}], 
              "]"}]}], ";", "\[IndentingNewLine]", 
            RowBox[{"randOrbi", " ", "=", " ", 
             RowBox[{"GenerateRandomReversibleOrbigraph", "[", 
              RowBox[{"3", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"randOrbi", " ", "=", " ", 
             RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"AdjacencyOrbigraph", "@", "randOrbi"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"VertexSize", "\[Rule]", ".3"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", ".3", "]"}]}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"EdgeLabelStyle", "\[Rule]", "15"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"1", "\[Rule]", " ", "Red"}], ",", " ", 
                    "\[IndentingNewLine]", 
                    RowBox[{"2", "\[Rule]", " ", "Yellow"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"3", "\[Rule]", "Purple"}]}], 
                   "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]",
                  " ", 
                 RowBox[{
                 "VertexShapeFunction", "\[Rule]", "\[IndentingNewLine]", 
                  RowBox[{"{", "\[IndentingNewLine]", 
                   RowBox[{
                    RowBox[{"1", "\[Rule]", " ", "\"\<Triangle\>\""}], ",", 
                    " ", "\[IndentingNewLine]", 
                    RowBox[{"2", "\[Rule]", " ", "\"\<Square\>\""}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"3", "\[Rule]", "\"\<Star\>\""}]}], 
                   "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
                "}"}]}], "\[IndentingNewLine]", "]"}]}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"Scaled", "[", ".4", "]"}]}]}], "\[IndentingNewLine]", 
         "]"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Button", "[", 
         RowBox[{"\"\<Finite Covering\>\"", ",", "\[IndentingNewLine]", 
          RowBox[{"Dynamic", "[", 
           RowBox[{
            RowBox[{"coveringGraph", " ", "=", " ", 
             RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"CreateFiniteCoveringGraph", "[", 
                RowBox[{"WeightedAdjacencyMatrix", "@", "randOrbi"}], "]"}], 
               ",", "\[IndentingNewLine]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", ".4", "]"}]}], ",", " ", 
                 RowBox[{
                 "GraphLayout", "\[Rule]", "\"\<SpringEmbedding\>\""}]}], 
                "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"Scaled", "[", ".2", "]"}]}]}], "\[IndentingNewLine]", 
         "]"}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Dynamic", "[", "coveringGraph", "]"}], "\[IndentingNewLine]",
         "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Item", "[", " ", 
         RowBox[{
          RowBox[{"Graphics", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"Arrowheads", "[", ".1", "]"}], ",", 
              RowBox[{"Arrow", "[", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"0", ",", ".3"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"0", ",", 
                   RowBox[{"-", ".3"}]}], "}"}]}], "}"}], "]"}]}], "}"}], ",",
             " ", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"Scaled", "[", ".2", "]"}]}]}], "]"}], ",", 
          RowBox[{"Alignment", "\[Rule]", "Center"}]}], "]"}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"Dynamic", "[", "randOrbi", "]"}], "\[IndentingNewLine]", 
        "}"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"Alignment", "\[Rule]", " ", "Center"}],
      CellOpen->False], 
     StyleBox[",",
      CellOpen->False], 
     StyleBox["\[IndentingNewLine]",
      CellOpen->False], 
     StyleBox[
      RowBox[{"ItemSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"Scaled", "[", "1", "]"}], "}"}], "}"}]}],
      CellOpen->False], 
     StyleBox[",",
      CellOpen->False], 
     StyleBox["\[IndentingNewLine]",
      CellOpen->False], 
     StyleBox[
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Scaled", "[", ".1", "]"}], ",", " ", 
         RowBox[{"Scaled", "[", ".01", "]"}]}], "}"}]}],
      CellOpen->False]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, {3.5836764090262957`*^9, 
   3.583676481383636*^9}, {3.583676548600483*^9, 3.583676548748131*^9}, {
   3.583676613567326*^9, 3.5836766413915653`*^9}, {3.583676682809504*^9, 
   3.583676704931024*^9}, {3.583676735013506*^9, 3.583676799455542*^9}, {
   3.583676906080701*^9, 3.5836769404670763`*^9}, {3.583677027032062*^9, 
   3.583677137608968*^9}, {3.5836771769495783`*^9, 3.5836773162990017`*^9}, {
   3.5836773501335506`*^9, 3.583677361137568*^9}, {3.5836774400790033`*^9, 
   3.5836776383375874`*^9}, {3.5836777339061193`*^9, 3.58367779190267*^9}, {
   3.583677877519021*^9, 3.58367796150695*^9}, {3.583677997194104*^9, 
   3.583677999201078*^9}, {3.583678119386209*^9, 3.583678125514632*^9}, {
   3.5836866903700323`*^9, 3.583686719505563*^9}, {3.5837751936560583`*^9, 
   3.583775196075613*^9}, {3.583783217061591*^9, 3.5837832204543324`*^9}, {
   3.5837832518353853`*^9, 3.5837833527589827`*^9}, {3.5837870373818827`*^9, 
   3.5837870380067463`*^9}, 3.583950626225877*^9, {3.5839506660673532`*^9, 
   3.5839506927458887`*^9}, {3.583950762121608*^9, 3.583950770747435*^9}, {
   3.583950829515133*^9, 3.583950864735855*^9}, {3.5841051380120363`*^9, 
   3.584105159818038*^9}, {3.5841053890575533`*^9, 3.584105390841195*^9}, {
   3.5841054635120583`*^9, 3.584105489063031*^9}, {3.584105524619287*^9, 
   3.5841055249636507`*^9}, {3.5842130019951267`*^9, 3.584213007321607*^9}, {
   3.584301615029738*^9, 3.5843018415395393`*^9}, {3.584303129545002*^9, 
   3.5843031445751753`*^9}, {3.5843032137107067`*^9, 3.5843032265200663`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ButtonBox["\<\"Random Orbigraph\"\>",
      Appearance->Automatic,
      ButtonFunction:>
       Dynamic[$CellContext`coveringGraph = 
         Style["Nothing", 
           "Subsubsection"]; $CellContext`randOrbi = \
$CellContext`GenerateRandomReversibleOrbigraph[3, 3]; $CellContext`randOrbi = 
         SetProperty[
           Orbigraphs`AdjacencyOrbigraph[$CellContext`randOrbi], {
           VertexSize -> 0.3, ImageSize -> Scaled[0.3], EdgeLabelStyle -> 15, 
            VertexStyle -> {1 -> Red, 2 -> Yellow, 3 -> Purple}, 
            VertexShapeFunction -> {
             1 -> "Triangle", 2 -> "Square", 3 -> "Star"}}]],
      Evaluator->Automatic,
      ImageSize->Scaled[0.4],
      Method->"Preemptive"]},
    {
     ButtonBox["\<\"Finite Covering\"\>",
      Appearance->Automatic,
      ButtonFunction:>Dynamic[$CellContext`coveringGraph = SetProperty[
           OrbigraphCovers`CreateFiniteCoveringGraph[
            WeightedAdjacencyMatrix[$CellContext`randOrbi]], {
           ImageSize -> Scaled[0.4], GraphLayout -> "SpringEmbedding"}]; Null],
      Evaluator->Automatic,
      ImageSize->Scaled[0.2],
      Method->"Preemptive"]},
    {
     DynamicBox[ToBoxes[$CellContext`coveringGraph, StandardForm],
      ImageSizeCache->{521., {220., 224.}}]},
    {
     ItemBox[
      GraphicsBox[
       {Arrowheads[0.1], ArrowBox[{{0, 0.3}, {0, -0.3}}]},
       ImageSize->Scaled[0.2]],
      Alignment->Center,
      StripOnInput->False]},
    {
     DynamicBox[ToBoxes[$CellContext`randOrbi, StandardForm],
      ImageSizeCache->{391., {42., 46.}}]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[1]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.1]}}, "Rows" -> {{
        Scaled[0.01]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584301778914523*^9, 3.584301810972183*^9}, 
   3.584301841915077*^9, {3.584303136652722*^9, 3.584303144849745*^9}, {
   3.58430321491637*^9, 3.58430322721959*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["How did we discover and prove this connection?", "Section",
 CellChangeTimes->{{3.583504537673525*^9, 3.583504582132621*^9}, {
  3.583509437760704*^9, 3.583509440334321*^9}, {3.583604913812951*^9, 
  3.5836049144171343`*^9}, {3.583604949342388*^9, 3.583604952190271*^9}, {
  3.583611444032045*^9, 3.5836114865967817`*^9}, {3.5836753545761843`*^9, 
  3.583675361473876*^9}, {3.583678168528171*^9, 3.583678183381459*^9}, {
  3.583687813332683*^9, 3.5836878140960913`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Comes from Markov chain property \[OpenCurlyDoubleQuote]reversibility\
\[CloseCurlyDoubleQuote]\
\>", "Item",
 CellChangeTimes->{{3.583603153527471*^9, 3.5836031912009563`*^9}, {
  3.583604909628951*^9, 3.583604921172461*^9}, {3.583605049452754*^9, 
  3.583605149692397*^9}, {3.583611519709037*^9, 3.583611520364934*^9}, {
  3.583611614267494*^9, 3.583611621170806*^9}, {3.5836117425548553`*^9, 
  3.583611750895398*^9}, {3.583675364823827*^9, 3.583675382895338*^9}, {
  3.583678186228922*^9, 3.5836781970588617`*^9}, {3.583687776296733*^9, 
  3.583687776302123*^9}, {3.584105640363225*^9, 3.5841056437478447`*^9}}],

Cell[TextData[{
 "Reversible Markov chains satisfy the ",
 StyleBox["detailed balance equations",
  FontSlant->"Italic"],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Pi]", "i"], 
     SubscriptBox["P", 
      RowBox[{"i", ",", " ", "j"}]]}], "=", " ", 
    RowBox[{
     SubscriptBox["\[Pi]", "j"], 
     SubscriptBox["P", 
      RowBox[{"j", ",", "i"}]]}]}], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.583603153527471*^9, 3.5836031912009563`*^9}, {
  3.583604909628951*^9, 3.583604921172461*^9}, {3.583605049452754*^9, 
  3.583605149692397*^9}, {3.583611519709037*^9, 3.583611520364934*^9}, {
  3.583611614267494*^9, 3.583611621170806*^9}, {3.5836117425548553`*^9, 
  3.583611750895398*^9}, {3.583675364823827*^9, 3.583675382895338*^9}, {
  3.583678186228922*^9, 3.5836781970588617`*^9}, {3.583687776296733*^9, 
  3.583687807806933*^9}, {3.5841905614485807`*^9, 3.584190582780612*^9}, {
  3.584213893953373*^9, 3.584213897055828*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rightArrw", " ", "=", " ", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Arrowheads", "[", ".1", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.5"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.5", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"shortRightArrw", " ", "=", " ", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Arrowheads", "[", ".1", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ro", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"ro", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"markovChain", " ", "=", " ", 
     RowBox[{"MarkovProcessFromOrbigraph", "@", "ro"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ro", " ", "=", " ", 
     RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AdjacencyOrbigraph", "@", "ro"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"Scaled", "[", ".3", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"VertexSize", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"1", "\[Rule]", " ", "Red"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"2", "\[Rule]", " ", "Yellow"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"3", "\[Rule]", "Purple"}]}], "\[IndentingNewLine]", 
           "}"}]}], ",", "\[IndentingNewLine]", " ", 
         RowBox[{"VertexShapeFunction", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"1", "\[Rule]", " ", "\"\<Triangle\>\""}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"2", "\[Rule]", " ", "\"\<Square\>\""}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"3", "\[Rule]", "\"\<Star\>\""}]}], "\[IndentingNewLine]",
            "}"}]}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalCounts", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GenerateRandomWalk", "[", 
     RowBox[{"chain_DiscreteMarkovProcess", ",", " ", "len_Integer"}], "]"}], 
    " ", ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"counts", " ", ",", 
        RowBox[{"walk", "=", " ", 
         RowBox[{"{", "}"}]}], ",", " ", 
        RowBox[{"cur", "=", "1"}], ",", "next", ",", "i", ",", "  ", 
        RowBox[{"G", " ", "=", " ", 
         RowBox[{"Graph", "@", "chain"}]}], ",", " ", 
        RowBox[{"T", "=", 
         RowBox[{"Normal", "@", 
          RowBox[{"MarkovProcessProperties", "[", 
           RowBox[{"chain", ",", " ", "\"\<TransitionMatrix\>\""}], 
           "]"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cur", " ", "=", " ", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{"VertexList", "@", "G"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"counts", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{"VertexCount", "@", "G"}]}], "]"}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", " ", "0"}], ",", " ", 
         RowBox[{"i", " ", "<", " ", "len"}], ",", " ", 
         RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"next", " ", "=", " ", 
           RowBox[{"RandomChoice", "[", 
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
               "T", "\[LeftDoubleBracket]", "cur", "\[RightDoubleBracket]"}], 
               ",", " ", 
               RowBox[{"x_", "/;", 
                RowBox[{"x", " ", "\[NotEqual]", " ", "0"}]}]}], "]"}], 
             "\[Rule]", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{
                 "T", "\[LeftDoubleBracket]", "cur", 
                  "\[RightDoubleBracket]"}], ",", " ", 
                 RowBox[{"x_", "/;", 
                  RowBox[{"x", " ", "\[NotEqual]", " ", "0"}]}]}], "]"}], ",",
                "1"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"walk", " ", "=", " ", 
           RowBox[{"Append", "[", 
            RowBox[{"walk", ",", " ", "next"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"counts", " ", "=", " ", 
           RowBox[{"Append", "[", 
            RowBox[{"counts", ",", " ", 
             RowBox[{"Last", "@", "counts"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"counts", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"Length", "@", "counts"}], ",", "next"}], 
            "\[RightDoubleBracket]"}], "++"}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"cur", " ", "=", " ", "next"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"walk", ",", " ", "counts"}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w", " ", "=", " ", 
     RowBox[{"GenerateRandomWalk", "[", 
      RowBox[{"markovChain", ",", " ", "5000"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Grid", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"HighlightGraph", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
              RowBox[{"ro", ",", " ", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"EdgeWeight", "\[Rule]", " ", 
                  RowBox[{"N", "[", 
                   RowBox[{
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{"ro", ",", " ", "EdgeWeight"}], "]"}], "/", "3"}],
                    "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"EdgeLabelStyle", "\[Rule]", " ", "10"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"EdgeStyle", "\[Rule]", "Medium"}], ",", " ", 
                 "\[IndentingNewLine]", 
                 RowBox[{"VertexSize", "\[Rule]", ".3"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", "1.0", "]"}]}]}], 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], 
             "\[IndentingNewLine]", ",", " ", 
             RowBox[{"{", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"First", "@", "w"}], ")"}], "\[LeftDoubleBracket]", 
                 "t", "\[RightDoubleBracket]"}], ",", " ", 
                RowBox[{"Lighter", "@", "Pink"}]}], "]"}], "}"}]}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Column", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"StringJoin", "@", 
                 RowBox[{"{", 
                  RowBox[{"\"\<\[Pi] = [\>\"", ",", 
                   RowBox[{"Riffle", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "@", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "&"}], "/@", 
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Last", "@", "w"}], ")"}], "\[LeftDoubleBracket]",
                     "t", "\[RightDoubleBracket]"}], "/", "t"}], "]"}]}], 
                    ",", "\"\<, \>\"", ",", " ", "2"}], "]"}], ",", " ", 
                   "\"\<]\>\""}], "}"}]}], ",", " ", "\"\<Subsubsection\>\"", 
                ",", 
                RowBox[{"FontSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"StringJoin", "@", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Steps: \>\"", ",", 
                   RowBox[{"ToString", "@", "t"}]}], "}"}]}], ",", " ", 
                "\"\<Subsubsection\>\"", ",", 
                RowBox[{"FontSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", ".015", "]"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Grid", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Pi]\), \
\(1\)]\)\!\(\*SubscriptBox[\(P\), \(1, 2\)]\) = \!\(\*SubscriptBox[\(\[Pi]\), \
\(2\)]\)\!\(\*SubscriptBox[\(P\), \(2, 1\)]\)\>\"", ",", " ", 
                   "\"\<Subsubsection\>\"", ",", 
                   RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Pi]\), \
\(1\)]\)\!\(\*SubscriptBox[\(P\), \(1, 3\)]\) = \!\(\*SubscriptBox[\(\[Pi]\), \
\(3\)]\)\!\(\*SubscriptBox[\(P\), \(3, 1\)]\)\>\"", ",", " ", 
                   "\"\<Subsubsection\>\"", ",", 
                   RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}]}], 
                "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"StringJoin", "@", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "@", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", " ", "\[GreaterEqual]", " ", "4500"}], ",", 
                    " ", ".31", ",", " ", 
                    RowBox[{
                    RowBox[{"P", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
                    "*", " ", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Last", "@", "w"}], ")"}], "\[LeftDoubleBracket]",
                     "t", "\[RightDoubleBracket]"}], "/", "t"}], "]"}], 
                    "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", "\"\< = \>\"", ",", " ", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", " ", "\[GreaterEqual]", " ", "4500"}], ",", 
                    " ", ".31", ",", " ", 
                    RowBox[{
                    RowBox[{"P", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
                    "*", " ", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Last", "@", "w"}], ")"}], "\[LeftDoubleBracket]",
                     "t", "\[RightDoubleBracket]"}], "/", "t"}], "]"}], 
                    "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}]}], ",", 
                   "\[IndentingNewLine]", "\"\<Subsubsection\>\"", ",", 
                   RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"StringJoin", "@", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "@", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", " ", "\[GreaterEqual]", " ", "4500"}], ",", 
                    " ", ".16", ",", " ", 
                    RowBox[{
                    RowBox[{"P", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
                    "*", " ", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Last", "@", "w"}], ")"}], "\[LeftDoubleBracket]",
                     "t", "\[RightDoubleBracket]"}], "/", "t"}], "]"}], 
                    "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", "\"\< = \>\"", ",", " ", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"If", "[", " ", 
                    RowBox[{
                    RowBox[{"t", " ", "\[GreaterEqual]", " ", "4500"}], ",", 
                    " ", ".16", ",", " ", 
                    RowBox[{
                    RowBox[{"P", "\[LeftDoubleBracket]", 
                    RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
                    "*", " ", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Last", "@", "w"}], ")"}], "\[LeftDoubleBracket]",
                     "t", "\[RightDoubleBracket]"}], "/", "t"}], "]"}], 
                    "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}]}], ",", 
                   "\[IndentingNewLine]", "\"\<Subsubsection\>\"", ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}]}], 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Frame", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
             
             RowBox[{"Spacings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"3", ",", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"Alignment", "\[Rule]", "Center"}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"MatrixForm", "[", 
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{"WeightedAdjacencyMatrix", "[", "ro", "]"}], "]"}], 
               " ", "/", " ", "3"}], "]"}], ",", " ", "\"\<Subsubsection\>\"",
              ",", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Alignment", "\[Rule]", " ", "Center"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ItemSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Scaled", "[", ".50", "]"}], ",", " ", 
           RowBox[{"Scaled", "[", ".50", "]"}]}], "}"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "@", 
        RowBox[{"First", "@", "w"}]}], ",", " ", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "\[IndentingNewLine]", 
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, {3.5836764090262957`*^9, 
   3.583676481383636*^9}, {3.583676548600483*^9, 3.583676548748131*^9}, {
   3.583676613567326*^9, 3.5836766413915653`*^9}, {3.583676682809504*^9, 
   3.583676704931024*^9}, {3.583676735013506*^9, 3.583676799455542*^9}, {
   3.583676906080701*^9, 3.5836769404670763`*^9}, {3.583677027032062*^9, 
   3.583677137608968*^9}, {3.5836771769495783`*^9, 3.5836773162990017`*^9}, {
   3.5836773501335506`*^9, 3.583677361137568*^9}, {3.5836774400790033`*^9, 
   3.5836776383375874`*^9}, {3.5836777339061193`*^9, 3.58367779190267*^9}, {
   3.583677877519021*^9, 3.58367796150695*^9}, {3.583677997194104*^9, 
   3.583677999201078*^9}, {3.583678119386209*^9, 3.583678125514632*^9}, {
   3.583678361187009*^9, 3.5836785942647953`*^9}, {3.5836786870021048`*^9, 
   3.583678705928645*^9}, {3.58367881565783*^9, 3.583678841084134*^9}, {
   3.58367887702275*^9, 3.583678944983087*^9}, {3.583679232635479*^9, 
   3.583679335655169*^9}, {3.583679366600268*^9, 3.5836793866464787`*^9}, {
   3.5836794658536377`*^9, 3.583679473403458*^9}, {3.583679527049088*^9, 
   3.583679540365937*^9}, {3.583679595815566*^9, 3.5836796192496433`*^9}, {
   3.5836796506575327`*^9, 3.583679656947229*^9}, {3.583679795615613*^9, 
   3.583679852623967*^9}, {3.583679889442295*^9, 3.583679910349654*^9}, {
   3.5836799618573303`*^9, 3.5836800369106293`*^9}, {3.583680068151997*^9, 
   3.5836800721920233`*^9}, {3.58368010645665*^9, 3.5836801429410267`*^9}, {
   3.583680210375046*^9, 3.583680246823821*^9}, {3.583680580005554*^9, 
   3.583680631187379*^9}, {3.583680700006166*^9, 3.583680707779031*^9}, {
   3.583680754915946*^9, 3.5836807680151033`*^9}, {3.583680856666069*^9, 
   3.583680915029519*^9}, {3.58368095100311*^9, 3.5836810857815437`*^9}, {
   3.583681144924734*^9, 3.583681149088915*^9}, {3.583681198010013*^9, 
   3.5836812391291037`*^9}, {3.583681311010866*^9, 3.5836813871058187`*^9}, {
   3.583681432343252*^9, 3.58368144689907*^9}, {3.583681484883464*^9, 
   3.583681552803913*^9}, {3.583681585497806*^9, 3.5836816062501793`*^9}, 
   3.583681655180058*^9, {3.583681709812937*^9, 3.583681820746499*^9}, {
   3.583681852505876*^9, 3.583682015354814*^9}, {3.5836820588903723`*^9, 
   3.583682060346836*^9}, {3.58368209576943*^9, 3.583682164660186*^9}, {
   3.5836822105277023`*^9, 3.583682223019555*^9}, {3.583682292439659*^9, 
   3.583682313064658*^9}, {3.583682362653328*^9, 3.583682381971726*^9}, {
   3.583682423797958*^9, 3.583682590978325*^9}, {3.583682733071864*^9, 
   3.5836827643343143`*^9}, {3.5836828004264917`*^9, 3.58368283163196*^9}, {
   3.583683020715406*^9, 3.583683295888502*^9}, {3.583686778660572*^9, 
   3.583686801101214*^9}, {3.58368686845372*^9, 3.583686893024583*^9}, {
   3.5836869230600557`*^9, 3.583687017689302*^9}, {3.58368707836311*^9, 
   3.583687079748101*^9}, {3.5836871150094337`*^9, 3.583687123178893*^9}, {
   3.583687177477149*^9, 3.583687253920505*^9}, {3.5836873270621433`*^9, 
   3.58368734781453*^9}, {3.583687391253746*^9, 3.5836875774145117`*^9}, {
   3.583687721878086*^9, 3.583687741210043*^9}, {3.583687934846437*^9, 
   3.583688475758307*^9}, 3.5836885877678823`*^9, {3.583688730571269*^9, 
   3.58368873069357*^9}, {3.583760553041141*^9, 3.5837606178295403`*^9}, {
   3.583760672900569*^9, 3.583760673381065*^9}, 3.583768759572474*^9, {
   3.583768797236494*^9, 3.583768861995996*^9}, {3.583774965574102*^9, 
   3.583775007597077*^9}, {3.5837752475990257`*^9, 3.583775251366438*^9}, {
   3.5837753507802362`*^9, 3.583775351074395*^9}, {3.58378171484179*^9, 
   3.583781743123892*^9}, {3.5837817923935328`*^9, 3.58378179264889*^9}, {
   3.5837818347431507`*^9, 3.5837818347882433`*^9}, {3.583782917949067*^9, 
   3.583782965539653*^9}, {3.583786758135909*^9, 3.5837867756958847`*^9}, {
   3.583786830432201*^9, 3.583786854545311*^9}, 3.5837869461968613`*^9, {
   3.583786992898437*^9, 3.583786993188991*^9}, {3.583787063564477*^9, 
   3.583787063864876*^9}, {3.583787197490011*^9, 3.5837872315214863`*^9}, {
   3.583787290702664*^9, 3.583787317212722*^9}, {3.583787362962726*^9, 
   3.583787438561173*^9}, {3.583787469429422*^9, 3.583787477163672*^9}, {
   3.583795439722282*^9, 3.583795440071904*^9}, {3.583848446369478*^9, 
   3.583848448485016*^9}, {3.583948856291999*^9, 3.583948856517352*^9}, {
   3.5839489111061077`*^9, 3.5839490595597687`*^9}, {3.583949108095182*^9, 
   3.58394911156038*^9}, {3.5839491700141983`*^9, 3.5839492610835247`*^9}, {
   3.58394941569631*^9, 3.5839494169597883`*^9}, {3.583949452409182*^9, 
   3.583949452989861*^9}, {3.583949924953377*^9, 3.5839499887730093`*^9}, {
   3.583950075773635*^9, 3.5839500760672398`*^9}, {3.5839501299389267`*^9, 
   3.5839501762494287`*^9}, {3.583950250405734*^9, 3.583950253872793*^9}, {
   3.5839503049531918`*^9, 3.583950307459197*^9}, {3.5839503502398*^9, 
   3.5839503504727182`*^9}, {3.583950425193295*^9, 3.583950441001552*^9}, {
   3.5839506829225407`*^9, 3.5839506856481657`*^9}, {3.584105200513442*^9, 
   3.58410520422014*^9}, {3.5841938153614264`*^9, 3.5841938280366488`*^9}, {
   3.584193865221508*^9, 3.584193951492655*^9}, {3.5841940067637463`*^9, 
   3.584194139753201*^9}, {3.584194184289036*^9, 3.5841943531164093`*^9}, {
   3.584194467839251*^9, 3.584194496770856*^9}, {3.584194554653083*^9, 
   3.584194674924356*^9}, {3.5841947231483183`*^9, 3.5841947408711557`*^9}, {
   3.584194793308148*^9, 3.584194854400416*^9}, {3.584194899613165*^9, 
   3.584194967095475*^9}, {3.584205843462421*^9, 3.5842059799264803`*^9}, {
   3.5842061005884247`*^9, 3.58420610079034*^9}, {3.58420617376169*^9, 
   3.584206204248198*^9}, {3.584213061732684*^9, 3.5842131073276367`*^9}, {
   3.584303277890407*^9, 3.5843033870682373`*^9}, {3.5843034301218367`*^9, 
   3.584303579051386*^9}, {3.584303620185771*^9, 3.584303646781516*^9}, {
   3.5843037126669903`*^9, 3.5843037336695623`*^9}, {3.5843038036750298`*^9, 
   3.584303984878137*^9}, {3.584304033603919*^9, 3.584304095800763*^9}, {
   3.584304344863158*^9, 3.584304360895986*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 5000, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 1, 5000, 1}}, Typeset`size$$ = {
    1251., {128.125, 133.875}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$21890$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$21890$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          HighlightGraph[
           
           SetProperty[$CellContext`ro, {
            EdgeWeight -> N[PropertyValue[$CellContext`ro, EdgeWeight]/3], 
             EdgeLabelStyle -> 10, EdgeStyle -> Medium, VertexSize -> 0.3, 
             ImageSize -> Scaled[1.]}], {
            Style[
             Part[
              First[$CellContext`w], $CellContext`t$$], 
             Lighter[Pink]]}], 
          Column[{
            Style[
             StringJoin[{"\[Pi] = [", 
               Riffle[
                Map[ToString[
                  NumberForm[#, {2, 2}]]& , 
                 N[Part[
                    
                    Last[$CellContext`w], \
$CellContext`t$$]/$CellContext`t$$]], ", ", 2], "]"}], "Subsubsection", 
             FontSize -> Scaled[0.02]], 
            Style[
             StringJoin[{"Steps: ", 
               ToString[$CellContext`t$$]}], "Subsubsection", FontSize -> 
             Scaled[0.015]]}]}, {
          Grid[{{
             Style[
             "\!\(\*SubscriptBox[\(\[Pi]\), \(1\)]\)\!\(\*SubscriptBox[\(P\), \
\(1, 2\)]\) = \!\(\*SubscriptBox[\(\[Pi]\), \(2\)]\)\!\(\*SubscriptBox[\(P\), \
\(2, 1\)]\)", "Subsubsection", FontSize -> Scaled[0.02]], 
             Style[
             "\!\(\*SubscriptBox[\(\[Pi]\), \(1\)]\)\!\(\*SubscriptBox[\(P\), \
\(1, 3\)]\) = \!\(\*SubscriptBox[\(\[Pi]\), \(3\)]\)\!\(\*SubscriptBox[\(P\), \
\(3, 1\)]\)", "Subsubsection", FontSize -> Scaled[0.02]]}, {
             Style[
              StringJoin[{
                ToString[
                 NumberForm[
                  
                  If[$CellContext`t$$ >= 4500, 0.31, 
                   Part[$CellContext`P, 1, 2] Part[
                    N[Part[
                    Last[$CellContext`w], $CellContext`t$$]/$CellContext`t$$],
                     1]], {2, 2}]], " = ", 
                ToString[
                 NumberForm[
                  
                  If[$CellContext`t$$ >= 4500, 0.31, 
                   Part[$CellContext`P, 2, 1] Part[
                    N[Part[
                    Last[$CellContext`w], $CellContext`t$$]/$CellContext`t$$],
                     2]], {2, 2}]]}], "Subsubsection", FontSize -> 
              Scaled[0.02]], 
             Style[
              StringJoin[{
                ToString[
                 NumberForm[
                  
                  If[$CellContext`t$$ >= 4500, 0.16, 
                   Part[$CellContext`P, 1, 3] Part[
                    N[Part[
                    Last[$CellContext`w], $CellContext`t$$]/$CellContext`t$$],
                     1]], {2, 2}]], " = ", 
                ToString[
                 NumberForm[
                  
                  If[$CellContext`t$$ >= 4500, 0.16, 
                   Part[$CellContext`P, 3, 1] Part[
                    N[Part[
                    Last[$CellContext`w], $CellContext`t$$]/$CellContext`t$$],
                     3]], {2, 2}]]}], "Subsubsection", FontSize -> 
              Scaled[0.02]]}}, Frame -> All, Spacings -> {3, 1}, Alignment -> 
           Center], 
          Style[
           MatrixForm[Normal[
              WeightedAdjacencyMatrix[$CellContext`ro]]/3], "Subsubsection", 
           FontSize -> Scaled[0.02]]}}, Alignment -> Center, ItemSize -> {{
           Scaled[0.5], 
           Scaled[0.5]}}], 
      "Specifications" :> {{$CellContext`t$$, 1, 5000, 1}}, 
      "Options" :> {Alignment -> Center}, "DefaultOptions" :> {}],
     ImageSizeCache->{1296., {173., 178.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5843037973611927`*^9, 3.584303835054946*^9}, {
   3.5843038658749228`*^9, 3.584303871882372*^9}, {3.584303946317211*^9, 
   3.584303960923623*^9}, {3.584304053501753*^9, 3.584304096621252*^9}, 
   3.584304364109016*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Conclusion", "Section",
 CellChangeTimes->{{3.583504537673525*^9, 3.583504582132621*^9}, {
  3.583509437760704*^9, 3.583509440334321*^9}, {3.583604913812951*^9, 
  3.5836049144171343`*^9}, {3.583604949342388*^9, 3.583604952190271*^9}, {
  3.583611444032045*^9, 3.5836114865967817`*^9}, {3.5836753545761843`*^9, 
  3.583675361473876*^9}, {3.583678168528171*^9, 3.583678183381459*^9}, {
  3.583687813332683*^9, 3.5836878140960913`*^9}, {3.583758803332762*^9, 
  3.583758814710294*^9}}],

Cell[CellGroupData[{

Cell["\<\
Orbigraphs are graph theoretic analogues of Riemannian Orbifolds\
\>", "Item",
 CellChangeTimes->{{3.583603153527471*^9, 3.5836031912009563`*^9}, {
  3.583604909628951*^9, 3.583604921172461*^9}, {3.583605049452754*^9, 
  3.583605149692397*^9}, {3.583611519709037*^9, 3.583611520364934*^9}, {
  3.583611614267494*^9, 3.583611621170806*^9}, {3.5836117425548553`*^9, 
  3.583611750895398*^9}, {3.583675364823827*^9, 3.583675382895338*^9}, {
  3.583678186228922*^9, 3.5836781970588617`*^9}, {3.583687776296733*^9, 
  3.583687776302123*^9}, {3.58375881881995*^9, 3.5837588480516663`*^9}, {
  3.583765064938078*^9, 3.583765065107315*^9}, {3.584195039357065*^9, 
  3.584195039360043*^9}}],

Cell["\<\
We can distinguish good and bad orbigraphs\
\>", "Item",
 CellChangeTimes->{{3.583603153527471*^9, 3.5836031912009563`*^9}, {
  3.583604909628951*^9, 3.583604921172461*^9}, {3.583605049452754*^9, 
  3.583605149692397*^9}, {3.583611519709037*^9, 3.583611520364934*^9}, {
  3.583611614267494*^9, 3.583611621170806*^9}, {3.5836117425548553`*^9, 
  3.583611750895398*^9}, {3.583675364823827*^9, 3.583675382895338*^9}, {
  3.583678186228922*^9, 3.5836781970588617`*^9}, {3.583687776296733*^9, 
  3.583687776302123*^9}, {3.58375881881995*^9, 3.5837588480516663`*^9}, {
  3.583765064938078*^9, 3.583765065107315*^9}, {3.584195039357065*^9, 
  3.5841950395600348`*^9}}],

Cell["\<\
We can bound the number of singular points using the spectrum\
\>", "Item",
 CellChangeTimes->{{3.583603153527471*^9, 3.5836031912009563`*^9}, {
  3.583604909628951*^9, 3.583604921172461*^9}, {3.583605049452754*^9, 
  3.583605149692397*^9}, {3.583611519709037*^9, 3.583611520364934*^9}, {
  3.583611614267494*^9, 3.583611621170806*^9}, {3.5836117425548553`*^9, 
  3.583611750895398*^9}, {3.583675364823827*^9, 3.583675382895338*^9}, {
  3.583678186228922*^9, 3.5836781970588617`*^9}, {3.583687776296733*^9, 
  3.583687807806933*^9}, {3.583758878012148*^9, 3.583758890993688*^9}, {
  3.584195037488608*^9, 3.5841950424293747`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Acknowledgements", "Section",
 CellChangeTimes->{{3.583504537673525*^9, 3.583504582132621*^9}, {
  3.583509437760704*^9, 3.583509440334321*^9}, {3.583604913812951*^9, 
  3.5836049144171343`*^9}, {3.583604949342388*^9, 3.583604952190271*^9}, {
  3.583611444032045*^9, 3.5836114865967817`*^9}, {3.5836753545761843`*^9, 
  3.583675361473876*^9}, {3.583678168528171*^9, 3.583678183381459*^9}, {
  3.583687813332683*^9, 3.5836878140960913`*^9}, {3.583758803332762*^9, 
  3.583758814710294*^9}, {3.5837634262942657`*^9, 3.583763429831785*^9}}],

Cell[CellGroupData[{

Cell["Dr. Liz Stanhope", "Item",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.5837632900331707`*^9}],

Cell["Miller Foundation", "Item",
 CellChangeTimes->{3.583763291171896*^9, 3.584126274730858*^9}],

Cell["Lewis & Clark College", "Item",
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellChangeTimes->{3.583763291782172*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1428, 788},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{"SlideShow" -> True},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[579, 22, 88, 2, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[375560, 6374, 88, 2, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1210260, 20222, 88, 2, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1259204, 21269, 88, 2, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1391744, 24025, 88, 2, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1558723, 27199, 88, 2, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1596190, 27952, 88, 2, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1617250, 28349, 88, 2, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1658371, 29152, 88, 2, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1661067, 29212, 88, 2, 74, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 1662492, 29257}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 88, 2, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[692, 28, 10656, 240, 992, "Input"],
Cell[11351, 270, 364160, 6098, 579, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[375560, 6374, 88, 2, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[375673, 6380, 399, 5, 80, "Section"],
Cell[CellGroupData[{
Cell[376097, 6389, 20884, 514, 1055, "Input"],
Cell[396984, 6905, 813215, 13310, 859, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1210260, 20222, 88, 2, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1210373, 20228, 242, 3, 80, "Section"],
Cell[CellGroupData[{
Cell[1210640, 20235, 9838, 227, 1236, "Input"],
Cell[1220481, 20464, 38662, 798, 359, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1259204, 21269, 88, 2, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1259317, 21275, 20597, 390, 19, "Input",
 CellOpen->False],
Cell[1279917, 21667, 111778, 2352, 839, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1391744, 24025, 88, 2, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1391857, 24031, 303, 4, 80, "Section"],
Cell[CellGroupData[{
Cell[1392185, 24039, 10532, 186, 19, "Input",
 CellOpen->False],
Cell[1402720, 24227, 155942, 2965, 363, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1558723, 27199, 88, 2, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1558836, 27205, 325, 4, 80, "Section"],
Cell[CellGroupData[{
Cell[1559186, 27213, 554, 10, 28, "Item"],
Cell[1559743, 27225, 412, 9, 28, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1560192, 27239, 26572, 529, 2426, "Input"],
Cell[1586767, 27770, 9265, 172, 435, "Output"]
}, Open  ]],
Cell[1596047, 27945, 94, 1, 28, "Input"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1596190, 27952, 88, 2, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1596303, 27958, 356, 5, 80, "Section"],
Cell[CellGroupData[{
Cell[1596684, 27967, 18456, 320, 19, "Input",
 CellOpen->False],
Cell[1615143, 28289, 2046, 53, 741, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1617250, 28349, 88, 2, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1617363, 28355, 476, 6, 80, "Section"],
Cell[CellGroupData[{
Cell[1617864, 28365, 625, 10, 28, "Item"],
Cell[1618492, 28377, 980, 24, 32, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1619509, 28406, 33799, 624, 19, "Input",
 CellOpen->False],
Cell[1653311, 29032, 4999, 113, 368, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1658371, 29152, 88, 2, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1658484, 29158, 489, 7, 80, "Section"],
Cell[CellGroupData[{
Cell[1658998, 29169, 691, 11, 28, "Item"],
Cell[1659692, 29182, 671, 11, 28, "Item"],
Cell[1660366, 29195, 640, 10, 28, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1661067, 29212, 88, 2, 74, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1661180, 29218, 543, 7, 80, "Section"],
Cell[CellGroupData[{
Cell[1661748, 29229, 124, 3, 45, "Item"],
Cell[1661875, 29234, 97, 1, 45, "Item"],
Cell[1661975, 29237, 127, 3, 45, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)

(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 9.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       157,          7]
NotebookDataLength[   4058691,      75491]
NotebookOptionsPosition[   4044243,      75046]
NotebookOutlinePosition[   4048318,      75148]
CellTagsIndexPosition[   4048236,      75143]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell["\<\

\[OpenCurlyDoubleQuote]The mathematical facts worthy of being studied are \
those which...reveal the kinship between other facts, long known, but wrongly \
believed to be strangers to one another\[CloseCurlyDoubleQuote] 
~ Henri Poincar\[EGrave]\
\>", "Subtitle",
 CellChangeTimes->{{3.58479997346097*^9, 3.584799982373316*^9}, {
  3.584800061018032*^9, 3.5848000638248262`*^9}, {3.5848000975540257`*^9, 
  3.584800101083301*^9}, {3.584800599567013*^9, 3.584800617896042*^9}},
 TextAlignment->Center]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[TextData[{
 "Orbi",
 StyleBox["graphs",
  FontSlant->"Italic"],
 " are beautiful, discrete, analogues to Riemannian Orbi",
 StyleBox["folds",
  FontSlant->"Italic"]
}], "Title",
 CellChangeTimes->{{3.584800170960389*^9, 3.584800180501341*^9}, {
  3.5848002357595243`*^9, 3.584800247318918*^9}}],

Cell[CellGroupData[{

Cell["\<\
Our definitions mirror Orbifolds\
\>", "ItemNumbered",
 CellChangeTimes->{{3.584800290763938*^9, 3.5848003128725986`*^9}}],

Cell["\<\
We can discern two classes of Orbigraphs\
\>", "ItemNumbered",
 CellChangeTimes->{{3.584800290763938*^9, 3.5848004057997704`*^9}}],

Cell["We mirror spectral results", "ItemNumbered",
 CellChangeTimes->{{3.584800290763938*^9, 3.584800432854566*^9}}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell["\<\
Discerning Classes of Orbigraphs\
\>", "Title",
 CellChangeTimes->{{3.584800170960389*^9, 3.584800180501341*^9}, {
  3.5848002357595243`*^9, 3.584800247318918*^9}, {3.5848005720992002`*^9, 
  3.584800581281906*^9}, {3.5848006567763*^9, 3.584800656924855*^9}},
 TextAlignment->Center]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"AppendTo", "[", 
     RowBox[{"$Path", ",", " ", 
      RowBox[{"NotebookDirectory", "[", "]"}]}], "]"}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<<", " ", "\"\<Orbigraphs.m\>\""}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<<", " ", "\"\<MarkovOrbigraphs.m\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<<", " ", "\"\<UniversalCoverings.m\>\""}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"<<", " ", "\"\<OrbigraphCovers.m\>\""}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"sphere", " ", "=", " ", 
     RowBox[{"RevolutionPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           SuperscriptBox["t", "2"]}], "]"}], ",", "t"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{
          RowBox[{"2", "\[Pi]"}], "-", 
          RowBox[{"Pi", "/", "3"}], "+", 
          RowBox[{"Pi", "/", "30"}]}]}], "}"}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
       RowBox[{"Mesh", "\[Rule]", "12"}], ",", " ", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"partSphere", " ", "=", " ", 
     RowBox[{"RevolutionPlot3D", "[", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Sqrt", "[", 
          RowBox[{"1", "-", 
           SuperscriptBox["t", "2"]}], "]"}], ",", "t"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"t", ",", 
         RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "Pi"}], "/", "3"}], "+", 
          RowBox[{"Pi", "/", "30"}]}], ",", "0"}], "}"}], ",", 
       RowBox[{"Mesh", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"12", ",", "1"}], "}"}]}], ",", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", " ", 
       RowBox[{"Axes", "\[Rule]", "False"}], ",", 
       RowBox[{"Boxed", "\[Rule]", "False"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"goodOrbi", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "1", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"1", ",", "0", ",", "3"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "2", ",", "0"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"highlightColor", " ", "=", "  ", 
     RowBox[{"RGBColor", "[", 
      RowBox[{
       RowBox[{"255", "/", "255"}], ",", " ", 
       RowBox[{"246", "/", "255"}], ",", 
       RowBox[{"238", "/", "255"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"cover", " ", "=", " ", 
     RowBox[{"CreateFiniteCoveringGraph", "@", "goodOrbi"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"goodOrbi", " ", "=", " ", 
     RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AdjacencyOrbigraph", "@", "goodOrbi"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"VertexSize", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"EdgeStyle", "\[Rule]", 
          RowBox[{"Directive", "[", 
           RowBox[{"Thick", ",", " ", "Black"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"EdgeShapeFunction", "\[Rule]", 
          RowBox[{"GraphElementData", "[", 
           RowBox[{"\"\<FilledArrow\>\"", ",", " ", 
            RowBox[{"\"\<ArrowSize\>\"", "\[Rule]", " ", ".1"}]}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"EdgeLabelStyle", "\[Rule]", "20"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"1", " ", "\[Rule]", " ", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
               RowBox[{"204", "/", "255"}], ",", " ", "0", ",", "0"}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"2", "\[Rule]", " ", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
               RowBox[{"230", "/", "255"}], ",", " ", 
               RowBox[{"193", "/", "255"}], ",", " ", "0"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"3", "\[Rule]", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
               RowBox[{"180", "/", "255"}], ",", " ", 
               RowBox[{"82", "/", "255"}], ",", " ", 
               RowBox[{"204", "/", "255"}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", "}"}]}], 
      "\[IndentingNewLine]", "\[IndentingNewLine]", "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ShowCoveringGrid", "[", "slide_Integer", "]"}], " ", ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Grid", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{
           "\"\<Orbifold Covering\>\"", ",", " ", "\"\<Subsection\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", ".030", "]"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slide", " ", ">", " ", "1"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Orbigraph Covering\>\"", ",", " ", "\"\<Subsection\>\"", 
              ",", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"Scaled", "[", ".030", "]"}]}]}], "]"}], ",", " ", 
            RowBox[{"Spacer", "[", "1", "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Show", "[", 
           RowBox[{"sphere", ",", "partSphere", ",", " ", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"Scaled", "[", ".4", "]"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slide", " ", ">", " ", "1"}], ",", 
            RowBox[{"SetProperty", "[", 
             RowBox[{"cover", ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"Scaled", "[", ".5", "]"}]}]}], "]"}], ",", " ", 
            RowBox[{"Spacer", "[", "1", "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Item", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"slide", " ", ">", " ", "0"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Arrowheads", "[", ".2", "]"}], ",", 
                  RowBox[{"Arrow", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", ".3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", ".3"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
                ",", " ", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", ".3", "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"False", ",", " ", "False"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"True", ",", " ", "True"}], "}"}]}], "}"}]}]}], "]"}],
           ",", "\[IndentingNewLine]", 
          RowBox[{"Item", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"slide", " ", ">", " ", "1"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Arrowheads", "[", ".2", "]"}], ",", 
                  RowBox[{"Arrow", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"0", ",", ".3"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"0", ",", 
                    RowBox[{"-", ".3"}]}], "}"}]}], "}"}], "]"}]}], "}"}], 
                ",", " ", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", ".3", "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", " ", 
            RowBox[{"Frame", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"False", ",", " ", "False"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"True", ",", " ", "True"}], "}"}]}], "}"}]}], ",", 
            "\[IndentingNewLine]", " ", 
            RowBox[{"Background", "\[Rule]", "White"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Style", "[", 
           RowBox[{"\"\<Orbifold\>\"", ",", " ", "\"\<Subsection\>\"", ",", 
            RowBox[{"FontSize", "\[Rule]", 
             RowBox[{"Scaled", "[", ".030", "]"}]}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slide", " ", ">", " ", "1"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{"\"\<Orbigraph\>\"", ",", " ", "\"\<Subsection\>\"", ",", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"Scaled", "[", ".030", "]"}]}]}], "]"}], ",", " ", 
            RowBox[{"Spacer", "[", "1", "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"slide", " ", ">", " ", "0"}], ",", "\[IndentingNewLine]", 
            RowBox[{"RevolutionPlot3D", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{".5", "*", 
                 RowBox[{"(", 
                  RowBox[{"1", "-", 
                   RowBox[{"x", "^", "2"}]}], ")"}]}], ",", "x"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"x", ",", 
                RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
              RowBox[{"{", 
               RowBox[{"\[Theta]", ",", "0", ",", 
                RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
              RowBox[{"Mesh", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{"5", ",", "10"}], "}"}]}], ",", 
              RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", 
              RowBox[{"Axes", "\[Rule]", "False"}], ",", 
              RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"Scaled", "[", ".3", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slide", " ", ">", " ", "1"}], ",", " ", 
            RowBox[{"SetProperty", "[", 
             RowBox[{"goodOrbi", ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"Scaled", "[", ".5", "]"}]}]}], "]"}], ",", " ", 
            RowBox[{"Spacer", "[", "1", "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Alignment", "\[Rule]", "Center"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"ItemSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", " ", 
         RowBox[{
          RowBox[{"Scaled", "[", ".5", "]"}], ",", " ", 
          RowBox[{"Scaled", "[", ".5", "]"}]}], " ", "}"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Background", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"White", ",", "highlightColor"}], "}"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Scaled", "[", ".02", "]"}], ",", 
         RowBox[{"Scaled", "[", ".02", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "All"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ShowCoveringGrid", "[", "1", "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{
  3.583689434030222*^9, {3.583690038818116*^9, 3.583690064557714*^9}, {
   3.58369221561723*^9, 3.583692295584877*^9}, {3.5836971219493*^9, 
   3.583697128587344*^9}, {3.5836974345230513`*^9, 3.58369746233471*^9}, {
   3.5836974976174173`*^9, 3.583697552388973*^9}, {3.58369763742273*^9, 
   3.583697661283956*^9}, {3.583697697187623*^9, 3.583697697681795*^9}, {
   3.583697921812044*^9, 3.5836979270391903`*^9}, {3.583698022251027*^9, 
   3.583698106174611*^9}, {3.583698152561407*^9, 3.583698152736507*^9}, {
   3.583698209683529*^9, 3.58369823806411*^9}, {3.583699151298019*^9, 
   3.583699185253458*^9}, {3.583699394613495*^9, 3.583699469642783*^9}, {
   3.583950965930999*^9, 3.5839509892351837`*^9}, {3.584136641185576*^9, 
   3.584136642988099*^9}, {3.58418582819775*^9, 3.584186027196117*^9}, {
   3.58418642444545*^9, 3.584186500754262*^9}, {3.5841866582220087`*^9, 
   3.584186766405637*^9}, {3.584186811686653*^9, 3.584186832061205*^9}, 
   3.5841869859448557`*^9, 3.584187040241329*^9, {3.584187077361844*^9, 
   3.584187079656089*^9}, {3.584187139344602*^9, 3.58418718644466*^9}, {
   3.584187237970829*^9, 3.5841873678137493`*^9}, {3.584187400198305*^9, 
   3.584187624951578*^9}, {3.584187726903932*^9, 3.584187789769574*^9}, {
   3.584187821025146*^9, 3.584187897118555*^9}, {3.584191863261053*^9, 
   3.584191864173348*^9}, {3.584191907261262*^9, 3.584192301136611*^9}, {
   3.584192346117073*^9, 3.5841924261186447`*^9}, {3.58419278995798*^9, 
   3.5841928097936287`*^9}, {3.584192864357195*^9, 3.5841928690435534`*^9}, {
   3.584192934486223*^9, 3.584192945901002*^9}, {3.584192976590774*^9, 
   3.584193077134219*^9}, {3.584205795355566*^9, 3.584205796334511*^9}, {
   3.5843028644298*^9, 3.5843030594037027`*^9}, {3.5843031735375547`*^9, 
   3.584303205365191*^9}, {3.584304234766212*^9, 3.5843042391873217`*^9}, {
   3.5843957808888693`*^9, 3.584395804249073*^9}, {3.584395837001032*^9, 
   3.584395856582262*^9}, {3.584395895875249*^9, 3.5843959487753563`*^9}, {
   3.584396160573249*^9, 3.5843963995481167`*^9}, {3.584405932935194*^9, 
   3.584405996961503*^9}, {3.584447851311487*^9, 3.584447871581522*^9}, {
   3.584447908389421*^9, 3.584447920255658*^9}, {3.5844520418160133`*^9, 
   3.5844520422524652`*^9}, {3.5844520851660337`*^9, 3.584452306626361*^9}, {
   3.584453220251514*^9, 3.584453424950275*^9}, {3.584453465972952*^9, 
   3.584453513006173*^9}, {3.584453549573085*^9, 3.584453555531513*^9}, {
   3.5844562234957447`*^9, 3.584456261927038*^9}, {3.584461804461245*^9, 
   3.584461870713779*^9}, 3.584461918053671*^9, {3.5844700281892014`*^9, 
   3.5844700652953663`*^9}, 3.5844734936395683`*^9, {3.58447681987752*^9, 
   3.5844768208493977`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Orbifold Covering\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.03]], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]]},
    {
     Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
a+tQwYcJP0wyQ1Y3EztlPVDWA4UHKDxAiRco8QJFT6DoCZR8ASVfQLlOaNcV
LM8QSPSlVsGNsXekeIMu6TN2ynUFZr7Z6Wt6yiBru6VZ/Jtccn3yc8QO6D9m
AWdBeozssQpyfQZ3RbQsO7kMvNsvX5fu0SXXZ7r34BWrrOrB+3Ol76M+Drne
PBx1OqyGs+Byvti63/5t5LqaKf44tHJNM9zvfj/JcTeXXD+rK2e47JRnQ1qt
66Pm8zxynXhNVHaxdGHD/jdN0WKSfHI9UOxA8QOUfYHCCZS4gKIPTU+g6Aae
sW7FOefzoeVwU/pB6zKi/5fHf8RLuJUgdv/HiuppLKJ/Ql+3YL/RPNgyafCF
3DtLif52Y8HZgZMFvML88nsV7UT/pi9T98aycuGDyvCXjl/5RH8jt+lKI3n5
oNJTeXLT6C6iv26oyooq7QK4cSyzM8hWQPSvd3Ye/7egAPber2lfP1xI9KfY
geIHKPsChRMocQFFH5qeQNENovQaV23QSoRdu62O9ShUEf1fqy7t6jibDhyn
J/UuwCH690ZxfHotVKBSQXabmKSoj2rp8e3ubLd3aE3b9agtBlyi/7k5euae
k1LRjD88x+mHOoj+6udnnnDfnYa83rYNPecj0l8z5vmmX5rpSLJ2t9/7TpH+
HcomJ4/dTEdJk3VnbLgn0p9iB4ofoOwLFE6gxAUUfWh6AkU3CH27ozI8KAq5
yZjePOgm0l+tx0xXd0gSuvJzpnGMr0j/mT/M+aGW45B3Vvdqk63/S/8Vuy1u
R1Wj1Y5Bm920Won+Nyp2Xd7bUofAXwzFfm0n+r/6eEXKQK4RXT/TOFy/nEf0
N5PamnLOsQn1d6e8jhLrIPpLPU8M/TWKhWy4SY7DfDuI/hQ7UPwAZV+gcAIl
LqDoQ9MTKLrBsAvHQrZxs5F+8ors5qvlRP+LL65sNu4sQxpFvHejJzYT/Vd7
XVDnh+ig6/VyBy4b6RP9I7OcVLzNOCjDed8ejSmNRP8Rs/Mzfta1otTc9SvK
JJuJ/m/DHN5dvtuO1r+WTtxpzSb6v2jaFX7nKRdZqrXePjOfQ/SfZOV4dOZs
HmplD8/2DeIQ/Sl2oPgByr5A4QRKXEDRh6YnUHSDjaULV3q/K0U5Ene6Xs8t
IPpXTYhIXba4CZ2Pfr4n1aya6H/kQfl5/9Al6NbYWuuNHnpE/9e1SgeTbrSj
1z8V3lydlk/0Rx+tr+mF8hE72frAkNhCov9Y9SGuL5M7UepUibNe3sVE/ztH
LTm9kgL04+RG143rS4j+abkz17+NEqCcdjkv+egSoj/FDhQ/QNkXKJxAiQso
+tD0BIpuwJm/KHlLWSXqNJKe8G7dW6J/S4rUQ4ehHPT6zCeV4x2ZRP9Gc2f5
Z+UGyPL54F96+6YS/cdpPzT9a8NFavMTDTw/vkKM/okPeJO3+3Sg58vmvjq5
IxEx+ps2yhSl/XcOnHt1orBOMRmR+vnwqO1fFf77PQ06cnmC3hvE6L98/Iuj
J9OESHOXul7s+zeI0Z9iB4ofoOwLFE6gxAUUfWh6AkU3CFB7Uy0WVoUeyO0b
P1E9HDH6P5n+WCs6joPijhQqXOx6iRj9R/ZfLpM5YojWDA6qXmAgRc6tztt/
yCYltqLEeft9H3+oJPq/ULgYG+fNRfZzXfeMT6oh+nfuEiRvP8NHr8a2Rcx+
V0f0f7V3+RKr2A5U9uDM2c5BDUT/7oThWvtXdSLTAnN5uaAGoj/FDhQ/QNkX
KJxAiQso+tD0BIpu/z1ffAPZIyrQV1aQ99MRWUT/pHlvD47xbEYTWX/O61mV
Ev2vSy8L0ZYENC3yhXKswRyif7fJmsNXKpvQi1GP2i+Fs4n+v4+93nWhvxm5
Ns2Z+3JsK9H/7ibPb/sPcNDMp5+TDr9tI/pPWvOMH7e2BSVFbnvt9bGd6F99
r/h57NsWJO5kbGFmxCX6U+xA8QOUfYHCCZS4gKIPTU+g6AY7xh9u96ktRM+S
V3GGjC4l+h+KYf+cmliDZhby3OIUG4n++9s0+cqp85G7ss0zjfDFRP9ToyaF
BW8vQn0jxHckLGon+huvV1bKSCpBXFObt4uX84n+3mevLxk+qQzFv71Xor+5
k+g/7OZQk9zfZagoyi29NrCL6P9z6PfgMfbl6IjDsgQzfQHRn2IHih+g7AsU
TqDEBRR9aHoCRTfIKBu6wd/6A2qbkHScf7GS6N+5NGZz5IZcpG2vz/FLYxP9
H1rv8Di+bwbKu+h8PuSBqD/55ImAvb/vCRhOubpe/jSX6O9k0vIrsP4ZjHnk
W7YpqoPor3rATNmr+Dmofij9FF/VRfS/fHzeZ/cR0TB+u0+Osp6Q6L9CTX3b
qbBoWNF50nNho5DoT7EDxQ9Q9gUKJ1DiAoo+ND2BohtMrqgbYrvBFzZ6z5U4
nFRF9C8y+8VVSw8FBeeMsksZHKK/on6H+/wj/for7E+eqD4n6sMXzR7U+Tez
HHrVHoq9m9tG9OeKP17rea4K8udMuDZCkUf032Ms96Zwaw28V972KW9sB9E/
+WrDKvvztbChf+vGvA2dRP/x9jaCL1J10Gf3W3Eur5PoT7EDxQ9Q9gUKJ1Di
Aoo+ND2BohsMsw20fqj6EYoKoxaMuFxB9L8ZrHcwKqsYyhxk3w0TNBP9Pb1U
XUI682Hy4frS4AVloueF3K7hGrGzYWXbptl1b4HkZbf6393aRlUg2T9K/aU4
i/ih+KfxAMUPUPYFCietP4aMkyaGDNJmwboXPTkv+5PJe3b5eWXcZtQGHTun
ay43KCV19WeJQzNck3ngsnROu1NYOamrMzSHB8S+74BPY7tYew0rSV3d1muu
elGsC4qr2LG//ouDua5YkpVr44O7wJr99KLcxypSV1PsQPEDlH2BwgmUuIDS
ZwaKPmC1YLPPm8Q62HRZp+NdTQnRLfD+gzcXk5pBWf6plO1nFtGtoHuQae2w
FpiesM0iZQaH6NaRwFsTFtAKl7Td75U/bSG67Vh1+b6fXxvE3/XqfOHfSnTT
lJvkKja2HRJ11g16K9NGdKPYgeIHKPsChRMocdF0gEYL7TcOsmVwYryl+m12
LdEn4Qpnz+RV5XDDckuE3qY2os/cozYOPzoqISD3xGPLJTyij5rvhPes5GqY
Uq8v/m5+B9GnZkeip3ltDdTy0612O3YSfYRvFUKP2tVCr6912b1RXUQfih0o
foCyL1A4gRIXTQdYH67zblHOB6gvbhZ8lhDNHx7SWjnM5kEorL3hzAs/J+qn
Nbt//RvZEg6bJuxcvO2lqJ+mFC13+MWpJxCa1NE7rF7UT/N7OMGs3SEC6hJY
cRGLhESfU14ntc7yIuDDuqr+araon0axA8UPUPYFCidQ4qLpAOlLYiSXarxC
n0N9bievF+lzUy+V/2tOMWrcLT29fIqo37uq4vSJTetLUdTVabd3qf+vfm8e
6j34oQz9KrC8YD6/k+izzDbI7MGTcrT5ifjHGLcuoo/iB6NPLnIVqP+vefB1
FQHRh2IHih+g7AsUTqDERdMBlr8JLCm/X4wirIYuDDhXT/SJTB3b7KnCQlaH
sn+fd2QTfYKD68tTlrBRtPw5z4jGFqKP4TNhpPVzDpJZYYXWubcRfW7MGrMl
7HYLCvqmH1zn2U70+RR2RW/MoFb0+mHjiv3DuUQfih0ofoCyL1A4gRIXTQdQ
a5S45DmoFnnJti9Zv6Kc6LN6bpnjsKpWNHTCF1mv/54XjD5rC387Lo7jopse
i1Y/nVlD9Fn0XWIKCuWjTWXjz4dOrSP6PNk5d8jdmg7089lyDbs99USfV8fc
9M8e60Q3UydYa/2uJ/pQ7EDxA5R9gcIJlLhoOkBv67D7S2KakPxwpXeOBulE
H52gQ3fiD3BRjfaBgoa7cUSfJV3N3h3+HUg8KznjZtMros8Zx+sRgo9daJRZ
uvsshwSizy0lk3ZXVSGq6NkhnHYwkeiTua58k1aeEJ3I977rz0kk+lDsQPED
lH2BwgmUuGg6QPsVNE/SjoVuGNTEF/g+J/MAG65Orqw+3Y4CO6L2x+l+IvV2
y0X9sA/X+SicF97k3FxE6u28yADWqZBOpNk52mClTgmptydwvO49FnYhv58B
P+70lpB6O9Mx8XXtHQFSnXpgX9/OUlJvU+xA8QOUfYHCCZS4aDpAyeRBqvlz
G9AjwddzH+4XEn3u1qT1fZ/JQdeiWo99uN1I9PE602ER+7wV9Q0yrDQzbhad
R9TkD1pZtaMfs80MssPYRJ/CZ0V//zhwUWrjxsu/z3GIPhP4KGh/NxeZjV6T
fq+NQ/Sh2IHiByj7AoUTKHHRdIBpOZv2v7WvQLslZ8tMHFMjmquUPr37vE41
espKy72/qZXoMyrOXNHaog6tMk/dtkuRS/Rhjz9qYevWgMY999w6rJ9H9HFM
PzautKYRed1O+HVAu4Poc/bQCuU+tya0qS1yVnJ6B9GHYgeKH6DsCxROoMRF
0wGCZi+O2yebiVS4Q24YLBXNNTUUX4s8s/ktsguynalpKuonvNV/GOiZ/h6d
yXw5aJWTqJ9g7+PicEYqFSlZ5m84FyTqJ6TvF/+8NycV5aTq2pn+EhB9NkDL
+q1T09Ac1bbvk0NF/QSKHSh+gLIvUDiBEhdNBwhaGa/S4BMItR//XOOcEs3X
fRxftb21OxskWmZPzvgo6ncV57ZpNMjlQ6FVR/jxJlG/682ZFbVu8wvgZ+mQ
4UW/Rf2uNUXpR254F0JVTJTlrA0ifSym7smR0y2C4LgoVftvon4XxQ4UP0DZ
FyicQImLpgPMtm1Vl/mcD31nt9R11TUQfSh2aH3CHV03shJmn8h/VP4yjbzv
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
NcjVyib+1//wjW4+KkSt81s+s72yRdfnskVzbSOL0dysiL/WP54R//W3vvX7
r6xHyW/MA/LPJyLGf9UsN/7JZgGS36Vp/vNODmL8m4i/inS2FKKkie324d05
iPG/njNWbWZIMfLet1Gx9NRzxPi/G+Gx1G1aNbo/LfbZ4nNFxP+pWejpe2s+
0pd5aRCg20z8r37UPutZLh95uyt/eu7cTPy7vOxZMtLuE2o/NumYz+V04t/I
TP9wuVcx+tEl22XlX0X8c/Ul87fKslHP37fWqdk84j87RLGiYycbDeF3XVqt
zSf+Pa9n7bzhlIEqtoZL7U3PJ/6tIDcobvVbZD9z5qxRo+uJf4elamz/xE/o
e6R9s/QzAfHf6eVow5tZgIaW2ChrThUS/9vvSK5l8V+gKyUeU5ZfLCb+r1xr
Kdi4Lw5Wir0yaT0v8t9iWabSMSgDXDq3V49QERL/R2tnrFu6LgNq6i9+HR4o
8q/dfyBzt9NjUAtOCa5LE/mn3JeQycpF9TN/dQB3RzootNeT6we2s/3cDnQC
8jO9oLGzgVw/lPseUNYD5T4GlPsqUHiAcp+k3beBLxXo0KpcCMbiRyPHT0Yk
3hvv3j1f/bAGvh7sjpBzzCO/I8p9FW159OfjaN8WWBhgNyuyrJ3os/zlyJ7k
9hYYVbTzj/lcLtGHYgfK/RYo/oFy3wYKPy1e2nMHIq33pnjPzIIdfNsR3Ke5
JF6ZRoFwZVUpvPIfvNavqILoQ3kuIOVZrosbncoB1S1xK8vqIvqISy9Tl84t
B/2jWsvs9QVEH4odKM8LoPgHynMHKPy0eGnPTWgPaUaSwxNhkdHUmv5h5DmC
zsu1nwhJSYeOpK0yHEPRc4ryXEM9amuL4w5HIuTzuFzmhOj5WBLOW/WpNBKt
M1y4bvtn0fOLYgfK8w4o/oHy3AQKPy1e2nMf+JkFktt3e6Edy8QuigtE8U6v
mHx/yCo/JDN/X3NPjqhOoDyX0UuZPVfHWtaig5nzagR+nUSf65OnbP2aVYvC
XqybkzGii+hDsQPleQ0U/0B57gOFnxYvrW6Bq3axkZp736Fngco+tbmFovvP
3yXtMlNyUNapiRVBs2qJPpS6Ag0teLNgcnMbSngkzjkU2kr0kahOFRu8rB0d
2SbMMelpJfpQ7ECpN4DiHyh1C1D4afHS6i6whqvxKCwHKVyd/+CiaTaJN2Pl
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
34GCH+T5edTFD1D4B4q8QNEPUPQJFP0DZb+Asu9AOSdAOVe0cwjicCPHsI8f
MYrX/ZH1v1lga2XaVlHbhLbvTSV/TMvDDWq+7yvyPsB0qf9tQqWyPpbdz1Qi
flLMGX2qGPyl33UjZnseUlo1swote3W8Xzm4hL3/UvI/ON18cUDhST7uOrhc
ock/nT2fzlkbp/UOFuDCmXOKr/d8z57DZwExDrNTRbjqgk+33Wuy2fPm8HGx
1i91MUZrPoYv23PYc2W1//i5gdlidHnXTakgNYc9JzO1cF9/AzFutn/xdPW+
HPY8UO7dQLmnA+VeDxQ9AEVvQNEzbV8gk2tRNLd/IS5N2dM5XuE1u19RReO1
cqtrsP7vjlhXr2R2X060Ht5z6AMf+Q5Pvm/JjkXGv4j7+qnqjhFiyJHNi/4O
Q1xI/MjAWXdrf9o3oeadXa1vNBOQ8Recb7Y3M+5I8Gjs1qUH3RORsfN7e6+4
xO0jwZDcdpvB4xORsfOUPANQ8hJAyWPQ8iqwYHOKz4z4IozykywqqYhh9UbJ
K0K3oTFnhFH5+Hm46VhDvcfI2GElFc/pafwaXHY79tez4a8wjthbB7RS4U+p
Q++7TQa9B5agBonTTC9GcfqM4qNAuSVqd0Q5bifxmFnutsgxWkLU6hOiaFrJ
xSMkXlKSJEeufiHA6Q+UHVb7cUleIg0o+RCg5E+Akm8BSl4IEhODVlW2lWDN
iYOjw2yfIWMHKPlPWNR+eUFndTZyJ+ZvTXifhEz8c9+k4vP44CpMnHE/y/ZR
HhI/iLrNnktjb5eiea/pJ9otanERuRdQ8idAybcAJT9DyzvBtfn4uN6nCH/u
ujlq4OL3yPhfSn4VhkRUvWv3y8clgXvNVuRXYE8St1PyG0DJhwAlfwKUvBMt
7wrHfc446PaPRfMAQa8nC6tRi9zLKHkDoOQZgJKXAEr+h5aPBUreg5ZHBaV4
reEFHvWw8/xS5V/X8si73HWoxuXkaTv/vo9ZB/r7aBSS9+GrUJfv9KufkxDs
vw23Ca1i5vUUom/Un8P5j0TgfCe9ePrXYmDe1Z8wpmSFrlkTXKlaP/HwMeZ/
eiQNDhQ8QKELFD5pcoHCIEe7dc+5sNCyRPy5pZqV99xi20y3qho4mf1Cc7B1
HSuv2ZnT0a3r60Bt5NiYcbU8Vl6Bkid/8WIeNHYsL9heW8/Ku8Vi1oZ7cTww
HsE547KJz8pLgQMFD1DoAoVPmlxQ4MJv2LEwB5zjnxnPG8tn5f3Y4oMujrnA
eTonZdlEASuvq1NfwZqiPPDYv1j/2zQRK69f0LkhjzEf2keMNxt9pImVd/5j
3/jh+gXQ/UTH2qrRYlZeChwoeIBCFyh80uSC8N92cZdzGFr+5Rby9/4GVt6V
bwebjR4YgTjq5tji+0JW3vwLVja9Vj5HdeGTtKDsJlbeevuC63lqkZjwS2Nj
hI6ElTc9yi+o/VgkPol33n27QMLKS4EDBQ9Q6AKFT5pccNW/ScmEU4jZSrXj
p7/gsfImC9QeNCf89nOhEcEl5xtYeUd8tBtUnVaGpZ3bj1q4C1h51aPjeFr9
K/CUhs9w7adCVl6tPVXvr4VUoG2vuofjzESsvBQ4UPAAhS5Q+KTJBW5fDEJd
1Gqx+6beR30iK1l5487sPbAlgIdThqH9X+urWXnn77qRUr6Uj5dSl6xwiq5h
5R2e/3nYG/sG/FIRPeyyTy0r7/WZ/+qk1TSgRDttWkBHLSsvBQ4UPEChCxQ+
aXJBVtPN5qAPVXh70dr2bisT2P/UU0YO515+yEeXpk/+jQnprB6aLGJ2Wr0V
4PeVV1RGjn0v23dtjf7fCkU4y3nu61DnbFYPz4YGD32kJcY3C2JsZrnksHpo
a980ZkiWGK9Pnj5nRkoOqwcKHCh4gEIXKHwCRS6aHuBN9zkvwIaLl4Lendze
PwoZ/dxsvnpfbX4Dnu/csHrJ6jhk9HOk56SnvV2EeLgzg2etEI+Mfrxd+ozY
d60JiwXG1+wsEtj5NaFvBOVvm8Q4zbX76qBBiez8mhtOdsW2vhLM4neu+Gd/
Iju/hgIHCh6g0AUKn0CRi6YH+KNja/KLbuWYO2XTGc62j6x+5sVN3bM5tw7z
o3IViipKWP1U295K8LzAx9AZb+eFzKtg9bNI/9dD/tZGPK6glhZzoYrVz82l
Ad+nXRbgQY2VrxSPcVn9RCjvnzr4933EvKZObWsRl9UPBQ4UPEChCxQ+gSIX
TQ+QPyBJUxyTi2d6ehrNGF/G6kfly+jWySVlON4qfZu+Th2rH2tcYGR6pArx
Q5RD8Id6Vj/WX01Tn33n4vwIBdX5/rL5RyFewZuOJlTj/jaNuxYxsvlHinOK
TkWNr0Ej9Tlnn5gLWP1Q4EDBAxS6QOETKHLR9ABLGh7HHVodg8dnBBYJdLiy
85Mb/m19YSJavnE/PWBAA6ufVVmbB01ekoJJAmNvGwMhq58m5/rtu9pTse1M
tLne6iZWP8OHXLTYrMjBMbWLR9wPE7P6STbzmHn+HAefdltrXbJSwuqHAgcK
HqDQBQqfQJGLpgfIeODau9+BOKjd9y1QfZRMP9eDn3MmaKXA8OEZceMkfFY/
gdvszhwXpkHRcu6rtQNl+lmSvFnvSFY6fP5x3NxDT6afdAfDXle/Z4BShMlR
g39k+pFsPZX77lImqEJHh89kmX4ocKDgAQpdoPAJFLloegBvRfWj3dIKQHCr
rHPQt0R2Xg8FDqOUla+Dbg4YqA1XEW77yK6nwOH0l94Hl51HyJkcm2juXMiu
p8Dh+Pnv3+6cC8ADqq9e9HxexK6nwMFwkcmgz0NTcZHFymv7exew6ylw2Pf2
arH+P7l49lKz5UN8z66nwKHNvts9R2Eh8pos9Ya3vWbXP/9sUn2VJ8Twi+pq
CQ4f2Lqypa9b9VL8mtCx21ZRqhrjf3Oxo3rYVv2rYtTv/+qP/sEMPBELYv94
toArxtm5xTEGOTlsXRllPVDwA4UfGv/QV+eLje7JIgw8slo4/K9Qdk6Wl6HQ
sjJAhGVRZV8TX8YjI9cwj8V3NdaJ8UCfCytNYxKQkWuH1XNT3hoJbpttcLH/
MsafJuKTAPGffUIkOCncwPzOsURk5KKsBwp+oPBD4x+Cm1Qbb+nm49/iLP9J
g9NZuTRGPNtrf7UBFwwerxp5qpKVq/1s/o/EfgKMj1w/DaZyWbnyOOeD3fkC
lNxePXLUKy4r1xzDgAtFU4X4NG2S5+4aLisXZT1Q8AOFHxr/YNfQmp/RkYHJ
I8N/XL6Ux8oV7lgbcdmFiz84E43XZfJZuaxeLTG4tasae+4veFU8t5GV6/S1
LyfKflbjSYXS9NhBAlauKzN2/O2nW4O47VfPmtUCVi7KeqDgBwo/NP7h0EL/
+4vnR+K4EVaGUTZFrFzaL1wTJ8xORcOIHQEPNolYuUoVrlRN9U7DVWtmpiwY
JWbl2vlsumvftRycxe0Y1zRMwso1+cL+ujs3OGh0euusLU4SVi7KeqDgBwo/
NP7hR+Sj69EnXgC/coXem2kyuYa4rr5y7jMHkhQ6l002lsl1oW+S4kCPDHBZ
Xtji9amJlYvrnXXKck0mNKpH7m0TiVm5UoymO34IzIT12+pPdgeZXJT1QMEP
FH5o/NPywGj5Kejm8rlVmDPi5rpVPRLgq+++HTG3hEjJ/2NvZ0XVLE8xqpTM
GudzNwf0pfm3RNp/BIxv52hM/G0nd/hwR2r8tpNLpPneg0jJz4ORW1Tzi7IY
dFhuNXaH9m3wir1U25EroeVp8ZPHCeuEnErsL5aMePHrOY4uae2Nn4VIybdj
pcbpmx4LJHjL19pr7IJETJDmXZNpeXucNyJrp+SxBBuLOTfajyaiv1QuL6Tk
ycFG1aGloT4Vi8BtLDf+Frp4KJt/9ZDQ8rE4um8Yb8z6EmyfYSH0OpaNc9UO
Pk5eJkJKPhxbXSIWaKYL8FFk70yz+1y0kOaTU2h5dYxIr5o4S0eIxofDuZlc
LqJUrttIyWPD2QN+uxNt0jH3eL5y1D5Ea0PP4E/qEtDZLPlpo5ODDmePelq4
FuHmTe2LMh6LMDuj3yM3bjX2f+j0cXx9IxZJ86JpqD6V1zlxcg2WrFn7rW65
AO9L88b38VLZiMCP7Um4vyb7yjRJFmq2KCqKksXQFJyT653wAt8vONS+6mQp
/hN0iJ/down15y/dOVqDg5Z+GgdXfRSjszRvz8GwgiNjBVc5uMi6bOklOwnW
S/f3CS7IfpfX4/IzTKrqZx58Mg97hp92rN8phg3uKk+bv7wErVRO+KeiYnzC
6zhbsLEJG186lk/qmwkLtaZ+bLshxnZp3j4DTzu/m1PtnQltV942O+hLUHvY
//6/PEO1oamhpY2RMHNe9OYDjgVYtat7KneQGDQmfEhv6RCBCVQUWc8vIf9V
k3DQRjvRPzEiqHa9k3G5VwlUEPz5s9YZNaxugspXdd5ZV0rgJKerns06OmnP
PcsmED/Y4mF8ugTihnbRpawHynoaP0DhBx5uG3l8558JYKe7qJdozjPy/06C
LWPzIotH5MMPToGq14kEqO+SF/sYeWRYja0Azr3me7M2pYMnqQ+89txwzO5V
RTAwrSl078pkCCJ6vqHQbu19jAcZoXdjItT4pO4lBd1m6YTjFh7s0+o5Ma2z
ntS9cPDEpx9bPdN5EFPjO2HJbj78xemqk1QUmwwdkMyD0kPDFjs78SGI7Dtl
PVDWA4UfoPADFHmBIi9Nn0DRJwzamra7SCcRdCqE13peTIKKrjpM/KMn5/vt
IZkwRWMz31DtPSh1nWe0Dxi9Ni0lHyLs8Gzn6kIIIXWtaccOVwZty4U1l4f8
7J6WByfId7QocYrvgsZ8GJjzdOyc6CY4S+pyAz5b2xfW5sPYjC3O/4Q3wQfy
/S7UrRIqGBeATti8kTumiMGO1Osmrx/h3WpUAFxrg+A6bTEcJ981ZT1Q1gOF
H6DwAxR5gSIvTZ9A0SfovehM0rr/Elx3OLU44geI7aofxnqbnyG310SDgfD1
JBXfHNDusleo4D57edjGJNDbHvz48ekyyCL11Yvj2mfp1SdC3uMpLYvKSsGe
2MnSJ2D3ZmEkdrc8M3WEmwQWEbv9Y9K8AcvOR+LnD9/8HfkSSCH2mQIHCh6g
8AMUfmjyAkVeqOjOm2Vp7o1j2xQDfkS/B+IXcE3Ol7Z11vfw7hrDuInJFcD4
L+2SeUNwYwV63C1v/d4uBMbPJu9KSfoZV4HNV11OhNqKgPGnFDhQ8ACFLo1P
GGB7KLHf6ZdYoPdHx/ZjyUD8Mtrt7hEn/pSFGwtWfpx9rQyY+OFb/qMPO8Ma
8OiQqP0tObVsnGN+r76js6UBx13TC73Xp46NZyhwoOABCl0an+B8ROmGCu8F
8v59qDKQE8HERdhet2fhIZMSPKc4Y5nbwnw2fqPEXUCJ34CCh0aXFqfR4iWg
xF1AiT9pcRQtngFKXASU+JAW59D6FIASzwCl3wEocRFQ4j1a/wItXqL1EQAl
LgJKPwJQ4ita/wgtDqT1EdDiMVo9P1DiLqD0BQAlfqP1fdDiTFrdPi3eQ0p/
BC3OhN7k/XNb8v45U3cnX5fF1NdR6riAUvcFlDoxoNQ7AaV+CSj1TkCpjwJK
XRBsIO9dN5D3rleTemZKXRBQ6oiAUlcDlLoaWh0LrZ4EOpebcEeU1cHbU7fe
eE7JBc+u/g4sbrVK7rukAY5k6g3sO6UAsrr6QTDCbKSS4WMBHAsbzttuVATj
u/pHMCS+ucPBUARfPulPcL1WDCFd/Sbo7fjJJnVYE6w0vlzTf00JdMkbT4MD
BQ9Q6AKFT5pctD4IvCbXT7GdvDOm3UtfdalhDSy332iidr2W8FONXhuePBY0
1IJSqYr/KWceqfstRXvtrJYNijxwv2ertvFWPalLz0HJyqeJ7fd4cKiavzRx
AR+wq7+JBgcKHqDQBQqf/+mD8CTvpDnM6pPx56k8mOOuuHJ6jBBudfWRYe2D
lqidl/MhpWJu6KsZTaDR1XeGkjnG15XHFMCXmK/Hs7uJIaKrT+0/8HDSvyaP
ZwLpX6PQ/U/9/xryjoq6oK2bZedzvO80OXRMuxjedfX3obNudEiuWyQecjxv
45IoIfeamP/AmT7BMQRPEMGDpE9Qfo6JEXnPZPJTHufi3Qr86j5B18dIBJe6
+hxRm8DbCJzpf5SvK/Yg75/I2z0GLj+3kaGrK9dfeZnQpdgTlO9/ZPQj3y95
j+iHMt8QKX2FSOlD/E/fYhw5D5Q+O6T05SGljw8pfX+0PkGk9Kkhpa8NKX1w
SOmb+0+f3Ulixyh9cP/ZdxfKvjPv51yMe5eo4CPBnZPPfvXdm8i+n7OR7Huj
3NyEQxyf6T3dBFjwYtqaxN1cFo8QJepGqkK8+HhJTWABl8VTRPY9X+79f8XZ
ewMD07jocOxNroVNA4vfcrlarx/h1Rg0qTK34V/ZOz+m468GZY2tQbWp4doN
82Xv/PiSfT8i9779NBtl/24xybj/nZXZ1oOydxrnnpO8WBOVitsf60N7h+yd
RvdbV1ZENKVh+dgV57Zekb3TeGKW74W2MxzU1hJP9bKRvStlQvT/8+X/+064
Y/NfyTbiJPjx1XSF6iUZP4Ze3vNnWaTBZ807ve1sZfx45Fd+4h1LB8Vp1qGR
RTJ+EuYpOX2uyoAh1oG5Kk4yfg42Te1Xdj4TZocpqy7TlPEzk/DzTW7e5Sbi
d3bJzd1r9b13ZbRpE9R2c/X+cLiEfa8pN6hi2IOLInBfPsXFt7KYfZfpR+wI
peBhQsAQNa2qG0XsO2+KIb1MAl43gOTQgdv/ni9g54lsvGCVcGwKD6757azw
3Seb/9IyZGrYn294sM90akP7Rj5LtzRsm82SGTzwXxmYm59Vz9L91HnZPm5M
HWR8vdi69Le/Yuh6jyxe3deuBorWm+sVv6tl6Wopns4u1y2As5HdSl+Nks1l
i9N8b2AQmg+Z3wd1771JNpft12v7zaEBeVATGNaqWyFk8c9dlPlN6Wgkdo6O
81+YK3u3cJNHrfZX5UgMnALnWvpLWDxDmtQN3B9VoNE3PdQ2FcnmwRH/Hig3
d69m2K4ApzlF8O7tExPxN9l8veaByp/UHn+AraLWv8w4snebGX+6RW5OnJCs
30TWM/hnV1SdnxWcChOW6+qvGyF7F9q/oehR76QQjK/d0FioJHu/+satyWct
TcOxNbVoZVmd7P3q6wTeTOAMXV+CJ47gYffXeZV+XtJ9DF7u3mbXQzbXLC3h
fOGSgwUYNMPy4vz9srmN6crzo7/8jjsbhZkG1lzZfMY/FeLrbA+UYb82hcBn
mrL3vdPI+nqynp2TS/D/S/Az/IxSWfgjMCob81TGBJ+aLptXOGbZLc1P3Wqw
8eZizmxhOcvP98xFN4b34mGF+7v0SzWyOac9/mwZk6bEx3/P8F6NOS5771Fw
i9cz0qIBVd7MG296XPbeYzvBU0bwMHyqErp1hC47n9p599TyG6X46vFH3+AN
BSyfw1pGfotdVI+b9SdqFZlxWD6VPeZHnVUQIO/tjrSK1Vksn/L2nzmHKjPW
hjYqi3HS06fHFDfmsOe2tY/opskJETbZrlo+UzmbPf9KBH8Nwc/wP4jws5Hw
w/DfoTZuzJqSehwbuaFJ4fkb1u4dcR145vIzAcbG++rBFGTt3tQTtgXH5jRh
v/L67B1DEth37f4m66PJeoZuO8E/muBn6E73ia4/coCL7dMn5aAwgX13epdg
7/Uzd2rx3sV/lv9hX8zy84fb9eOV/HrsPHAO/Q6Us/zIxzkMPxPI+h9kPcOP
E8F/h+Bn+Fndd3W4IpeLXjlO0/95FcXaYa8FM/OGzS1FZaOUsC/dZHMiLhG4
EoEzeOJ2Hdtv8a0c99lkD5j66yOLZ46zpVBzcx5u+hrzVXGIbO7wZd1FzzfM
fIMBhr5DT8T9X/af2GE/YocZukrEbn8idpvRQwex8/HEzjPnXN4vMOdc3o+w
fpnYvXty81uvEbtdQuw2Q7eF2PlMYucZuvJ+gX2fU86PMHTXEX/nKDfPdDqx
n45y80YZ+19L7D9DV95fMHTl/QtDt4LY89fEnjN0f839/8/BlPcj7FwVOb/D
zsEh9nwssefs3Ae5ewSDR94fsfP7iH2+S+wzg0f+HsGsH0zsZxaxn8z6EGKv
nhN7xcBnke+xg3yPjB1bR74LX/JdMHD5+JOxV0nk/P9Fzj+zXj7OZNbLx6WM
fZtHvpft5Hth8MjHkwwe+fiTwcPEq5tJvMrYh+vkuwsk3x07f0EubmTwy8eZ
DH4mLnUkcSmDX4/EsXtIHMvYH28S93rIzWGXjw/Z9znl4kl27hiJPxVI/Mm+
103i1U8kXmXobiHx7VcS3zJ05e/RDJ51xI/3JX6cgcufN4ZPeX/K8Nmd+N9A
4n8ZPJ+J/xIT/8V8X/L+jvku9Ijf6U/8DrP+/wBkUb2f
        "], {{
          {RGBColor[0, 0, 1], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHf8j9X7x+/3fb/v1aSpodBQtIuStJB2RiGFKIWiRSqVNJWkKQ2UQmgo
o4UGSpSS0dJWoZL2rt/r6XW+j98f53Ou97nPfe7zue9zrnNdr2vU7X5+275x
FEXf51GUqP5Af16vRNHnok9Jo+gzlYH6fbjqRlkU9RR9mOgDRJ8j+mr1v1L1
FSo/qm2RyrO6d0/12Ut0B7U/rwdcpPoWtV+r/o31+yr9/lTX56rcp/Y31HaH
2iaJfkj3/qcyR79rqf/KyPMZqbY26j+Dfmr/VPdMFz1R9Ceip4m+V33aqs8z
om9X+yK13yV6quhXVc9VuU992jFP0R/r+lTVr2v8T9Q2R+Ve0X3Vf5qu9dC1
y0XPEt1f9PWi54m+TvRZGucI9R8i+kzRh4u+UXR30YeJvkH0Zeo/U/37if5B
bW8yN41/mfp8r3K/2g9Vvb/azxb9gvperHqY+nyothdVhoruo3Gm6tpZuva0
6jNVX6X2vXTv3urTUb+bi/5A5VzR/dS/j+rzVD7Q9dkqN6v/U7q3u9quFD1A
fRrod1/9Hl+NorG69wu1n6+2X1Vvq/K7ynYqG6ncqOvHa5wJ6p9rvSwV/Zba
31T/O9U2WXSh9mVqf5tnafyzdW22ro0S/a7oR6A1zj8qL4h+gnereqbKcl1/
mPWie0er/T39HqffQ9T3BI35qOhdWG9qr4peojnXUHsu+h3Rm4rORO+qPlep
Tyq6m+hJok8WfYPGOU59xouuq/Zlqv/Ss/ZQ+55qb6/fy9R3rOrn1P6f2pao
vCb6X9XvqLwq+lk9Kxa9VvQ00RXR34qeIjoSvYZ3pvHP01jrRO/AtxD9o+iP
VD+t8eeL/lNle5WNWW9q/1n1Nry3ip+5XOXFip+5TGWo5vmrymS13aEx39I9
d/Ot1dZSzx0hur/oo0TfI/p+9TlRfUaLvkTtrdQ+kv+Z76PyMnPgG6q8JPoR
9X9c1x9TmSC6k+59gnt1fUt9153Zg2ofpbYH2Eu6fi202r/R+OepTBT9k/rv
VHg/f6e2C1KvjZ/VvnPhtfKt2vqm3u/wjXpqv73iPThGzxok+gtd75h6Px6i
d3uXylTRX7EG1We4+qzR9d4qj0b+v5aW6q9+x2tu9+n6U+F/XKL2kWq/U/M/
Ova7Wqv7LlJ5TH1uVfttartH9C6ay0iVtuq3t+7pqT4j1X6cft+rPlNEX6L+
E8LeuVj0+Nh77XzRO8feyzdqjLgwD3lfYxyiMkj3fsya0nyu1dgXqv8usXnp
Hvp9A3NUn/pq66W2a0U3UNt1KreLHqzxTij8rN3Up7fq6yLv8Tv1Ts7X7/rq
ew1jqf12tV1TmBdcq/rEwnPeTdfbaz43qU9d0S1EXw7fFn0j7zr8jxfAw0Sv
YF2l5iF/sBc0/3vU79jYa+pJtf/GulL73WrfVfVZ+l1T7Yerz83qM1b0YaJv
Ev2Q6LWcF+p3u/ofGpuPPqj2dXruyVXvhaa8D5WnRR+s+o6qv+k16nM1vAEe
JfpUtdcPa2N+5vXQWvNtIvoS9Zuj8a9hT6i9rdqbqv1S/W4j+mDRA0SfI3qV
ylDRwzXmkbrnVtFf6/rrmdf2LWofxlnG+aJ32bUwPVTtz8amG2kut6o8wn7W
9btUjtK18foWdxS+n/X2XBj/DPaEyiv6vavqe1Xaif5aczlDZZTGuVv9j4m9
r3/XXBbrvY3QM7ZV37tVWunaV+rbJfV+XK0+tQrvz29Fv6H+w9X/Jo3TLPY5
9R3nkdpvY61wPqr9etat6ENin18rNV6n1Gf0KvXfuvB7/FJtp6d+n7yfrdQ+
WO0NNdb1fCe191f7FvqfdxJ9sejaouuKfl/9vonMT9awj6qWPXbQXB5XeUq/
3+W9q60ePFJtk1Umqv1LzevNivntN7ppstpguwvU9pXqzVUWil6leguVVzmv
E/Ph5/X8RzTPt3R9Fud7kC04876MPIfVGv8D3o3oHfXMJ1Sm6wFfqX1RxTz/
e3Vsp7ZazF/tH6r9e9F11PdJled0bYb6vFzx2VdbbY/xv6n9W7U/qVqvbv2a
Oqr0uuoMz8m9/k/SxYMyyxsvq74/9358SfStuflDZ/hJ5u97nOjGmeWGE0Qf
mFneeKPis2hLla5qb5ZZbunCGsu9B9/T79WRv9GD4czlfLxW/Y/JfF6fwprN
/U1vC3ySdTtYfY7OfGbPQ47Lvcdf5T7RD4seoz7/pj7HntS9PWKf9cgIU3PL
Cd/ofTyrPjtydqvtZl1rgjym9s1Eb672ffSerhG9r9o/U/vmrC21H6L+Q0Uf
rPYDNP6NGn8rzg712YJzS/TNattGdSv1OVp99hG9l8qRom/XtfqMI7qO6h1U
Wor+A36s8o/GeREZS/QPfHPONtE/wZ84z0Qfzjth73Iuq96Nd6Zn/cL+VJ9d
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

              "]], Polygon3DBox[CompressedData["
1:eJwtnAn4VVMXxs+594wNhiYVKSWkhJKpIiRDknmqRJpIilKhqBSKVEQjpaIo
U4aiElEaaBIi85h5Hj/D9/6853ls7XXWPvuee+7ea6/1rnf99+rW74wrSkEQ
rIqCQP8FPfW/VO2XMAh2U/stC4Lf1VZq0APS95AuUftZuhpqj3JTEgSXSh+r
20XyX+Ug+EC6PyQ/qHsfUust/a6SH9egtzTmQPU/0pj+uvepPAje1LU6unah
xs6W3FLXn9c9ofoltYvUXy99V43bWbobJB/K/LGffSf1X9d8ZY2N1C6W/hVd
e0b67dLvKt13ar3Vz9V+U7+W2rl8Vz3va+r/rvHXpEEwSffvrfvO0LVR+vdk
fd6bmm+p9C9Iv0j6h/ke0vfS/Znar+rXVLtI/V00frjGH6bxj2n8YfpO3SVv
lNxH+t2lnyj5LMkXFe93gp7hdt3/osY/qfkf5bklr5T8hORHJL8tubP+baX7
X9T903V/W8l7ac7r1O8n/YWSW0v/kvQzdO186X7X3O9I94PkBpKP1phekhtq
zFp99jq1a0v+TepLf5T0PaXfW9eGq3+i5ntd/Wek7yT9n5rvPel/kXy55D2k
v0P6s3nfmutZtSsl15N8jvQ/afwWjf9V8gWS/5D8ruSfJLfS/M10/xMaf4Pk
wdLvK3mO5Kskd5b8P41/n7UoeYjex516H/V13+m6NlL/nqTxb2j8s9Ivkf4R
6R/Q9Velv5jfXvoR0h8u/aWSK/BOpKuttlC6cRpfVeP7sg/07KvVrtH4A/h9
dP0ojVkl+R7J10o+VPfPV3+m7j9DnzdW91+ta0ciq99b7X8at1Zjqkq/Qu1N
6epLPk39MdIP1PgjdO0Q/dtTY8eq30afcaT6B+vzFql/Pe9T4x/V+Hm6voH9
JvlQPd8l0m+Q/hHJLSR3k/xq8ftU1P1DJDeSfJZ0o3TtEF17mt9I8gzN10Ly
YsnNpOuuuW/R3EdJniv5X9aH+h/o/oMlXyL5Zulb69oC3Xeb7t9V1y6XfrE+
/2HJ90t+RWOO0PhB6k9R/2TeufoH6Z7H1R+m8Zv1+VvURkpuJfkgje+mMTdp
fCv2hOTv9Xtvkvyj9B0kX6z7P9K17ZJ7a+yBujZV/fGh18vuajV1bzvJT+t5
Fup55mrceslnS/eD7t2s/s+650zpLlX7S/p1gX+bxyQviP0bfST5WskZv7Pk
e/TZN0n+V/N04X79+53m2yjd95If0riXI6/1N3TtFH23yRp/oO57BBsg3UCN
uVu6EyXfq/4/7C/1V+me9hp/t8Y31fiHda25xveQfozGHy35VN6/dB+zhzX+
cMlXSz9Z+pOkP1339lL7U9fWSD9Hz19Xc54i3eOSb9O9z7EedV9LyX9I96fa
WdIvk9wXe6pWkryf5jxVYy9R+yW2vZum+1+QXBk7WNiTXNcGafy+/D7SdVP7
Ofb+a4+tVvtR8hLJh2S2x7P1/PN4P9hmtZ9i25OrpM8kz5f+EelX6/rOap05
VvQZV2BP1cqs59D2o4I+fzDPy/2S60ueLrm75AGSa3AesPZCyw2knyG5h/T7
aO5NatUlnxl6vZ+htgrbq7a7nucntVvKXpOsn1j399P42rr/SsnV1CqVvD6Q
95J+muRLpP+f7v1L7WzJy7HJ2B/OVsn7h7aXO6mFvD/JX+n3Wqnvv17PVFHX
5ktupPvPUf853f+K5CXSPyX9Zxp/m/79Te0C6Z/GnmlsIP0MPe+90t+nuc9k
vUj/LvZGup5qf7BOJZ+k/oVq30peKHm25t9Tc7TX+Mck3ye5Tua9+6jkH4v3
wdp9WHI99R/U/d/p/g4l78cv1I5VfwrvR/oEe6DnWajnaZ75/J4l+QH2oORf
Mq/dRzR+P927Wa0Ge1/6dhrbSe0rXXtQ+m76Lmew/0veA+v0fE9L/4T0n2j8
tZqrAueldMskN8HfkPyr9OeXvF/Lur+v+jXZr7q/scacJ/l5/AfJ+0s+V/IK
7L3Gnq72Yck250TN1UXtG823QPoT1O+s9rXkh4rz4Hu1UzV+XmD7Fel+nKpa
kk/W2K5qP2jMYskHSH+W+tdi+1kT6m9R2w3brGt7FO9nbNk2d99iv04q24ac
qrGHa/5lGn879l/98Zq/of6dxXya/3SNGayxB0s+GTsm3bPq36bxb+r7Ltf4
5br+k8Zco/GNpL9f+oHF79FY8oOS+2HTNH6Zxi/T9R81fr9ifd9dtg16WGNv
x1/SvzN1T2P2k8YOka6Z5CasR8nXsBYkd9TYHmq/69pqzb+39G3U7y39PtI3
lHyM5Ev57pL3kXys5Mv4bMlDJO+nz5qr/gDd/7ye73HNt1BjtmnMesmLJT8p
+VPJK/Tv37qng8b+if2RfJjuX6r7x+EzavxSjV+q6z9I30hjT1N/kPoHacxT
0i+Qfg7nha6do3/305ixuveG0L9fE833kMb2D/yePsRGhH5f1fSuflUbp/c1
V/r5+G6ary7rs7Bf1dUqc1aE9g8r41Pz3SU/pXufVusvec/CXtfRHHdKPiew
31ETG1my/4FfsRs2vWT/Aj92o1q1kv3ZD/V9ntfnv6Rr/4b2ozaoVS3Zn5qt
/gORffW1kl/Fv1TrI7kK+13P8o/aVH2fGdLP1LPcovn21L9347Ow1iR/oTma
BPaHCSy+0NgUf1b6H/BJWD+FPd5f1+Zj6wv//l/pdmhswufreZ/RfE9r3OeF
Pxeqfal+ptaNs0vtK/VztSUa9xU+rOb6VvIH+F+6/0XOXcnP6t93pa/C+a12
CfZB7Wv1KzCnnu17tRF6hrsC+034yyMD+0/tNN97an9p7GmB/fKndf83gf3z
0dIdr/vnaezlmuMQfMPc34l45U7Nt1761pKPkzxJ42dJ307zXKn7W6g/KPc7
I36YpPGvaPxRGt9W8lGF/9RWcpNi/9ZRq63POxH7j6+OfZX+DI2/S/Pfp/lO
1PxXSb8L/n5uvw5/brnk5zK/2xaBf8eyxnYN/Hty/iyT/uCy1/Qwyb+njh16
lr0f91CrJfmE4vdivmbSVZd8rD7rXLUPYturNon9yVnqr8Hn1/g/U+/1GwPb
6qWa7+WybfbRif3DmdK9LPlCyWerbZO8SWOWZn4+zsZDOO+km8yZQsyg8V0l
n6P2VuBr12ruPfEZpTtJ9wzVZ/+WOtbpLv0xif3h+1j/2GTOEukbqP9W7PO1
o9pWjV2CT1zETy0l7yl5nMYmmW3dHZpjZ/XX5vZz8W+Jzz5TO1L9URrfVONf
Sx2btgnsL7/JnsOfCB0f8bl8fg/JLYv46kB93k6h44VtavV5fsmHqv+GWj3J
3Xgn6r+uVlfyxZKv03PU5TfjbAgdL83SfLXKXsPDiV1z7yP2z0HSb029V46R
/gf1V0nfnDOMPUGsyXrChkv+UP+ejT+vfgt9RnXNvR6fO/b52D/2WdpOukma
84rYZ+nxku9kD2v8GtZMbH/iUPUH597zxG/Ev5+qHcF6wR/ED+BMlDxS8nnq
f4yNlzxC8g71e8Xey8eUHM99rtZS/dHSX6b+l2rHSZ4Y2he6g1gusk90eWxf
pC2/p/RXxfadTpB8V+EvvpLbz8dH4vx+Nbefjo9TP/WZxFnUPLBvtSF3nISP
1aqINw/X+9+D76P3eX7yn0v33x7oqP5dsdf6ezyD5jpV4x/jLNS1+6XfrsEV
Yp8H9SSn6l+s/hTOCN6dxjdV/31dn6D7O0h+VPLV2CDpz8v9TsETOMerx7bF
nOf4FbvF9gXwL9rk3hOsSeJ1zsOP8DGkG4M91/hasc/C+4hBJL+j8bVj+8eL
JL8reffY/vqtep4os69ylZ5nkN7LK9LtWvJ6Git9OfNZ3L9sW1Ji/ZdsU/B1
p8WOhfF5myfGL0ZIfgqbpLEf6J5GsePp6zXfH6l9DWw6cTD+B7aHeLidxr+v
8fvGjlfbqn9+7j0LntJR+g/5/WL7Uw+BfeQ+JzkfwcO+1nM+p/al9HWlj6W7
SP3J0j8h+T2N3yN2PEKc2DS270W8SBx4QGzfhnjwAMlNYmMhC0s+n+7Pvc/Y
X0ck9lcmSP+c5Kn6blUyx47YsOGS/5fadxol+cjE/uFE9Vfo2r3Snavxz5R8
Jh+fOF7FN99UMr60nTO65P0+VN/vNcl1JA+WPEP3n6P7l5R8Zv4leaae722N
aaRrzfTvVrU9S/YhTtbYu3J/L75PZ/3bSa2CdOt0/226P87sO/KM+NLLI+vw
qY/JvaZZy/hv4IT4m9ha8ELwktm6v7bGfxd4bVfKbC9Y4/yWlTPbX37T9sT3
sWO1t3TtAul3ymwfsBNTNN+umbERzqxpkqtmxmpmS26XOB4nVtqsa6dIvjl2
7PY26y8xHkJstUXy8bk/g7nBkzrgP8WOPbZLfyq+HWeA5HdLjkWmxMYyiUmI
habGxnqIiSanPtM5y68HQ5ScZo4t7uQMT30GcfYMLXsvvZzbz2VPRQU+RNzA
HjyiwGsbaOw/uv8b9hxYbPk/mDd4kFhM+s6SL5DcRfN/zmdytkm+WP0v1PKS
13xX9XeoZSX7FC3VH5U7LiYebqn+Nbkx53asT/WH5MaYj5d8osa/r/a3xp4u
+TJdf07f/4/QeAT2uK2eaUPJ8ey3eq7z8LH1r24LjtD/bsyNI4AfzJL8QO5z
gvPhJH2XTzOf/cNZz7r31tw4BPhDf7AB9eNS4a9LPzQ3jg1+3VT9Abkx0UbF
/e9ovjPLjjkOkO6q3JgneEX11Bgy2PHekh/FHoIXlG2zz9Pn/cpZQLyCPdfY
tWofE89hLzTXwNyY6P6F/flE93ctGzM5Kjd+RQwBvjxd+relP0369pIPTh3z
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
              "]], 
             Polygon3DBox[CompressedData["
1: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
D2LyR1w=
              "]]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0s1LFHEcwOHfapaVlnh3rbtGf0BCdHU3dclAJQhvBpmdqoPUzS6CXuwQ
Qh4UBQWRDbeXNTVXBeuQrWn5UkJClHmQjgo+k7BfPs/M/uaFmbnYei/VHgsh
DJj1whAiZ/WnlpnyU+H/zkqJcxlf4iq+wDV8jS9zglv4KrfwA67nO3xbMydD
eMQdnOWn/IRn+Rn38AIP8Qv+wC95nD/xHM/wpvv7zCs6bTsfrS9yHl7h2hMh
fNGEruoNx2asXeNGfsVf+Sa/5m/8RpPWr/Nbvs4bnOc63uR63dIG/a4510vx
D17gLWu3eU3nbS9z2jPI8nue4DFO8yj38yAPcTf3cT93chf38l1+yLd00v22
cZJHuJlr+DnXcjV38xWu4MdczaV8n+N8aDbc33n9qAd6zgx7fnnrSvmf/SW6
r2ejazt2ic9E75cX+TQ3cY6LeVb3TPS5vNO/xt9hSneN04c/6nGF3+oXdswv
KNDF2PH3dwQvPFpt
            "]]}, {}, {}, {
           Line3DBox[{1000, 1189, 1442, 1190, 1001, 2411, 1222, 1450, 1223, 
            1015, 1240, 2428, 1457, 1241, 1022, 1258, 2432, 1464, 1259, 1029, 
            1276, 2437, 1471, 1277, 1036, 1294, 2443, 1478, 1295, 1043, 1312, 
            2450, 1485, 1313, 1050, 1330, 1492, 2501, 1331, 1057, 1348, 1499, 
            2502, 1349, 1064, 1366, 1506, 2504, 1367, 1071, 1384, 1513, 2507, 
            1385, 1078, 1402, 1520, 2511, 1403, 1085, 1420, 1527, 1421, 2404, 
            1092, 1438, 1534, 1439, 1440}], 
           Line3DBox[{1002, 1191, 1192, 1443, 2475, 1193, 1194, 1451, 2480, 
            1224, 1225, 1458, 1242, 2429, 1243, 1465, 1260, 2433, 1261, 1472, 
            1278, 2438, 1279, 1479, 1296, 2444, 1297, 1486, 1314, 2451, 1315, 
            1493, 1332, 2458, 1333, 1500, 1350, 2464, 1351, 1507, 1368, 2470, 
            1369, 1514, 1386, 1387, 2399, 1521, 1404, 1405, 2405, 1528, 1422, 
            1423, 1099}], 
           Line3DBox[{1003, 1195, 1196, 1444, 2476, 1197, 1198, 1452, 2481, 
            1226, 1227, 1459, 2486, 1244, 1245, 1466, 1262, 2434, 1263, 1473, 
            1280, 2439, 1281, 1480, 1298, 2445, 1299, 1487, 1316, 2452, 1317, 
            1494, 1334, 2459, 1335, 1501, 1352, 2465, 1353, 1508, 1370, 1371, 
            2395, 1515, 1388, 1389, 2400, 1522, 1406, 1407, 2406, 1529, 1424, 
            1425, 1100}], 
           Line3DBox[{1004, 1199, 1536, 1200, 1445, 2477, 1201, 1542, 1202, 
            1453, 2482, 1228, 1548, 1229, 1460, 2487, 1246, 1554, 1247, 1467, 
            2491, 1264, 1560, 1265, 1474, 1282, 2440, 1566, 1283, 1481, 1300, 
            2446, 1572, 1301, 1488, 1318, 1578, 2527, 1319, 1495, 1336, 1584, 
            2529, 1337, 1502, 1354, 1590, 1355, 2392, 1509, 1372, 1596, 1373, 
            2396, 1516, 1390, 1602, 1391, 2401, 1523, 1408, 1608, 1409, 2407, 
            1530, 1426, 1614, 1427, 1620}], 
           Line3DBox[{1005, 1623, 1203, 1537, 1204, 1446, 2478, 1205, 1543, 
            1206, 1454, 2483, 1230, 1549, 1231, 1461, 2488, 1248, 1555, 1249, 
            1468, 2492, 1266, 1561, 1267, 1475, 2495, 1284, 1567, 1285, 1482, 
            1302, 2447, 1573, 1303, 1489, 1320, 1579, 2528, 1321, 1496, 1338, 
            1585, 1339, 2390, 1503, 1356, 1591, 1357, 2393, 1510, 1374, 1597, 
            1375, 2397, 1517, 1392, 1603, 1393, 2402, 1524, 1410, 1609, 1411, 
            2408, 1531, 1428, 1615, 1429, 1630, 1621}], 
           Line3DBox[{1006, 1624, 1207, 1538, 1208, 1447, 2479, 1209, 1544, 
            1210, 1455, 2484, 1232, 1550, 1233, 1462, 2489, 1250, 1556, 1251, 
            1469, 2493, 1268, 1562, 1269, 1476, 2496, 1286, 1568, 1287, 1483, 
            2498, 1304, 1574, 1305, 1490, 1322, 1580, 1323, 2389, 1497, 1340, 
            1586, 1341, 2391, 1504, 1358, 1592, 1359, 2394, 1511, 1376, 1598, 
            1377, 2398, 1518, 1394, 1604, 1395, 2403, 1525, 1412, 1610, 1413, 
            2409, 1532, 1430, 1616, 1431, 1631, 1622}], 
           Line3DBox[{1010, 1217, 1110, 1011, 2415, 1218, 1116, 1019, 2420, 
            1237, 1122, 1026, 1255, 2430, 1128, 1033, 1273, 2435, 1134, 1040, 
            1291, 2441, 1140, 1047, 1309, 2448, 1146, 1054, 1327, 2456, 1152, 
            1061, 1345, 2461, 1158, 1068, 1363, 2467, 1164, 1075, 1381, 1170, 
            1082, 1399, 1176, 2515, 1089, 1417, 1182, 2520, 1096, 1435, 1186, 
            1104}], Line3DBox[{1012, 1219, 1111, 1013, 2416, 1220, 1117, 1020,
             1238, 2427, 1123, 1027, 1256, 2431, 1129, 1034, 1274, 2436, 1135,
             1041, 1292, 2442, 1141, 1048, 1310, 2449, 1147, 1055, 1328, 2457,
             1153, 1062, 1346, 2462, 1159, 1069, 1364, 2468, 1165, 1076, 1382,
             2471, 1171, 1083, 1400, 1177, 2516, 1090, 1418, 1183, 2521, 1097,
             1436, 1187, 1105}], 
           Line3DBox[{1101, 1633, 1632, 1617, 1432, 1093, 2517, 1179, 1611, 
            1414, 1086, 2512, 1173, 1605, 1396, 1079, 2508, 1167, 1599, 1378, 
            1072, 2505, 1161, 1593, 1360, 1065, 2503, 1155, 1587, 1342, 1058, 
            1149, 2453, 1581, 1324, 1051, 1143, 1575, 2524, 1306, 1044, 1137, 
            1569, 1288, 2426, 1037, 1131, 1563, 1270, 2424, 1030, 1125, 1557, 
            1252, 2421, 1023, 1119, 1551, 1234, 2417, 1016, 1113, 1545, 1212, 
            2412, 1007, 1107, 1539, 1211, 1626, 1625}], 
           Line3DBox[{1102, 1635, 1634, 1618, 1433, 1094, 2518, 1180, 1612, 
            1415, 1087, 2513, 1174, 1606, 1397, 1080, 2509, 1168, 1600, 1379, 
            1073, 2506, 1162, 1594, 1361, 1066, 1156, 1588, 1343, 1059, 1150, 
            2454, 1582, 1325, 1052, 1144, 1576, 2525, 1307, 1045, 1138, 1570, 
            1289, 1038, 1132, 1564, 1271, 2425, 1031, 1126, 1558, 1253, 2422, 
            1024, 1120, 1552, 1235, 2418, 1017, 1114, 1546, 1214, 2413, 1008, 
            1108, 1540, 1213, 1628, 1627}], 
           Line3DBox[{1103, 1185, 1619, 1434, 1095, 2519, 1181, 1613, 1416, 
            1088, 2514, 1175, 1607, 1398, 1081, 2510, 1169, 1601, 1380, 1074, 
            1163, 2466, 1595, 1362, 1067, 1157, 2460, 1589, 1344, 1060, 1151, 
            2455, 1583, 1326, 1053, 1145, 1577, 2526, 1308, 1046, 1139, 1571, 
            2523, 1290, 1039, 1133, 1565, 2522, 1272, 1032, 1127, 1559, 1254, 
            2423, 1025, 1121, 1553, 1236, 2419, 1018, 1115, 1547, 1216, 2414, 
            1009, 1109, 1541, 1215, 1629}], 
           Line3DBox[{1106, 1188, 1535, 1441, 1098, 2410, 1184, 1533, 1437, 
            1091, 1178, 2474, 1526, 1419, 1084, 1172, 2473, 1519, 1401, 1077, 
            1166, 2472, 1512, 1383, 1070, 1160, 2469, 1505, 1365, 1063, 1154, 
            2463, 1498, 1347, 1056, 1148, 1491, 2500, 1329, 1049, 1142, 1484, 
            2499, 1311, 1042, 1136, 1477, 2497, 1293, 1035, 1130, 1470, 2494, 
            1275, 1028, 1124, 1463, 2490, 1257, 1021, 1118, 1456, 2485, 1239, 
            1014, 1112, 1449, 1221, 1448}]}, {
           Line3DBox[{1649, 2229, 2230, 2106, 2228, 2227, 1648, 2485, 1819, 
            1818, 1647, 2341, 2416, 1982, 1808, 1646, 2340, 2415, 1981, 1807, 
            1645, 2339, 2414, 1980, 1806, 1644, 2338, 2413, 1979, 2214, 2213, 
            1643, 2337, 2412, 1978, 2212, 2211, 1642, 2209, 2210, 1977, 2479, 
            2336, 1641, 2207, 2208, 1976, 2478, 2335, 1640, 1805, 1975, 2477, 
            2334, 1639, 1804, 1974, 2476, 2333, 1638, 1803, 1973, 2475, 2332, 
            1637, 1809, 2411, 2342, 1636, 2217, 2218, 2105, 2216, 2215, 
            1810}], Line3DBox[{1663, 2245, 2246, 2108, 2244, 2243, 1662, 2490,
             1833, 1832, 1661, 2427, 1817, 1992, 1816, 1660, 2351, 2420, 1991,
             1815, 1659, 2350, 2419, 1990, 1814, 1658, 2349, 2418, 1989, 2226,
             2225, 1657, 2348, 2417, 1988, 2224, 2223, 1656, 2221, 2222, 1987,
             2484, 2347, 1655, 2219, 2220, 1986, 2483, 2346, 1654, 1813, 1985,
             2482, 2345, 1653, 1812, 1984, 2481, 2344, 1652, 1811, 1983, 2480,
             2343, 1651, 1821, 1820, 2428, 1650, 2233, 2234, 2107, 2232, 2231,
             1822}], 
           Line3DBox[{1677, 2257, 2258, 2110, 2256, 2255, 1676, 2494, 1853, 
            1852, 1675, 2431, 1831, 2002, 1830, 1674, 2430, 1829, 2001, 1828, 
            1673, 2358, 2423, 2000, 1827, 1672, 2357, 2422, 1999, 2242, 2241, 
            1671, 2356, 2421, 1998, 2240, 2239, 1670, 2237, 2238, 1997, 2489, 
            2355, 1669, 2235, 2236, 1996, 2488, 2354, 1668, 1826, 1995, 2487, 
            2353, 1667, 1825, 1994, 2486, 2352, 1666, 1824, 1993, 1823, 2429, 
            1665, 1835, 1834, 2432, 1664, 2249, 2250, 2109, 2248, 2247, 
            1836}], Line3DBox[{1691, 2266, 1878, 2112, 1877, 2265, 1690, 2497,
             1876, 1875, 1689, 2436, 1851, 2012, 1850, 1688, 2435, 1849, 2011,
             1848, 1687, 2522, 1847, 2010, 1846, 1686, 2363, 2425, 2009, 1845,
             2254, 1685, 2362, 2424, 2008, 1844, 2253, 1684, 2252, 1843, 2007,
             2493, 2361, 1683, 2251, 1842, 2006, 2492, 2360, 1682, 1841, 2005,
             2491, 2359, 1681, 1840, 2004, 1839, 2434, 1680, 1838, 2003, 1837,
             2433, 1679, 1857, 1856, 2437, 1678, 2260, 1855, 2111, 1854, 2259,
             1858}], 
           Line3DBox[{1705, 2274, 1906, 2114, 1905, 2273, 1704, 2499, 1904, 
            1903, 1703, 2442, 1874, 2022, 1873, 1702, 2441, 1872, 2021, 1871, 
            1701, 2523, 1870, 2020, 1869, 1700, 1289, 2019, 1868, 2264, 1699, 
            2366, 2426, 2018, 1867, 2263, 1698, 2262, 1866, 2017, 2496, 2365, 
            1697, 2261, 1865, 2016, 2495, 2364, 1696, 1864, 2015, 1863, 2440, 
            1695, 1862, 2014, 1861, 2439, 1694, 1860, 2013, 1859, 2438, 1693, 
            1882, 1881, 2443, 1692, 2268, 1880, 2113, 1879, 2267, 1883}], 
           Line3DBox[{1719, 2280, 1924, 2116, 1923, 2279, 1718, 2500, 1922, 
            1921, 1717, 2449, 1902, 2032, 1901, 1716, 2448, 1900, 2031, 1899, 
            1715, 2526, 1898, 2030, 1897, 1714, 2525, 1896, 2029, 1895, 2272, 
            1713, 2524, 1894, 2028, 1893, 2271, 1712, 2270, 1892, 2027, 2498, 
            2367, 1711, 2269, 1891, 2026, 1890, 2447, 1710, 1889, 2025, 1888, 
            2446, 1709, 1887, 2024, 1886, 2445, 1708, 1885, 2023, 1884, 2444, 
            1707, 1910, 1909, 2450, 1706, 2276, 1908, 2115, 1907, 2275, 
            1911}], Line3DBox[{1720, 2281, 1925, 2117, 2171, 2172, 2033, 2501,
             1926, 1750, 1721, 2451, 1912, 2034, 1751, 1722, 2452, 1913, 2035,
             1752, 2118, 2527, 1914, 2036, 1753, 2119, 2528, 1915, 2037, 2173,
             2174, 2120, 2368, 2389, 2038, 2175, 2176, 2121, 2277, 1916, 2039,
             2315, 2453, 2122, 2278, 1917, 2040, 2316, 2454, 2123, 1918, 2041,
             2317, 2455, 2124, 1919, 2042, 2318, 2456, 1723, 1920, 2043, 2319,
             2457, 1724, 1935, 2320, 2463, 2044, 2284, 1936, 2125, 2177, 2178,
             1937}], 
           Line3DBox[{1725, 2285, 1938, 2126, 2179, 2180, 2045, 2502, 1939, 
            1754, 1726, 2458, 1927, 2046, 1755, 1727, 2459, 1928, 2047, 1756, 
            2127, 2529, 1929, 2048, 1757, 2128, 2369, 2390, 2049, 2181, 2182, 
            2129, 2370, 2391, 2050, 2183, 2184, 2130, 2282, 1930, 2051, 2503, 
            1758, 2131, 2283, 1931, 2052, 1156, 2132, 1932, 2053, 2321, 2460, 
            2133, 1933, 2054, 2322, 2461, 1728, 1934, 2055, 2323, 2462, 1729, 
            1947, 2324, 2469, 2056, 2288, 1948, 2134, 2185, 2186, 1949}], 
           Line3DBox[{1730, 2289, 1950, 2135, 2187, 2188, 2057, 2504, 1951, 
            1759, 1731, 2464, 1940, 2058, 1760, 1732, 2465, 1941, 2059, 1761, 
            2136, 2371, 2392, 2060, 1762, 2137, 2372, 2393, 2061, 2189, 2190, 
            2138, 2373, 2394, 2062, 2191, 2192, 2139, 2286, 1942, 2063, 2505, 
            1763, 2140, 2287, 1943, 2064, 2506, 1764, 2141, 1944, 2065, 2325, 
            2466, 2142, 1945, 2066, 2326, 2467, 1733, 1946, 2067, 2327, 2468, 
            1734, 1956, 2328, 2472, 2068, 2294, 1957, 2143, 2193, 2194, 
            1958}], Line3DBox[{1735, 2295, 2296, 2144, 2195, 1765, 2069, 2507,
             1959, 1766, 1736, 2470, 1952, 2070, 1767, 1737, 2374, 2395, 2071,
             1768, 2145, 2375, 2396, 2072, 1769, 2146, 2376, 2397, 2073, 2196,
             1770, 2147, 2377, 2398, 2074, 2197, 1771, 2148, 2290, 2291, 2075,
             2508, 1772, 2149, 2292, 2293, 2076, 2509, 1773, 2150, 1953, 2077,
             2510, 1774, 2151, 1954, 2078, 1170, 1738, 1955, 2079, 2329, 2471,
             1739, 1963, 2330, 2473, 2080, 2301, 2302, 2152, 2198, 1775, 
            1964}], Line3DBox[{1740, 2303, 2304, 2153, 2199, 1776, 2081, 2511,
             1965, 1777, 1741, 2378, 2399, 2082, 1778, 1742, 2379, 2400, 2083,
             1779, 2154, 2380, 2401, 2084, 1780, 2155, 2381, 2402, 2085, 2200,
             1781, 2156, 2382, 2403, 2086, 2201, 1782, 2157, 2297, 2298, 2087,
             2512, 1783, 2158, 2299, 2300, 2088, 2513, 1784, 2159, 1960, 2089,
             2514, 1785, 2160, 1961, 2090, 2515, 1786, 1743, 1962, 2091, 2516,
             1787, 1744, 1969, 2331, 2474, 2092, 2309, 2310, 2161, 2202, 1788,
             1970}], 
           Line3DBox[{1745, 2311, 2312, 2162, 2203, 1789, 2093, 2388, 2404, 
            1790, 1746, 2383, 2405, 2094, 1791, 1747, 2384, 2406, 2095, 1792, 
            2163, 2385, 2407, 2096, 1793, 2164, 2386, 2408, 2097, 2204, 1794, 
            2165, 2387, 2409, 2098, 2205, 1795, 2166, 2305, 2306, 2099, 2517, 
            1796, 2167, 2307, 2308, 2100, 2518, 1797, 2168, 1966, 2101, 2519, 
            1798, 2169, 1967, 2102, 2520, 1799, 1748, 1968, 2103, 2521, 1800, 
            1749, 1971, 2410, 1801, 2104, 2313, 2314, 2170, 2206, 1802, 
            1972}]}}},
        VertexNormals->CompressedData["
1:eJx0nHlcjV33/1PRQKFUKiWJSERlSNglVFISmZLmmSIapUGilFQ00iCkiSaa
nd08T5rneR5NaVD6nbX73p6/fs8/9+tZr31/9me9z7rWXvt0nXuLroWaAS0N
DU0PEw0NHfWfISobRCemZfFdn8S75dkTXxKeXU1YWppCXL+r+h/d68ZMWYfW
0NB4Uf4mavqn3hxDcdw6A5IGgzi10oOOxtmPUh7Xfe9m2yC6/zj4c/HxURzr
+JqWxtmfgqSadYQUe5G3opSdx8g4vh7suIKGJojiyMXtl3qzDeWuiZlwjZ3E
EXmlVBfBlI235rSEFGuRS+mTvfNxU3jYK5WGxjmE8kilSUVIMQ8dX1yi/m8K
D8E/nEIo36lqNDQylMHe9j2w3rpFhcTz1uvcp67HTvHPxkD/Zjw79V8Iohw4
wWpO1cf0HquswA/fHdq/S0uBFIl3FW+ofnCn1O0E8M/1O2BxycmfYkKfaEr1
j62C/rRDvgaiIQtLTn4ULczzkJovztou2wh85m45/Vxa8qSIR2wKo/LBbkG1
rTmrZXFwnsE4m9T4l55pjTTw/a6q28AoTgZHrND4w49FcOL/cc5/vkbZJKgT
P1thKxjmWYIz1fcSzpyTh1eyl/bj3yLi17rja3Da1EkH4Dyz8GeTq9Ywth3V
t0x5WocjGi4Szi+SFhbsGkZxbkbZ5Y2PG7DdozsvgHOKbxX7HutxHMh9Z4th
QyPucnukB5zZTCeuCxpM4DQbigCPfxOWGN99BjivPH7rB1/KBD639uq62Lom
PK4rJ01fL0uJq9urCet3ll/ZDOvPzDE6A2dhhSdsoM/2zVwA9BcNPt4Azgr8
fbPgZyTJWR38bEtgfw+cLRpCOcG/9ibFm+CfS2mfGXCm0T7yl42aL/dH/4uQ
7y3xaFfgLB1Yvxf4BDvXrwY+SwtqhPPbvss/BN4izHPzmIGB7k7c/R/nr/ui
U39L4dF0Oa+R2kP4v3rWMZKg+0TNJ9OuN2q0uBF/6DpAODfwz+tOinVjb/nO
LXS/OrHkwUhSz6ka0557//Tiks4S9o5tvfjO8c+6wHmDWFJE2UA/phjFaE/M
9+Ejw7a+wLk40fPxWZFBPF3uwy6xbwDvmZ+/Bpz5RuX5jPoHsYKd4f7NfQP4
z0Gl08BZfteD04JbhnDwpF+jGN8g/ub1ZN3O8FMUfpFmXlh/tXOVJKynEddy
Ac61jw3dQH+I4roe9H8l9t0CzuzV3KHgx1T/sCb4+UV3Iwo4u3Ksdgf/34KY
14H/6k8OpJ6F1+6+BvlyMHRsgHwXL7aSeo7Nr5hIofK5pnHDD/ioqy3X87o7
jLTibw/hnz8Eb8k+O4j/q2d/qTVdzKm7sfUhdZGzV2X+1fOni1nNG06UYyc/
415fuk68c5sW4aziNJTH8KgWi93Ua/2l14/PLVwmnIfzRHvc0hvwKqE1/d+G
h/DQoA7hPKZavmlqpAk//HCYe0ptFAfX3vUGznkmFeGnNVvwPs38hbSxMay0
deN14GzJq8NxTLwVn5P4UbWlcRxfkt5E6rk3YPDAF5tW/HNT/YpIwQms3lP0
XqFbllLZUMcO62P6jlTC+qLfPKSe3To/hIJ+yVbzedBv0lCwAM40V9q5wE+e
WQU7+JFe9ZLU8/2YXR3Ef+abLvBPW6VuApx5P4ZnQb7v87VqId+HLbOknler
1+YAn9JozhLgU5HESjjrByLtWHFR7Jm/XkCCGeHe/+P8vUA1mLt0jqLyzvWn
0nfZf/WsHfr9eHNMIN4Zx3VA3qYbY55Uwrnec1zekT0C9zhGMFhoDeItZayk
bzzL2vq3qSUSN6y+lEt7ZBR/+vqLcI7/cZRtQ+5bzDuZ7c3RO4737t1A+nPZ
hVlGLbooLB7bcepVJLVPLyxqA+fMSBZ/sewoPJW+V7TmzRQWsJdZ5vzulaDz
bBROdm1Ty5mZwrvWOZlcY5Ch5N1rfg7rfe49EIH1ZlFd9oSzuTUD6O8IKzgB
+peObiCc0XqpteAn5oLHE/CT1FtN+rOGz9d58E/Xl5YN/vemBRPOyT/6ZSFf
P5UjS+bUfLOSFUk9DydfEAM+heO3dwAftZSxUOBcdp45dsh2lqLofXZJg0EW
d/0fZ9EtZV8MMoWRCbo9PvRT5h/niItBlQ5FhWiqVljrHl8XnmY2JJw19dhE
jwRUokehl6/abx3A+UEGpJ7jnYNaSy9/RX0+RmxupcPYUnijHnC+3B4TvY27
Dilp6Q+KnR7DSZtSnwHn2bDqQxmy9Sgxr1R39vs4fpA1pAGcc0ZGy8rG6tE2
+jfzf/oncHFIngJwpvDknFDa2oDOt0xnnpacxLTf2Iq8KdT+LGdYCuvV4mxm
YT2qv+MOnItvhh0AfZqO91qgH9MoYgmc+Y92vgU/B1bMdoOfKrpvpJ6HzA80
gf/Dq/xYwL8Fzx3SN0wUDgtAvjuUe89BvtHqewhn2xNOmcBnkNIhB3z+9HOQ
en7OEk7P4LYdZa7Q/tzFKfOvbwRsjx5WiTyIvnL0KguySP/jfFTUwF4nsQH5
yBTV769rxq7rrQjnXwYM8eK2HUjEpSHItaMbe35vI5w1sKvLbvkexPYnoiyr
qA/bT2wg52CizF+evJV9qFfleXVv4QCOMPYi/fkQw6LPjt39KKVP5cMS1xA2
e/ZYHzhvDn3q8LSxH7n/rKvubRnCz2W8lIGz4+K+iAaWAfR917z0Tu5hnL6B
09zp+SnKbdeT92A9s8m1KlhPz+ruCpw/pbkT/b680njQR7d2mpD+/CKFC/wc
KasqBz/rot6S/qz629oB/PedaCkA/62VPDeAc1xa5GvIN7+q1w/yHWALJn0j
gOWTEfDZekwHAx9b5b+knh/o6MuJmB9AfQ4nn1vES/3j3Gabr1ZCI4OKTGgM
61X2/uMcdCvjiYxWB6q+arDeebISX6MxWZ43pp5wnv9F9blwxP6tej0WOuJC
OE98VXdiNhxCnbTjDDuam3CKbAzhfKI97trXvBE0PSlheFemFd97r+cPnNXK
n8i3q42hkpVO6vzNbVjz43dN4Dzx6l7O8UPjyFPQOKgvtx2PCt4mc92Pki2C
Aq7jaBfXuo17WDuw1hBbvXqfLCVFN5kC603FAwJg/W6Jv27AeUVDzEnQrxp4
cR702TAnmTccYoKvgJ+uXDY98FPFOk76hkighB34X98ZtwL8++zxIvPGhV3W
rJDvhmoaS8jXVFif1LPUmV23gc+ZF1dnnKh8ejczkHrOCtn5W077GDLfbjhl
/GvPv3lDJPJGpGmfLPqb1ih7L4/pH2cjqYDzT0y7UUesOUfhm/f4tqUL4Sxu
3HJNQGUQyXt+GNNcm4hDV28knB/WxFxMEx5Fqy/Iia1oSMYN3WKEc/0TtoAv
5eNo2vqHSk7WJ7ygZUf6Mz2HqvrIk0m0gfOEbvriZxy54SU5B923nTl+0XMK
fQjWCLiSmooDWpzJvHGomt5+ZdcUimIbfh7yIxXnHRT5YcQnQ2nijpCB9U2G
wv6wfuN2Bjvg/GjVofOgr8yfpw36dYGfCedg83Zf8ENzYFQJ/AhaK78Fzsk6
bqrgv0O4SQT8Fx1dTfrGuer15yHfrLHIfsg3ZS6VcHayYTwJfE7a29EAn+OG
ioQz/7uyKLF5GSQkGBQabsn4r57DxNcuxkrIIimuJ023YoTQf/OGsYVexQO/
LsRbwvRsy+88tO+VDOEs+Fyo4I/lACp+a/3ZOr8USTeVE85Diqq+ePsIEnA8
86ljfxUymlMgnHWSHjHXJ46hoiQDjauva1BgYAXhXNfZebvx+gTq4HxWGvLm
K5oL6yZzna08DcsN9UnEo2x0IvlgLTo4/O08cM7kOso18G4SzRayflhlXIte
6cvo/AyXpVhK6K6G9Uxh5nKw/qoe5QFwZvlWYQH6z+tUS0C/WF3bDDif33F6
FfhRvNp6GfzY8d15B5wj1oV5gP+Dsyxx4B+frSN9Y8A5LgvyjTmlGAf5djRa
E84uz/QTgY+Rt5Qj8OH9w0g4+xwYsdA7L4P87h+3X/NqK/qvntMKe+JechxB
lOr2pYcGB9B/9azHzbB3rLAFnT3CmhfztB7lhVgQzp8H7/YbPuhBV8Ir8/dO
tKH1XgJk3pBxmhjd4N6Pij/1efhrdaO6+xGE81FW+yu5IYPoYq+rZMmqXvTo
89Bz4PzbckVH8dwQcvz+bnsafx96y/+DcF7rGuTPlj+MTGv53I7iPiSEGJRI
Pf81jsynH0G6KyJjIn72oQqnldvFHU5RRleuegHrWVvaXWF9d1cu4XxxZUor
6GdwVQuBfvPabDI/G341vAh+VDjWiYMfniP3ST0zebcOgP+ohiY38G/24Aep
ZwHKu07I92CCRybke1vOmPTnjvYUbuAz5CCTCHzurqAnnGX0niXfen8YMb3v
+fhAdj/6r57TP5bRSGfuQ3eMSrJoj6F/nGlv25pQTtSgy14fwsri2pH4gh3h
TP/qmG4hTyNqCjj12ci+D31Qlyf1vG1F+1ansRb0s0lwhL1pEH3OZCdzXdmv
mtFbHu2o6fntKLNtI8jIeJMPcGau4eAOPNGJGl1MLo3GjaLnv8VJf+7b2/P6
8/EuFM9/T7zJcwz5MHepA+d3z+1F3/p3odDL4zvH6sdQvqMbj0iHLMVW410E
rBeo0d8H6/VrHtgC597wQk7Q9/mopQ76SdljpG9Yv9g7CH7kJzQjwc/rji7S
n58eMOAH/xtl1frB/x86BsJZqm3xMuQbpLj5A+R7Pm+5nh2u6moAn7izrW7A
Z8SehXCuCjhNy123F9Havf8cF3X0H+ejNX9++Ciyo/K7X7RVK2T/cRbe+3fN
wZQkNGIuXXlRvRut/aRNOPOdX7fu85p0RMsqVXVu3yBaS7eC1PP47foRbYls
NPn55dDUylGU8iGPcA60f7vl1BqMbnQqbXgaNY4Yu1hJPc8xVprut8lBI/0s
qjZ6kwhxUgjnF2ue9VmuyEX6efzrg3Wn0CazP2R+dpQ9Le2zJxfJn9q2v/3z
FBKbvvFKV1+Gopz5vhfWdzfeWQvrPSLC7pF5Q4XXBPTPmk2cAf357mEy18WZ
cvOBn4+veNaBn27LAVLP1XOV/eBf6/lsL/i/K3SPzM+x72kYIF91p/ZCyHfW
7uQy5yPHFg9Q+QRUJVOAz6HvewnnYzEi1zeqsKEw/oGXx/tl/vWNHS/KRuqf
bsGrK2wznpn+j/Mrod1ZS7w5eE2nPpKb6UKGt64SzpZn1XuM+wpx2mEPBfO0
ATQh6Enq2ZOF2eRFbCkeEzRzp7UZQbYZTwjnwXmhM7OyFfiwssyDfUzj6NjG
1aQ/s3u/Dy6ZrcSPaY5t8cmeQD7r+8n3G0kJfxJNf1Xhoj/nIw6lTiI9HnYy
b9SE33nscaoaX+ERsUlmmEK7YmseszjKUKwCTifA+myFqDBY3+qy2hE4f6lz
DwJ95UdbBED/HMsL0p9LpUflwc8rFlZH8DPIc5pw3uaipA/+m/hTXcG/sL4r
4fzhZlkz5Dv2YK0M5Ntjw0s4b+9cigc+ZxXltgKf0p71hDPXhezy6WgBbKC8
zsbhscy/ehb3Wb9djG8/LrfLNQxZe/TfOZjJ6HntinYdNow5Mn0xrhV1fjQi
nH1Zq9eXnm/Fu4Ucjsvx9yL6AE9Sz1Pl1SLcXZ34qWYmaj42gNrEErSBs0Zz
0lbXv934kkCr86zeEFL30iD37tOb4qVNV/XiGRX3BInqYaTF0apL5ucseSUc
2ot1kmcOOYaPoEyFr2eBs+7T3bcEq3vx7NXzDLZ9I2j33Rxp5SunKHlliqdh
/fzukIOw3nTGn3Du/mh5GPSfjTR/AP3PW+pIf/5+BwmAn55QXgfwoy/NQe4p
/ANKguD/r2inFPjXOMVJ5jrDEm4myPf83P0jkK/ry0rSn8t0zysBn69rnnQA
n+giScJZTOX05wEmSezMrvI75YX0P85m09ueflJrwhqUZwk2dMnY8qWBYFvq
BLKvy/Txt+jDoxs27ChaScF677Yw+QmNIJatu/meRMpihwQaveCjvP/mwBGm
uI8O5X3YruwGPY2zD4XlawojrJcsj7iwY/0wXmB7LuETkIc19NgnFfz6UXNv
/7zmy36s3Lp9S4FnK+5XuE/iXTrb1nzdP4aDVKNvM9MX4kTbG/FLS12o+54A
z6UzQ9iveaexCl0nXhIVi4X43uYHR2YuT2DMauD8OrYI9xtFO95sa0TWyt06
dQIj+Irm/pXGYtT7RZa3HcQ5bd5fCEycxLcuufgwfCrGp0qN3FJvliN6p8bT
a+RHsYW2zL3R8W58ZXazF8QHL0v97r04hYtPiybaSJbgS1LpR4UUk1HGcyk9
i4ZRPLXPuThCoQefXrXyCMT5TkRNw/rEpMwEWF+bzelEjeNm/yRdWL83ZAdZ
z9P68gHEV65nPg9+UliOPwM/he761POiHNtL9SmCH5Twxh78yKzKjoB4ooGM
NOS7mv6GE+Sru/u6GzUvzHq6XQvyfbs0TAf52p7gfgRxpTVxDMCz87u4OfAM
azyUTeWGi63+cALP2apN+sAz74RQGsRPlngpweelJeAjCp9XfzzXHPVzwW80
R37B5zUydZsbPi/l8ZnfEGcZZ3wMdSJzmocb6mRX1tA66ueOFafyDKCuIrYI
+UJdnftuIkKtKxwct+nnQk4TPlN0dmppyZVy5rAViTOW3lwRmi2D44Y18s1b
uf/dO7p85uqUZuvwlf0vbiRnlOK2hSukPl15b9w89rYbv3tp/In9VgM+qu9J
6s1a+If/jPgxbJfCION5R+Jffaov0cmdut6OM+gEQl4t9uF2fe4pqLeEt1dH
rjN1Yw2v4XN/ggcxvY9wDNRV1WGl8EalHqx5eMVmK+1hzKXz6D7UT9fYq7sa
nL34z46OiJ77IzhYbb0j1ElOlORdTdte7C55OpGWcRTbN28WhXoQk/18B+IL
7wMSIC7EL+4Fn/tjlWFL0OGrtgoDnZcGVSnw+TLpdYfBvq/fmfLDvlu3nXGB
z/F4udQg+NzT5qQMPjmTerLg83oYfvAI5OUXrO4PeRmKcZPP5f7TXj3gI6Sz
ORr4dDTbrYfPxbwgMwl4yudaywBPCpMj4f99ZY7K4ZgjeNw2SmPKSvzffSTS
YrKr5H45PiHZ0WiqVYdzXl0m/DcPZa/8OtyIRzetPt0s1I1tDrwg/BmT3Cu0
SiVxSmyFVbHS0X/82yKZb1n0FeHCfPOWFw1D+KSOAXner/6OVk7sLsWLPedS
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
rQWd3W0bB/wDmQqTL9mPIuWFHsru7Db0xseN9P/aL+sPXE8cQ22Lyv7jNB1I
w1KBzD9rNWaFjU6NoydjCWIcYR1IpvnoHuB/fLcAifPaV+6BuFd1Fqn/G9wK
kqDTEWb+HHS8atnfAX92W1eyb5VyKNn3UgYj6f+OK3yjweeLzutW4NPzXiI5
f8Xtl9ZAXn5rtr+DvCYYTxD+f2YvCwOflMb6F8DHpXSe9J9U0Z584Ok/1nAJ
eH4PsCf8Ny668j6alkGmequzzB1Xo//6v9y7n7G9zA0oz5Yt+T1zEbqYr0/4
X9x4yWy9Rw/i9S/x3X+9FumUNBL+tu/ue+2vRSg/7tmUY+zef9/PlNutuu7W
2IWMEk2/u77pRfRTg4T/xHG+C05LPajFf+exBLYBNPonk8yfTkvWI0YmfWji
IyXvRuYg8lilagP8C1rzupLO9CP9RwoUz4IhdFaq0Qf4d9o8CkvM7Ec/96kZ
qJ8cRr5uPIeA/7fff0IhfpghUR/i65l2+QN/LRE6okPPafwFdNga2wh/pVMV
Q7DvNEt5Dux7oCubzD/n1l4/Bz6Zjv04DD5tKnXSgT9mOXwJ8gqvtJiAvN47
bSX8Vzo80AU+Km/c3YGPR3cC6T+e13Y9Bp45soFewPPOVRvCP2m9u5KaxDG0
99udFKNIsX/fD8j5Mn/za61Crope8/TrahFLiCHhz/V5bmpragsKP78iIImn
EzXuDST8f1/0bDp84SDKFtoW9EJV+h9/Ad9HluGXqpH/hj6dz1JDSHx7Men/
jyozafLTviLv2be5h4+PosKpvaT+j7rYbWLaVIds7WYbj6mNo8Nf1En990aX
7ij9U4eCXcJLW0Opc1jqKwfgv4nlutN643pUcu5vpvqxSVQipqEE/Dst/zpC
/PPrWyQ+IfmK3L+KDAWFQUf5oGgx6FQ55scBf9PBy2RfVuESsi+ro7Yz8JdM
alnMo/rk9ND+Aj5Zq8rI+SvqoGIMeSk5qV6FvCR/niHnb2eiQw/wSYpgdgM+
uue1SP1/VD2QDTxbMyTbgee7jdqEv2vQxn3rhA4gqXTf+5bjUv/4C5heOxSs
RUEcMSoeoy6N6M6W5fpnlJjcHXO2FF08KTEemNuLruxxJfyv9+9eg2a2o4+P
VPLi6P/3/eS6SN0S48V3+IVG2DlOu2E0ExBB5p+sG1kM4e3ReCbfuOFc3Bi6
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
v54idY9hbQkd7799OEwzh+OaCA0V3NpC8urDJ1z3w/zk9BMj8zM9ewf5LpGW
e3zOE6W4Ltdp413GPGC+8C8PjC51PhegX4Otrntj/qZ2FHnzX70rYylPgJJk
BS66I70xzrUZGcqdJ39HaP8Z7KF2SBFfmGCaF7L8/7+v5V8vqgd6/EWFE0DP
bMpysk7pTvw3wT+y9RMXwD/Mj//VG5n6LQ+DP0tvTCowMd0qsmT6tw/4l3kc
o89pYskO/exXP9n/987aT4Pjt5ymEo7tvHrTe1rjf+9TVofw1jsxvsvfS/mz
P+O7znL/O6/563Skg7704qM2AZqX1lHR5TuldEYcUbRa/x7wW5OQMhf4zXTU
iNSxJx+9In4uemrvDX4OotqPwzmrTfOTgbgkZmgKQVyeYesymIe8qZU3IY6X
gzSVIY6in2vyYF7lCgX1wfwpkHryAuZPmZXNKNgVm7bYBDznM+gawBMX+mUO
5lUQm6c1+Pm1wCcW8LNn12kyTzylc3pg/ljLdR2A+fN1zQni/0W/7rfXWPrx
lMCtE3eqHxQFRV+JbF1PQ8zK5Q9kvfpw4y8K/eHeSrxfnPeVlDgNlZaOLh1d
MYp7p104NJkfFz3KOC1mtm0EPfZ8ayQ+TcVtlhWWF8XDiqqay5dW7e1HF46t
1B+7O4FLfh/q3nn4WZHTUaPZFXHtyEHqks5biSl8cWAkT6givGhCVGOt18Ma
FOpaTc8encLFU0eOaHhHFN3yvKgmlZ6B+P0fZz6JmsAvLdpehX5sw9S1Xs8Z
cjybuVEnfZiOg0JWb+mRa8NFK6r2MfTg2qTkudPnafiD/URcyZ8WvFgl/Ydh
F6uHze8DzoBZQTPgzHv0ipvBiTnzDp1xYh3H16ZPsi5Z3YwvVFxMZUb9OFa8
8+8I43uV3lWzwvfe24SlGd+LN3anvjt4fhgfG8kXd5JtwK5zTsXCsiOYfTDL
Bfy269aWNvCb20PFNIbf8L6KX1FKd9ux77KFzFtX2jBiXUX86WjFfTyUexSf
TBqWPMc5gq+mZAXDd6ls+KYs7T2CX5879EH9zjBe2WavCd91T0KncsF0GC9L
NKNynx/CQa87f8F3OdTvKox1G8QJTVkVr2MHcPOz1++B/81C7nBuMgVvLJVY
mTjQh/uE5glnSIrCXeAZDVkfBzxTcysJp0/jFp/Y1dU4y9wsdnKkF9vIKRHO
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
BzPndddRrPOFpXWSnoIu0d44blnaie5VrVNgsx7HmoMRidMTLcQUox5hm7oR
5r1b/ylhApsk71c3dqlCdmtWNjMmdqPx95SzAXKT2OBJ9qoj54n9HMNJ0h97
bCLpYxuOmxF0vPvdRTfg0xvIVQt85C/HPST44FGFyWMwL6OcjTzMGzZQ94GY
F1tncE2BnCu/9FhBTiseKQohJxayGbMFvZqamN6DXjPxvKWEXthO5k79Vq4B
5Deh8jc1qQe/qFPNUAgYRDYPFyJGg4ZQxvpUnqjzffhSpcy6n2soKDi82Etc
fQRl9uxWEPvcj2MdxeXX9LegjnJ1zzSDUUQXQ8Pc8GIAT6/Eb9ezqUJXJvMs
2QdGkaGzgDTfnwH8N0PddY9GCrJdK03Sj1jlSQFdIf5KDUHHzkYj7sDn+7e+
LcDnGZe+DMEHt8wlP4V5M8Id5GBe54ntZ4h5sa55bwjI6XHWkgvkDGLWZCTk
xJvmh6pAr5OmRvOgV9k1jAm98OcfOcIlpb3onMUK+8zpAvxJbCv5nfoQ5y8F
8XcjyMZ3dB1rfgXW3deaDnZ47+f9/XvWOAoaiGcM4K3BSSlb14MdzERa+EOb
J1F1UGmViVkt7srWVgQ7GP0ueLpRYBp9kzWm22Beh7Mv2bGDHXKcad73VE2j
VXedtRQJvF1639gF7MDSfSQG6MVlLCSdcfvFXrBDXiSXJ/AZNfq+DvhIXXVV
BTtUnXXbDfOeXtaphHnjOO6dAjtoJuh+AzlHbLUZQM5F6eZNYAdLvoNSoNdn
etk/LIRe9uqJ+WCHzd5iTGAHxR9r6cEOT0xiyO/Rd1oWXc0UKWg1XevQruUU
tDD3oxfqIloMGbeOS44i+RoTY26lHGSjJJsL5+Jxmnb6/WsTaDS/VDpvCSOB
g21tcC68O8UaLZ5PIV53mvADsgXoOMelBDgX5xXv836anEbuu7Wv3NlYiM4O
BmrBuaidk2XXfjWDLtx9atB1uxA5fqtkgHNhKBSyFegWnbwkPU3DVBvOxbpZ
QW7gk6TJchn4qBTVk+cir/AgOa+qwipyXgYNc5iXwMNLn0BOxaqbR0HO6rjU
HjgXMU5Bm0Gv5r3nLoBePuvWlsC5OPq18R7YYYbmehPYIeMi3xjUP8gpvWs7
Od6JtkmaNB/XrUeKqT/2Qx0Oi86tH8wVg4hr3vjihfp2dIOvRgr8JM0f2/1y
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
         "]], 
       GraphicsComplex3DBox[CompressedData["
1:eJyFvXk0ld/7Pi5ShkZFRUppEiUpU+VGUqKMRcYiQvNAo0hFJY1ISolSSaaS
DDnmeZ5nZ3LMUyMN+vr8XvvZZ32sz/71+ue91rXu97Xv6zr33vu597PzLLI7
auzAy8PDM4Ofh4dv7H8FDs8Ykn6wDix+VQ3MM9tIW9Sy493fvwO0D3UzhS32
VoHss7L9u9800hxPxT78cLiH5rO7m7/QpBHC51q2ay1g0iKFZ3kebuLQNH5G
6Iq3tcL3k7cq69Tbaf1hro5LdJk0zvztmZdH6cBm7hAatu+gOfx/PE20/VbG
7S6TmJCp/FhRsawTxVfS+t+++UkLYcLhkz4f3Z92ITyTtvRt/CLpMibE3Nzj
fZrVReNB/xHigcAPhHyAkD8Q9ALBHyD4Cdullrupn1SCYBt9Y1G2Gvb5zNvT
RnZSNcCbJUtX2NmAffZULbzm+74ZJMRsSmcoMLDPKiW7jE9X08FCpKTl/Qo2
9vnBSBDvaR8muCouk01X4GCfl99evmXdSxb4+66e6XSjA/t8XPKY3zp9Nqhu
/Z0sbNiJfV7/QfrNVC823Lo9+tT3Tif2mRAPBH4g5AOE/IGgFwj+kPyEyTx1
EQbrVWBw/aoBupEq9vmpgYhmd14tGO0aNHhfVYd9Tgv5HcL7tRUuBaU/6pen
Y5+lgjzzm5cyYYaVcfmaX0zsc6Nj27S+nyzoTVHoLWxnY59nJOamrlVoh/f0
u/UGKznY5xuWc5sXsNqhwFbr+AE2B/v8Vm6Lu7wkB6Q12U8XL+rAPhPigcAP
hHyAkD8Q9ALBH5KfEBj08eaOJlUoj8tQMwhTxj5vha7Xk3bVg/n8spf+m2qx
zy72dwcLfOhQ9WrKpKkqrdhnzcWaG5XsWLC18oz560QG9rk93EFc2awdJqlw
dB9eYmGfN9T6W4eEcYBHLIbuFcvGPtvuLvwVsbcDDqneCFSyacc+P3ffWvDm
SQdsL5kSyglsxz4T4oHAD4R8gJA/EPQCwR+Sn1A4qyx9p/0GsNO/mGhatx77
HNg3/Lc7pwGm2z7ueO1XjX2O/tWQ5+jFgM8vn4yu6WvCPnfbqBXNvsaGJkn1
qABbOvY5Wm2aSkYwB5p0Va3yJzGxz713mEl5Ix2wsN7ZMHEBC/tcKMo5LpLV
CT9Dt8duorGwz44K0RezJnaBZcrR2tAvLOwzIR4I/EDIBwj5A0EvEPwh+Qn+
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
HYuObpiafvPvR/63WO/Q9pz0xDN9MKPH2qGxMAbrtelqeFU9YwC89MQs/DJi
sd5g88xvqjUDQHsnF3ZeNg7rHY9TesfzUHoH0bjT0LiUXlGUpyDKk9K769JU
k5+CY89FJrWGRxtfYb3pKwQ1P/Mx4OrFurPDFmFYr4Z+ykqbOR3Qn5my+9ps
lzSqP0oQYx78870b5jfLenqdOpJG+XDJrPp1/fU+8LP+MWIcfSyN8qFDsSCT
uXgA4vd+nWsUcDyN8uHBY9N1yR0DsMvIeMm5iSfSKB/G45QP43koHzzHjUv5
EI/ynIvypHzYiHR1IV2UDwYeJsyaqQzoL5vv/lnLPo3y4ajNfp40eTrUy1hJ
99/h9oMTSvk4Ho0M+NB2jqV7jdv3Oa6VOnfzMxPehL8uX5jQiX/3Ox0Zh6p9
WfBxeryfhzK3j5P7eH25wlsW3PIb7PeQ5PZrth2SX1RMWTB32QJTXudO/Lt/
ub40tf9//t3iou+rhqZz+69Wl7f94t/o4NpsO3PRD24/VcPXWeKp1gLqe7Se
VtK5fRPovLdYlFQDZz38rifocfumGHUr87SHDLBQzWa9Pcztcw0klgs7OLBg
Xe+m0DVbuf3swksCDOG7bND2WXrw0l5u3/p35Mbc9LXtkMbI6t1Sz+2bvqdv
ydI1bgeNU9GNYqncvunn0KehvX1ssGWICY9O5fabGwYDm/b9YMHsn5UbkrO5
fZPvT2d1Q1Mm7LNcp/4ll9s3nRQSDTS42wYNB5aKFDRy+6ZrZz+dtDleB6cl
y3xtcrl90z6xw6t3DTChVazaL3Utt09cJu0bXNTAhkciPFKavWyst3XR9lVx
czhAn/TYJ3eQ2zdlXX0rJZbBgc+XLnTst+ZgvZt+Dy9/1coBHsGEmcuBg/Vm
PMtL33yEAy6nP33bGMTtm1QrHcXe2rWD+ytNC+29bKz3ys3YqM1PWNCs/ySu
xoPbN/1I2zw9gzG2PvsLfHH04vZNagbingenNQBbc4eA/hJu3/Rk21uL76vZ
wK+lbefDYGC9345cj+VT4kB88Y9PU89y+0SeZjvjxCsdMOvK5KcPD7Cx3vwd
h/0E1neC6Gg7+34+G+s9ETj6wtOwE5bQfli7vGJzzx+2pE+QrukAg9UPrx8T
ZGO9n4PezpVN4ACTx2ZQjs3tm36oDN5xq2DDgqPmhZulGVjvPH8eRZ0OBpwo
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
hhKVHRuln3D3qb2of1dG/TuFP0HzThPNOwpPQPxBiJ8a9yniz0P8eD+VMb+R
b9MC7/yNzz8w4/IPJgRorcluASFhtQUKL7n7oCDqrwdRf43j0XxXQ/Md78uI
PxbxU+N2If5JiB/P381d6x3PtMISk7v6Xi+56+2qLQ02CRWtoLjwi3+LagnG
s1D/K4X6XwofQevMNrTOULgm4pdC/PjeC+Jfifhxne+tdnl7pA3KRTdc33aB
u85LGU4/fiGlDUQfvWac5CvAeDDqT3eh/pTCRdD61oHWN/z8hviLET9+b4L4
pyJ+CnfW09iiIUWHmOyefWZrufyMgJ9yGzToMJpiUDE5lvucEIf6x/mof6Tw
SrSuNqJ1lcL3I/63iB8/1yH+H4ifwm2+3V/g5kaHpfOOy74qzcA8Mn/Wmbbd
pkM66CWGaKdj/C/q716i/o7CN6L1fBNazyncAvFLI378eyH+JMSPfy/lyTr+
SXT4+SR95fOoZO78Yq822llMh+ro/afe3EzkznfUfymj/ovCd4zbRyh89zh+
atwwxF+I+Cl879oEtn4XHZYonrwqEBKHeRy/eU/V+kYHmaGl1x50RXGfK1B/
FIT6I7y/oP1LGe1fFG6F+JchfmpcO8Q/B/FTOHv9mTAnfgYM5YlI/B0K5T5P
ChUJ+Qox4ISVgHPomgCM01H8MIqneC6i+N0onsLr0XsTTfTehHr/dXXz4MBq
+2ZY9VtZMUOJe2/wNHrv0IzeO1B4WXGSilBuK+jsKyvPUubyjKBze110bk/h
8llsj2AvOtx6XOJXuoTLI4HOvc+gc28KN3vxdL7Q7bHn0tr9DzRGuXggOjdW
RefGOH/Lg8/m+zBhiZvOFok7TRjfic5dU9C5K4Vvrf5rEe/Mgucba6JGJzRg
fDc6t9RB55YUvizpwaXs9Wxgei9zYuyuxbgFOvcLQ+d+FN58LN7ZsZsN9C2T
3zeN7VMULoLOzarRuRmF0+fcCsz1bofP0goN0h/KMW6Pzp32onMnCo+fL/FW
XogDgTw722ffKsL4QXRu04DObSj8W6qBjuApDmS4icr23c7BeCc691iKzj0o
/JNbx9P6LA6YV3uf9xlKw7gqOjcQRecGFH7/RMZKzREO7Np/JMboaTzGl3xI
bO72aQKlrXqPl9/g3nv0RPUmg+qNwv01OSnu31vA1yKnds897nu9QlRvm1G9
UbhhUYLjikV0EK9buVjWm/teTA7Vmy+qNwqX/UiTtV7HgIAf0QIvSloxborq
bQDVG4Un8XVPeKLIhFvlnmfVDnLvs11C9bYQ1RuFF9t9ZmRKssDbbuhyY0cD
xrVRvT1F9UbhTbrFkDrEAgdH251Hdbj3qRajemtD9Ubh+R/9tvhHs6H/mFAd
/w3ufaQGVG8tqN4wfvTG4FGTdnA+a+xSmFDBvV+K6m0A1RuFO3UYT7/T1g6u
YsZdgsElGI9G9XYX1Rt+v3zm2EJjYw5ssRpyWhmRh/EhVG9pqN4oXMOvRVDh
zdj/73h9aEtgBtdnVG/GqN4o3EXX9lNOFwemy3hY7OJ8wPhtVG9GqN4o/CY6
5/mFznmoOvxQoPJ94uwO+LPYc/aU1iCM54ZNjcib2gGG1/9uzxB4gXniUfwI
iqfwlaieVVE9UzwLZkhqK/GO9a082/8stuLi9uh+bwS630vhj1Cd+6E6x/N0
8pxtRi6tkHolk228l4s3onuzhejeLIWboPqfj+qfws+LSIjeNxvbX1x7GZaG
XHwE3UctRfdR8fqM5kUQmhcUvnLi4QjBAwyYMk8j5bMFF+9C9zy90D1PCk9F
8+Uemi8U7g8LrxjZMcFArdV+ZIi7Pvej+5P+6P4khZejeeSD5hHWZWSltXUb
C7Y7lW554MTFB9C9xDfoXiKFt6L55YTmF4Vr0Uzl6XPYYELf4fEpg7uer0X3
/Tjovh+FF6N5N4jmHYUvXOp7TbacDabnDCw9eLj4VHSPLgbdo6PwFjQfXdB8
pHD9g1PumRxrB07LofRpK7h4A7qfdhbdT8Pr/Lh5SuFBYHjryY92aEiNHT52
uhjj2eje10V07wvXz7j5S+ETLcICjjpwQHeZMj3dPRfjT9B9qnR0n4rCtdG8
3onmNYXLJYvrb03iwPuWpZt/OadjfBa6p9SB7ilR+FE034XRfKfwW1VGrtmf
x9a/e7WN5t7vMb4H3f95g+7/UHghmteb0bymcBurpQ7PZ3aAvPKDn42aoRjP
RN8tWj7uO1CW6LtIKeO+6/QLfUcpYdx3nQbRd5d44X9/10kSfaeJp+p/f9fp
MPquE0/r//6uEyEeCPxAyAcI+YMi+n5TIfp+00H0d25t0feeVqLvPcWgf7dl
hngSEc8X5MPIuO9JHUM+DKA8J6A8R5AP85Guv+h7VXzh/38+5KSO96EB+fAZ
8U9E/CzkwyjK5yPKxwL5YI3yT0P5dyEfnJBeRaT3Bfr3ZUbIny7kzz70934D
GuUn/0+dqPXpbf+fOpmP/s7DZhTfOO57YQQcZqO/18oT9L//7qsm+vuuouP+
7isBJ/GAHMLnIpyG+DcgnmmIZyriIeA0Qp2Q+IEwj+BP2H/xXejv0xageIKf
NEI8zR79XvLjvr+2FeUvjvLnQ/kT6hYIPECofyDww1b079oEx/27NkL90Aj1
RlNA+07XuH1HF91Ln0O4P2837v68HLr3/nvc/fm76J684rj78+Nx6r3beB7q
vVszGnffuPvzOihP0XH351chXe3j7s/3oHP78nH35z8jvG7cef7/A4m+f/I=

        "], {{
          {RGBColor[1, 0, 0], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmwn4V8P3x+8y30ghSyL8VLYsSamkhYSIskQhitKiIikKUVmikD0polCW
hLJkpxIiu0KJpMiWhJDi/345b8/zf55Oc77zmXvv3Jk57/M+Z+bW7n5eh/5F
lmUNKrKsVLmP/tg9z7Ll0iurYpLkLOmVVE6UnCl9E5V3S7pJ30zlZEkP6Zuq
vEfSXXoVlfdKekofrnu2kZS670bVHZOy7ADpz0gaSQrJFqqfIjlX7Sfo9zsl
l+iabSRr9HsuOaKI3y+VrJF+jdq3kl5d5SOSC6Rvq3KaZJD0rVQ+KBkg/S7d
b6JkhK7bUnVTJf1V/4/KE1TfWPevJv0ByXmqf0l/N5FUkmyna9aqrJCMlN5W
son0o4roy3WSrXXdQ5LzpW+v8rEyfpuqdvtJ1kl/WO0bSL6Svr9KPTbbRjJf
+hll/P2W9DOlazqyH1T+LPla+tuq7ya9kvT3pZ8lfVPpH0vvJb2K9F9U1tNN
9tLzblB5o+Rk/f6upLt+20RtWhQxZsdJvlK7b1V+I/mAsVWbGtIPKKJfdSRv
Su9Txt8LpPeVvq30d6T3k15d+m26T13Jd9JPU30jyffSP1LZX222l75I+nnS
d5D+ifQB0mtKv0l9vFlyuurek5yj+u1U/6H0HtIrM0YqH5YMlJ5U3inpKn1v
tTlUz60lmSp9F5VfqH6K9M9VvitpKP2wPMb8dF23qozfmIuVWaz5h6QvV5vd
JN2lH8S9JT0ZZ9af9MH6rbXt4nXeTxdiNz/qv0vKuOZUlSslSxgHld9Ilkq/
g7Ur+VH62Dz6w/hcrLKNx22IysPzmOvOzLnkM+mXsM4kP0jvWkQb9L/z6PMK
6Xv4us0lZxZxz9XSG0s/0s+q0P3ukpzBtaofK/1E6Ruk34oNSF8nfYz0NtJ/
k3699COk/yr9OumHS/9d+g3Sj5T+s/RR0g+V/oies79kPf1Q/Q/S/5T+peZ2
UQq7/VNtD5FeX7/drnKcBPC5mDmS/KM2G1XepnYdpK+VPlp6a+mDWLeSv7KY
tHGSjlL/Ut0t0o/HlqXfLv0kxlz3Hi+5QHW/SK5V/WGqn6lnN5T8zbW8n9o0
0N+HFGETrKv10m8u4+9c5R2STtKrqX41GCZ9ofSeqt+MNSn9a8/vBJV7e/xZ
06yjHSVHsu4kL0v/TvVDpDeRvtx2sZf0b6UPlt6YV5ReFLE2TlV5ShFz/Jnt
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
rf4fQV9rhA==
              "]], Polygon3DBox[CompressedData["
1:eJw1mnngV2MWxt9770she5ZhFo2xZE+RyT5lG0vWKYRUyJqdYZBl7GKykzX7
kiVbMSpLCWVLhTb7UihFKJnPx3nnj9PvnPvee7/3vvcsz3lObXr12/u4OqW0
Fv9k/p7CPw8jD2FvgvyAPh85qErpNNZ3blK6B/tW1kZiN4ultByyAseOxn6N
9cHoV7P+OHZirUJ6cP2pmO+yfjfrN7I+Cvtn9AXIAawfhT2H9d9hn4b9GfY7
6BOQwZw/GnsU63dgX4E9GHs+9u+xz+b8edi/YP8J+wLshJyD/hzyFOdvi/wb
/WWPoe+M/BN9KPIo+ubIXK5fDfsMrp3FLdbDvh37ctauxv4ee3Xsf7E+G/ss
9GHIE6xvhZzpbyGPo/8V2Zfz78O+E30i55+P/gIyHHsHZB7rG2PfzP2+Zf3b
sh8rsLYI+2nWb8O+CPsa7C+xH8S+B3s69g/Ym2HfwfVzsTN7vRgykmPHYK/B
+q3oF3L+Bdin+a7IEOz2yALW/4h9HtcvZP1c9BHIM6z9DfmJ9T9g92f9R9b3
xn4A+27W3sCejn0v9m3Yb2L3QT8M2Yrz78XehvW7sG9g/THs/thz0Tujd0Au
wJ6PvRP6Fsg/sWdhd0Rf1/3C/gF7xxTHzsWeh90FfTPkHOzvfFb09sh52N+7
t+ibI2djz8HeHn1TZEme5QRkGs+3OrJ4ed630FdEzuT8b/x2nNuLvw/pT8j5
2CcjZ6B/XceztkVa6vfIJK5dBTmL9dmsb8daO7+fvpTDF4Yiw/WdHL7yJHIq
539Zx16sZfxhf1HHu/wFqTl3f32Wey9lDLL+VR3vvrbPhP15He+2JvIE556e
w5cfQ05g/RP+rsdaD/6ejj2zjr1ZBzke++M63mU1pB/2R3Xs/e+QY7Fn1PFb
qyAP6i/IeegnIcegT6/j2VdGjsaeVsezr4Qch/1hHb+1KvKA/oSci34ichT6
1DqevTVyJPYU7D+jr4g8xrucmsNXH3Ff0bdHNmEvdmf9EM5/tY5zzV99sCfU
8VtLIJ04uCWyEedvg31V8eeNsffHvqn4fzvsvn5z7DfreJcWyGHYE+vYiyWR
17HX9J6cPxT7/pKfRtcR4zui74RsynoP1g/l/PF17MXiSG/st+vYy5bIEM49
OUeufRg5nPXJdXyLpZB/Y/9orkLvy9/dOHd3pEMV+XYI62tgb4Z9IfYj2H9G
LkP/F/I4+lrIAGMFOQL9fe6zOno3/l7GtePNSeh7IY/6fsjl5jbk13L/C7l/
Rp7BboPdEf1a8wH6Pvob9hnYDzeRc8w1/blf9+K/W7B+CccuYu1njndNESMn
YX9WR6z4za8wFpGXzJ3IC76P8cP1d7E+2tyeI3f/FzkY/RCkE+s3sD6S89tb
I9AH+n2sD0h/9BOQe6wvTbzbccj7XLuk9auJ9Q+wl8JesQn/nILdCrt1E/7e
t9Sndfi9P5ij0Nsi62Ivjz0ZvaU1kfP6YT9f8mlnnvUg7Os4vgTSG31f5Br0
Fsih7qXvj56Q/VLkvMvRf63jXHPaJdgL/VYpct6l2L/Uca059TLsRdj7pMiR
12K3RHqlOHZiqW9ted4NsN9DX4LnXZ7jx2M/W+rldtxjD+wbOd4KOdxcw7G6
1Jf+OerDRfx9BXkefVfkmVIPt7becs2oUu92rKMezeRe3+qT/L6448JSvzfE
/rs+W+rr+thbYm+Uoz6uh70G9iT0Fvz+sk18v+v5uyTSJ8WeDUCvkH+kqClP
lnrcSTyDPRF9ca5fhnOOxb6Bv0shh6W4pif663XkIk5LHbDv5JqBxjf2ldg1
0k3/4dhU1pbmxJWaqA9D+bs2cmUKn7sYfQHn7ZmiBv0XexNrcopzji/1aDve
72Xsr3wecxz2DOyHcuCxdvVvbpGeEy8gt6SI6cfQ/4JcgX42cp/710Ss+z3v
9Xs3saY/TvR8vw/3f8F8UfBAB+6/gvm41LNtWH8Ke4bfCntb7LfMsSXeXsNe
Fnme9XbIbeZW9ysHHtmAtY2xn2BtnSbWzPmLWFuG/VqZY6dg/4e/GTk4RU54
PAce68jztHG/0M/Ogd2eRgZy7mLIISn29EWxSw4s9SxyN2urNpH7/L7iJzGc
2E0M9BR62yZygzV9BPqmyO0+i/6PvhEyKMWeXo2+ONIzRcwNR98QuTlFjhxr
bszh+yOs6ayt28S9rJHD0DdAbkqRky9x75CRxhfyNmtbIo+YK/S5HPXlcvZv
OeR91na3xvls5hf0XZFXvDfyFnoX5DlzL/Imeucmzn0IeQP9b8hw9AfNb+h7
IK+luOZl9C2aWPOdR6P/tYlr9bEp6F2NCb+F+QJ9N2RsintOQv87Mgb9mRT4
YWKpX22Lf65W/HFAibeqxI855SX0jsgDKfbU/sAeY2QKzPgO+o5N7I17NAF9
J2QE+qMp9m+HJp5tiLZ7l6N2vIyMYa1TE3tjzL1S9ttz9dmx6FuV/dcHjirx
b70Ww4hHXi35YE1kNvasJnqTtavAG+/UgQ3ECOKdCQUviKHET28XPCIGsv6/
VQc28Zj46c2CB8RY4qfxBX+IqcxvqeQzc5R45N06sIF7/A32101g2T8iU9H3
RMYVfxqPvn0TvuIev4q+dRN7Z40Ub0zifq1SYIJx2Ns18S3v13/Yy0tzYIMX
6+jvxPRieXOi+N+ewF7AnnAa+l6+Q4pvJL6cXPCGGNR690upT9Yk66H1zdxt
Djd/zy94Rx+xHv5Q+gP3wHr4fekHvMb6N7f0A95T/D+z9A+eYz2cV/oBa6j9
x5cFP3uN/cRXBQ//v77aT3ROUVPtP2YVvO8zmM/nlH7DfGC9E+OL7e0Brffm
LHOVPZT1VMwv1n+q4P3pBU/7DOLPpZHuVfRg4tMG2beKnks8uTzSTbxZRb9k
/2F/4h6Jp+w3rC3mQ/uHaQWP21PYH0wteNyewv5hRsHjvrN4XKxzUslX4iWx
kNjHfG09ERuIjfqnyK/WTmuvGMp+QGxk7TOfij/Nv66ZH8WT4i3rj/lUvDel
4H17Fvsra6e1QMwoXllU8E7vFHjNWm/t8h7m44UF74iZ7Mc+Lv2Ne2L/+FHp
Z/xm9jsfln5Gn7Aeis2sjeYk+0f7LffKb27/Jh712dxT+0f7K/fOb279WVDw
V88U9evnUt+tSfYPb9SB7Y1p8cRrdWB/c8pHxrIxlyKHTyrxNqzYk0u8mlvN
seZb87f53Brwccm/6u8hnzaRz83PH6SoF+Z/c7s53nwuXjD3mQMnlPg3fkem
qAddSv70HlNKPjV3mEOmlvxrLBvT5k/r/e0pcuZB+GaPHL2AGP1A9ANyYHEx
v/nV+mquMeeYj8U/5l5z8IdN1I/f9iJF/jC/+2xvlP2y3rkXk5FPmqiHvtv7
KfKZeF9s5jt91kS98tmnpMhnmzeR+9xj8ZP9kNjLPbFfEA+ID7zHi03Ua2uR
14gPrOfiBd9BfCDespZZH63v9lv6uteID+yf9HXrqXhD/kDf9jfEB/bPxor3
PJS96pmDK7GHER+KH8VL7pH12/psPdYHrNfiE3/bY+LpMfjXp/pGCjxgvXNv
/abiM/GXeMRv9nkT9cFvOTUFXrDe6xv6zBdN5G/3flqK+mt99Nv95gNN1Gvx
gj56JM/eN0cvLKbsjd4rR69mj9wN/R85elN7xnXQ187RK9kDiHcPRtqg/6kK
vCg/YC7ymcXT9m/mIvdEftD6u0yKHqyjvWeO3l7MuaHYM0dvZo/Tzt46Bxa1
h2hvb56j97HHWN/eIkdvYQ9nvyx+7p/CR9yvA5viS8X/ujcRe/+Px25N+ObY
4s/7NcH1jSn72aOJvR5f4nX/JnxXH5a/GFtHr9G6+O8BTcSy8Sjfd1AT30LO
TT5hXB3chBjB/kbOR67nN87RXjtH72RPta17k6O3kvM4Av3wHNheju5Y9GNy
9B5ifvmSZZGu8ndV9GPfyjtUwXnu6r1ycCXtsbui75Gj95eT2AG9Sw5uRU5l
P7FYjt5fjmAv9D1zcMlyFlujb5WDy5GjsR/8yXxaBacr37Mcsg/6w8hJ6Cfm
6EXskey/W9lfy0cgne1Lc3AvckT90I/L0evYw8j/iZcmpOi57C+XRnaqgoO1
v/9APFEFB20/s4z4vgqO1f75U/FJFRzxd030//72zBT9i5yVXJWcsv2VHI/c
jpzrLk08z3ucf3wVfLD9y5kpemT5afmNS7F3qYO/tv+RO7Ant3+4GLkPu2sd
77cEsmoV99ynif2Zjn5yFf25/cmNnL+bOLR878nuJdKmifgchd6zxGuFtKzi
mN93Eec06MPlSMv3Vj+kfE85IrmhZ8v3sX81ln2GVZr43q45A2hd/GGkuaL4
h8RdiyqO6Y9yqnKpk0s9kQOV+xxdxXxCvsxe1Z5YPlt+0F7RHlb+Xb5V7sGe
337XPXevB1TBJ22G9EW/tAr+aCXkiCp6Wvmt9ZE+6BdX0Q+vgvSrguOV/9sW
OaaKHk2+e2Xk6Co45FYlvw2swifNd/Id5maPrVTqo+/ib8qPuSfuhRyvfJp7
7N6OqIKfE38/zfV71zGvkN+Vy7BHdv4gnyxXI+cyz/hdLPbd/RZbGq9PVoEx
7ef1EX3jKuT7HPObnc0jVfCJ+oS+IOcnP6HP6CvTSj5xJuAs4P4q6n9jDKKP
KflFTl0u/e0q+MtrsY/U91NwJzfk4JLE93NyzIfOkgyqgj+8hWPnGgsc+rEJ
/tZcND+Fr8g3ujf6jNzUTX7zOvpJeYVBObhHMaVc/jU5uFPx4ewc7+y7/oq9
sAm+dmixW+TgR/SV1lXEgnynvmBM+K7ykfqO7yw/diP2Kdz/iBRc7XU5uCHx
ubEpf+JeG6PyR9frT6x3TxFb8rnDqoix73LM2572t5Gfm+C7zX0LrDk5+ANj
35gel4O/1TfMCfqieOL1KnzSeiynIJcwrgp8Ix6yt5OTeL3kE7mIUXXgETke
uR3voe9bL/yWxoCxY333XsaQ9d89c6/eqSI2xAPqxoixJD7UN4wp53cdCl5z
piYXfVWO2YQ94pgcfKK5yhwoPyDfIpYSc7yUY35nbjRnOt/4j/kRe33xTA7+
eL86YsbZx8Acsxx7BOc7Vxtv2J2w3+PvgBxcuD2w/PiV2N2xf5+i9lif7qui
Blmv9El90WPWKuursWDNMpb0rwOrmIn+lOOb+i3nVDHvfBdZvo4Zn3zkhzm4
VDkw+bFpOXxZn/4RfVaOa2cjC9FnIF3q4JR/yeHT+q7HBBK/Yp9ZR0zJ13p/
ubBhdXBvX+WYxRorcr+f5ujv7PPkRj/K0d/Z58m1fpyj/7IPk5+XX3EW6x7L
nX+Wo1+0b5Qr/yJHP2hfKJf+eY7+0j5TrvTLHLFp32eumpkDD5iz5M4/ydGf
2ac5/5XTkctxxuLs13mss1BnwM5CnUc6e3Qmqn/ICcoFOuPVn5wZOCuQozZ+
5Ozk6uTg5Kedlbo3zmSd5zivfTfFzNn4MkaMDWck+peciFyIMwpj2Xg3txnT
5gLzm7FtTjD3mX/0NXOgs2/noc7GnYE7O3WePirFDNXcN6h8H3Ogs1/nt+ZC
Z8DO1uWjB6eYsev7xo++agzcnCMfmov0AX1d/zc29Hl9W39fOoWPyy+/4j7W
MfO3fpiTzcXO0L9Gn46cX8VMS2wo3r6zCow4N8fM2lm154gVxZ+Dq8CM4kVn
8t7PGiS3IT58pAqOQ7zuzN1Z+/VV/H+Db3JgS3Og2Ex8fl0VGE3sJX6/pQoM
Jr53hu7sfFAVWE28ry5msz9wRu5s3GcWH/t/Bvy/Aj6j/YAzfWf53tP52gol
fs3J+qd74l7c1US8GX/OMg4s7+/+OIvz/zDo786QemPf3kT8G7+np/g/FMaf
MW5sDy7x4oypD+t3lPhwpiDXd2cT8eWMqpf+UeLVmc2h2Lc2gXetEdaGIVXE
jzOonr5PE3jcGb+zffd8lxw1z3xhDRTr2i+592JeuSbxs/eSczIfmKPMTTc3
Mfsxpxgvxo35wZmM3MegJvopMbFY2G/2P2VrPkA=
              "]], 
             Polygon3DBox[{{1245, 1256, 929, 778, 101}, {1243, 1254, 927, 776,
               99}, {1240, 1251, 924, 773, 96}, {1239, 1250, 923, 772, 95}, {
              1262, 1259, 932, 1055, 307}, {1244, 1255, 928, 777, 100}, {1283,
               1261, 306, 1097, 1096}, {1284, 1276, 579, 1153, 1152}, {1246, 
              1257, 930, 779, 102}, {1242, 1253, 926, 775, 98}, {1241, 1252, 
              925, 774, 97}, {1279, 1258, 931, 1179, 
              635}}]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0csqRVEYB/Dlfr+VUnInpRxegCdgJPfbwIwBU2ZmPAFPwMSUJ6CQJI7j
uF8KIUmSJOG3U/vbv/9aq9b61t61Y1NdkykhhFnVnBpClH+8blmsUs1VM4Mt
zGY789jJQg6xhIn0ECbkUnmGZZxnORdZyWXWcI313Ijmndcix+VGVhgfyi9p
IVTJCblbPmIPk+zlMft4wn6ecoBnHOQ5h3jBYV5yhFeste+ofB31Ibc690Zu
Yp3xgfzNdX5xlZ9c4gcX+M45vnE6Wnf/V3k86p2DfGYHn9jGB8Z4zyo+qpgz
i/hr7iH6pupVb43GBfKJ9XwmmccEcxlnDveZzT1mcZeZ3GEGt6m1sMItZetw
pzZlT2hI+f/3f5VLQHk=
            "]]}, {}, {}, {Line3DBox[CompressedData["
1:eJwVzmsrA2AYx+F7s0lytoO33jAUUxu1URvlUA41Uw7lsBzKaXxKH2ahJEmS
y4urX/3v58Uz3mo3HhIR0eQ5GdHpinhjMhUxQR8Fpni3z+g0/cwyx4d9XosM
UKLMp31RFxikQpUv+7IuMUSNOt/2VV1hmDXW+bFv6sb/+3TEiG6xza/bru4w
SoM9gn2aZDjgkCTHHJHlhFNSnHNGjgsu6eaaK/LccEsP99wxxiNP9PLiT6/8
ASkTHs4=
            "]], 
           Line3DBox[{712, 1196, 1197, 1141, 1140, 1198, 1199, 1200, 1143, 
            1142, 1201, 1202, 1203, 1145, 1144, 1204, 1205, 1206, 1147, 1146, 
            1207, 1208, 1209, 1149, 1148, 1210, 1211, 1212, 1151, 1150, 1213, 
            1214, 1215, 1153, 1152, 1285, 1216, 1217, 1218, 1155, 1154, 1219, 
            1220, 1221, 1157, 1156, 1222, 1223, 1224, 1159, 1158, 1225, 1226, 
            1227, 1161, 1160, 1228, 1229, 1230, 1163, 1162, 1231, 1232, 1233, 
            1165, 1164, 1234, 1235, 1236, 1193, 1192, 852}], 
           Line3DBox[{713, 863, 714, 873, 732, 883, 742, 893, 752, 903, 762, 
            913, 772, 923, 1286, 782, 933, 792, 943, 802, 953, 812, 963, 822, 
            973, 832, 983, 842, 993, 853}], 
           Line3DBox[{715, 864, 716, 874, 733, 884, 743, 894, 753, 904, 763, 
            914, 773, 924, 1287, 783, 934, 793, 944, 803, 954, 813, 964, 823, 
            974, 833, 984, 843, 994, 854}], 
           Line3DBox[{717, 865, 718, 875, 734, 885, 744, 895, 754, 905, 764, 
            915, 774, 925, 1288, 784, 935, 794, 945, 804, 955, 814, 965, 824, 
            975, 834, 985, 844, 995, 855}], 
           Line3DBox[{719, 866, 720, 876, 735, 886, 745, 896, 755, 906, 765, 
            916, 775, 926, 1289, 785, 936, 795, 946, 805, 956, 815, 966, 825, 
            976, 835, 986, 845, 996, 856}], 
           Line3DBox[{721, 867, 722, 877, 736, 887, 746, 897, 756, 907, 766, 
            917, 776, 927, 1290, 786, 937, 796, 947, 806, 957, 816, 967, 826, 
            977, 836, 987, 846, 997, 857}], 
           Line3DBox[{723, 868, 724, 878, 737, 888, 747, 898, 757, 908, 767, 
            918, 777, 928, 1291, 787, 938, 797, 948, 807, 958, 817, 968, 827, 
            978, 837, 988, 847, 998, 858}], 
           Line3DBox[{725, 869, 726, 879, 738, 889, 748, 899, 758, 909, 768, 
            919, 778, 929, 1292, 788, 939, 798, 949, 808, 959, 818, 969, 828, 
            979, 838, 989, 848, 999, 859}], 
           Line3DBox[{727, 870, 728, 880, 739, 890, 749, 900, 759, 910, 769, 
            920, 779, 930, 1293, 789, 940, 799, 950, 809, 960, 819, 970, 829, 
            980, 839, 990, 849, 1000, 860}], 
           Line3DBox[{729, 1166, 1167, 871, 730, 1168, 1169, 881, 740, 1170, 
            1171, 891, 750, 1172, 1173, 901, 760, 1174, 1175, 911, 770, 1176, 
            1177, 921, 780, 1178, 1179, 931, 1294, 790, 1180, 1181, 941, 800, 
            1182, 1183, 951, 810, 1184, 1185, 961, 820, 1186, 1187, 971, 830, 
            1188, 1189, 981, 840, 1190, 1191, 991, 850, 1194, 1195, 1001, 
            861}], Line3DBox[CompressedData["
1:eJwVzS1MgmEYhtEHkTnnnNGBv59oQgrODYsUDWLxb1LUgAULbFDNZrPZbDab
zRaLxcLchDHHnHN6CGfX/T7lTeqto2YqIk64SEd0mRqP6NDm2PuNNXuSFk32
3F5YtSe4okHF7Zm8neGSOptuT6zYac45o+D2SGKnqHFK4vbAsv2nh3rArD2T
ibjXJe9f3dcq0/Ydi/aP7urO6D/7lgX7Wyu6PdpjETfe8/ZQt7TMp/u195z9
pRta4t297Z2zB1rUdV7dG95Zu68f9PgHVt4lgQ==
            "]]}, 
          Line3DBox[{1237, 1274, 1275, 1263, 1267, 1247, 1261, 1283, 1296, 
           1269, 1264, 1277, 1248, 1276, 1284, 1285, 1282, 1249, 1238, 1286, 
           1250, 1239, 1287, 1251, 1240, 1288, 1252, 1241, 1289, 1253, 1242, 
           1290, 1254, 1243, 1291, 1255, 1244, 1292, 1256, 1245, 1293, 1257, 
           1246, 1278, 1294, 1258, 1279, 1280, 1281, 1265, 1268, 1295, 1259, 
           1262, 1270, 1271, 1266, 1273, 1260, 1272}]}},
        VertexNormals->CompressedData["
1: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
54+uqOf/P43hpAA=
         "]]},
      Boxed->False,
      ImageSize->Scaled[0.4],
      Method->{},
      PlotRange->{{-0.999346316070354, 
       0.9999999999999273}, {-0.9985915584427716, 
       0.9989930738762993}, {-0.9999998571428571, 0.9999998571428571}},
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]]},
    {
     ItemBox[
      GraphicsBox[
       {Arrowheads[0.2], ArrowBox[{{0, 0.3}, {0, -0.3}}]},
       ImageSize->Scaled[0.3]],
      Frame->{{False, False}, {True, True}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Background->GrayLevel[1],
      Frame->{{False, False}, {True, True}},
      StripOnInput->False]},
    {
     StyleBox["\<\"Orbifold\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.03]], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]]},
    {
     Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
zz8hB0IPEPMCYScQ6wKCAxDcKM6QdX3Oe4VfYj7txv2lGjevBfx3razOh8Px
B1XPf3PbeBuFP2RXBxjrxarER/N1m8IVfpVV8xu0xEklDi6yK4hV+GcWfrbp
mDUq8a5Hs/ztSYnJrM7zNs1U41pNm0GlinjBtjmk1FONX19v5vVoWpDGfNf7
HDyhEqcIORB6gJgXCDuBWBcQHIDgRnEGvd933yniCNtS0iXlkko+I3v98r+y
+v/DcvOBqSr+X7YyaZAiTrHz27t1GauSt2SNijiriHds0awetQap5CdQPFJf
ETfZltV/Od5UyUPGdl6QpYi/rIadX7i9Sr7x80d7F0UcZ9qHOx5jKnnF1AV2
hxX5ADt7Ym7pHJX8gZADoQeIeYGwE4h1AcEBCG4UZyFfxeVM4v+h6Omqsnq1
z0cty8oqeaM070k+L9Pkb8HtZJr81/J1MU3+f2yVHJgm/5qcG9Pkf4RzZpr8
NeRA6AFiXiDsBGJdQHAAghvFGXLwXnjze/F//PW5HlG3tsB7d4XfO8F/Ad7T
qvyeCv6L8V6H8nst+PdCP1Cb+wHBvzb6DRvuNwT/7+hn7nA/I/gTciD0ADEv
EHYCsS4gOADBjeIMHzEuFPC4IPgb4T16x++R4L8Y484EHncE/6HqcUrwX4dx
7RWPa4L/XIyDW3kcFPx/YNzcz+Om4D8W42x9HmcFf0IOhB4g5gXCTiDWBQQH
ILhRnCGzhvZ0lbxI8HfCOGLE44jgn3++9m6VvEvwb373UaZKnib4LzMs1FPJ
6wT/Vy9qOKrkgYL/MefWRip5o+C/cH8XbZU8U/An5EDoAWJeIOwEYl1AcACC
G8UZhmNdUMTrAsE/PHTdD5U8SvD/mMfrjlm87hD872KdMpzXKYK/HdY1fryu
EfxnYB10hNdBgr8h1k0RvG4S/HtjnWXF6yzBn5ADoQeIeYGwE4h1AcEBCG4U
Z5iKdfF7XhcL/i5YR5zhdYTgfxPrcT9ejwv+UVjXn+F1veCfiv2BLrw/IPjr
Y58hmvcZBH8r7Fd84P0KwX8X9j2qeiv7HoI/IQdCDxDzAmEnEOsCggMQ3CjO
4Id9jGZblX0MwX8S1tGNeR0t+DfHPkmNgco+ieCfgP2WON5vEfxl2Ldx4n0b
wd8U+z/2vP8j+P85w/tIq3gfSfCfhf0oK96PEvwJORB6gJgXCDuBWBcQHIDg
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
+A==
       "], {{
         {RGBColor[1, 0, 0], EdgeForm[None], 
          GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFm3ccV9Mfxu859x5khYbQj8resreSlMpKKDuRQiIqGVEiilA20RINm4yE
sstMSlRSkZ3smd/z7jm9/HFf9/me77n73PN5nufzuQ1P7972vFgUxa6pKEqt
F2nh9/pa9q6K4jM1XiN8XiiKU7VcLLyv2hep/TrhvYQ/FR4gvKfwAuGrhHcS
niN8ifB22q6F1sdpuU9tZ+q/jYTvFe4kXE94kA66jfo1F75I6+u1vlvLHvp/
vvr1Fx6mPu31Xw/hxmr/RO2XC/dQ2yCt79TSXO3fqP0W4QvVPljru7T0Fe6u
ZaDw+cHnfoeWA9T/i9LH21/489Lb7CL8sfBlwsO17qjfGwoP1Tkcr+0vEN5P
bUtKH/tmtR+n9vOFD1X7t2q/lWvQ+iXd2zqch/BJ+q+28APqv0Lrf7T8pGXN
wvekr9qXa11Dy19a1tXyPy2Xq32Z1mto+U3L2lo20VJX+3tQ+20s3F99VtM5
bCm8odrHqX1X4W3VdqjWx2r5RctaWjbWslSLuhW1tHxe+PlvoOUrLTrlledZ
Rx0e0B+7CI/Sepr+qC88Qrhz5f2MFO5S+Xxqa32/fu8sPFrrcyqf/xjhbsKb
Cl+m8/xO69W13KP2U9VeV/h24eMrj707hU+ofG53CHeofG6HaP21fg8TPlB4
qfANwrdqn2fpOq8UniT8d/Q97ao+2+uc/xR+Tm1ztWwvvKP6ttf6sHyPudfr
aNlB7cdr3VLLW9r3BG1/qvB04QeETxZ+U3iM8EnCM4THCZ8ivH3wGGesvx+8
T679bP2/g87hb+FndPw50ffwg+Dnzz2ZI1xpaZSf6S68j/o9M/fhHBcG72MH
Le8GjwPu+Vnqv536/y68IHi9nZY3dG6j9N8JwvPV/itjIY+d3/I4mKrtftKy
Quf0jvo/ov4d1f6e8BPCnTiW8GPCpwu/xLsl3JZthW8TPkZ4mvAdwu2EPxSe
Itwl3xPuJfd0ttpfVHtX4Z21nqvflwrfomN3Vr8rhF9W212Vx+ptau+i9n7C
B6vtS/13s3Az4a+Eh3IvhJ8TbiX8itZ3V34GL9BX+CjhmcJPC5/JcxF+SvgM
7r/ws8KdhV8XHiHcQfg14TeSx8erwsMrn/9k5gnhw4WnCN8ofKTwi8Kvqf/R
eVxxLuznebUPUZ8jGKtq31lLa+GdtN5My/7cH/3/bOlxuK3w06XHz+Nav6x9
HiT8qHBf/Xeg8GPMecIHCD+i//sLNxOeqPY+wnsLPyXcT/hg4SeErxBuIvyn
8M+8n8JLCs/16+V3n3eOef9J9blSfZoKP8T8LbwPx2IuFN5P+GGem/C+wlsE
3wP2/wyxovLz5plcV/lebBV8bzifLYOfCftnzmduYsxcK7x18Lh6TNc1oHIs
+Ev7+ZU5iPda+JXkuawu733pmME9u7ryfftD+EfhMYxx4WXCo4R/F35H244W
/lH4C7UPF/5OeEHlWDCEMajlNuHlan9L/e8R/kF4ceV4tEz4s8ox5XvhhZXj
zmid/yRtO1348uC5n3NI+n8t7ecx4VJ4deFHhCvhGsKPFn7+AyuPgT7BY3yE
lkuCx/hILSvU5x/1GS/8t/AfzPvCvwp/V7lP1Dppnw8L/6P2v4gBwkHrUu0P
FcXKCT8ITxS8NHge5f7cqfO/WL9vEv5J236pfvcK/yL8beXz+Vn4a+H7CseX
xslzVmMtDbS0YWyorbf+25N5TW01tewIrjyGGD8DdKw11L4146fyeGVsXKX2
1dW+lfDmlcci46Rh5feBd+EO9emtPjcK3y7cS3iIcIPK7wnvSKPK454xuYnw
BOG9hP9XeUwznutXfmd4Xzh3tuO93qbyOGOMbVd5TDOeNw/eH2P9ujxWD+FY
wed1RB7DjHXex6uF6wrvXnh+Jl4SK69R+4Zq3yO/O1wf78NAtdcLvm/ELGIq
czvzM5wJbvCX+gxifDPOC/+/ai5n38znxFW4xmrMS8mxk7jZvnJ85T0POs5i
rTcrHFuIUcSXierfs/I5f1M4/sMD4AO1PHRWxjRiF7FyvPZ3kRp3y/eB+8d9
vCxzFWL6H8LXleY0xEE4BNtfofYfCnOVfsI/Fx4PY/X/eeq3U2H+cmFlDnNu
ZT7BucJ3elTmPCdW5gqcH9wJLgWfPLky3+Ia4CPnV+Ykp1TmZNyjJ3XOb2g9
pzDP2VkXG9V2pv6PWhqq/bnKcYIY8ULl2EZc+whep999hJ/XepZ+nyX8TOV4
Q6wZW5krwBNGVo4xxIVXk2MDY2Zo5VjFGLipclxhjB3NeNNyNu26rsMy751Y
mZfAScZX5h9wj/XgX9rvO8LrC9cXfld4A/iX8HvCNYXfE36b/lqvznsifJzW
DZLHBPMAcxDv+MNqf1v7P024qdp20XKi8FbEPt6L4HeQ95G5dIhwi8yBa2nb
TbXP94VvqBw7GR+D1WevYI7RL5iL3174PWauhcvB55mP4eg9g+dd+Dmc+pPK
cysagTkYrg4H/KDytvOIxcJ9eb46/puV+QMcf2bl/Tyl9lmV5w04xfTkOfdp
rWdXngPhF3Mqz7/3VuYBcID7KvMDuMGmxHfmEM69Mv+Ae7yezGPgMDfoevcJ
5lHooWmVNREaZW5lnTKsMocgRsJtP6oyv4XjlJ6X0TqvVtY7z2n/G2t5i/Gm
db3kuLOW/n9X+DXOU8e9U9tNYW7StrdouSP4hf5XeILgD5VjJPP/mskxiXj0
feW4QkwhHhLHuOfEC9q4J8Q4YinnfzO8W8tY4beTY8YI4eE6h9vVPll4ReUY
RvxaXjkes/3XnLt+76LfS4UnC28rvIR4JbwFsYj7Kbx96bF5YPTz4lh/aWmR
79EB0c9uJHFMy1PMRcHXx/38qTI/4Hr+rhwjiY+/V+YZcIxPK3MCxt+M5BhP
fF9UOfYz5sbqOK8E86fJWs8v/N69mtuYY6cIf1r4vXtReGHhd+Fx4Vn0ZR7T
fqbq96Naamj/tZPbn9fvBYXf37XVXkftrwuvI1w3ec5aV3hDxjf75P/K/Jk5
bXbh/k8Fz230v0vHGhgc9w/VdQzTci3jlvk5mDN8Xpn38B4uqcx7ePfWTuYx
cJh1hVcjHhfmPE9r27mFuc9Hhc/nfrU/y5hlXKnvBtrmFeZe7e82Lc8E+wQz
KnsF+AdvVfYQFgq/LXy18Glab5UcJ2YExxQ0+GTt/+PouIMeph0tWY9YlKyB
mee35PmpfXpwXCQevR0cI4inbwXHJeLFx8HHgXvMDd6O2DQ++nkvEe6qc1un
dOz+Xn3+F8yBv9Z6oxy7z9b/NTPf+FZtmwRzDHjFIcn94BWHJv/3nZb6wZwE
LfCL2udH65qWycd4Sr9/j77WzdR+bWXtsCOcMVlLLMuaAn6F7uUa8RA66Vz+
jL5vnwRzB+LsvOCYu02+Xu7ZFsJnaJ/bJP/3TrBfALdA1+8EGQiOF90ra4dZ
wW1wiQ+D42cDxlwwbyD+wjHwOtC5xPEdmYOEPwteww/RPs2Z14Jj+ubCXzOe
de6zo+M1MX0LtX8r/KzaPoo+Z549zxfO87jafoz2Ml4P9jhq5XP7onBMfy1Y
88CLVvEbuA0anGNurmW28JeF9TjcqWHy9nCqH7k/HF99UnD/HzIHRpetp3XD
YA6zpbZtmswF4bQHCdcO5qgHCtfiXILb4DOLgrdn26XB2zHO4ck/q/+86Hu2
bvB94x7CsXfIY2O/5N9faKkTzJ14PuvnZwRP3j/5GIu1bBDMi/Dz3qscc/G0
3kz2tfDD3q8cZxcLv8v4K+wLvlPZG8Qne6WyV4bGheOg+7qofc3S3hHjrUbw
2IPPH5B8bMYPvIMxwzPjuaBD4e17Jm+zsfAeyZphI/hpsk44B26bdcG/wRwU
TsUO4OvwqOW5HV76c7D+bCr8SzBXR3ecCx8szed/Deb2cPgQzdHhZmXm9ujT
F4UXRMfrKmsBPJAVeQzAc34K3rYJc4rO+eBk3o/u2Et4TeGzdMzVS7+DnbVO
pecfPJy1gr0adNO+6r9OsP/DGv/qeR33k+j5h7mL+8F8tbX6N0vWEl8GHxM+
/6nWawf7QuigvZOPQTyCL3yo5YnguEH8GJPn9hnCPXReW5b2f+CfJ2nb5sH8
8GT0uPCTwqcl89SXte0iLd0L8+HT1d6a8a+2VlpfxDkIHyJ8nvCF2vfWpT2Z
RpnrXsg4ieaY8N7Noo8Dt2yQeSYe7KPa/ynJv7n3jfM7yNw4qLLfsma0L8O4
XDuax8LJB+v/Vsm/14oeu3hl/wRjxnBdte8XzP/h2ycmn3cd7n0wz4fv/cY8
XFovdBJuo//+Dj4uur6++jcT7pbfkQPzseDhw9F4+n2a+owI5i3dotteZnwK
DxeeJnxINGeGn9yo9b3ce+GWOu69ydv/IlwrmY91Uv8xantGuKPwKOFJheP4
Pcn73TPvk/e6BXw52SuH07ZLvv5p6vNZtMaBDx+r9v2D+fBxwgcEa5zj8ax4
T6PXeH2j1d4+Wc9coHvUqLSPunF02znC9aL30SU/l/sr+wmbqP1gtZ9bWE91
SP79Z7C3iOezenSOAe69RnQ7XL0JXDvZF95d7d2CeQU5gj/UvlRtO2XfGO6E
b39lcr+DhPsk+5Lbqs/pwbx9G+HTgnXfPupzYXJehJzIRcn/HaWlY7B2w6/u
q/Zzgvt/XDkHsZv2c24w5yHP0kN9Tg7WkmcIH878FN3Wi/c6+ji9hfvAL0rn
RPBCL1f/s4M90suEuzLvRx8TfkWeomfyNVwMfyntkzdV+6XJHusu0dv1U3tv
/b9raW+WnEgv9enEWM4+LdrqVrUflazlameNw/u7QdZ3zBV3qk/b5P+6o91L
z5O1ojUTmggt/CtxHz2t9k+jtdX6Wu8ZrBP/Cvbl8WHWUfuuweMHXdk6+Xcr
4RHCo4XXhRsG62I09eFq3z0419Nb+Az2pz5nBusp8gi/E98ZO9H/E8uOZB/B
Oa89ot8J4t0rwoujnwv6/Qhtu4f+qxl9HLQ5mu7I5GvYInr+66n2qcILozX1
YepzX/I7eZWuv62Wp9X+jv7/Dm3A/c/6Gq3aKmN8uX2jtTF69rBo/YwGbxGt
jeHt++V2dHHbaI2GxjlGuH+wf4jeuSr5N3NAvzwPvKk+X0ZrgX3yPuEAe0Xr
c3gCY/2C/C4cHa0V7xc+OFofog3na//9k4/N3DKvsr/aLPdHVx6YPQe0W+to
LYf/0DwfC/2FZhyi/dyg34dG5/bQYpfqnh1Q2g+8ROt9S/OWU6L74m+8JfxN
tGY5SevBwVqmnfBVwRoQrfcnc0tprXe18AD9N0N9vo7Wy+ijgWq/hvkleo2e
+oZYk6yjlsKPkrUWGuoa4auF22f9hQfbIVp7obn66njNSz/To/J9Q58eG318
9PKJwoOCtTka9sbkuZ/7NyTfc7T8DWq/nvEX/f+Tec4fGjyu0Lk3J//mufxW
2XtZLdqHx684Ifo68KjxAa5Pvl/Eppty7CC+3JT8mzzOWcJthaerz1fRuv7w
aP96pPAZwvcLP5vj0S0Zt9a2I5Pj05lqH6v1c5yP2u5I9i+IZ48Fx8SXgrXy
rBwfHwmOiSSwaUdjHqt9Tkj+r3s0v0FTd4ne3wvC/fHYSl9jV7XfpfYXC5/D
bcF+xdnCdwu/VFj/3k281O+o9W3Jvgbi4dbkbfA3buG38Nva9tvoa8FXuSt5
X5w35wPXOivaj8Gf6Ry9v+eF++GTlR4nM9X+Q7SuvkZtJ5Tmaj2itT26/mgd
9wHtf3zwOU/I19JW7Q8m/24j/DdaONr3GJb8DE7X72HB3OBK7btV6TnhMjh1
aY/lHPWZmO9Dk2gPCP/niIxHEUeifRY8ljb5XR7BPKNj/aNjLVPbUcJjhccF
85qHg7kNXBPPAp/igmgMB22n/uPV/6Fg/sOa+XAAvlrpe3UkPEF9Hgx+vuPy
/bwar670s+bePpCf6RHqPyb59+HCo5PH3EXqu11pjkHev4vajwnmqO2CORu6
BN2It8NYm5rHG97Oy8H+zk/whNK6ciLno2VasJf+ZrAWnhDt+zCW8UfwSeYx
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
d7J41cQlvoclNlHryreH5En+DzNJmxw=
             "]], 
            Polygon3DBox[CompressedData["
1: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
1D39Ss6OOkh/98MmvrU+qrp/lRLfUxugf/tBk9hUzlR/+/0msezQOmMrlsjO
0Tapj7VF2ijnrlDi63rN9+AvSvaCOnP8En17EfhBP1WJfpWbuF976m9bcjYO
qxMfeI1z/Ybymz+z5oV19rDxt/dwbTn5UqKfz0e+r4ptHA98bh0b6dmcoI2/
7hn9Erm0sZ1yKcbDPpPP4hrGs55pz7JrGE97D9d2Dfm5e5twm55xdeHNJXtB
nSjf9njnC/Wv438vTN/gOn3Pg+8GrwPerwrf8BJ9w6rMkS94tdufcvKvIC9S
ws24Hz/mee5pMyZvL3/3Av/3r7Kmay1Ustdd8/E2nJicl/6c/MsY5HUZX7mO
7l28RDerg13rXvB6ddZUdy8G3qSODlcXL1HiW6uT5T9e6c7fRvR9ifwOfUfX
sfnG8180ydUdWSde/7xJru/wOnyI1zjXnJTf9rQSrtxv7Nw3S671Gr/NoiX3
8hv9gPx6yVqn1tGF6tBBnU40vnytia7xHYxv3wXvibxdHb7luybchWdKvuCr
Jv6I76D8XgnXZ99j4MtKflu/r/H+W01+y639vcDL0rb1+WgP6duBl6/DN8tv
PdyEm7VPPvax7vfvB34E+SL6VkTeib5HwaNKfiv5Wfll+5SdY7zvPVx7Oc8A
8uklvtp29D2AfEnJ2hvU8eXOLPEN9enkF/7dhBtflr53PNslvp9cu77guSVj
+oTyzy/St02dPeK7XFjCffpO6u7bwYPq6HD5jzfp27dKjuZT1r+3jWze5m3a
MiXfzv0mH/N2t5/9hur65Up+K3W+/PZz3Xre4w3kpUq4Vu/3GWt/XOJLmxv4
mvZ+iW+sT2l8t2SJL6EOd607S7hN15T/eaOzP1vWefalS2TH9V/XKuEW5Fzl
vtQ3cmFyYPKV+kz6Ssa4cgvaQ2NjOQa5JvfHMVU4J7kW30/uQc5F7lJ9Lxco
h2l+1Xx8/yr5Ably+UJtyYe9cE1+P22JnJNcifparkLO5OBO359ShaOVn1Bf
y6XIAR/Sxn6oG1bqhbuV79AWfNALl649kksdx5l39sXcipyKXKf2TO5OzlPu
UvskVymHKdcv3+nZ7t+Eq/O8nl2FszM29XzJzRmjyu+bf5SbkY/S99KnLJ0P
Jtcv/6ruX6MJV6h+kPuTM5Tb8/f2Wjk+uULt0agqnKFco/bmrCqco7ky7b9c
oDkzuQE5C7kKOQJjPf2hi6vEfHJH8j1ySXJIw9vsP221HLu5fv2lS6rk/OXP
JivxDS6rw1dNWuI7maM1llmnZMyYRr5sAvB1dWym/F2fEl/iWvCf1P3g69WV
ddYaRBtdZ01jsXVLYiNjsr7qypJrtanyY5OU+I9eM7m2oiQ21eYZq65Xwj0Y
s8qlub7cmpya3K3xg1yuHK65UPloY43fe8mvft8b59aP45vNj1Z8y0mr8PPW
VsiHWItijYW5WXO0chH/64XbUP+b+5LjMBdu/szYfIYmtS3yG9aijKtxMT4D
31DH57dWRb5iiio1K+YO5Jt8FnMI5g6Mz+XOzSHInRvfmFuQQzdXJF9g7Yc5
I/nVvp0/4jeXS9a+yd3LKcsVqx+OrsIZyw2rX/TF5IjN9amPPbvm/MzXG2cb
b5tP03+0fmDtJvrJ/JP5enMH7iH9SesfNmjif5sfNo411jIHZz2L/L3c7MtV
8g+fNuGe9TGtH7LeqE9+hnH5GnOw5l49w3IR6kx1pZzEUSWcgM8o57dfSQzt
PY1B5SL0ofSd5CSMffXx9e2NgeUetCHaDjkI60fM4Zq7XbVKrsuc1xRNOMw9
+T9jk9/XnLJ1D32b1IaYMx3eJP9r7YmcuHUP0zWpLZHj3qtJPlh7Zc56b+RZ
m9hCc7zm4owrjCXMyVmvJf8tF/5mlfylvIVnxZzaiCYxsbGw+U1zY8YRxhPm
yMzlme82npmti8flvydowpfK509Z4k+agzD/Z1yrb2WOfNru+eXyrXeQPzJ/
0DTht+T6tKfmvuT8zDVrr80Vm3M2N6Y/IbdvjszcgPbZXIE5AmtD5P99/z81
yUXrT5hbMye9VZt4Rt/KmoTdOn/uiCo5OnNz+hvmrs3RmSvWf9iySs7Y3L7x
kbGtOX5zy/pD8snjcsxt4jt9D2sGrC0wftu+So2B9W7Wh5j7mahKLlt/U3/G
nPYObeyxvoQ5VXPT+sv6QuaozfVZc2W9hTm/Pt1+MTdv/Ze5b/0P/SFz4Ob+
9c93qFIDYC5P/1hfwpyeuTv9SWMbc3jDOn/X3Iw5CXOB+u/GsuYEd+385cOr
5HB2buOfG/uYEzXfKe9j7OUc8zVTlMQPV9fh37S52lptsvGq8YL8/ezdWfJM
DQHP1aS26/nOvzQXq//0Vne+3+8lfn6m89/macJd6+Po25iLNlejfpdrNmdj
/KA/bDz4Xi+5AWMUYxNzwdZPbVCSW7Km4NLOHpjrMWdtPZL1eeZO3VPWnsgv
jK5Sg6Jt0T+S29PGmLuTzzf3ag7PWj/5h8uq1PxZyycfom9vTZ+1KmM7f91c
tPbhvjb6a0inW9Qx1l7M3CQ3pf00F2SOauk2fJv5AWvKnu++4XxN9pDxoPGd
/v563dn1DMt3jd/5Gvoc8tOv9FK7tkDJ+1rDdltnz6z1maRKrGHMYXyzVuc7
6EOYT3i1F39ttRJ9PqY7n4+2Of97dLpfG6B/8Fln7x5us5/Vhepada6513XA
N3X21dolhsbpKnWWud+fe7EV43X+grUA+ktj2/D51kj4bf3GczY5o/pnT7TJ
31iTYW3Q2iX2xNywukkdNVuVHKe1f3OW+KPWAGo7tCHW86zWJDen/2Gtgjk6
azflN82/WMM5oE0+abUqNYXWeplvUhda82VtmfkobYU1Zt7PmkO5+td6qRXa
sPx/LtP8spymXKYcprWT8verVKmhtDbN/MCAKjVq+isPtNE/42rV2uRf1dVf
9lILZn7HfIQ1Yeoa+V5rDdQ5nmXPh7Upnml1/eCSs63O92x5xhbs9rC1PPKB
1v5Y02OuVv/t2So5W8+yZ3rR7oybzx/R2R45V2sXzH/pO1nD4O9jvlPf8Yte
7Kn5QGtBrSGxVsl8orVL1iwt0oZvNh9iTZu1hvK1+h7WHC7Zhl+2FtEaQmsT
5Ze1ZdYoWltsPmaFKjXG1oaa79BWWSNqLtr3N3dtTtraZPMl5sqsUbb2Ur7W
XIo1mNZeyq9a62gNprUX5jsHVanBsDbDfJu1GNZoWItlPnPtKjVZ1r6aX7R2
0BpYz6f1hOb2Xu/il5VK4gdrUKzdMf/Ur0oNj7lw/WFz5ebErV02n2mt8Lga
5jb5Jm2JNcT/Byg20CM=
             "]], Polygon3DBox[CompressedData["
1:eJwV01toz2Ecx/HfbNMybEhyimmaU8yGmeLCLKdJOzSGhU2ZhTXCtJJDklup
kQul1EpSK8Rms7Fhm8ONciyKDcukrGkX5vVcvPt+P+/n+zz7Pb/ffyllVQUH
R0RRlIF4VMdFUbrmS0wUVcRGUSyecge4RQZr5IXoln+rN+z5wa/RX+YSsFl/
Gtv5OjkOm+RTKOEuyEPO3CCfRBHXyX0L+5yXpS7HSy7R3F2uQC7EWDkP/fYU
yfetHZWXmv3umfdxI1HDZXF9XKWcgFdyEt9szxZ5K/rRxa9Wc1Bv7YX8V9+g
7/N31usfc3fULC5JTcZ4ZxXil5kSuTW8P3PN+Mp1IBOT5es4oj9nrji8U7lD
3WvPZz5F/whP+BnqTOyx1iG36HfpP5mbps/mmvBebsJPdzwf7u9Zcq2fwEY+
g2vEO30jesylyWXmhuTy8B25Rrmcn8S1YS4/zF3kiuUu5IXn4yq4efIxeT5u
cju4ZK4VqdwZLocbdPb+8M3wmqvlVpqplZdhAM+5teo63HLHJrWdm6JORSk3
Rr6CUnu7kc/3YpUze+Ql4c7hW6m5XC+XrT/L7bSvgZstH8IEa5Xcg/Ab17dj
AXaH72suzcxhTOSehRl9bfj/UDNxL9zb3Efr4/QrrOWbq+Omy1WIt3ZbTeU+
6EeHveYehnsEr3/DD+KS3ML/0Q+E34G1bXK9vbOsVYf3x18Nvy/+n34Yc8y1
ydfC8+jfcjHhG4X7quncKDURnc6q4hebOR7W8B+uJH8Q
             
             "]]}]}, {}, {}, {}, {}}, {
         {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0TkvRFEYBuAz1rETvYkfQKJHoiYSShIJHQXR0RAVUUg0dBIJCvuuE4xC
awzGTvgPEoV4ThRv3ue798y5596pHxjpHk6EECZlOy+E6HX9patlpMA1F1Nc
o9fyQ2jket7jFm7iDr1qbRv38jl38RD365y14zzKnzzDU7yov62dj3tzbWEI
y3zEe7rUvcu4H+861w1v6DNzlm/l2nyn7yXDOf0gj3JjftLPkuUX/Rp/x2/6
XdLxXcwfvKkvzBlOOcspp+O30UlnOeQl/vEOqzzHC3F/9yZ4Oj6X40cd4z59
Z+0gd/IV93Art+tZaxu5mWe4jhu4Uq9YW8e/suNcVXpLZ9yr5Ao5MZfrMjnm
Ul0iR5zUxVIkB2avEzwi7LOtgwqXif///Q/ZqUTR
           "]]}, {}, {}, {
          Line3DBox[{690, 754, 755, 866, 1522, 756, 757, 869, 770, 1502, 771, 
           872, 778, 779, 1489, 875, 786, 787, 878, 1526, 794, 795, 881, 802, 
           1507, 803, 884, 810, 1512, 811, 887, 818, 819, 1491, 890, 826, 827,
            893, 1530, 834, 835, 896, 842, 1517, 843, 899, 850, 851, 1493, 
           902, 858, 859, 721}], 
          Line3DBox[{691, 758, 726, 692, 1495, 759, 728, 697, 772, 1503, 730, 
           699, 780, 732, 1524, 701, 788, 734, 703, 1497, 796, 736, 705, 804, 
           1508, 738, 707, 812, 1513, 740, 709, 820, 742, 1528, 711, 828, 744,
            713, 1499, 836, 746, 715, 844, 1518, 748, 717, 852, 750, 1532, 
           719, 860, 752, 722}], 
          Line3DBox[{693, 760, 905, 761, 867, 762, 1501, 906, 763, 870, 773, 
           907, 1534, 774, 873, 781, 908, 1535, 782, 876, 789, 909, 790, 879, 
           797, 1506, 910, 798, 882, 805, 1509, 911, 806, 885, 813, 912, 1536,
            814, 888, 821, 913, 1537, 822, 891, 829, 914, 830, 894, 837, 1516,
            915, 838, 897, 845, 1519, 916, 846, 900, 853, 917, 1538, 854, 903,
            861, 918, 862, 723}], 
          Line3DBox[{694, 764, 765, 868, 1523, 766, 767, 871, 775, 1504, 776, 
           874, 783, 784, 1490, 877, 791, 792, 880, 1527, 799, 800, 883, 807, 
           1510, 808, 886, 815, 1514, 816, 889, 823, 824, 1492, 892, 831, 832,
            895, 1531, 839, 840, 898, 847, 1520, 848, 901, 855, 856, 1494, 
           904, 863, 864, 724}], 
          Line3DBox[{695, 768, 727, 696, 1496, 769, 729, 698, 777, 1505, 731, 
           700, 785, 733, 1525, 702, 793, 735, 704, 1498, 801, 737, 706, 809, 
           1511, 739, 708, 817, 1515, 741, 710, 825, 743, 1529, 712, 833, 745,
            714, 1500, 841, 747, 716, 849, 1521, 749, 718, 857, 751, 1533, 
           720, 865, 753, 725}]}, {
          Line3DBox[{932, 1133, 1325, 1132, 931, 1131, 1324, 1130, 930, 1474, 
           1496, 1323, 1129, 929, 1128, 1322, 1127, 928, 1126, 1321, 1523, 
           1473, 927, 1125, 1320, 1124, 926, 1123, 1319, 1122, 1501, 925, 
           1121, 1318, 1120, 924, 1119, 1317, 1118, 923, 1472, 1495, 1316, 
           1117, 922, 1116, 1315, 1115, 921, 1114, 1314, 1522, 1471, 920, 
           1113, 1313, 1112, 919, 1111, 1312, 1110, 1135}], 
          Line3DBox[{934, 1134, 1326, 1044, 933, 1136, 1327, 1045, 935, 1502, 
           1137, 1328, 1046, 936, 1138, 1329, 1047, 937, 1139, 1330, 1467, 
           1503, 938, 1140, 1331, 1048, 1452, 1141, 1332, 1049, 1453, 1534, 
           1142, 1333, 1050, 1454, 1143, 1334, 1051, 939, 1504, 1144, 1335, 
           1052, 940, 1145, 1336, 1053, 941, 1146, 1337, 1468, 1505, 942, 
           1147, 1338, 1054, 943, 1148, 1339, 1055, 1160}], 
          Line3DBox[{945, 1149, 1340, 1056, 944, 1150, 1341, 1057, 946, 1475, 
           1489, 1342, 1058, 947, 1151, 1343, 1059, 948, 1152, 1344, 1524, 
           1060, 949, 1153, 1345, 1061, 1455, 1154, 1346, 1062, 1456, 1535, 
           1155, 1347, 1063, 1457, 1156, 1348, 1064, 950, 1476, 1490, 1349, 
           1065, 951, 1157, 1350, 1066, 952, 1158, 1351, 1525, 1067, 953, 
           1159, 1352, 1068, 954, 1161, 1353, 1069, 1162}], 
          Line3DBox[{968, 1186, 1367, 1185, 967, 1184, 1366, 1183, 966, 1480, 
           1498, 1365, 1182, 965, 1181, 1364, 1180, 964, 1179, 1363, 1527, 
           1479, 963, 1178, 1362, 1177, 962, 1176, 1361, 1175, 1506, 961, 
           1174, 1360, 1173, 960, 1172, 1359, 1171, 959, 1478, 1497, 1358, 
           1170, 958, 1169, 1357, 1168, 957, 1167, 1356, 1526, 1477, 956, 
           1166, 1355, 1165, 955, 1164, 1354, 1163, 1189}], 
          Line3DBox[{982, 1215, 1381, 1214, 981, 1213, 1380, 1212, 980, 1511, 
           1211, 1379, 1210, 979, 1209, 1378, 1208, 978, 1207, 1377, 1206, 
           1510, 977, 1205, 1376, 1204, 976, 1203, 1375, 1202, 1509, 975, 
           1201, 1374, 1200, 974, 1199, 1373, 1198, 973, 1508, 1197, 1372, 
           1196, 972, 1195, 1371, 1194, 971, 1193, 1370, 1192, 1507, 970, 
           1191, 1369, 1190, 969, 1188, 1368, 1187, 1217}], 
          Line3DBox[{984, 1216, 1382, 1070, 983, 1218, 1383, 1071, 985, 1512, 
           1219, 1384, 1072, 986, 1220, 1385, 1073, 987, 1221, 1386, 1469, 
           1513, 988, 1222, 1387, 1074, 1458, 1223, 1388, 1075, 1459, 1536, 
           1224, 1389, 1076, 1460, 1225, 1390, 1077, 989, 1514, 1226, 1391, 
           1078, 990, 1227, 1392, 1079, 991, 1228, 1393, 1470, 1515, 992, 
           1229, 1394, 1080, 993, 1230, 1395, 1081, 1242}], 
          Line3DBox[{995, 1231, 1396, 1082, 994, 1232, 1397, 1083, 996, 1481, 
           1491, 1398, 1084, 997, 1233, 1399, 1085, 998, 1234, 1400, 1528, 
           1086, 999, 1235, 1401, 1087, 1461, 1236, 1402, 1088, 1462, 1537, 
           1237, 1403, 1089, 1463, 1238, 1404, 1090, 1000, 1482, 1492, 1405, 
           1091, 1001, 1239, 1406, 1092, 1002, 1240, 1407, 1529, 1093, 1003, 
           1241, 1408, 1094, 1004, 1243, 1409, 1095, 1244}], 
          Line3DBox[{1018, 1268, 1423, 1267, 1017, 1266, 1422, 1265, 1016, 
           1486, 1500, 1421, 1264, 1015, 1263, 1420, 1262, 1014, 1261, 1419, 
           1531, 1485, 1013, 1260, 1418, 1259, 1012, 1258, 1417, 1257, 1516, 
           1011, 1256, 1416, 1255, 1010, 1254, 1415, 1253, 1009, 1484, 1499, 
           1414, 1252, 1008, 1251, 1413, 1250, 1007, 1249, 1412, 1530, 1483, 
           1006, 1248, 1411, 1247, 1005, 1246, 1410, 1245, 1271}], 
          Line3DBox[{1032, 1297, 1437, 1296, 1031, 1295, 1436, 1294, 1030, 
           1521, 1293, 1435, 1292, 1029, 1291, 1434, 1290, 1028, 1289, 1433, 
           1288, 1520, 1027, 1287, 1432, 1286, 1026, 1285, 1431, 1284, 1519, 
           1025, 1283, 1430, 1282, 1024, 1281, 1429, 1280, 1023, 1518, 1279, 
           1428, 1278, 1022, 1277, 1427, 1276, 1021, 1275, 1426, 1274, 1517, 
           1020, 1273, 1425, 1272, 1019, 1270, 1424, 1269, 1299}], 
          Line3DBox[{1034, 1298, 1438, 1096, 1033, 1300, 1439, 1097, 1035, 
           1487, 1493, 1440, 1098, 1036, 1301, 1441, 1099, 1037, 1302, 1442, 
           1532, 1100, 1038, 1303, 1443, 1101, 1464, 1304, 1444, 1102, 1465, 
           1538, 1305, 1445, 1103, 1466, 1306, 1446, 1104, 1039, 1488, 1494, 
           1447, 1105, 1040, 1307, 1448, 1106, 1041, 1308, 1449, 1533, 1107, 
           1042, 1309, 1450, 1108, 1043, 1310, 1451, 1109, 1311}]}}},
       VertexNormals->CompressedData["
1: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

        "]],
      Boxed->False,
      ImageSize->Scaled[0.3],
      Method->{},
      PlotRange->{{-0.5, 0.49999999999994965`}, {-0.4999999999999874, 
       0.4999999999999874}, {-0.9999998571428571, 0.9999998571428571}},
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[1], 
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.5], 
       Scaled[0.5]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.02]}}, "Rows" -> {{
        Scaled[0.02]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.5844700393222837`*^9, 3.58447006630163*^9}, 
   3.584476522534354*^9, 3.584476821646961*^9, 3.584476884855155*^9, 
   3.584477689892169*^9, 3.584798595500815*^9, 3.584904952817856*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ShowCoveringGrid", "[", "2", "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{
  3.583689434030222*^9, {3.583690038818116*^9, 3.583690064557714*^9}, {
   3.58369221561723*^9, 3.583692295584877*^9}, {3.5836971219493*^9, 
   3.583697128587344*^9}, {3.5836974345230513`*^9, 3.58369746233471*^9}, {
   3.5836974976174173`*^9, 3.583697552388973*^9}, {3.58369763742273*^9, 
   3.583697661283956*^9}, {3.583697697187623*^9, 3.583697697681795*^9}, {
   3.583697921812044*^9, 3.5836979270391903`*^9}, {3.583698022251027*^9, 
   3.583698106174611*^9}, {3.583698152561407*^9, 3.583698152736507*^9}, {
   3.583698209683529*^9, 3.58369823806411*^9}, {3.583699151298019*^9, 
   3.583699185253458*^9}, {3.583699394613495*^9, 3.583699469642783*^9}, {
   3.583950965930999*^9, 3.5839509892351837`*^9}, {3.584136641185576*^9, 
   3.584136642988099*^9}, {3.58418582819775*^9, 3.584186027196117*^9}, {
   3.58418642444545*^9, 3.584186500754262*^9}, {3.5841866582220087`*^9, 
   3.584186766405637*^9}, {3.584186811686653*^9, 3.584186832061205*^9}, 
   3.5841869859448557`*^9, 3.584187040241329*^9, {3.584187077361844*^9, 
   3.584187079656089*^9}, {3.584187139344602*^9, 3.58418718644466*^9}, {
   3.584187237970829*^9, 3.5841873678137493`*^9}, {3.584187400198305*^9, 
   3.584187624951578*^9}, {3.584187726903932*^9, 3.584187789769574*^9}, {
   3.584187821025146*^9, 3.584187897118555*^9}, {3.584191863261053*^9, 
   3.584191864173348*^9}, {3.584191907261262*^9, 3.584192301136611*^9}, {
   3.584192346117073*^9, 3.5841924261186447`*^9}, {3.58419278995798*^9, 
   3.5841928097936287`*^9}, {3.584192864357195*^9, 3.5841928690435534`*^9}, {
   3.584192934486223*^9, 3.584192945901002*^9}, {3.584192976590774*^9, 
   3.584193077134219*^9}, {3.584205795355566*^9, 3.584205796334511*^9}, {
   3.5843028644298*^9, 3.5843030594037027`*^9}, {3.5843031735375547`*^9, 
   3.584303205365191*^9}, {3.584304234766212*^9, 3.5843042391873217`*^9}, {
   3.5843957808888693`*^9, 3.584395804249073*^9}, {3.584395837001032*^9, 
   3.584395856582262*^9}, {3.584395895875249*^9, 3.5843959487753563`*^9}, {
   3.584396160573249*^9, 3.5843963995481167`*^9}, {3.584405932935194*^9, 
   3.584405996961503*^9}, {3.584447851311487*^9, 3.584447871581522*^9}, {
   3.584447908389421*^9, 3.584447920255658*^9}, {3.5844520418160133`*^9, 
   3.5844520422524652`*^9}, {3.5844520851660337`*^9, 3.584452306626361*^9}, {
   3.584453220251514*^9, 3.584453424950275*^9}, {3.584453465972952*^9, 
   3.584453535112928*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Orbifold Covering\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.03]], 
     StyleBox["\<\"Orbigraph Covering\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.03]]},
    {
     Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
a+tQwYcJP0wyQ1Y3EztlPVDWA4UHKDxAiRco8QJFT6DoCZR8ASVfQLlOaNcV
LM8QSPSlVsGNsXekeIMu6TN2ynUFZr7Z6Wt6yiBru6VZ/Jtccn3yc8QO6D9m
AWdBeozssQpyfQZ3RbQsO7kMvNsvX5fu0SXXZ7r34BWrrOrB+3Ol76M+Drne
PBx1OqyGs+Byvti63/5t5LqaKf44tHJNM9zvfj/JcTeXXD+rK2e47JRnQ1qt
66Pm8zxynXhNVHaxdGHD/jdN0WKSfHI9UOxA8QOUfYHCCZS4gKIPTU+g6Aae
sW7FOefzoeVwU/pB6zKi/5fHf8RLuJUgdv/HiuppLKJ/Ql+3YL/RPNgyafCF
3DtLif52Y8HZgZMFvML88nsV7UT/pi9T98aycuGDyvCXjl/5RH8jt+lKI3n5
oNJTeXLT6C6iv26oyooq7QK4cSyzM8hWQPSvd3Ye/7egAPber2lfP1xI9KfY
geIHKPsChRMocQFFH5qeQNENovQaV23QSoRdu62O9ShUEf1fqy7t6jibDhyn
J/UuwCH690ZxfHotVKBSQXabmKSoj2rp8e3ubLd3aE3b9agtBlyi/7k5euae
k1LRjD88x+mHOoj+6udnnnDfnYa83rYNPecj0l8z5vmmX5rpSLJ2t9/7TpH+
HcomJ4/dTEdJk3VnbLgn0p9iB4ofoOwLFE6gxAUUfWh6AkU3CH27ozI8KAq5
yZjePOgm0l+tx0xXd0gSuvJzpnGMr0j/mT/M+aGW45B3Vvdqk63/S/8Vuy1u
R1Wj1Y5Bm920Won+Nyp2Xd7bUofAXwzFfm0n+r/6eEXKQK4RXT/TOFy/nEf0
N5PamnLOsQn1d6e8jhLrIPpLPU8M/TWKhWy4SY7DfDuI/hQ7UPwAZV+gcAIl
LqDoQ9MTKLrBsAvHQrZxs5F+8ors5qvlRP+LL65sNu4sQxpFvHejJzYT/Vd7
XVDnh+ig6/VyBy4b6RP9I7OcVLzNOCjDed8ejSmNRP8Rs/Mzfta1otTc9SvK
JJuJ/m/DHN5dvtuO1r+WTtxpzSb6v2jaFX7nKRdZqrXePjOfQ/SfZOV4dOZs
HmplD8/2DeIQ/Sl2oPgByr5A4QRKXEDRh6YnUHSDjaULV3q/K0U5Ene6Xs8t
IPpXTYhIXba4CZ2Pfr4n1aya6H/kQfl5/9Al6NbYWuuNHnpE/9e1SgeTbrSj
1z8V3lydlk/0Rx+tr+mF8hE72frAkNhCov9Y9SGuL5M7UepUibNe3sVE/ztH
LTm9kgL04+RG143rS4j+abkz17+NEqCcdjkv+egSoj/FDhQ/QNkXKJxAiQso
+tD0BIpuwJm/KHlLWSXqNJKe8G7dW6J/S4rUQ4ehHPT6zCeV4x2ZRP9Gc2f5
Z+UGyPL54F96+6YS/cdpPzT9a8NFavMTDTw/vkKM/okPeJO3+3Sg58vmvjq5
IxEx+ps2yhSl/XcOnHt1orBOMRmR+vnwqO1fFf77PQ06cnmC3hvE6L98/Iuj
J9OESHOXul7s+zeI0Z9iB4ofoOwLFE6gxAUUfWh6AkU3CFB7Uy0WVoUeyO0b
P1E9HDH6P5n+WCs6joPijhQqXOx6iRj9R/ZfLpM5YojWDA6qXmAgRc6tztt/
yCYltqLEeft9H3+oJPq/ULgYG+fNRfZzXfeMT6oh+nfuEiRvP8NHr8a2Rcx+
V0f0f7V3+RKr2A5U9uDM2c5BDUT/7oThWvtXdSLTAnN5uaAGoj/FDhQ/QNkX
KJxAiQso+tD0BIpu/z1ffAPZIyrQV1aQ99MRWUT/pHlvD47xbEYTWX/O61mV
Ev2vSy8L0ZYENC3yhXKswRyif7fJmsNXKpvQi1GP2i+Fs4n+v4+93nWhvxm5
Ns2Z+3JsK9H/7ibPb/sPcNDMp5+TDr9tI/pPWvOMH7e2BSVFbnvt9bGd6F99
r/h57NsWJO5kbGFmxCX6U+xA8QOUfYHCCZS4gKIPTU+g6AY7xh9u96ktRM+S
V3GGjC4l+h+KYf+cmliDZhby3OIUG4n++9s0+cqp85G7ss0zjfDFRP9ToyaF
BW8vQn0jxHckLGon+huvV1bKSCpBXFObt4uX84n+3mevLxk+qQzFv71Xor+5
k+g/7OZQk9zfZagoyi29NrCL6P9z6PfgMfbl6IjDsgQzfQHRn2IHih+g7AsU
TqDEBRR9aHoCRTfIKBu6wd/6A2qbkHScf7GS6N+5NGZz5IZcpG2vz/FLYxP9
H1rv8Di+bwbKu+h8PuSBqD/55ImAvb/vCRhOubpe/jSX6O9k0vIrsP4ZjHnk
W7YpqoPor3rATNmr+Dmofij9FF/VRfS/fHzeZ/cR0TB+u0+Osp6Q6L9CTX3b
qbBoWNF50nNho5DoT7EDxQ9Q9gUKJ1DiAoo+ND2BohtMrqgbYrvBFzZ6z5U4
nFRF9C8y+8VVSw8FBeeMsksZHKK/on6H+/wj/for7E+eqD4n6sMXzR7U+Tez
HHrVHoq9m9tG9OeKP17rea4K8udMuDZCkUf032Ms96Zwaw28V972KW9sB9E/
+WrDKvvztbChf+vGvA2dRP/x9jaCL1J10Gf3W3Eur5PoT7EDxQ9Q9gUKJ1Di
Aoo+ND2BohsMsw20fqj6EYoKoxaMuFxB9L8ZrHcwKqsYyhxk3w0TNBP9Pb1U
XUI682Hy4frS4AVloueF3K7hGrGzYWXbptl1b4HkZbf6393aRlUg2T9K/aU4
i/ih+KfxAMUPUPYFCietP4aMkyaGDNJmwboXPTkv+5PJe3b5eWXcZtQGHTun
ay43KCV19WeJQzNck3ngsnROu1NYOamrMzSHB8S+74BPY7tYew0rSV3d1muu
elGsC4qr2LG//ouDua5YkpVr44O7wJr99KLcxypSV1PsQPEDlH2BwgmUuIDS
ZwaKPmC1YLPPm8Q62HRZp+NdTQnRLfD+gzcXk5pBWf6plO1nFtGtoHuQae2w
FpiesM0iZQaH6NaRwFsTFtAKl7Td75U/bSG67Vh1+b6fXxvE3/XqfOHfSnTT
lJvkKja2HRJ11g16K9NGdKPYgeIHKPsChRMocdF0gEYL7TcOsmVwYryl+m12
LdEn4Qpnz+RV5XDDckuE3qY2os/cozYOPzoqISD3xGPLJTyij5rvhPes5GqY
Uq8v/m5+B9GnZkeip3ltDdTy0612O3YSfYRvFUKP2tVCr6912b1RXUQfih0o
foCyL1A4gRIXTQdYH67zblHOB6gvbhZ8lhDNHx7SWjnM5kEorL3hzAs/J+qn
Nbt//RvZEg6bJuxcvO2lqJ+mFC13+MWpJxCa1NE7rF7UT/N7OMGs3SEC6hJY
cRGLhESfU14ntc7yIuDDuqr+araon0axA8UPUPYFCidQ4qLpAOlLYiSXarxC
n0N9bievF+lzUy+V/2tOMWrcLT29fIqo37uq4vSJTetLUdTVabd3qf+vfm8e
6j34oQz9KrC8YD6/k+izzDbI7MGTcrT5ifjHGLcuoo/iB6NPLnIVqP+vefB1
FQHRh2IHih+g7AsUTqDERdMBlr8JLCm/X4wirIYuDDhXT/SJTB3b7KnCQlaH
sn+fd2QTfYKD68tTlrBRtPw5z4jGFqKP4TNhpPVzDpJZYYXWubcRfW7MGrMl
7HYLCvqmH1zn2U70+RR2RW/MoFb0+mHjiv3DuUQfih0ofoCyL1A4gRIXTQdQ
a5S45DmoFnnJti9Zv6Kc6LN6bpnjsKpWNHTCF1mv/54XjD5rC387Lo7jopse
i1Y/nVlD9Fn0XWIKCuWjTWXjz4dOrSP6PNk5d8jdmg7089lyDbs99USfV8fc
9M8e60Q3UydYa/2uJ/pQ7EDxA5R9gcIJlLhoOkBv67D7S2KakPxwpXeOBulE
H52gQ3fiD3BRjfaBgoa7cUSfJV3N3h3+HUg8KznjZtMros8Zx+sRgo9daJRZ
uvsshwSizy0lk3ZXVSGq6NkhnHYwkeiTua58k1aeEJ3I977rz0kk+lDsQPED
lH2BwgmUuGg6QPsVNE/SjoVuGNTEF/g+J/MAG65Orqw+3Y4CO6L2x+l+IvV2
y0X9sA/X+SicF97k3FxE6u28yADWqZBOpNk52mClTgmptydwvO49FnYhv58B
P+70lpB6O9Mx8XXtHQFSnXpgX9/OUlJvU+xA8QOUfYHCCZS4aDpAyeRBqvlz
G9AjwddzH+4XEn3u1qT1fZ/JQdeiWo99uN1I9PE602ER+7wV9Q0yrDQzbhad
R9TkD1pZtaMfs80MssPYRJ/CZ0V//zhwUWrjxsu/z3GIPhP4KGh/NxeZjV6T
fq+NQ/Sh2IHiByj7AoUTKHHRdIBpOZv2v7WvQLslZ8tMHFMjmquUPr37vE41
espKy72/qZXoMyrOXNHaog6tMk/dtkuRS/Rhjz9qYevWgMY999w6rJ9H9HFM
PzautKYRed1O+HVAu4Poc/bQCuU+tya0qS1yVnJ6B9GHYgeKH6DsCxROoMRF
0wGCZi+O2yebiVS4Q24YLBXNNTUUX4s8s/ktsguynalpKuonvNV/GOiZ/h6d
yXw5aJWTqJ9g7+PicEYqFSlZ5m84FyTqJ6TvF/+8NycV5aTq2pn+EhB9NkDL
+q1T09Ac1bbvk0NF/QSKHSh+gLIvUDiBEhdNBwhaGa/S4BMItR//XOOcEs3X
fRxftb21OxskWmZPzvgo6ncV57ZpNMjlQ6FVR/jxJlG/682ZFbVu8wvgZ+mQ
4UW/Rf2uNUXpR254F0JVTJTlrA0ifSym7smR0y2C4LgoVftvon4XxQ4UP0DZ
FyicQImLpgPMtm1Vl/mcD31nt9R11TUQfSh2aH3CHV03shJmn8h/VP4yjbzv
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
NcjVyib+1//wjW4+KkSt81s+s72yRdfnskVzbSOL0dysiL/WP54R//W3vvX7
r6xHyW/MA/LPJyLGf9UsN/7JZgGS36Vp/vNODmL8m4i/inS2FKKkie324d05
iPG/njNWbWZIMfLet1Gx9NRzxPi/G+Gx1G1aNbo/LfbZ4nNFxP+pWejpe2s+
0pd5aRCg20z8r37UPutZLh95uyt/eu7cTPy7vOxZMtLuE2o/NumYz+V04t/I
TP9wuVcx+tEl22XlX0X8c/Ul87fKslHP37fWqdk84j87RLGiYycbDeF3XVqt
zSf+Pa9n7bzhlIEqtoZL7U3PJ/6tIDcobvVbZD9z5qxRo+uJf4elamz/xE/o
e6R9s/QzAfHf6eVow5tZgIaW2ChrThUS/9vvSK5l8V+gKyUeU5ZfLCb+r1xr
Kdi4Lw5Wir0yaT0v8t9iWabSMSgDXDq3V49QERL/R2tnrFu6LgNq6i9+HR4o
8q/dfyBzt9NjUAtOCa5LE/mn3JeQycpF9TN/dQB3RzootNeT6we2s/3cDnQC
8jO9oLGzgVw/lPseUNYD5T4GlPsqUHiAcp+k3beBLxXo0KpcCMbiRyPHT0Yk
3hvv3j1f/bAGvh7sjpBzzCO/I8p9FW159OfjaN8WWBhgNyuyrJ3os/zlyJ7k
9hYYVbTzj/lcLtGHYgfK/RYo/oFy3wYKPy1e2nMHIq33pnjPzIIdfNsR3Ke5
JF6ZRoFwZVUpvPIfvNavqILoQ3kuIOVZrosbncoB1S1xK8vqIvqISy9Tl84t
B/2jWsvs9QVEH4odKM8LoPgHynMHKPy0eGnPTWgPaUaSwxNhkdHUmv5h5DmC
zsu1nwhJSYeOpK0yHEPRc4ryXEM9amuL4w5HIuTzuFzmhOj5WBLOW/WpNBKt
M1y4bvtn0fOLYgfK8w4o/oHy3AQKPy1e2nMf+JkFktt3e6Edy8QuigtE8U6v
mHx/yCo/JDN/X3NPjqhOoDyX0UuZPVfHWtaig5nzagR+nUSf65OnbP2aVYvC
XqybkzGii+hDsQPleQ0U/0B57gOFnxYvrW6Bq3axkZp736Fngco+tbmFovvP
3yXtMlNyUNapiRVBs2qJPpS6Ag0teLNgcnMbSngkzjkU2kr0kahOFRu8rB0d
2SbMMelpJfpQ7ECpN4DiHyh1C1D4afHS6i6whqvxKCwHKVyd/+CiaTaJN2Pl
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
34GCH+T5edTFD1D4B4q8QNEPUPQJFP0DZb+Asu9AOSdAOVe0cwjicCPHsI8f
MYrX/ZH1v1lga2XaVlHbhLbvTSV/TMvDDWq+7yvyPsB0qf9tQqWyPpbdz1Qi
flLMGX2qGPyl33UjZnseUlo1swote3W8Xzm4hL3/UvI/ON18cUDhST7uOrhc
ock/nT2fzlkbp/UOFuDCmXOKr/d8z57DZwExDrNTRbjqgk+33Wuy2fPm8HGx
1i91MUZrPoYv23PYc2W1//i5gdlidHnXTakgNYc9JzO1cF9/AzFutn/xdPW+
HPY8UO7dQLmnA+VeDxQ9AEVvQNEzbV8gk2tRNLd/IS5N2dM5XuE1u19RReO1
cqtrsP7vjlhXr2R2X060Ht5z6AMf+Q5Pvm/JjkXGv4j7+qnqjhFiyJHNi/4O
Q1xI/MjAWXdrf9o3oeadXa1vNBOQ8Recb7Y3M+5I8Gjs1qUH3RORsfN7e6+4
xO0jwZDcdpvB4xORsfOUPANQ8hJAyWPQ8iqwYHOKz4z4IozykywqqYhh9UbJ
K0K3oTFnhFH5+Hm46VhDvcfI2GElFc/pafwaXHY79tez4a8wjthbB7RS4U+p
Q++7TQa9B5agBonTTC9GcfqM4qNAuSVqd0Q5bifxmFnutsgxWkLU6hOiaFrJ
xSMkXlKSJEeufiHA6Q+UHVb7cUleIg0o+RCg5E+Akm8BSl4IEhODVlW2lWDN
iYOjw2yfIWMHKPlPWNR+eUFndTZyJ+ZvTXifhEz8c9+k4vP44CpMnHE/y/ZR
HhI/iLrNnktjb5eiea/pJ9otanERuRdQ8idAybcAJT9DyzvBtfn4uN6nCH/u
ujlq4OL3yPhfSn4VhkRUvWv3y8clgXvNVuRXYE8St1PyG0DJhwAlfwKUvBMt
7wrHfc446PaPRfMAQa8nC6tRi9zLKHkDoOQZgJKXAEr+h5aPBUreg5ZHBaV4
reEFHvWw8/xS5V/X8si73HWoxuXkaTv/vo9ZB/r7aBSS9+GrUJfv9KufkxDs
vw23Ca1i5vUUom/Un8P5j0TgfCe9ePrXYmDe1Z8wpmSFrlkTXKlaP/HwMeZ/
eiQNDhQ8QKELFD5pcoHCIEe7dc+5sNCyRPy5pZqV99xi20y3qho4mf1Cc7B1
HSuv2ZnT0a3r60Bt5NiYcbU8Vl6Bkid/8WIeNHYsL9heW8/Ku8Vi1oZ7cTww
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
FH5o/NPywGj5Kejm8rlVmDPi5rpVPRLgq+++HTG3hEjJ/2NvZ0XVLE8xqpTM
GudzNwf0pfm3RNp/BIxv52hM/G0nd/hwR2r8tpNLpPneg0jJz4ORW1Tzi7IY
dFhuNXaH9m3wir1U25EroeVp8ZPHCeuEnErsL5aMePHrOY4uae2Nn4VIybdj
pcbpmx4LJHjL19pr7IJETJDmXZNpeXucNyJrp+SxBBuLOTfajyaiv1QuL6Tk
ycFG1aGloT4Vi8BtLDf+Frp4KJt/9ZDQ8rE4um8Yb8z6EmyfYSH0OpaNc9UO
Pk5eJkJKPhxbXSIWaKYL8FFk70yz+1y0kOaTU2h5dYxIr5o4S0eIxofDuZlc
LqJUrttIyWPD2QN+uxNt0jH3eL5y1D5Ea0PP4E/qEtDZLPlpo5ODDmePelq4
FuHmTe2LMh6LMDuj3yM3bjX2f+j0cXx9IxZJ86JpqD6V1zlxcg2WrFn7rW65
AO9L88b38VLZiMCP7Um4vyb7yjRJFmq2KCqKksXQFJyT653wAt8vONS+6mQp
/hN0iJ/down15y/dOVqDg5Z+GgdXfRSjszRvz8GwgiNjBVc5uMi6bOklOwnW
S/f3CS7IfpfX4/IzTKrqZx58Mg97hp92rN8phg3uKk+bv7wErVRO+KeiYnzC
6zhbsLEJG186lk/qmwkLtaZ+bLshxnZp3j4DTzu/m1PtnQltV942O+hLUHvY
//6/PEO1oamhpY2RMHNe9OYDjgVYtat7KneQGDQmfEhv6RCBCVQUWc8vIf9V
k3DQRjvRPzEiqHa9k3G5VwlUEPz5s9YZNaxugspXdd5ZV0rgJKerns06OmnP
PcsmED/Y4mF8ugTihnbRpawHynoaP0DhBx5uG3l8558JYKe7qJdozjPy/06C
LWPzIotH5MMPToGq14kEqO+SF/sYeWRYja0Azr3me7M2pYMnqQ+89txwzO5V
RTAwrSl078pkCCJ6vqHQbu19jAcZoXdjItT4pO4lBd1m6YTjFh7s0+o5Ma2z
ntS9cPDEpx9bPdN5EFPjO2HJbj78xemqk1QUmwwdkMyD0kPDFjs78SGI7Dtl
PVDWA4UfoPADFHmBIi9Nn0DRJwzamra7SCcRdCqE13peTIKKrjpM/KMn5/vt
IZkwRWMz31DtPSh1nWe0Dxi9Ni0lHyLs8Gzn6kIIIXWtaccOVwZty4U1l4f8
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
        "], {{
          {RGBColor[0, 0, 1], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFnHf8j9X7x+/3fb/v1aSpodBQtIuStJB2RiGFKIWiRSqVNJWkKQ2UQmgo
o4UGSpSS0dJWoZL2rt/r6XW+j98f53Ou97nPfe7zue9zrnNdr2vU7X5+275x
FEXf51GUqP5Af16vRNHnok9Jo+gzlYH6fbjqRlkU9RR9mOgDRJ8j+mr1v1L1
FSo/qm2RyrO6d0/12Ut0B7U/rwdcpPoWtV+r/o31+yr9/lTX56rcp/Y31HaH
2iaJfkj3/qcyR79rqf/KyPMZqbY26j+Dfmr/VPdMFz1R9Ceip4m+V33aqs8z
om9X+yK13yV6quhXVc9VuU992jFP0R/r+lTVr2v8T9Q2R+Ve0X3Vf5qu9dC1
y0XPEt1f9PWi54m+TvRZGucI9R8i+kzRh4u+UXR30YeJvkH0Zeo/U/37if5B
bW8yN41/mfp8r3K/2g9Vvb/azxb9gvperHqY+nyothdVhoruo3Gm6tpZuva0
6jNVX6X2vXTv3urTUb+bi/5A5VzR/dS/j+rzVD7Q9dkqN6v/U7q3u9quFD1A
fRrod1/9Hl+NorG69wu1n6+2X1Vvq/K7ynYqG6ncqOvHa5wJ6p9rvSwV/Zba
31T/O9U2WXSh9mVqf5tnafyzdW22ro0S/a7oR6A1zj8qL4h+gnereqbKcl1/
mPWie0er/T39HqffQ9T3BI35qOhdWG9qr4peojnXUHsu+h3Rm4rORO+qPlep
Tyq6m+hJok8WfYPGOU59xouuq/Zlqv/Ss/ZQ+55qb6/fy9R3rOrn1P6f2pao
vCb6X9XvqLwq+lk9Kxa9VvQ00RXR34qeIjoSvYZ3pvHP01jrRO/AtxD9o+iP
VD+t8eeL/lNle5WNWW9q/1n1Nry3ip+5XOXFip+5TGWo5vmrymS13aEx39I9
d/Ot1dZSzx0hur/oo0TfI/p+9TlRfUaLvkTtrdQ+kv+Z76PyMnPgG6q8JPoR
9X9c1x9TmSC6k+59gnt1fUt9153Zg2ofpbYH2Eu6fi202r/R+OepTBT9k/rv
VHg/f6e2C1KvjZ/VvnPhtfKt2vqm3u/wjXpqv73iPThGzxok+gtd75h6Px6i
d3uXylTRX7EG1We4+qzR9d4qj0b+v5aW6q9+x2tu9+n6U+F/XKL2kWq/U/M/
Ova7Wqv7LlJ5TH1uVfttartH9C6ay0iVtuq3t+7pqT4j1X6cft+rPlNEX6L+
E8LeuVj0+Nh77XzRO8feyzdqjLgwD3lfYxyiMkj3fsya0nyu1dgXqv8usXnp
Hvp9A3NUn/pq66W2a0U3UNt1KreLHqzxTij8rN3Up7fq6yLv8Tv1Ts7X7/rq
ew1jqf12tV1TmBdcq/rEwnPeTdfbaz43qU9d0S1EXw7fFn0j7zr8jxfAw0Sv
YF2l5iF/sBc0/3vU79jYa+pJtf/GulL73WrfVfVZ+l1T7Yerz83qM1b0YaJv
Ev2Q6LWcF+p3u/ofGpuPPqj2dXruyVXvhaa8D5WnRR+s+o6qv+k16nM1vAEe
JfpUtdcPa2N+5vXQWvNtIvoS9Zuj8a9hT6i9rdqbqv1S/W4j+mDRA0SfI3qV
ylDRwzXmkbrnVtFf6/rrmdf2LWofxlnG+aJ32bUwPVTtz8amG2kut6o8wn7W
9btUjtK18foWdxS+n/X2XBj/DPaEyiv6vavqe1Xaif5aczlDZZTGuVv9j4m9
r3/XXBbrvY3QM7ZV37tVWunaV+rbJfV+XK0+tQrvz29Fv6H+w9X/Jo3TLPY5
9R3nkdpvY61wPqr9etat6ENin18rNV6n1Gf0KvXfuvB7/FJtp6d+n7yfrdQ+
WO0NNdb1fCe191f7FvqfdxJ9sejaouuKfl/9vonMT9awj6qWPXbQXB5XeUq/
3+W9q60ePFJtk1Umqv1LzevNivntN7ppstpguwvU9pXqzVUWil6leguVVzmv
E/Ph5/X8RzTPt3R9Fud7kC04876MPIfVGv8D3o3oHfXMJ1Sm6wFfqX1RxTz/
e3Vsp7ZazF/tH6r9e9F11PdJled0bYb6vFzx2VdbbY/xv6n9W7U/qVqvbv2a
Oqr0uuoMz8m9/k/SxYMyyxsvq74/9358SfStuflDZ/hJ5u97nOjGmeWGE0Qf
mFneeKPis2hLla5qb5ZZbunCGsu9B9/T79WRv9GD4czlfLxW/Y/JfF6fwprN
/U1vC3ySdTtYfY7OfGbPQ47Lvcdf5T7RD4seoz7/pj7HntS9PWKf9cgIU3PL
Cd/ofTyrPjtydqvtZl1rgjym9s1Eb672ffSerhG9r9o/U/vmrC21H6L+Q0Uf
rPYDNP6NGn8rzg712YJzS/TNattGdSv1OVp99hG9l8qRom/XtfqMI7qO6h1U
Wor+A36s8o/GeREZS/QPfHPONtE/wZ84z0Qfzjth73Iuq96Nd6Zn/cL+VJ9d
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

              "]], Polygon3DBox[CompressedData["
1:eJwtnAn4VVMXxs+594wNhiYVKSWkhJKpIiRDknmqRJpIilKhqBSKVEQjpaIo
U4aiElEaaBIi85h5Hj/D9/6853ls7XXWPvuee+7ea6/1rnf99+rW74wrSkEQ
rIqCQP8FPfW/VO2XMAh2U/stC4Lf1VZq0APS95AuUftZuhpqj3JTEgSXSh+r
20XyX+Ug+EC6PyQ/qHsfUust/a6SH9egtzTmQPU/0pj+uvepPAje1LU6unah
xs6W3FLXn9c9ofoltYvUXy99V43bWbobJB/K/LGffSf1X9d8ZY2N1C6W/hVd
e0b67dLvKt13ar3Vz9V+U7+W2rl8Vz3va+r/rvHXpEEwSffvrfvO0LVR+vdk
fd6bmm+p9C9Iv0j6h/ke0vfS/Znar+rXVLtI/V00frjGH6bxj2n8YfpO3SVv
lNxH+t2lnyj5LMkXFe93gp7hdt3/osY/qfkf5bklr5T8hORHJL8tubP+baX7
X9T903V/W8l7ac7r1O8n/YWSW0v/kvQzdO186X7X3O9I94PkBpKP1phekhtq
zFp99jq1a0v+TepLf5T0PaXfW9eGq3+i5ntd/Wek7yT9n5rvPel/kXy55D2k
v0P6s3nfmutZtSsl15N8jvQ/afwWjf9V8gWS/5D8ruSfJLfS/M10/xMaf4Pk
wdLvK3mO5Kskd5b8P41/n7UoeYjex516H/V13+m6NlL/nqTxb2j8s9Ivkf4R
6R/Q9Velv5jfXvoR0h8u/aWSK/BOpKuttlC6cRpfVeP7sg/07KvVrtH4A/h9
dP0ojVkl+R7J10o+VPfPV3+m7j9DnzdW91+ta0ciq99b7X8at1Zjqkq/Qu1N
6epLPk39MdIP1PgjdO0Q/dtTY8eq30afcaT6B+vzFql/Pe9T4x/V+Hm6voH9
JvlQPd8l0m+Q/hHJLSR3k/xq8ftU1P1DJDeSfJZ0o3TtEF17mt9I8gzN10Ly
YsnNpOuuuW/R3EdJniv5X9aH+h/o/oMlXyL5Zulb69oC3Xeb7t9V1y6XfrE+
/2HJ90t+RWOO0PhB6k9R/2TeufoH6Z7H1R+m8Zv1+VvURkpuJfkgje+mMTdp
fCv2hOTv9Xtvkvyj9B0kX6z7P9K17ZJ7a+yBujZV/fGh18vuajV1bzvJT+t5
Fup55mrceslnS/eD7t2s/s+650zpLlX7S/p1gX+bxyQviP0bfST5WskZv7Pk
e/TZN0n+V/N04X79+53m2yjd95If0riXI6/1N3TtFH23yRp/oO57BBsg3UCN
uVu6EyXfq/4/7C/1V+me9hp/t8Y31fiHda25xveQfozGHy35VN6/dB+zhzX+
cMlXSz9Z+pOkP1339lL7U9fWSD9Hz19Xc54i3eOSb9O9z7EedV9LyX9I96fa
WdIvk9wXe6pWkryf5jxVYy9R+yW2vZum+1+QXBk7WNiTXNcGafy+/D7SdVP7
Ofb+a4+tVvtR8hLJh2S2x7P1/PN4P9hmtZ9i25OrpM8kz5f+EelX6/rOap05
VvQZV2BP1cqs59D2o4I+fzDPy/2S60ueLrm75AGSa3AesPZCyw2knyG5h/T7
aO5NatUlnxl6vZ+htgrbq7a7nucntVvKXpOsn1j399P42rr/SsnV1CqVvD6Q
95J+muRLpP+f7v1L7WzJy7HJ2B/OVsn7h7aXO6mFvD/JX+n3Wqnvv17PVFHX
5ktupPvPUf853f+K5CXSPyX9Zxp/m/79Te0C6Z/GnmlsIP0MPe+90t+nuc9k
vUj/LvZGup5qf7BOJZ+k/oVq30peKHm25t9Tc7TX+Mck3ye5Tua9+6jkH4v3
wdp9WHI99R/U/d/p/g4l78cv1I5VfwrvR/oEe6DnWajnaZ75/J4l+QH2oORf
Mq/dRzR+P927Wa0Ge1/6dhrbSe0rXXtQ+m76Lmew/0veA+v0fE9L/4T0n2j8
tZqrAueldMskN8HfkPyr9OeXvF/Lur+v+jXZr7q/scacJ/l5/AfJ+0s+V/IK
7L3Gnq72Yck250TN1UXtG823QPoT1O+s9rXkh4rz4Hu1UzV+XmD7Fel+nKpa
kk/W2K5qP2jMYskHSH+W+tdi+1kT6m9R2w3brGt7FO9nbNk2d99iv04q24ac
qrGHa/5lGn879l/98Zq/of6dxXya/3SNGayxB0s+GTsm3bPq36bxb+r7Ltf4
5br+k8Zco/GNpL9f+oHF79FY8oOS+2HTNH6Zxi/T9R81fr9ifd9dtg16WGNv
x1/SvzN1T2P2k8YOka6Z5CasR8nXsBYkd9TYHmq/69pqzb+39G3U7y39PtI3
lHyM5Ev57pL3kXys5Mv4bMlDJO+nz5qr/gDd/7ye73HNt1BjtmnMesmLJT8p
+VPJK/Tv37qng8b+if2RfJjuX6r7x+EzavxSjV+q6z9I30hjT1N/kPoHacxT
0i+Qfg7nha6do3/305ixuveG0L9fE833kMb2D/yePsRGhH5f1fSuflUbp/c1
V/r5+G6ary7rs7Bf1dUqc1aE9g8r41Pz3SU/pXufVusvec/CXtfRHHdKPiew
31ETG1my/4FfsRs2vWT/Aj92o1q1kv3ZD/V9ntfnv6Rr/4b2ozaoVS3Zn5qt
/gORffW1kl/Fv1TrI7kK+13P8o/aVH2fGdLP1LPcovn21L9347Ow1iR/oTma
BPaHCSy+0NgUf1b6H/BJWD+FPd5f1+Zj6wv//l/pdmhswufreZ/RfE9r3OeF
Pxeqfal+ptaNs0vtK/VztSUa9xU+rOb6VvIH+F+6/0XOXcnP6t93pa/C+a12
CfZB7Wv1KzCnnu17tRF6hrsC+034yyMD+0/tNN97an9p7GmB/fKndf83gf3z
0dIdr/vnaezlmuMQfMPc34l45U7Nt1761pKPkzxJ42dJ307zXKn7W6g/KPc7
I36YpPGvaPxRGt9W8lGF/9RWcpNi/9ZRq63POxH7j6+OfZX+DI2/S/Pfp/lO
1PxXSb8L/n5uvw5/brnk5zK/2xaBf8eyxnYN/Hty/iyT/uCy1/Qwyb+njh16
lr0f91CrJfmE4vdivmbSVZd8rD7rXLUPYturNon9yVnqr8Hn1/g/U+/1GwPb
6qWa7+WybfbRif3DmdK9LPlCyWerbZO8SWOWZn4+zsZDOO+km8yZQsyg8V0l
n6P2VuBr12ruPfEZpTtJ9wzVZ/+WOtbpLv0xif3h+1j/2GTOEukbqP9W7PO1
o9pWjV2CT1zETy0l7yl5nMYmmW3dHZpjZ/XX5vZz8W+Jzz5TO1L9URrfVONf
Sx2btgnsL7/JnsOfCB0f8bl8fg/JLYv46kB93k6h44VtavV5fsmHqv+GWj3J
3Xgn6r+uVlfyxZKv03PU5TfjbAgdL83SfLXKXsPDiV1z7yP2z0HSb029V46R
/gf1V0nfnDOMPUGsyXrChkv+UP+ejT+vfgt9RnXNvR6fO/b52D/2WdpOukma
84rYZ+nxku9kD2v8GtZMbH/iUPUH597zxG/Ev5+qHcF6wR/ED+BMlDxS8nnq
f4yNlzxC8g71e8Xey8eUHM99rtZS/dHSX6b+l2rHSZ4Y2he6g1gusk90eWxf
pC2/p/RXxfadTpB8V+EvvpLbz8dH4vx+Nbefjo9TP/WZxFnUPLBvtSF3nISP
1aqINw/X+9+D76P3eX7yn0v33x7oqP5dsdf6ezyD5jpV4x/jLNS1+6XfrsEV
Yp8H9SSn6l+s/hTOCN6dxjdV/31dn6D7O0h+VPLV2CDpz8v9TsETOMerx7bF
nOf4FbvF9gXwL9rk3hOsSeJ1zsOP8DGkG4M91/hasc/C+4hBJL+j8bVj+8eL
JL8reffY/vqtep4os69ylZ5nkN7LK9LtWvJ6Git9OfNZ3L9sW1Ji/ZdsU/B1
p8WOhfF5myfGL0ZIfgqbpLEf6J5GsePp6zXfH6l9DWw6cTD+B7aHeLidxr+v
8fvGjlfbqn9+7j0LntJR+g/5/WL7Uw+BfeQ+JzkfwcO+1nM+p/al9HWlj6W7
SP3J0j8h+T2N3yN2PEKc2DS270W8SBx4QGzfhnjwAMlNYmMhC0s+n+7Pvc/Y
X0ck9lcmSP+c5Kn6blUyx47YsOGS/5fadxol+cjE/uFE9Vfo2r3Snavxz5R8
Jh+fOF7FN99UMr60nTO65P0+VN/vNcl1JA+WPEP3n6P7l5R8Zv4leaae722N
aaRrzfTvVrU9S/YhTtbYu3J/L75PZ/3bSa2CdOt0/226P87sO/KM+NLLI+vw
qY/JvaZZy/hv4IT4m9ha8ELwktm6v7bGfxd4bVfKbC9Y4/yWlTPbX37T9sT3
sWO1t3TtAul3ymwfsBNTNN+umbERzqxpkqtmxmpmS26XOB4nVtqsa6dIvjl2
7PY26y8xHkJstUXy8bk/g7nBkzrgP8WOPbZLfyq+HWeA5HdLjkWmxMYyiUmI
habGxnqIiSanPtM5y68HQ5ScZo4t7uQMT30GcfYMLXsvvZzbz2VPRQU+RNzA
HjyiwGsbaOw/uv8b9hxYbPk/mDd4kFhM+s6SL5DcRfN/zmdytkm+WP0v1PKS
13xX9XeoZSX7FC3VH5U7LiYebqn+Nbkx53asT/WH5MaYj5d8osa/r/a3xp4u
+TJdf07f/4/QeAT2uK2eaUPJ8ey3eq7z8LH1r24LjtD/bsyNI4AfzJL8QO5z
gvPhJH2XTzOf/cNZz7r31tw4BPhDf7AB9eNS4a9LPzQ3jg1+3VT9Abkx0UbF
/e9ovjPLjjkOkO6q3JgneEX11Bgy2PHekh/FHoIXlG2zz9Pn/cpZQLyCPdfY
tWofE89hLzTXwNyY6P6F/flE93ctGzM5Kjd+RQwBvjxd+relP0369pIPTh3z
EOscK/lCjXuMmCW0v/4Y9gn8QeO7BcbFHtKYzwPjY+CQSyR/GxiPBGd9EpsX
GG8Fp9hIDBzaJ0tz4ztb9f5e0pju6Dhf1d9d+jg3XvCa9CsD+/mbwVxC+6R5
7vj+Hek3B8bbd9MzjmVvBY7zXsWHD33G3hF7D7F3wMMWSV5LzBD6HU6KfaZy
lq6V/gq9i4m5/SL8obtj+5D4juuK9/O33kVj9SuGxh3WE3OExh+wZ59l9oU5
c/4t8Jj1uv8pdf8u4qV12P7AceR83f9Z4Hjydn3W6Nxx6p+FP3QsPn/J+AK4
6mORzxLwVfyn46R/tWQ8oq2e/11svHQdA+cNno1s+7YX8ef83H4Q/g/5m+rY
nJL3F3mMRcRPgdckcfQjxGuB4+l9NfcNuXFz8HJw1YXq7wiMrzaU/vrceRXy
KeSPamj+MSXv58uln5Db78bfvkXy9Nx+Kv7pco39JrMvc4vGZ4mfv6H6A7Gx
YPvgUdKfqWt7pcaAePfNJCeJn78Be1Pj08TxGHtrQMnY3QrJFQNjeFX4bSP7
sqMk15L8U2Tbcrvkqonjd/bGaOytPvvLzL7HeF2rSfwaOfYbJ/3D0j2S+V3v
o2u1pf8lcuw1vuR8Dvp9yl7TOyVe38Qqw0rO7yyUvmHZe4b9sRgfOTRee2QR
/zeRvlLoOO5dtSYlx3PgGZyF+HcDQ+Ny18TGGsDnwIvwk/CXrg59Lh8X++zm
fK4GVhg5Fr1J8t96ntX6fY6P7c+BH72ndoB0A3R/5cT7G192qK5VSrz/+C2u
4wyKjf2exm+n8Xvp2Teyv2LjlZOxR+A/kfcvce87ao1Ljn+bSHdl7pwV+PIS
jf8icyx9jeRSYvtTQ/0+JefW3tL4kyLn2Mhd3BcXtgL/QvrvMp+NxJBg7zPx
SQJj8H9zDse2PT04I2NjdR3xnwp7Arbehf0bOveyjXg6cg4Gf+frzL40Mc/N
kqfljruIt8jNvCn5hMg5GvDQ13m/kXOa2BtyEV2xF4V9Ind0oeQnQ+Pnb4AP
RM5pVkuNebE3WfOdpP8289l+L2s4NrbWCd87NNa5VfcfGxnzXKz3t0PXemv8
pYGxz9ekPyYyBsohj72pFjinGya279U5e0vGVW+NbcvAVyfExpY7q78oNHa9
RfO1iYxhg19uknxU5JzDgszrHayEPU5+lVzDmdLdHzqfRy7hDMlzQ+cfyRWc
LnmO5DN171eZYwV8XvDIzZr/6MiYO/Z0q66dUDYG9ERk/2VF2WcUWAn+9nmh
MZNd9S57SL8XthsbIvlY8NaSfZzX8P10rSmxcGhb3UbygaFtdl/du3Na5CZ1
T0X1eybO9XFmXq7+TqlzpeQsyAcOTHyWcyZdof4uqXPlnOfkx8YRA4TGeAal
zrmRa+sIfqX+m4mxOvKVxCvbEmN784t4563EuQ0w3Kl63p3xOXn+2LHK1ann
ImYhHumT2jaDAT8puW/qs/BqzT9Pcj/J7SX3kvyx5h9ADAr+pfah5CslnxI6
ZiPeWJr4Xj7zWvVrpMbqyIlfRzyZGqsjJztF8pGpfcFzdc+tkluB0eObFfbi
8NS+G5jn3ZIPTZ2rIuc8glhC8l6Sv4mMXexPDiw0hlE7Mn7J9+UdNpZuBJhe
4DH4cnvgI4f26YZKVzM1FniExoyU/kDJ9bGtmmuDvm+L1LkbcviXqP8l40v2
4QaqfxwxTsk+2SjJbSXfU/KeexXfPDW2O0HXuqfOAZH7wecC771Sz1A5tM3v
p37t1L4HPgh40YTEZz3fuY7kAZIPCvwdblG/QWouAmfwU5JHSO4keVDg3GTl
3Ouf2PNzfd6N0ncOHdORG22W2R5hl8hlH5zZHmGXyDUelNke/mcXU+fQWYvH
aI7t0p2ra0ep3wY8I3UOldzp0aF96/NT9/Gxq0bO9yEzhtxy59RzkWMmd3Vg
ZvuCnZmr/hy13QLnYJ9LvX92D8zhIBeAfcQ/Wxc5t0uOl722RvKy1PuR3Aw5
YbgVnMGcvRukf4D4OnOuiBz08tT7m9wfHAZy8cSY+FfPROYagKGBnT0leQrx
I9+R94vPJd14ff9TA9uM9zV3j9S56tn6Th9I7pUaO4XzMFdjO6TOXZLTBN/p
mBrLJ4e5TeNPSZ0rIOcInnJpauyXnMhw6W/InEtaUHKsXZGYOXTMTa65Evha
aKzheo0dljn3Rg4DLsSF2MDQnIg3pWufOtc5tWSs/wTJzUNjxW/xWZJbhY6R
yAVdxB4IjSWRm+rGHgiNJVWKnI/hXfBOpmKrpG8p+TzOT85Gyc0kh/r8B7B1
qXMbPQt/997EsebBoXPzx6Xuk6MfJrluar4PvB/ip5GJsVWujVF/79S+KjHE
fZnxAmIZ1hRndZIaT+LM5qxPU3N3OPPxNTLJmwL7HDMz46fEPvgklVJzEPCN
OUMrp+ZI4Ltzhu6l+y/PzSFgjXG2x6njec54zg9yTsQGVQP7ClHq+B+fgXwo
fIBlun9x6HfBO+Nd8U5Y7/vmPs+I3dgP++U+j/Dtif3fS3x2ggHAZWqU25cg
FoB71Dj32Uwswf7YP7c//V+ug/2f+/wiFiLXdnBu/49YjFx1s9z+IbEgvsf/
9HkvBIUPEpmzBVcLvhdcjTq5vyuxBfupbu53RWyJ7/BbYnwGH4Kz/vfE+Apn
/nGR/beloT+DXMdLxPCBfWViO2wgto8Y717JL0iexFqLjFXhw+G7jYyM1X+c
2FcEs8eX+SMxPoNPA3b7bWI8Bwy3oeT+uTlkxOxgwV8nxs/AhPGt/kyca8bH
uj9yjo3cGu4WuZhPEmNL5GTAjr9JjCeBITcAu8jNYcEG1Ve/b26ODDZsb/X7
5eZYYQPJlTXPHV8QS5PbPCx3vEOOE67B0bmxBjgHcJc44znbySXCTWLPsdfI
JbLfyfER75Q0/rey+S74Sqwx7DmYB1jHTrHtx8Jif1aJbQ/IEYP9VIu9Vu8t
zi8Ig9j7BcX5sEts/wofDt/tr8j7+57Cfv4j+Ud9/guRuWTEdGOl2yd1bHqi
5GGS90uNLYAxwOe6QdfqhMbYf1Z7MTLXr1Jgf3Rw4liMGAz7MaI4T9+OHN8N
wU6WHMNdl/szmJvcIf4DmFA9ydsk/1M2v5GzmDnAurBx2LZ+hX9CjgWu3ZeR
Y+MnC3+JGBl7SU7/Isk1YvMR4D8t1bxPE+9pzMTYvjYYIbnc1rnjTXK65OoP
zx2/kosm139E7viOnD9crT1z2yawBXKjrXLHv+RI2/MMsWOHN3StVWR/f4Hk
RZK7a+w/iXP3bSP7X+MLf+rryFgAvwm/BZgA2AE+Hb4cGAL+1ITCHn8bGZvD
B8T3A6OLI+dv8c2Y8zLp89Tx3MmRP5tnGKdnelRj+qi/T+589Rdl8027J+Zi
gWHyfbG/4BuPR7Y32OcvsHeRc/vYW3z1Bwv7Tkz5kO6fGTl3RQ4Lfgs8F7hU
cKrAH8Ehv0vtP/cInHMHrzo8cywJJ4Xzg5jxQWy15puv/jy1XQJzYrH/xHhw
o2ZEPn+IGedLvkfyDPVLaYFFlbx/8RePl76mPv/71P46+xUOAOuBHH8L6RPp
P0t9fvJ+4SB9mtqfIFcEp+rb1P5D98CcKdYDOfNDdH8UO7dHjg/fENwfLhic
MM56cFG4DHAa8P3J25AbJEcI3g/u/0lqfwZuKByze/R9ymnB5SXekPxE5rMA
jgP2k5wa3Kvxhb0lZwY/cWJhH8mxwY2ZQCyn/r+JuU3EvHcRHybmKpGjqyH5
88RcInJ8k8BzEmPF5CBrSv4iMZZGDnI3yTsSY2/k/Dh/idnhLk2P7IsCLIMt
di78h8vYvyXnHDjveyfGnlhzS6RfrFY3MCcW3zlMjT3iQ+Mv9EqMXbEm14DP
qzUNzMkFLx6UGGsB4yT+vzox1oKPi/9xaWKsjBzuS5JfzIzlwmH9MXW8ODRw
Dvin1PEiuS1yxD+njhfJjZFzBjuGA8nhBIZ8cur1BFcEDO4c9dto/ltLxpTh
Cu6TOX4njs/VPk7Nb4Pndh6+vPS3lYyJn5R6fcHFgKMA1vNSan4ymA+53k2p
+R3kfO9Xv6vuf6FkDs3RxA7ELCXH+HAPG2bGC8ANOCvx8fHtOTPhGu6dGT8A
R4CLVT8zvgPOw1m6NLWvz5nKWU5MQSzBmU4uYltqvjs5ieapOVRwp+BkNEvN
kYLrA6eDXMZbqfnz5DTgsrGmWEvkkckFrErNfyYnQO5gdWo+NTkE/A/yNfCP
xkS2b2AUnLerI/tv5HDgZ98YGasDsyM/R54Of4J8EPyvsfiT6n+YOLdLjpxc
2EeJc5nkxMi1k3Mnf0set4L6H0g/LXAOPZD8buJcGxjgv/xWiXOfYJD/SN5e
+FtgeHBdNqTm78B5gSvHHmNvkecnd/Fyaj43OQy4LhtT84PgvMC1q5V5b8IT
wLchBiP2wsd5BtuOP1HE80M19jri09A2B25j7cx7nzw9+DucRbBQOEv3SP98
4tzYTZGxSTBK+Hvw+PDXwMSmar4pkWsTqFEgP0KeBH475z25HzgY+L/k96tK
fi+yfww+Db/oHclrUuMJYDvURPBbg4fsF/g3X6T5Hs+MdbIm8J/h3MC1+SDy
uwIvaRT4neHfwbGBW/MR9lDP8kNiLvr8wNzM2mrTQ2PB8B03JuYCTwvNvcNm
YivBCc8v1gPYLpy4BdhmyXMCz4EvzXoAm+U3Hi/9ssKf7sMZqP7biWsPqEEY
xd5UuyL0mhyp/gi1yyX3JcYr1iPYNZzE5yWvyMw9Ys3gr5KfasB+jFw/sbXw
nzmT4XbuntsfAYskv7QZfzw0h3hLYh8B3wC+5cDC3oIdUiPwWuLzAmwXfjL5
mlfwv0NzaJ/Q2NeLeIWYYkBh78GyqYFYiS3KzOVizT6O7UjsG/FMxE9g/mD9
m3h+jX00c24AG4c/hv1oqP7Pkf017Mfekn8s4jHyg9j6VyJz6eDUkQ8gL7A5
dfwKFwbOG7YSvAeuGDaTeg78S7g7cJK2pPaPwbLguBHv7JL7tyMXQL6Y/TAq
MMeS+Khq7j68y7WJz09ypdiEF9V/PzH3EQ7k26nxuHaBa2C2p8brTghcY3Mb
Z4Xa9aFtzPTU8ddo6a9jDunGqA1Vf1jo/PqqYn/CkZ2L/czdhzcL96Fa7nvh
QLyTGj/E36SmY4rm+iUxd50zgfgNTJp6hMmR841whMGu4SgTn4KRszemRo43
wazh2t4VOVZ/NjXWRMw+VbpfE3PnOfOIR8Gg4cLeHfms+TkxF54zp4HknxJz
3cmJzNH4Grn5sPBiLy78DbhL1PTMw/7lrgehLoRajV1z82PhqtyC75OZC/ak
xt+k/ujM3C9qaG5Xf1zmXBAc4dMK+w2XjJoS+CvYb3Jv1GTgX7PmWeuzItvH
Krn5t/BwVyS27+Qy8CEm6P7xmXNJy0uu1aqem+8LF6Nb4U/BzaIGqU/xPuB2
kbO8rHgfcKnIcW5Q/8fE3Ct8NOrNXpY8IXRN1Br1P0tc60HNxx3ST8SfkDyO
9aFnX13E87eGznXWzN0n50k9xLrEXA3eKWc/n8fexweAe8maZi2TiwLfq5cb
yyHXTXywB+8kcO4W/iF8LHIzz+j5zkrM1yA3tETyZan5PXCqweRmkyuMzMV/
JjQeTP6lS2jMldiPGLBObB++d2p+FBxnMMGRqX1wfG8wXLAMMI09Y8fsPVPz
q6iZAlMkdieGrxjb5wdfJp8P1kjMQH4D/kaH0Jj9NYnPn0Zl19Thj5NzJNfY
uOzYF/u1b9kxMOcV/gtcXu45NTX/jBoLMEtiPWK+HZFjZPiX8DHJbT2Lf5U6
ZiBWIKcA9gAGUSl2jAx+Dp8BLhU5BvB1+BFwycAQsaf4i3CDeaY5+pzT1d7T
vc+G9sfg15J7xaay/6hH6Rt7zRGbEqN+Htkmsl/xEfvFXqP4q/A34H6AYRO7
E8P/GTmGPSt1DETsA2Z5Vu54lFh4VWBfGJ94QGx+IP4y/IvWoTFS/Gny2WCp
xGj4w/B14eoRc+HL4tNeGZsfSWxMjPxHZBs3T/9+WXat5mecOcTLZdde7gjs
n8IXJrfAGTMrdr5zhforQ/ML4ddSu7RK97VOHdMSy5Jzwb8mfwYXgZzXYanz
tXDOybmQCyAncGPs/By5AnIGo2Pn77Al2BRidTDSKqnj3fr6rCC0L0W8x9rC
pyIehnME14gxxLt8BnNXLzte5DOYu0bZ8Rv+IdzZypKvzhwfM5YazUGZ40vG
bmM9q18BH0ryct1zgPR/6xmqlV1DQz4B+05t5B7kUDPXlFBLwj3EY3B84fYe
WXZuh/zXhWXneMiHDZbcKfA18mHEw3CFOpX9e8H3wH7wCjZl5nDD3T6ubCxh
Y+Y+mAK5IvIxvcrOGU3LXFNDLU3VsvM1xOO9A48hfwDH8hLJ55eduyQfx2eT
wyTfAKenm/Tn6to3qfMNjKXm4OvU+Qh01DQtUv+vxJ/1cOjzjjXNWq4Cxym1
T4IvAsZ2U2L/rbl0Nxf+HP4/tcFcI/6FswxXuWnZ/hP+PrXFLST3SZxvqVt2
TRm+DvHrYWX7PNTngtdVDoyv7pk6nmauXaS/ObE/xlxwWoh/4dTCpWUO6k/B
C8H6wEeJv8lhjYjtE5LvIf6jFpVn2D21z4+vT86te2Y8YSfpVhf4AvEF3GGu
LdT476Tfmd8LHyBzjQS1EVwDGyBfxdoCIyDW+F7Xdik75uhb+BO8240lY4tg
jG9EzvddXvgzu5bNccO/wUZgG7g2OXMNGLVfzAk+Qc7shtg+K74+Pv+w2D4v
fEv4lNRWrikb04Z/CN5Evp6cB3xauO3wFch5TI99dsF3AHOH3wheRb4dTB7+
JPgI+X0w7jGx8S74BOQs4C+CXcJ3IMcBf5HcBXwGcgJjY/v28BPIqcyIbcvh
c4DFgsmSywEPJJ8PJwEuApxE+MHwc/CFiImJtYm5O8X2qeBDgGe+HhizJBYl
Ju0S20eBvwCeCtb5cuD6TGw5Y7GZcP/hOzeOnVODSw3/tGVsnws8f4ee41ON
/zgwxg6/iHgQjh1YAJjAb5FzxnCX4TC3ju3DgZ2CoZK7BuMGGwUjJdcMRr44
MucFrgucRmot4AeTv6PmAp764NjxKnz1Man5yQcVPh/+G3yrw2LHb9TKwicm
H0jNLPEbfJUWsX0gagPgCZC7p0aAWgnymOQzqZmAfw5fq3/oGA8+OfwXuETE
eHemxiTAIogJsdXE9F1j22zqR+DLwf3lO1AvA7/notAxfEt93pDY/jg1rNQ7
to4cyxHT1Uq9P8DeydHDH4cPAtebmvabUmOQYI9gBPCP4QCAFSBT7wHfk9wo
7wA8gXryBrHjV/gV1P83jO3vXpuaD06NEpyK61LzyamRI2cKH+CuxFy6Y8rG
oKmfYi1g88Fb4CC3jx1j42vic54Q258lviZndVLs+AqsA8xjZWROyczUGA3Y
DDEXfG3qp4aHjqnAqsCsXorMIYHvCx8I3xwMCX429UxwxYcW/i8YWJ/YPjdY
GZjZ85E5KthCMLHnItvE+bH/vgJc1K2hsSgwKb4n3w88Awxra2SOR5fEfDtq
rddzhqTGWMBWwCg4G8CIPol8RsBfhp8Fdx3MirMBTOjTyGcE+AeY0euROSOc
1cRkyyKf2fiCYIhbIvuE+KZgbK9F9lGJj8EUP4vMiQDLA9P7NTIHg9o3eAbw
DaiBo/6gVmTfGv/0+dh7E64FHEtyKPDlwF/AAOEjVyx8Q/ynF2LvXfgi1Ii9
HDsvTX4ajvTK2PxB8A04zeRs4Aviq4Gxwk2Ho94hdgwHFx2+eMfYMRc5GviK
+LZgqPCTq0T2nfFHsRfwn1eWzdFdEzs3TD4dDja1ttRz4EtTc7sudn0Cvicc
FuIt+NHnx8aTyBFST4KvCkdlXuqcCLkQYrK1sevF4APA+Qavpd4RrikxGmcl
mNzFsc9Mal2pDyEWoeaVeoJ6kfEk4pv/arNj8weo0aZ2ER4CfARqGLGn8G/Y
a2Cs0zPXkFM7jk+HPww/tarhxP/wB/BNaomysmsVwBvSsmsWiJcvyMzFz8t+
/8TP9KkRIN6FYwe3rkLZtRLgGcxFzQTYNPFoxbIxauw78XlSNucSfxL/c0tg
DjP11r0y15ZR4z+58AfgRsIZxn/An3gyMGcYvhA1gG0lH13233+4JnOtAGcs
+Cf5FmozcDCp3+6ZubaOnAnx8gO6dn/gZwRvuUfy3YHfAfjB6Zlr8+Kya4vA
76Kya4zA88CXxwS+Rn0Jf6OFWgswjDsz/w0T/nZJpbJri8D7ymXXGLF+wQt4
dy0LPHCi5rg58Bj4JydmriUKy8Y34NzCteUdUksJvst3o6aS8xe8g2eF8wrf
BQ7/cA0psSZS81mYi5o4zm/4MOiooaP+vEfmWkJqrKlvx8fDt6Pmn7+PgE+G
L0bNdYvIfFqwUDBR+DRwvkeoPywyn4a/4TBS8vWR+VX8DYgbJd8Q+WzljOVs
gRMK/w7OPlz9erH5ecsKPGxE5LOIM4nzitpc4ij4rPxtAuIp8LDVBT47LjKe
tKrAN26LjMfw+9wHHhIZP+JvflAfMzqyL4BPwNkGB5uzjjMP/ha1wvCXlhZ4
4PDIeBs1R9TP3RLZNmAjOLuooeD3/zRxbR9/I4i/RzIkc+0LPiV/j2dw5toa
/gYEf8+HGI3YjL8JwN9LuCJzrRE15exn4jNiaWoG+HsI/TLX1oDhUa/fP3Mt
DT4PtgM+M3gmNuShAt9bqf60yHg4+D981UmR60lmJa7FwmbtG7leETyR3wD8
CM78XPVvjxx/EQ+9GLhGAXxufYH33hk5NoajCDeRGBmsAcwBrA8eNO+Sd4oP
RY6f+mH4FNTWYpPBQsFcwVr5fPhdcxLXbnQo25cDswOrw6ej3nV0Yq42Nbnw
s+DIw41vX3buDX4Y95KDA9sF0wPL4zcltwefi7Hk+FhLrCmwVTA0cnvwuTqW
neOjPpgYj9iOml7WGmsO7BKMFmyNekn+ZglrkPpX1hu1dGCI1Yv1gW0gh35J
5vwrsTt/U4d3yTsF62RNU//F36yh1hrME2yL+BZuHBgX9UTwSahN5Eyg3gi+
BLWJnBnU97EfqZ2D40h9MfuR2jp8WHw3OLJwY/Hh8O3g0MKdxccjfwkHD+4d
f1cEbAsOHtw7MC7qwbpkrp0bUvgT8DmxzeQIm0auNwV/nFTE+8T3cPn5mzfU
g45KXFtAjAC/+Fhda83aKLs+547EtQj4CNTfTkxca4BPQf3DjYlrF8gxgRXC
AYT7B2ZIbhS+MnORI51TxFPYjvcD8/XI31M7xW8MX7MT70jyGWXnauFv0idn
O7uI/+C/gbGBbcIZhisMxontwoYRM7D/mqTOX4OV1NPz/R9I+blG
              "]], 
             Polygon3DBox[CompressedData["
1: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
D2LyR1w=
              "]]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0s1LFHEcwOHfapaVlnh3rbtGf0BCdHU3dclAJQhvBpmdqoPUzS6CXuwQ
Qh4UBQWRDbeXNTVXBeuQrWn5UkJClHmQjgo+k7BfPs/M/uaFmbnYei/VHgsh
DJj1whAiZ/WnlpnyU+H/zkqJcxlf4iq+wDV8jS9zglv4KrfwA67nO3xbMydD
eMQdnOWn/IRn+Rn38AIP8Qv+wC95nD/xHM/wpvv7zCs6bTsfrS9yHl7h2hMh
fNGEruoNx2asXeNGfsVf+Sa/5m/8RpPWr/Nbvs4bnOc63uR63dIG/a4510vx
D17gLWu3eU3nbS9z2jPI8nue4DFO8yj38yAPcTf3cT93chf38l1+yLd00v22
cZJHuJlr+DnXcjV38xWu4MdczaV8n+N8aDbc33n9qAd6zgx7fnnrSvmf/SW6
r2ejazt2ic9E75cX+TQ3cY6LeVb3TPS5vNO/xt9hSneN04c/6nGF3+oXdswv
KNDF2PH3dwQvPFpt
            "]]}, {}, {}, {
           Line3DBox[{1000, 1189, 1442, 1190, 1001, 2411, 1222, 1450, 1223, 
            1015, 1240, 2428, 1457, 1241, 1022, 1258, 2432, 1464, 1259, 1029, 
            1276, 2437, 1471, 1277, 1036, 1294, 2443, 1478, 1295, 1043, 1312, 
            2450, 1485, 1313, 1050, 1330, 1492, 2501, 1331, 1057, 1348, 1499, 
            2502, 1349, 1064, 1366, 1506, 2504, 1367, 1071, 1384, 1513, 2507, 
            1385, 1078, 1402, 1520, 2511, 1403, 1085, 1420, 1527, 1421, 2404, 
            1092, 1438, 1534, 1439, 1440}], 
           Line3DBox[{1002, 1191, 1192, 1443, 2475, 1193, 1194, 1451, 2480, 
            1224, 1225, 1458, 1242, 2429, 1243, 1465, 1260, 2433, 1261, 1472, 
            1278, 2438, 1279, 1479, 1296, 2444, 1297, 1486, 1314, 2451, 1315, 
            1493, 1332, 2458, 1333, 1500, 1350, 2464, 1351, 1507, 1368, 2470, 
            1369, 1514, 1386, 1387, 2399, 1521, 1404, 1405, 2405, 1528, 1422, 
            1423, 1099}], 
           Line3DBox[{1003, 1195, 1196, 1444, 2476, 1197, 1198, 1452, 2481, 
            1226, 1227, 1459, 2486, 1244, 1245, 1466, 1262, 2434, 1263, 1473, 
            1280, 2439, 1281, 1480, 1298, 2445, 1299, 1487, 1316, 2452, 1317, 
            1494, 1334, 2459, 1335, 1501, 1352, 2465, 1353, 1508, 1370, 1371, 
            2395, 1515, 1388, 1389, 2400, 1522, 1406, 1407, 2406, 1529, 1424, 
            1425, 1100}], 
           Line3DBox[{1004, 1199, 1536, 1200, 1445, 2477, 1201, 1542, 1202, 
            1453, 2482, 1228, 1548, 1229, 1460, 2487, 1246, 1554, 1247, 1467, 
            2491, 1264, 1560, 1265, 1474, 1282, 2440, 1566, 1283, 1481, 1300, 
            2446, 1572, 1301, 1488, 1318, 1578, 2527, 1319, 1495, 1336, 1584, 
            2529, 1337, 1502, 1354, 1590, 1355, 2392, 1509, 1372, 1596, 1373, 
            2396, 1516, 1390, 1602, 1391, 2401, 1523, 1408, 1608, 1409, 2407, 
            1530, 1426, 1614, 1427, 1620}], 
           Line3DBox[{1005, 1623, 1203, 1537, 1204, 1446, 2478, 1205, 1543, 
            1206, 1454, 2483, 1230, 1549, 1231, 1461, 2488, 1248, 1555, 1249, 
            1468, 2492, 1266, 1561, 1267, 1475, 2495, 1284, 1567, 1285, 1482, 
            1302, 2447, 1573, 1303, 1489, 1320, 1579, 2528, 1321, 1496, 1338, 
            1585, 1339, 2390, 1503, 1356, 1591, 1357, 2393, 1510, 1374, 1597, 
            1375, 2397, 1517, 1392, 1603, 1393, 2402, 1524, 1410, 1609, 1411, 
            2408, 1531, 1428, 1615, 1429, 1630, 1621}], 
           Line3DBox[{1006, 1624, 1207, 1538, 1208, 1447, 2479, 1209, 1544, 
            1210, 1455, 2484, 1232, 1550, 1233, 1462, 2489, 1250, 1556, 1251, 
            1469, 2493, 1268, 1562, 1269, 1476, 2496, 1286, 1568, 1287, 1483, 
            2498, 1304, 1574, 1305, 1490, 1322, 1580, 1323, 2389, 1497, 1340, 
            1586, 1341, 2391, 1504, 1358, 1592, 1359, 2394, 1511, 1376, 1598, 
            1377, 2398, 1518, 1394, 1604, 1395, 2403, 1525, 1412, 1610, 1413, 
            2409, 1532, 1430, 1616, 1431, 1631, 1622}], 
           Line3DBox[{1010, 1217, 1110, 1011, 2415, 1218, 1116, 1019, 2420, 
            1237, 1122, 1026, 1255, 2430, 1128, 1033, 1273, 2435, 1134, 1040, 
            1291, 2441, 1140, 1047, 1309, 2448, 1146, 1054, 1327, 2456, 1152, 
            1061, 1345, 2461, 1158, 1068, 1363, 2467, 1164, 1075, 1381, 1170, 
            1082, 1399, 1176, 2515, 1089, 1417, 1182, 2520, 1096, 1435, 1186, 
            1104}], Line3DBox[{1012, 1219, 1111, 1013, 2416, 1220, 1117, 1020,
             1238, 2427, 1123, 1027, 1256, 2431, 1129, 1034, 1274, 2436, 1135,
             1041, 1292, 2442, 1141, 1048, 1310, 2449, 1147, 1055, 1328, 2457,
             1153, 1062, 1346, 2462, 1159, 1069, 1364, 2468, 1165, 1076, 1382,
             2471, 1171, 1083, 1400, 1177, 2516, 1090, 1418, 1183, 2521, 1097,
             1436, 1187, 1105}], 
           Line3DBox[{1101, 1633, 1632, 1617, 1432, 1093, 2517, 1179, 1611, 
            1414, 1086, 2512, 1173, 1605, 1396, 1079, 2508, 1167, 1599, 1378, 
            1072, 2505, 1161, 1593, 1360, 1065, 2503, 1155, 1587, 1342, 1058, 
            1149, 2453, 1581, 1324, 1051, 1143, 1575, 2524, 1306, 1044, 1137, 
            1569, 1288, 2426, 1037, 1131, 1563, 1270, 2424, 1030, 1125, 1557, 
            1252, 2421, 1023, 1119, 1551, 1234, 2417, 1016, 1113, 1545, 1212, 
            2412, 1007, 1107, 1539, 1211, 1626, 1625}], 
           Line3DBox[{1102, 1635, 1634, 1618, 1433, 1094, 2518, 1180, 1612, 
            1415, 1087, 2513, 1174, 1606, 1397, 1080, 2509, 1168, 1600, 1379, 
            1073, 2506, 1162, 1594, 1361, 1066, 1156, 1588, 1343, 1059, 1150, 
            2454, 1582, 1325, 1052, 1144, 1576, 2525, 1307, 1045, 1138, 1570, 
            1289, 1038, 1132, 1564, 1271, 2425, 1031, 1126, 1558, 1253, 2422, 
            1024, 1120, 1552, 1235, 2418, 1017, 1114, 1546, 1214, 2413, 1008, 
            1108, 1540, 1213, 1628, 1627}], 
           Line3DBox[{1103, 1185, 1619, 1434, 1095, 2519, 1181, 1613, 1416, 
            1088, 2514, 1175, 1607, 1398, 1081, 2510, 1169, 1601, 1380, 1074, 
            1163, 2466, 1595, 1362, 1067, 1157, 2460, 1589, 1344, 1060, 1151, 
            2455, 1583, 1326, 1053, 1145, 1577, 2526, 1308, 1046, 1139, 1571, 
            2523, 1290, 1039, 1133, 1565, 2522, 1272, 1032, 1127, 1559, 1254, 
            2423, 1025, 1121, 1553, 1236, 2419, 1018, 1115, 1547, 1216, 2414, 
            1009, 1109, 1541, 1215, 1629}], 
           Line3DBox[{1106, 1188, 1535, 1441, 1098, 2410, 1184, 1533, 1437, 
            1091, 1178, 2474, 1526, 1419, 1084, 1172, 2473, 1519, 1401, 1077, 
            1166, 2472, 1512, 1383, 1070, 1160, 2469, 1505, 1365, 1063, 1154, 
            2463, 1498, 1347, 1056, 1148, 1491, 2500, 1329, 1049, 1142, 1484, 
            2499, 1311, 1042, 1136, 1477, 2497, 1293, 1035, 1130, 1470, 2494, 
            1275, 1028, 1124, 1463, 2490, 1257, 1021, 1118, 1456, 2485, 1239, 
            1014, 1112, 1449, 1221, 1448}]}, {
           Line3DBox[{1649, 2229, 2230, 2106, 2228, 2227, 1648, 2485, 1819, 
            1818, 1647, 2341, 2416, 1982, 1808, 1646, 2340, 2415, 1981, 1807, 
            1645, 2339, 2414, 1980, 1806, 1644, 2338, 2413, 1979, 2214, 2213, 
            1643, 2337, 2412, 1978, 2212, 2211, 1642, 2209, 2210, 1977, 2479, 
            2336, 1641, 2207, 2208, 1976, 2478, 2335, 1640, 1805, 1975, 2477, 
            2334, 1639, 1804, 1974, 2476, 2333, 1638, 1803, 1973, 2475, 2332, 
            1637, 1809, 2411, 2342, 1636, 2217, 2218, 2105, 2216, 2215, 
            1810}], Line3DBox[{1663, 2245, 2246, 2108, 2244, 2243, 1662, 2490,
             1833, 1832, 1661, 2427, 1817, 1992, 1816, 1660, 2351, 2420, 1991,
             1815, 1659, 2350, 2419, 1990, 1814, 1658, 2349, 2418, 1989, 2226,
             2225, 1657, 2348, 2417, 1988, 2224, 2223, 1656, 2221, 2222, 1987,
             2484, 2347, 1655, 2219, 2220, 1986, 2483, 2346, 1654, 1813, 1985,
             2482, 2345, 1653, 1812, 1984, 2481, 2344, 1652, 1811, 1983, 2480,
             2343, 1651, 1821, 1820, 2428, 1650, 2233, 2234, 2107, 2232, 2231,
             1822}], 
           Line3DBox[{1677, 2257, 2258, 2110, 2256, 2255, 1676, 2494, 1853, 
            1852, 1675, 2431, 1831, 2002, 1830, 1674, 2430, 1829, 2001, 1828, 
            1673, 2358, 2423, 2000, 1827, 1672, 2357, 2422, 1999, 2242, 2241, 
            1671, 2356, 2421, 1998, 2240, 2239, 1670, 2237, 2238, 1997, 2489, 
            2355, 1669, 2235, 2236, 1996, 2488, 2354, 1668, 1826, 1995, 2487, 
            2353, 1667, 1825, 1994, 2486, 2352, 1666, 1824, 1993, 1823, 2429, 
            1665, 1835, 1834, 2432, 1664, 2249, 2250, 2109, 2248, 2247, 
            1836}], Line3DBox[{1691, 2266, 1878, 2112, 1877, 2265, 1690, 2497,
             1876, 1875, 1689, 2436, 1851, 2012, 1850, 1688, 2435, 1849, 2011,
             1848, 1687, 2522, 1847, 2010, 1846, 1686, 2363, 2425, 2009, 1845,
             2254, 1685, 2362, 2424, 2008, 1844, 2253, 1684, 2252, 1843, 2007,
             2493, 2361, 1683, 2251, 1842, 2006, 2492, 2360, 1682, 1841, 2005,
             2491, 2359, 1681, 1840, 2004, 1839, 2434, 1680, 1838, 2003, 1837,
             2433, 1679, 1857, 1856, 2437, 1678, 2260, 1855, 2111, 1854, 2259,
             1858}], 
           Line3DBox[{1705, 2274, 1906, 2114, 1905, 2273, 1704, 2499, 1904, 
            1903, 1703, 2442, 1874, 2022, 1873, 1702, 2441, 1872, 2021, 1871, 
            1701, 2523, 1870, 2020, 1869, 1700, 1289, 2019, 1868, 2264, 1699, 
            2366, 2426, 2018, 1867, 2263, 1698, 2262, 1866, 2017, 2496, 2365, 
            1697, 2261, 1865, 2016, 2495, 2364, 1696, 1864, 2015, 1863, 2440, 
            1695, 1862, 2014, 1861, 2439, 1694, 1860, 2013, 1859, 2438, 1693, 
            1882, 1881, 2443, 1692, 2268, 1880, 2113, 1879, 2267, 1883}], 
           Line3DBox[{1719, 2280, 1924, 2116, 1923, 2279, 1718, 2500, 1922, 
            1921, 1717, 2449, 1902, 2032, 1901, 1716, 2448, 1900, 2031, 1899, 
            1715, 2526, 1898, 2030, 1897, 1714, 2525, 1896, 2029, 1895, 2272, 
            1713, 2524, 1894, 2028, 1893, 2271, 1712, 2270, 1892, 2027, 2498, 
            2367, 1711, 2269, 1891, 2026, 1890, 2447, 1710, 1889, 2025, 1888, 
            2446, 1709, 1887, 2024, 1886, 2445, 1708, 1885, 2023, 1884, 2444, 
            1707, 1910, 1909, 2450, 1706, 2276, 1908, 2115, 1907, 2275, 
            1911}], Line3DBox[{1720, 2281, 1925, 2117, 2171, 2172, 2033, 2501,
             1926, 1750, 1721, 2451, 1912, 2034, 1751, 1722, 2452, 1913, 2035,
             1752, 2118, 2527, 1914, 2036, 1753, 2119, 2528, 1915, 2037, 2173,
             2174, 2120, 2368, 2389, 2038, 2175, 2176, 2121, 2277, 1916, 2039,
             2315, 2453, 2122, 2278, 1917, 2040, 2316, 2454, 2123, 1918, 2041,
             2317, 2455, 2124, 1919, 2042, 2318, 2456, 1723, 1920, 2043, 2319,
             2457, 1724, 1935, 2320, 2463, 2044, 2284, 1936, 2125, 2177, 2178,
             1937}], 
           Line3DBox[{1725, 2285, 1938, 2126, 2179, 2180, 2045, 2502, 1939, 
            1754, 1726, 2458, 1927, 2046, 1755, 1727, 2459, 1928, 2047, 1756, 
            2127, 2529, 1929, 2048, 1757, 2128, 2369, 2390, 2049, 2181, 2182, 
            2129, 2370, 2391, 2050, 2183, 2184, 2130, 2282, 1930, 2051, 2503, 
            1758, 2131, 2283, 1931, 2052, 1156, 2132, 1932, 2053, 2321, 2460, 
            2133, 1933, 2054, 2322, 2461, 1728, 1934, 2055, 2323, 2462, 1729, 
            1947, 2324, 2469, 2056, 2288, 1948, 2134, 2185, 2186, 1949}], 
           Line3DBox[{1730, 2289, 1950, 2135, 2187, 2188, 2057, 2504, 1951, 
            1759, 1731, 2464, 1940, 2058, 1760, 1732, 2465, 1941, 2059, 1761, 
            2136, 2371, 2392, 2060, 1762, 2137, 2372, 2393, 2061, 2189, 2190, 
            2138, 2373, 2394, 2062, 2191, 2192, 2139, 2286, 1942, 2063, 2505, 
            1763, 2140, 2287, 1943, 2064, 2506, 1764, 2141, 1944, 2065, 2325, 
            2466, 2142, 1945, 2066, 2326, 2467, 1733, 1946, 2067, 2327, 2468, 
            1734, 1956, 2328, 2472, 2068, 2294, 1957, 2143, 2193, 2194, 
            1958}], Line3DBox[{1735, 2295, 2296, 2144, 2195, 1765, 2069, 2507,
             1959, 1766, 1736, 2470, 1952, 2070, 1767, 1737, 2374, 2395, 2071,
             1768, 2145, 2375, 2396, 2072, 1769, 2146, 2376, 2397, 2073, 2196,
             1770, 2147, 2377, 2398, 2074, 2197, 1771, 2148, 2290, 2291, 2075,
             2508, 1772, 2149, 2292, 2293, 2076, 2509, 1773, 2150, 1953, 2077,
             2510, 1774, 2151, 1954, 2078, 1170, 1738, 1955, 2079, 2329, 2471,
             1739, 1963, 2330, 2473, 2080, 2301, 2302, 2152, 2198, 1775, 
            1964}], Line3DBox[{1740, 2303, 2304, 2153, 2199, 1776, 2081, 2511,
             1965, 1777, 1741, 2378, 2399, 2082, 1778, 1742, 2379, 2400, 2083,
             1779, 2154, 2380, 2401, 2084, 1780, 2155, 2381, 2402, 2085, 2200,
             1781, 2156, 2382, 2403, 2086, 2201, 1782, 2157, 2297, 2298, 2087,
             2512, 1783, 2158, 2299, 2300, 2088, 2513, 1784, 2159, 1960, 2089,
             2514, 1785, 2160, 1961, 2090, 2515, 1786, 1743, 1962, 2091, 2516,
             1787, 1744, 1969, 2331, 2474, 2092, 2309, 2310, 2161, 2202, 1788,
             1970}], 
           Line3DBox[{1745, 2311, 2312, 2162, 2203, 1789, 2093, 2388, 2404, 
            1790, 1746, 2383, 2405, 2094, 1791, 1747, 2384, 2406, 2095, 1792, 
            2163, 2385, 2407, 2096, 1793, 2164, 2386, 2408, 2097, 2204, 1794, 
            2165, 2387, 2409, 2098, 2205, 1795, 2166, 2305, 2306, 2099, 2517, 
            1796, 2167, 2307, 2308, 2100, 2518, 1797, 2168, 1966, 2101, 2519, 
            1798, 2169, 1967, 2102, 2520, 1799, 1748, 1968, 2103, 2521, 1800, 
            1749, 1971, 2410, 1801, 2104, 2313, 2314, 2170, 2206, 1802, 
            1972}]}}},
        VertexNormals->CompressedData["
1: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
uI8O5X3YruwGPY2zD4XlawojrJcsj7iwY/0wXmB7LuETkIc19NgnFfz6UXNv
/7zmy36s3Lp9S4FnK+5XuE/iXTrb1nzdP4aDVKNvM9MX4kTbG/FLS12o+54A
z6UzQ9iveaexCl0nXhIVi4X43uYHR2YuT2DMauD8OrYI9xtFO95sa0TWyt06
dQIj+Irm/pXGYtT7RZa3HcQ5bd5fCEycxLcuufgwfCrGp0qN3FJvliN6p8bT
a+RHsYW2zL3R8W58ZXazF8QHL0v97r04hYtPiybaSJbgS1LpR4UUk1HGcyk9
i4ZRPLXPuThCoQefXrXyCMT5TkRNw/rEpMwEWF+bzelEjeNm/yRdWL83ZAdZ
z9P68gHEV65nPg9+UliOPwM/he761POiHNtL9SmCH5Twxh78yKzKjoB4ooGM
NOS7mv6GE+Sru/u6GzUvzHq6XQvyfbs0TAf52p7gfgRxpTVxDMCz87u4OfAM
azyUTeWGi63+cALP2apN+sAz74RQGsRPlngpweelJeAjCp9XfzzXHPVzwW80
R37B5zUydZsbPi/l8ZnfEGcZZ3wMdSJzmocb6mRX1tA66ueOFafyDKCuIrYI
+UJdnftuIkKtKxwct+nnQk4TPlN0dmppyZVy5rAViTOW3lwRmi2D44Y18s1b
uf/dO7p85uqUZuvwlf0vbiRnlOK2hSukPl15b9w89rYbv3tp/In9VgM+qu9J
6s1a+If/jPgxbJfCION5R+Jffaov0cmdut6OM+gEQl4t9uF2fe4pqLeEt1dH
rjN1Yw2v4XN/ggcxvY9wDNRV1WGl8EalHqx5eMVmK+1hzKXz6D7UT9fYq7sa
nL34z46OiJ77IzhYbb0j1ElOlORdTdte7C55OpGWcRTbN28WhXoQk/18B+IL
7wMSIC7EL+4Fn/tjlWFL0OGrtgoDnZcGVSnw+TLpdYfBvq/fmfLDvlu3nXGB
z/F4udQg+NzT5qQMPjmTerLg83oYfvAI5OUXrO4PeRmKcZPP5f7TXj3gI6Sz
ORr4dDTbrYfPxbwgMwl4yudaywBPCpMj4f99ZY7K4ZgjeNw2SmPKSvzffSTS
YrKr5H45PiHZ0WiqVYdzXl0m/DcPZa/8OtyIRzetPt0s1I1tDrwg/BmT3Cu0
SiVxSmyFVbHS0X/82yKZb1n0FeHCfPOWFw1D+KSOAXner/6OVk7sLsWLPedS
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
rQWd3W0bB/wDmQqTL9mPIuWFHsru7Db0xseN9P/aL+sPXE8cQ22Lyv7jNB1I
w1KBzD9rNWaFjU6NoydjCWIcYR1IpvnoHuB/fLcAifPaV+6BuFd1Fqn/G9wK
kqDTEWb+HHS8atnfAX92W1eyb5VyKNn3UgYj6f+OK3yjweeLzutW4NPzXiI5
f8Xtl9ZAXn5rtr+DvCYYTxD+f2YvCwOflMb6F8DHpXSe9J9U0Z584Ok/1nAJ
eH4PsCf8Ny668j6alkGmequzzB1Xo//6v9y7n7G9zA0oz5Yt+T1zEbqYr0/4
X9x4yWy9Rw/i9S/x3X+9FumUNBL+tu/ue+2vRSg/7tmUY+zef9/PlNutuu7W
2IWMEk2/u77pRfRTg4T/xHG+C05LPajFf+exBLYBNPonk8yfTkvWI0YmfWji
IyXvRuYg8lilagP8C1rzupLO9CP9RwoUz4IhdFaq0Qf4d9o8CkvM7Ec/96kZ
qJ8cRr5uPIeA/7fff0IhfpghUR/i65l2+QN/LRE6okPPafwFdNga2wh/pVMV
Q7DvNEt5Dux7oCubzD/n1l4/Bz6Zjv04DD5tKnXSgT9mOXwJ8gqvtJiAvN47
bSX8Vzo80AU+Km/c3YGPR3cC6T+e13Y9Bp45soFewPPOVRvCP2m9u5KaxDG0
99udFKNIsX/fD8j5Mn/za61Crope8/TrahFLiCHhz/V5bmpragsKP78iIImn
EzXuDST8f1/0bDp84SDKFtoW9EJV+h9/Ad9HluGXqpH/hj6dz1JDSHx7Men/
jyozafLTviLv2be5h4+PosKpvaT+j7rYbWLaVIds7WYbj6mNo8Nf1En990aX
7ij9U4eCXcJLW0Opc1jqKwfgv4nlutN643pUcu5vpvqxSVQipqEE/Dst/zpC
/PPrWyQ+IfmK3L+KDAWFQUf5oGgx6FQ55scBf9PBy2RfVuESsi+ro7Yz8JdM
alnMo/rk9ND+Aj5Zq8rI+SvqoGIMeSk5qV6FvCR/niHnb2eiQw/wSYpgdgM+
uue1SP1/VD2QDTxbMyTbgee7jdqEv2vQxn3rhA4gqXTf+5bjUv/4C5heOxSs
RUEcMSoeoy6N6M6W5fpnlJjcHXO2FF08KTEemNuLruxxJfyv9+9eg2a2o4+P
VPLi6P/3/eS6SN0S48V3+IVG2DlOu2E0ExBB5p+sG1kM4e3ReCbfuOFc3Bi6
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
v54idY9hbQkd7799OEwzh+OaCA0V3NpC8urDJ1z3w/zk9BMj8zM9ewf5LpGW
e3zOE6W4Ltdp413GPGC+8C8PjC51PhegX4Otrntj/qZ2FHnzX70rYylPgJJk
BS66I70xzrUZGcqdJ39HaP8Z7KF2SBFfmGCaF7L8/7+v5V8vqgd6/EWFE0DP
bMpysk7pTvw3wT+y9RMXwD/Mj//VG5n6LQ+DP0tvTCowMd0qsmT6tw/4l3kc
o89pYskO/exXP9n/987aT4Pjt5ymEo7tvHrTe1rjf+9TVofw1jsxvsvfS/mz
P+O7znL/O6/563Skg7704qM2AZqX1lHR5TuldEYcUbRa/x7wW5OQMhf4zXTU
iNSxJx+9In4uemrvDX4OotqPwzmrTfOTgbgkZmgKQVyeYesymIe8qZU3IY6X
gzSVIY6in2vyYF7lCgX1wfwpkHryAuZPmZXNKNgVm7bYBDznM+gawBMX+mUO
5lUQm6c1+Pm1wCcW8LNn12kyTzylc3pg/ljLdR2A+fN1zQni/0W/7rfXWPrx
lMCtE3eqHxQFRV+JbF1PQ8zK5Q9kvfpw4y8K/eHeSrxfnPeVlDgNlZaOLh1d
MYp7p104NJkfFz3KOC1mtm0EPfZ8ayQ+TcVtlhWWF8XDiqqay5dW7e1HF46t
1B+7O4FLfh/q3nn4WZHTUaPZFXHtyEHqks5biSl8cWAkT6givGhCVGOt18Ma
FOpaTc8encLFU0eOaHhHFN3yvKgmlZ6B+P0fZz6JmsAvLdpehX5sw9S1Xs8Z
cjybuVEnfZiOg0JWb+mRa8NFK6r2MfTg2qTkudPnafiD/URcyZ8WvFgl/Ydh
F6uHze8DzoBZQTPgzHv0ipvBiTnzDp1xYh3H16ZPsi5Z3YwvVFxMZUb9OFa8
8+8I43uV3lWzwvfe24SlGd+LN3anvjt4fhgfG8kXd5JtwK5zTsXCsiOYfTDL
Bfy269aWNvCb20PFNIbf8L6KX1FKd9ux77KFzFtX2jBiXUX86WjFfTyUexSf
TBqWPMc5gq+mZAXDd6ls+KYs7T2CX5879EH9zjBe2WavCd91T0KncsF0GC9L
NKNynx/CQa87f8F3OdTvKox1G8QJTVkVr2MHcPOz1++B/81C7nBuMgVvLJVY
mTjQh/uE5glnSIrCXeAZDVkfBzxTcysJp0/jFp/Y1dU4y9wsdnKkF9vIKRHO
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
BzPndddRrPOFpXWSnoIu0d44blnaie5VrVNgsx7HmoMRidMTLcQUox5hm7oR
5r1b/ylhApsk71c3dqlCdmtWNjMmdqPx95SzAXKT2OBJ9qoj54n9HMNJ0h97
bCLpYxuOmxF0vPvdRTfg0xvIVQt85C/HPST44FGFyWMwL6OcjTzMGzZQ94GY
F1tncE2BnCu/9FhBTiseKQohJxayGbMFvZqamN6DXjPxvKWEXthO5k79Vq4B
5Deh8jc1qQe/qFPNUAgYRDYPFyJGg4ZQxvpUnqjzffhSpcy6n2soKDi82Etc
fQRl9uxWEPvcj2MdxeXX9LegjnJ1zzSDUUQXQ8Pc8GIAT6/Eb9ezqUJXJvMs
2QdGkaGzgDTfnwH8N0PddY9GCrJdK03Sj1jlSQFdIf5KDUHHzkYj7sDn+7e+
LcDnGZe+DMEHt8wlP4V5M8Id5GBe54ntZ4h5sa55bwjI6XHWkgvkDGLWZCTk
xJvmh6pAr5OmRvOgV9k1jAm98OcfOcIlpb3onMUK+8zpAvxJbCv5nfoQ5y8F
8XcjyMZ3dB1rfgXW3deaDnZ47+f9/XvWOAoaiGcM4K3BSSlb14MdzERa+EOb
J1F1UGmViVkt7srWVgQ7GP0ueLpRYBp9kzWm22Beh7Mv2bGDHXKcad73VE2j
VXedtRQJvF1639gF7MDSfSQG6MVlLCSdcfvFXrBDXiSXJ/AZNfq+DvhIXXVV
BTtUnXXbDfOeXtaphHnjOO6dAjtoJuh+AzlHbLUZQM5F6eZNYAdLvoNSoNdn
etk/LIRe9uqJ+WCHzd5iTGAHxR9r6cEOT0xiyO/Rd1oWXc0UKWg1XevQruUU
tDD3oxfqIloMGbeOS44i+RoTY26lHGSjJJsL5+Jxmnb6/WsTaDS/VDpvCSOB
g21tcC68O8UaLZ5PIV53mvADsgXoOMelBDgX5xXv836anEbuu7Wv3NlYiM4O
BmrBuaidk2XXfjWDLtx9atB1uxA5fqtkgHNhKBSyFegWnbwkPU3DVBvOxbpZ
QW7gk6TJchn4qBTVk+cir/AgOa+qwipyXgYNc5iXwMNLn0BOxaqbR0HO6rjU
HjgXMU5Bm0Gv5r3nLoBePuvWlsC5OPq18R7YYYbmehPYIeMi3xjUP8gpvWs7
Od6JtkmaNB/XrUeKqT/2Qx0Oi86tH8wVg4hr3vjihfp2dIOvRgr8JM0f2/1y
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
         "]], 
       GraphicsComplex3DBox[CompressedData["
1:eJyFvXk0ld/7Pi5ShkZFRUppEiUpU+VGUqKMRcYiQvNAo0hFJY1ISolSSaaS
DDnmeZ5nZ3LMUyMN+vr8XvvZZ32sz/71+ue91rXu97Xv6zr33vu597PzLLI7
auzAy8PDM4Ofh4dv7H8FDs8Ykn6wDix+VQ3MM9tIW9Sy493fvwO0D3UzhS32
VoHss7L9u9800hxPxT78cLiH5rO7m7/QpBHC51q2ay1g0iKFZ3kebuLQNH5G
6Iq3tcL3k7cq69Tbaf1hro5LdJk0zvztmZdH6cBm7hAatu+gOfx/PE20/VbG
7S6TmJCp/FhRsawTxVfS+t+++UkLYcLhkz4f3Z92ITyTtvRt/CLpMibE3Nzj
fZrVReNB/xHigcAPhHyAkD8Q9ALBHyD4Cdullrupn1SCYBt9Y1G2Gvb5zNvT
RnZSNcCbJUtX2NmAffZULbzm+74ZJMRsSmcoMLDPKiW7jE9X08FCpKTl/Qo2
9vnBSBDvaR8muCouk01X4GCfl99evmXdSxb4+66e6XSjA/t8XPKY3zp9Nqhu
/Z0sbNiJfV7/QfrNVC823Lo9+tT3Tif2mRAPBH4g5AOE/IGgFwj+kPyEyTx1
EQbrVWBw/aoBupEq9vmpgYhmd14tGO0aNHhfVYd9Tgv5HcL7tRUuBaU/6pen
Y5+lgjzzm5cyYYaVcfmaX0zsc6Nj27S+nyzoTVHoLWxnY59nJOamrlVoh/f0
u/UGKznY5xuWc5sXsNqhwFbr+AE2B/v8Vm6Lu7wkB6Q12U8XL+rAPhPigcAP
hHyAkD8Q9ALBH5KfEBj08eaOJlUoj8tQMwhTxj5vha7Xk3bVg/n8spf+m2qx
zy72dwcLfOhQ9WrKpKkqrdhnzcWaG5XsWLC18oz560QG9rk93EFc2awdJqlw
dB9eYmGfN9T6W4eEcYBHLIbuFcvGPtvuLvwVsbcDDqneCFSyacc+P3ffWvDm
SQdsL5kSyglsxz4T4oHAD4R8gJA/EPQCwR+Sn1A4qyx9p/0GsNO/mGhatx77
HNg3/Lc7pwGm2z7ueO1XjX2O/tWQ5+jFgM8vn4yu6WvCPnfbqBXNvsaGJkn1
qABbOvY5Wm2aSkYwB5p0Va3yJzGxz713mEl5Ix2wsN7ZMHEBC/tcKMo5LpLV
CT9Dt8duorGwz44K0RezJnaBZcrR2tAvLOwzIR4I/EDIBwj5A0EvEPwh+Qn+
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
HYuObpiafvPvR/63WO/Q9pz0xDN9MKPH2qGxMAbrtelqeFU9YwC89MQs/DJi
sd5g88xvqjUDQHsnF3ZeNg7rHY9TesfzUHoH0bjT0LiUXlGUpyDKk9K769JU
k5+CY89FJrWGRxtfYb3pKwQ1P/Mx4OrFurPDFmFYr4Z+ykqbOR3Qn5my+9ps
lzSqP0oQYx78870b5jfLenqdOpJG+XDJrPp1/fU+8LP+MWIcfSyN8qFDsSCT
uXgA4vd+nWsUcDyN8uHBY9N1yR0DsMvIeMm5iSfSKB/G45QP43koHzzHjUv5
EI/ynIvypHzYiHR1IV2UDwYeJsyaqQzoL5vv/lnLPo3y4ajNfp40eTrUy1hJ
99/h9oMTSvk4Ho0M+NB2jqV7jdv3Oa6VOnfzMxPehL8uX5jQiX/3Ox0Zh6p9
WfBxeryfhzK3j5P7eH25wlsW3PIb7PeQ5PZrth2SX1RMWTB32QJTXudO/Lt/
ub40tf9//t3iou+rhqZz+69Wl7f94t/o4NpsO3PRD24/VcPXWeKp1gLqe7Se
VtK5fRPovLdYlFQDZz38rifocfumGHUr87SHDLBQzWa9Pcztcw0klgs7OLBg
Xe+m0DVbuf3swksCDOG7bND2WXrw0l5u3/p35Mbc9LXtkMbI6t1Sz+2bvqdv
ydI1bgeNU9GNYqncvunn0KehvX1ssGWICY9O5fabGwYDm/b9YMHsn5UbkrO5
fZPvT2d1Q1Mm7LNcp/4ll9s3nRQSDTS42wYNB5aKFDRy+6ZrZz+dtDleB6cl
y3xtcrl90z6xw6t3DTChVazaL3Utt09cJu0bXNTAhkciPFKavWyst3XR9lVx
czhAn/TYJ3eQ2zdlXX0rJZbBgc+XLnTst+ZgvZt+Dy9/1coBHsGEmcuBg/Vm
PMtL33yEAy6nP33bGMTtm1QrHcXe2rWD+ytNC+29bKz3ys3YqM1PWNCs/ySu
xoPbN/1I2zw9gzG2PvsLfHH04vZNagbingenNQBbc4eA/hJu3/Rk21uL76vZ
wK+lbefDYGC9345cj+VT4kB88Y9PU89y+0SeZjvjxCsdMOvK5KcPD7Cx3vwd
h/0E1neC6Gg7+34+G+s9ETj6wtOwE5bQfli7vGJzzx+2pE+QrukAg9UPrx8T
ZGO9n4PezpVN4ACTx2ZQjs3tm36oDN5xq2DDgqPmhZulGVjvPH8eRZ0OBpwo
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
hhKVHRuln3D3qb2of1dG/TuFP0HzThPNOwpPQPxBiJ8a9yniz0P8eD+VMb+R
b9MC7/yNzz8w4/IPJgRorcluASFhtQUKL7n7oCDqrwdRf43j0XxXQ/Md78uI
PxbxU+N2If5JiB/P381d6x3PtMISk7v6Xi+56+2qLQ02CRWtoLjwi3+LagnG
s1D/K4X6XwofQevMNrTOULgm4pdC/PjeC+Jfifhxne+tdnl7pA3KRTdc33aB
u85LGU4/fiGlDUQfvWac5CvAeDDqT3eh/pTCRdD61oHWN/z8hviLET9+b4L4
pyJ+CnfW09iiIUWHmOyefWZrufyMgJ9yGzToMJpiUDE5lvucEIf6x/mof6Tw
SrSuNqJ1lcL3I/63iB8/1yH+H4ifwm2+3V/g5kaHpfOOy74qzcA8Mn/Wmbbd
pkM66CWGaKdj/C/q716i/o7CN6L1fBNazyncAvFLI378eyH+JMSPfy/lyTr+
SXT4+SR95fOoZO78Yq822llMh+ro/afe3EzkznfUfymj/ovCd4zbRyh89zh+
atwwxF+I+Cl879oEtn4XHZYonrwqEBKHeRy/eU/V+kYHmaGl1x50RXGfK1B/
FIT6I7y/oP1LGe1fFG6F+JchfmpcO8Q/B/FTOHv9mTAnfgYM5YlI/B0K5T5P
ChUJ+Qox4ISVgHPomgCM01H8MIqneC6i+N0onsLr0XsTTfTehHr/dXXz4MBq
+2ZY9VtZMUOJe2/wNHrv0IzeO1B4WXGSilBuK+jsKyvPUubyjKBze110bk/h
8llsj2AvOtx6XOJXuoTLI4HOvc+gc28KN3vxdL7Q7bHn0tr9DzRGuXggOjdW
RefGOH/Lg8/m+zBhiZvOFok7TRjfic5dU9C5K4Vvrf5rEe/Mgucba6JGJzRg
fDc6t9RB55YUvizpwaXs9Wxgei9zYuyuxbgFOvcLQ+d+FN58LN7ZsZsN9C2T
3zeN7VMULoLOzarRuRmF0+fcCsz1bofP0goN0h/KMW6Pzp32onMnCo+fL/FW
XogDgTw722ffKsL4QXRu04DObSj8W6qBjuApDmS4icr23c7BeCc691iKzj0o
/JNbx9P6LA6YV3uf9xlKw7gqOjcQRecGFH7/RMZKzREO7Np/JMboaTzGl3xI
bO72aQKlrXqPl9/g3nv0RPUmg+qNwv01OSnu31vA1yKnds897nu9QlRvm1G9
UbhhUYLjikV0EK9buVjWm/teTA7Vmy+qNwqX/UiTtV7HgIAf0QIvSloxborq
bQDVG4Un8XVPeKLIhFvlnmfVDnLvs11C9bYQ1RuFF9t9ZmRKssDbbuhyY0cD
xrVRvT1F9UbhTbrFkDrEAgdH251Hdbj3qRajemtD9Ubh+R/9tvhHs6H/mFAd
/w3ufaQGVG8tqN4wfvTG4FGTdnA+a+xSmFDBvV+K6m0A1RuFO3UYT7/T1g6u
YsZdgsElGI9G9XYX1Rt+v3zm2EJjYw5ssRpyWhmRh/EhVG9pqN4oXMOvRVDh
zdj/73h9aEtgBtdnVG/GqN4o3EXX9lNOFwemy3hY7OJ8wPhtVG9GqN4o/CY6
5/mFznmoOvxQoPJ94uwO+LPYc/aU1iCM54ZNjcib2gGG1/9uzxB4gXniUfwI
iqfwlaieVVE9UzwLZkhqK/GO9a082/8stuLi9uh+bwS630vhj1Cd+6E6x/N0
8pxtRi6tkHolk228l4s3onuzhejeLIWboPqfj+qfws+LSIjeNxvbX1x7GZaG
XHwE3UctRfdR8fqM5kUQmhcUvnLi4QjBAwyYMk8j5bMFF+9C9zy90D1PCk9F
8+Uemi8U7g8LrxjZMcFArdV+ZIi7Pvej+5P+6P4khZejeeSD5hHWZWSltXUb
C7Y7lW554MTFB9C9xDfoXiKFt6L55YTmF4Vr0Uzl6XPYYELf4fEpg7uer0X3
/Tjovh+FF6N5N4jmHYUvXOp7TbacDabnDCw9eLj4VHSPLgbdo6PwFjQfXdB8
pHD9g1PumRxrB07LofRpK7h4A7qfdhbdT8Pr/Lh5SuFBYHjryY92aEiNHT52
uhjj2eje10V07wvXz7j5S+ETLcICjjpwQHeZMj3dPRfjT9B9qnR0n4rCtdG8
3onmNYXLJYvrb03iwPuWpZt/OadjfBa6p9SB7ilR+FE034XRfKfwW1VGrtmf
x9a/e7WN5t7vMb4H3f95g+7/UHghmteb0bymcBurpQ7PZ3aAvPKDn42aoRjP
RN8tWj7uO1CW6LtIKeO+6/QLfUcpYdx3nQbRd5d44X9/10kSfaeJp+p/f9fp
MPquE0/r//6uEyEeCPxAyAcI+YMi+n5TIfp+00H0d25t0feeVqLvPcWgf7dl
hngSEc8X5MPIuO9JHUM+DKA8J6A8R5AP85Guv+h7VXzh/38+5KSO96EB+fAZ
8U9E/CzkwyjK5yPKxwL5YI3yT0P5dyEfnJBeRaT3Bfr3ZUbIny7kzz70934D
GuUn/0+dqPXpbf+fOpmP/s7DZhTfOO57YQQcZqO/18oT9L//7qsm+vuuouP+
7isBJ/GAHMLnIpyG+DcgnmmIZyriIeA0Qp2Q+IEwj+BP2H/xXejv0xageIKf
NEI8zR79XvLjvr+2FeUvjvLnQ/kT6hYIPECofyDww1b079oEx/27NkL90Aj1
RlNA+07XuH1HF91Ln0O4P2837v68HLr3/nvc/fm76J684rj78+Nx6r3beB7q
vVszGnffuPvzOihP0XH351chXe3j7s/3oHP78nH35z8jvG7cef7/A4m+f/I=

        "], {{
          {RGBColor[1, 0, 0], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmwn4V8P3x+8y30ghSyL8VLYsSamkhYSIskQhitKiIikKUVmikD0polCW
hLJkpxIiu0KJpMiWhJDi/345b8/zf55Oc77zmXvv3Jk57/M+Z+bW7n5eh/5F
lmUNKrKsVLmP/tg9z7Ll0iurYpLkLOmVVE6UnCl9E5V3S7pJ30zlZEkP6Zuq
vEfSXXoVlfdKekofrnu2kZS670bVHZOy7ADpz0gaSQrJFqqfIjlX7Sfo9zsl
l+iabSRr9HsuOaKI3y+VrJF+jdq3kl5d5SOSC6Rvq3KaZJD0rVQ+KBkg/S7d
b6JkhK7bUnVTJf1V/4/KE1TfWPevJv0ByXmqf0l/N5FUkmyna9aqrJCMlN5W
son0o4roy3WSrXXdQ5LzpW+v8rEyfpuqdvtJ1kl/WO0bSL6Svr9KPTbbRjJf
+hll/P2W9DOlazqyH1T+LPla+tuq7ya9kvT3pZ8lfVPpH0vvJb2K9F9U1tNN
9tLzblB5o+Rk/f6upLt+20RtWhQxZsdJvlK7b1V+I/mAsVWbGtIPKKJfdSRv
Su9Txt8LpPeVvq30d6T3k15d+m26T13Jd9JPU30jyffSP1LZX222l75I+nnS
d5D+ifQB0mtKv0l9vFlyuurek5yj+u1U/6H0HtIrM0YqH5YMlJ5U3inpKn1v
tTlUz60lmSp9F5VfqH6K9M9VvitpKP2wPMb8dF23qozfmIuVWaz5h6QvV5vd
JN2lH8S9JT0ZZ9af9MH6rbXt4nXeTxdiNz/qv0vKuOZUlSslSxgHld9Ilkq/
g7Ur+VH62Dz6w/hcrLKNx22IysPzmOvOzLnkM+mXsM4kP0jvWkQb9L/z6PMK
6Xv4us0lZxZxz9XSG0s/0s+q0P3ukpzBtaofK/1E6Ruk34oNSF8nfYz0NtJ/
k3699COk/yr9OumHS/9d+g3Sj5T+s/RR0g+V/oies79kPf1Q/Q/S/5T+peZ2
UQq7/VNtD5FeX7/drnKcBPC5mDmS/KM2G1XepnYdpK+VPlp6a+mDWLeSv7KY
tHGSjlL/Ut0t0o/HlqXfLv0kxlz3Hi+5QHW/SK5V/WGqn6lnN5T8zbW8n9o0
0N+HFGETrKv10m8u4+9c5R2STtKrqX41GCZ9ofSeqt+MNSn9a8/vBJV7e/xZ
06yjHSVHsu4kL0v/TvVDpDeRvtx2sZf0b6UPlt6YV5ReFLE2TlV5ShFz/Jnt
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
rf4fQV9rhA==
              "]], Polygon3DBox[CompressedData["
1:eJw1mnngV2MWxt9770she5ZhFo2xZE+RyT5lG0vWKYRUyJqdYZBl7GKykzX7
kiVbMSpLCWVLhTb7UihFKJnPx3nnj9PvnPvee7/3vvcsz3lObXr12/u4OqW0
Fv9k/p7CPw8jD2FvgvyAPh85qErpNNZ3blK6B/tW1kZiN4ultByyAseOxn6N
9cHoV7P+OHZirUJ6cP2pmO+yfjfrN7I+Cvtn9AXIAawfhT2H9d9hn4b9GfY7
6BOQwZw/GnsU63dgX4E9GHs+9u+xz+b8edi/YP8J+wLshJyD/hzyFOdvi/wb
/WWPoe+M/BN9KPIo+ubIXK5fDfsMrp3FLdbDvh37ctauxv4ee3Xsf7E+G/ss
9GHIE6xvhZzpbyGPo/8V2Zfz78O+E30i55+P/gIyHHsHZB7rG2PfzP2+Zf3b
sh8rsLYI+2nWb8O+CPsa7C+xH8S+B3s69g/Ym2HfwfVzsTN7vRgykmPHYK/B
+q3oF3L+Bdin+a7IEOz2yALW/4h9HtcvZP1c9BHIM6z9DfmJ9T9g92f9R9b3
xn4A+27W3sCejn0v9m3Yb2L3QT8M2Yrz78XehvW7sG9g/THs/thz0Tujd0Au
wJ6PvRP6Fsg/sWdhd0Rf1/3C/gF7xxTHzsWeh90FfTPkHOzvfFb09sh52N+7
t+ibI2djz8HeHn1TZEme5QRkGs+3OrJ4ed630FdEzuT8b/x2nNuLvw/pT8j5
2CcjZ6B/XceztkVa6vfIJK5dBTmL9dmsb8daO7+fvpTDF4Yiw/WdHL7yJHIq
539Zx16sZfxhf1HHu/wFqTl3f32Wey9lDLL+VR3vvrbPhP15He+2JvIE556e
w5cfQ05g/RP+rsdaD/6ejj2zjr1ZBzke++M63mU1pB/2R3Xs/e+QY7Fn1PFb
qyAP6i/IeegnIcegT6/j2VdGjsaeVsezr4Qch/1hHb+1KvKA/oSci34ichT6
1DqevTVyJPYU7D+jr4g8xrucmsNXH3Ff0bdHNmEvdmf9EM5/tY5zzV99sCfU
8VtLIJ04uCWyEedvg31V8eeNsffHvqn4fzvsvn5z7DfreJcWyGHYE+vYiyWR
17HX9J6cPxT7/pKfRtcR4zui74RsynoP1g/l/PF17MXiSG/st+vYy5bIEM49
OUeufRg5nPXJdXyLpZB/Y/9orkLvy9/dOHd3pEMV+XYI62tgb4Z9IfYj2H9G
LkP/F/I4+lrIAGMFOQL9fe6zOno3/l7GtePNSeh7IY/6fsjl5jbk13L/C7l/
Rp7BboPdEf1a8wH6Pvob9hnYDzeRc8w1/blf9+K/W7B+CccuYu1njndNESMn
YX9WR6z4za8wFpGXzJ3IC76P8cP1d7E+2tyeI3f/FzkY/RCkE+s3sD6S89tb
I9AH+n2sD0h/9BOQe6wvTbzbccj7XLuk9auJ9Q+wl8JesQn/nILdCrt1E/7e
t9Sndfi9P5ij0Nsi62Ivjz0ZvaU1kfP6YT9f8mlnnvUg7Os4vgTSG31f5Br0
Fsih7qXvj56Q/VLkvMvRf63jXHPaJdgL/VYpct6l2L/Uca059TLsRdj7pMiR
12K3RHqlOHZiqW9ted4NsN9DX4LnXZ7jx2M/W+rldtxjD+wbOd4KOdxcw7G6
1Jf+OerDRfx9BXkefVfkmVIPt7becs2oUu92rKMezeRe3+qT/L6448JSvzfE
/rs+W+rr+thbYm+Uoz6uh70G9iT0Fvz+sk18v+v5uyTSJ8WeDUCvkH+kqClP
lnrcSTyDPRF9ca5fhnOOxb6Bv0shh6W4pif663XkIk5LHbDv5JqBxjf2ldg1
0k3/4dhU1pbmxJWaqA9D+bs2cmUKn7sYfQHn7ZmiBv0XexNrcopzji/1aDve
72Xsr3wecxz2DOyHcuCxdvVvbpGeEy8gt6SI6cfQ/4JcgX42cp/710Ss+z3v
9Xs3saY/TvR8vw/3f8F8UfBAB+6/gvm41LNtWH8Ke4bfCntb7LfMsSXeXsNe
Fnme9XbIbeZW9ysHHtmAtY2xn2BtnSbWzPmLWFuG/VqZY6dg/4e/GTk4RU54
PAce68jztHG/0M/Ogd2eRgZy7mLIISn29EWxSw4s9SxyN2urNpH7/L7iJzGc
2E0M9BR62yZygzV9BPqmyO0+i/6PvhEyKMWeXo2+ONIzRcwNR98QuTlFjhxr
bszh+yOs6ayt28S9rJHD0DdAbkqRky9x75CRxhfyNmtbIo+YK/S5HPXlcvZv
OeR91na3xvls5hf0XZFXvDfyFnoX5DlzL/Imeucmzn0IeQP9b8hw9AfNb+h7
IK+luOZl9C2aWPOdR6P/tYlr9bEp6F2NCb+F+QJ9N2RsintOQv87Mgb9mRT4
YWKpX22Lf65W/HFAibeqxI855SX0jsgDKfbU/sAeY2QKzPgO+o5N7I17NAF9
J2QE+qMp9m+HJp5tiLZ7l6N2vIyMYa1TE3tjzL1S9ttz9dmx6FuV/dcHjirx
b70Ww4hHXi35YE1kNvasJnqTtavAG+/UgQ3ECOKdCQUviKHET28XPCIGsv6/
VQc28Zj46c2CB8RY4qfxBX+IqcxvqeQzc5R45N06sIF7/A32101g2T8iU9H3
RMYVfxqPvn0TvuIev4q+dRN7Z40Ub0zifq1SYIJx2Ns18S3v13/Yy0tzYIMX
6+jvxPRieXOi+N+ewF7AnnAa+l6+Q4pvJL6cXPCGGNR690upT9Yk66H1zdxt
Djd/zy94Rx+xHv5Q+gP3wHr4fekHvMb6N7f0A95T/D+z9A+eYz2cV/oBa6j9
x5cFP3uN/cRXBQ//v77aT3ROUVPtP2YVvO8zmM/nlH7DfGC9E+OL7e0Brffm
LHOVPZT1VMwv1n+q4P3pBU/7DOLPpZHuVfRg4tMG2beKnks8uTzSTbxZRb9k
/2F/4h6Jp+w3rC3mQ/uHaQWP21PYH0wteNyewv5hRsHjvrN4XKxzUslX4iWx
kNjHfG09ERuIjfqnyK/WTmuvGMp+QGxk7TOfij/Nv66ZH8WT4i3rj/lUvDel
4H17Fvsra6e1QMwoXllU8E7vFHjNWm/t8h7m44UF74iZ7Mc+Lv2Ne2L/+FHp
Z/xm9jsfln5Gn7Aeis2sjeYk+0f7LffKb27/Jh712dxT+0f7K/fOb279WVDw
V88U9evnUt+tSfYPb9SB7Y1p8cRrdWB/c8pHxrIxlyKHTyrxNqzYk0u8mlvN
seZb87f53Brwccm/6u8hnzaRz83PH6SoF+Z/c7s53nwuXjD3mQMnlPg3fkem
qAddSv70HlNKPjV3mEOmlvxrLBvT5k/r/e0pcuZB+GaPHL2AGP1A9ANyYHEx
v/nV+mquMeeYj8U/5l5z8IdN1I/f9iJF/jC/+2xvlP2y3rkXk5FPmqiHvtv7
KfKZeF9s5jt91kS98tmnpMhnmzeR+9xj8ZP9kNjLPbFfEA+ID7zHi03Ua2uR
14gPrOfiBd9BfCDespZZH63v9lv6uteID+yf9HXrqXhD/kDf9jfEB/bPxor3
PJS96pmDK7GHER+KH8VL7pH12/psPdYHrNfiE3/bY+LpMfjXp/pGCjxgvXNv
/abiM/GXeMRv9nkT9cFvOTUFXrDe6xv6zBdN5G/3flqK+mt99Nv95gNN1Gvx
gj56JM/eN0cvLKbsjd4rR69mj9wN/R85elN7xnXQ187RK9kDiHcPRtqg/6kK
vCg/YC7ymcXT9m/mIvdEftD6u0yKHqyjvWeO3l7MuaHYM0dvZo/Tzt46Bxa1
h2hvb56j97HHWN/eIkdvYQ9nvyx+7p/CR9yvA5viS8X/ujcRe/+Px25N+ObY
4s/7NcH1jSn72aOJvR5f4nX/JnxXH5a/GFtHr9G6+O8BTcSy8Sjfd1AT30LO
TT5hXB3chBjB/kbOR67nN87RXjtH72RPta17k6O3kvM4Av3wHNheju5Y9GNy
9B5ifvmSZZGu8ndV9GPfyjtUwXnu6r1ycCXtsbui75Gj95eT2AG9Sw5uRU5l
P7FYjt5fjmAv9D1zcMlyFlujb5WDy5GjsR/8yXxaBacr37Mcsg/6w8hJ6Cfm
6EXskey/W9lfy0cgne1Lc3AvckT90I/L0evYw8j/iZcmpOi57C+XRnaqgoO1
v/9APFEFB20/s4z4vgqO1f75U/FJFRzxd030//72zBT9i5yVXJWcsv2VHI/c
jpzrLk08z3ucf3wVfLD9y5kpemT5afmNS7F3qYO/tv+RO7Ant3+4GLkPu2sd
77cEsmoV99ynif2Zjn5yFf25/cmNnL+bOLR878nuJdKmifgchd6zxGuFtKzi
mN93Eec06MPlSMv3Vj+kfE85IrmhZ8v3sX81ln2GVZr43q45A2hd/GGkuaL4
h8RdiyqO6Y9yqnKpk0s9kQOV+xxdxXxCvsxe1Z5YPlt+0F7RHlb+Xb5V7sGe
337XPXevB1TBJ22G9EW/tAr+aCXkiCp6Wvmt9ZE+6BdX0Q+vgvSrguOV/9sW
OaaKHk2+e2Xk6Co45FYlvw2swifNd/Id5maPrVTqo+/ib8qPuSfuhRyvfJp7
7N6OqIKfE38/zfV71zGvkN+Vy7BHdv4gnyxXI+cyz/hdLPbd/RZbGq9PVoEx
7ef1EX3jKuT7HPObnc0jVfCJ+oS+IOcnP6HP6CvTSj5xJuAs4P4q6n9jDKKP
KflFTl0u/e0q+MtrsY/U91NwJzfk4JLE93NyzIfOkgyqgj+8hWPnGgsc+rEJ
/tZcND+Fr8g3ujf6jNzUTX7zOvpJeYVBObhHMaVc/jU5uFPx4ewc7+y7/oq9
sAm+dmixW+TgR/SV1lXEgnynvmBM+K7ykfqO7yw/diP2Kdz/iBRc7XU5uCHx
ubEpf+JeG6PyR9frT6x3TxFb8rnDqoix73LM2572t5Gfm+C7zX0LrDk5+ANj
35gel4O/1TfMCfqieOL1KnzSeiynIJcwrgp8Ix6yt5OTeL3kE7mIUXXgETke
uR3voe9bL/yWxoCxY333XsaQ9d89c6/eqSI2xAPqxoixJD7UN4wp53cdCl5z
piYXfVWO2YQ94pgcfKK5yhwoPyDfIpYSc7yUY35nbjRnOt/4j/kRe33xTA7+
eL86YsbZx8Acsxx7BOc7Vxtv2J2w3+PvgBxcuD2w/PiV2N2xf5+i9lif7qui
Blmv9El90WPWKuursWDNMpb0rwOrmIn+lOOb+i3nVDHvfBdZvo4Zn3zkhzm4
VDkw+bFpOXxZn/4RfVaOa2cjC9FnIF3q4JR/yeHT+q7HBBK/Yp9ZR0zJ13p/
ubBhdXBvX+WYxRorcr+f5ujv7PPkRj/K0d/Z58m1fpyj/7IPk5+XX3EW6x7L
nX+Wo1+0b5Qr/yJHP2hfKJf+eY7+0j5TrvTLHLFp32eumpkDD5iz5M4/ydGf
2ac5/5XTkctxxuLs13mss1BnwM5CnUc6e3Qmqn/ICcoFOuPVn5wZOCuQozZ+
5Ozk6uTg5Kedlbo3zmSd5zivfTfFzNn4MkaMDWck+peciFyIMwpj2Xg3txnT
5gLzm7FtTjD3mX/0NXOgs2/noc7GnYE7O3WePirFDNXcN6h8H3Ogs1/nt+ZC
Z8DO1uWjB6eYsev7xo++agzcnCMfmov0AX1d/zc29Hl9W39fOoWPyy+/4j7W
MfO3fpiTzcXO0L9Gn46cX8VMS2wo3r6zCow4N8fM2lm154gVxZ+Dq8CM4kVn
8t7PGiS3IT58pAqOQ7zuzN1Z+/VV/H+Db3JgS3Og2Ex8fl0VGE3sJX6/pQoM
Jr53hu7sfFAVWE28ry5msz9wRu5s3GcWH/t/Bvy/Aj6j/YAzfWf53tP52gol
fs3J+qd74l7c1US8GX/OMg4s7+/+OIvz/zDo786QemPf3kT8G7+np/g/FMaf
MW5sDy7x4oypD+t3lPhwpiDXd2cT8eWMqpf+UeLVmc2h2Lc2gXetEdaGIVXE
jzOonr5PE3jcGb+zffd8lxw1z3xhDRTr2i+592JeuSbxs/eSczIfmKPMTTc3
Mfsxpxgvxo35wZmM3MegJvopMbFY2G/2P2VrPkA=
              "]], 
             Polygon3DBox[{{1245, 1256, 929, 778, 101}, {1243, 1254, 927, 776,
               99}, {1240, 1251, 924, 773, 96}, {1239, 1250, 923, 772, 95}, {
              1262, 1259, 932, 1055, 307}, {1244, 1255, 928, 777, 100}, {1283,
               1261, 306, 1097, 1096}, {1284, 1276, 579, 1153, 1152}, {1246, 
              1257, 930, 779, 102}, {1242, 1253, 926, 775, 98}, {1241, 1252, 
              925, 774, 97}, {1279, 1258, 931, 1179, 
              635}}]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0csqRVEYB/Dlfr+VUnInpRxegCdgJPfbwIwBU2ZmPAFPwMSUJ6CQJI7j
uF8KIUmSJOG3U/vbv/9aq9b61t61Y1NdkykhhFnVnBpClH+8blmsUs1VM4Mt
zGY789jJQg6xhIn0ECbkUnmGZZxnORdZyWXWcI313Ijmndcix+VGVhgfyi9p
IVTJCblbPmIPk+zlMft4wn6ecoBnHOQ5h3jBYV5yhFeste+ofB31Ibc690Zu
Yp3xgfzNdX5xlZ9c4gcX+M45vnE6Wnf/V3k86p2DfGYHn9jGB8Z4zyo+qpgz
i/hr7iH6pupVb43GBfKJ9XwmmccEcxlnDveZzT1mcZeZ3GEGt6m1sMItZetw
pzZlT2hI+f/3f5VLQHk=
            "]]}, {}, {}, {Line3DBox[CompressedData["
1:eJwVzmsrA2AYx+F7s0lytoO33jAUUxu1URvlUA41Uw7lsBzKaXxKH2ahJEmS
y4urX/3v58Uz3mo3HhIR0eQ5GdHpinhjMhUxQR8Fpni3z+g0/cwyx4d9XosM
UKLMp31RFxikQpUv+7IuMUSNOt/2VV1hmDXW+bFv6sb/+3TEiG6xza/bru4w
SoM9gn2aZDjgkCTHHJHlhFNSnHNGjgsu6eaaK/LccEsP99wxxiNP9PLiT6/8
ASkTHs4=
            "]], 
           Line3DBox[{712, 1196, 1197, 1141, 1140, 1198, 1199, 1200, 1143, 
            1142, 1201, 1202, 1203, 1145, 1144, 1204, 1205, 1206, 1147, 1146, 
            1207, 1208, 1209, 1149, 1148, 1210, 1211, 1212, 1151, 1150, 1213, 
            1214, 1215, 1153, 1152, 1285, 1216, 1217, 1218, 1155, 1154, 1219, 
            1220, 1221, 1157, 1156, 1222, 1223, 1224, 1159, 1158, 1225, 1226, 
            1227, 1161, 1160, 1228, 1229, 1230, 1163, 1162, 1231, 1232, 1233, 
            1165, 1164, 1234, 1235, 1236, 1193, 1192, 852}], 
           Line3DBox[{713, 863, 714, 873, 732, 883, 742, 893, 752, 903, 762, 
            913, 772, 923, 1286, 782, 933, 792, 943, 802, 953, 812, 963, 822, 
            973, 832, 983, 842, 993, 853}], 
           Line3DBox[{715, 864, 716, 874, 733, 884, 743, 894, 753, 904, 763, 
            914, 773, 924, 1287, 783, 934, 793, 944, 803, 954, 813, 964, 823, 
            974, 833, 984, 843, 994, 854}], 
           Line3DBox[{717, 865, 718, 875, 734, 885, 744, 895, 754, 905, 764, 
            915, 774, 925, 1288, 784, 935, 794, 945, 804, 955, 814, 965, 824, 
            975, 834, 985, 844, 995, 855}], 
           Line3DBox[{719, 866, 720, 876, 735, 886, 745, 896, 755, 906, 765, 
            916, 775, 926, 1289, 785, 936, 795, 946, 805, 956, 815, 966, 825, 
            976, 835, 986, 845, 996, 856}], 
           Line3DBox[{721, 867, 722, 877, 736, 887, 746, 897, 756, 907, 766, 
            917, 776, 927, 1290, 786, 937, 796, 947, 806, 957, 816, 967, 826, 
            977, 836, 987, 846, 997, 857}], 
           Line3DBox[{723, 868, 724, 878, 737, 888, 747, 898, 757, 908, 767, 
            918, 777, 928, 1291, 787, 938, 797, 948, 807, 958, 817, 968, 827, 
            978, 837, 988, 847, 998, 858}], 
           Line3DBox[{725, 869, 726, 879, 738, 889, 748, 899, 758, 909, 768, 
            919, 778, 929, 1292, 788, 939, 798, 949, 808, 959, 818, 969, 828, 
            979, 838, 989, 848, 999, 859}], 
           Line3DBox[{727, 870, 728, 880, 739, 890, 749, 900, 759, 910, 769, 
            920, 779, 930, 1293, 789, 940, 799, 950, 809, 960, 819, 970, 829, 
            980, 839, 990, 849, 1000, 860}], 
           Line3DBox[{729, 1166, 1167, 871, 730, 1168, 1169, 881, 740, 1170, 
            1171, 891, 750, 1172, 1173, 901, 760, 1174, 1175, 911, 770, 1176, 
            1177, 921, 780, 1178, 1179, 931, 1294, 790, 1180, 1181, 941, 800, 
            1182, 1183, 951, 810, 1184, 1185, 961, 820, 1186, 1187, 971, 830, 
            1188, 1189, 981, 840, 1190, 1191, 991, 850, 1194, 1195, 1001, 
            861}], Line3DBox[CompressedData["
1:eJwVzS1MgmEYhtEHkTnnnNGBv59oQgrODYsUDWLxb1LUgAULbFDNZrPZbDab
zRaLxcLchDHHnHN6CGfX/T7lTeqto2YqIk64SEd0mRqP6NDm2PuNNXuSFk32
3F5YtSe4okHF7Zm8neGSOptuT6zYac45o+D2SGKnqHFK4vbAsv2nh3rArD2T
ibjXJe9f3dcq0/Ydi/aP7urO6D/7lgX7Wyu6PdpjETfe8/ZQt7TMp/u195z9
pRta4t297Z2zB1rUdV7dG95Zu68f9PgHVt4lgQ==
            "]]}, 
          Line3DBox[{1237, 1274, 1275, 1263, 1267, 1247, 1261, 1283, 1296, 
           1269, 1264, 1277, 1248, 1276, 1284, 1285, 1282, 1249, 1238, 1286, 
           1250, 1239, 1287, 1251, 1240, 1288, 1252, 1241, 1289, 1253, 1242, 
           1290, 1254, 1243, 1291, 1255, 1244, 1292, 1256, 1245, 1293, 1257, 
           1246, 1278, 1294, 1258, 1279, 1280, 1281, 1265, 1268, 1295, 1259, 
           1262, 1270, 1271, 1266, 1273, 1260, 1272}]}},
        VertexNormals->CompressedData["
1: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
54+uqOf/P43hpAA=
         "]]},
      Boxed->False,
      ImageSize->Scaled[0.4],
      Method->{},
      PlotRange->{{-0.999346316070354, 
       0.9999999999999273}, {-0.9985915584427716, 
       0.9989930738762993}, {-0.9999998571428571, 0.9999998571428571}},
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
           SparseArray[
           Automatic, {7, 7}, 0, {
            1, {{0, 4, 8, 12, 16, 20, 24, 28}, {{4}, {5}, {6}, {7}, {3}, {
              5}, {6}, {7}, {2}, {5}, {6}, {7}, {1}, {5}, {6}, {7}, {1}, {
              2}, {3}, {4}, {1}, {2}, {3}, {4}, {1}, {2}, {3}, {4}}}, 
             Pattern}]}, {
          GraphHighlight -> {3, 1, 5, 4, 7, 2, 6}, 
           GraphHighlightStyle -> {
            6 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
             4 -> {VertexStyle -> Hue[0.14, 1, 0.9]}, 
             5 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
             2 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
             1 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
             7 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
             3 -> {VertexStyle -> Hue[0.14, 1, 0.9]}}, ImageSize -> 
           Scaled[0.5], VertexSize -> {0.2}}]], Typeset`boxes, 
        Typeset`boxes$s2d = GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$4", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$6", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$1", Automatic, Center], 
             DynamicLocation["VertexID$7", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$3", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$6", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$2", Automatic, Center], 
             DynamicLocation["VertexID$7", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$3", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$3", Automatic, Center], 
             DynamicLocation["VertexID$6", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$3", Automatic, Center], 
             DynamicLocation["VertexID$7", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$4", Automatic, Center], 
             DynamicLocation["VertexID$5", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$4", Automatic, Center], 
             DynamicLocation["VertexID$6", Automatic, Center]}], 
           LineBox[{
             DynamicLocation["VertexID$4", Automatic, Center], 
             DynamicLocation["VertexID$7", Automatic, Center]}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.0001937884754836805, 0.31823716684075093`}, 
              0.06415272600389244], 
             Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$1"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.6946654040242253`, 0.3189627344256111}, 
              0.06415272600389244], 
             Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$2"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.6949416592011364`, 0.9654747332116507}, 
              0.06415272600389244], 
             Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$3"], 
           TagBox[
            StyleBox[
             DiskBox[{0., 0.9648215660605998}, 0.06415272600389244], 
             Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$4"], 
           TagBox[
            StyleBox[
             DiskBox[{0.8485113459102751, 0.}, 0.06415272600389244], 
             Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$5"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8466491549206725, 1.2833113220558312`}, 
              0.06415272600389244], 
             Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$6"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8477109312976009, 0.6417849406778126}, 
              0.06415272600389244], 
             Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$7"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{4.6899999999999995`, 
           279.80999999999995`}, {-109.53759999999998`, 103.92072123469997`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[0.5]]},
    {
     ItemBox[
      GraphicsBox[
       {Arrowheads[0.2], ArrowBox[{{0, 0.3}, {0, -0.3}}]},
       ImageSize->Scaled[0.3]],
      Frame->{{False, False}, {True, True}},
      StripOnInput->False], 
     ItemBox[
      GraphicsBox[
       {Arrowheads[0.2], ArrowBox[{{0, 0.3}, {0, -0.3}}]},
       ImageSize->Scaled[0.3]],
      Background->GrayLevel[1],
      Frame->{{False, False}, {True, True}},
      StripOnInput->False]},
    {
     StyleBox["\<\"Orbifold\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.03]], 
     StyleBox["\<\"Orbigraph\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.03]]},
    {
     Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
zz8hB0IPEPMCYScQ6wKCAxDcKM6QdX3Oe4VfYj7txv2lGjevBfx3razOh8Px
B1XPf3PbeBuFP2RXBxjrxarER/N1m8IVfpVV8xu0xEklDi6yK4hV+GcWfrbp
mDUq8a5Hs/ztSYnJrM7zNs1U41pNm0GlinjBtjmk1FONX19v5vVoWpDGfNf7
HDyhEqcIORB6gJgXCDuBWBcQHIDgRnEGvd933yniCNtS0iXlkko+I3v98r+y
+v/DcvOBqSr+X7YyaZAiTrHz27t1GauSt2SNijiriHds0awetQap5CdQPFJf
ETfZltV/Od5UyUPGdl6QpYi/rIadX7i9Sr7x80d7F0UcZ9qHOx5jKnnF1AV2
hxX5ADt7Ym7pHJX8gZADoQeIeYGwE4h1AcEBCG4UZyFfxeVM4v+h6Omqsnq1
z0cty8oqeaM070k+L9Pkb8HtZJr81/J1MU3+f2yVHJgm/5qcG9Pkf4RzZpr8
NeRA6AFiXiDsBGJdQHAAghvFGXLwXnjze/F//PW5HlG3tsB7d4XfO8F/Ad7T
qvyeCv6L8V6H8nst+PdCP1Cb+wHBvzb6DRvuNwT/7+hn7nA/I/gTciD0ADEv
EHYCsS4gOADBjeIMHzEuFPC4IPgb4T16x++R4L8Y484EHncE/6HqcUrwX4dx
7RWPa4L/XIyDW3kcFPx/YNzcz+Om4D8W42x9HmcFf0IOhB4g5gXCTiDWBQQH
ILhRnCGzhvZ0lbxI8HfCOGLE44jgn3++9m6VvEvwb373UaZKnib4LzMs1FPJ
6wT/Vy9qOKrkgYL/MefWRip5o+C/cH8XbZU8U/An5EDoAWJeIOwEYl1AcACC
G8UZhmNdUMTrAsE/PHTdD5U8SvD/mMfrjlm87hD872KdMpzXKYK/HdY1fryu
EfxnYB10hNdBgr8h1k0RvG4S/HtjnWXF6yzBn5ADoQeIeYGwE4h1AcEBCG4U
Z5iKdfF7XhcL/i5YR5zhdYTgfxPrcT9ejwv+UVjXn+F1veCfiv2BLrw/IPjr
Y58hmvcZBH8r7Fd84P0KwX8X9j2qeiv7HoI/IQdCDxDzAmEnEOsCggMQ3CjO
4Id9jGZblX0MwX8S1tGNeR0t+DfHPkmNgco+ieCfgP2WON5vEfxl2Ldx4n0b
wd8U+z/2vP8j+P85w/tIq3gfSfCfhf0oK96PEvwJORB6gJgXCDuBWBcQHIDg
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
+A==
       "], {{
         {RGBColor[1, 0, 0], EdgeForm[None], 
          GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFm3ccV9Mfxu859x5khYbQj8resreSlMpKKDuRQiIqGVEiilA20RINm4yE
sstMSlRSkZ3smd/z7jm9/HFf9/me77n73PN5nufzuQ1P7972vFgUxa6pKEqt
F2nh9/pa9q6K4jM1XiN8XiiKU7VcLLyv2hep/TrhvYQ/FR4gvKfwAuGrhHcS
niN8ifB22q6F1sdpuU9tZ+q/jYTvFe4kXE94kA66jfo1F75I6+u1vlvLHvp/
vvr1Fx6mPu31Xw/hxmr/RO2XC/dQ2yCt79TSXO3fqP0W4QvVPljru7T0Fe6u
ZaDw+cHnfoeWA9T/i9LH21/489Lb7CL8sfBlwsO17qjfGwoP1Tkcr+0vEN5P
bUtKH/tmtR+n9vOFD1X7t2q/lWvQ+iXd2zqch/BJ+q+28APqv0Lrf7T8pGXN
wvekr9qXa11Dy19a1tXyPy2Xq32Z1mto+U3L2lo20VJX+3tQ+20s3F99VtM5
bCm8odrHqX1X4W3VdqjWx2r5RctaWjbWslSLuhW1tHxe+PlvoOUrLTrlledZ
Rx0e0B+7CI/Sepr+qC88Qrhz5f2MFO5S+Xxqa32/fu8sPFrrcyqf/xjhbsKb
Cl+m8/xO69W13KP2U9VeV/h24eMrj707hU+ofG53CHeofG6HaP21fg8TPlB4
qfANwrdqn2fpOq8UniT8d/Q97ao+2+uc/xR+Tm1ztWwvvKP6ttf6sHyPudfr
aNlB7cdr3VLLW9r3BG1/qvB04QeETxZ+U3iM8EnCM4THCZ8ivH3wGGesvx+8
T679bP2/g87hb+FndPw50ffwg+Dnzz2ZI1xpaZSf6S68j/o9M/fhHBcG72MH
Le8GjwPu+Vnqv536/y68IHi9nZY3dG6j9N8JwvPV/itjIY+d3/I4mKrtftKy
Quf0jvo/ov4d1f6e8BPCnTiW8GPCpwu/xLsl3JZthW8TPkZ4mvAdwu2EPxSe
Itwl3xPuJfd0ttpfVHtX4Z21nqvflwrfomN3Vr8rhF9W212Vx+ptau+i9n7C
B6vtS/13s3Az4a+Eh3IvhJ8TbiX8itZ3V34GL9BX+CjhmcJPC5/JcxF+SvgM
7r/ws8KdhV8XHiHcQfg14TeSx8erwsMrn/9k5gnhw4WnCN8ofKTwi8Kvqf/R
eVxxLuznebUPUZ8jGKtq31lLa+GdtN5My/7cH/3/bOlxuK3w06XHz+Nav6x9
HiT8qHBf/Xeg8GPMecIHCD+i//sLNxOeqPY+wnsLPyXcT/hg4SeErxBuIvyn
8M+8n8JLCs/16+V3n3eOef9J9blSfZoKP8T8LbwPx2IuFN5P+GGem/C+wlsE
3wP2/wyxovLz5plcV/lebBV8bzifLYOfCftnzmduYsxcK7x18Lh6TNc1oHIs
+Ev7+ZU5iPda+JXkuawu733pmME9u7ryfftD+EfhMYxx4WXCo4R/F35H244W
/lH4C7UPF/5OeEHlWDCEMajlNuHlan9L/e8R/kF4ceV4tEz4s8ox5XvhhZXj
zmid/yRtO1348uC5n3NI+n8t7ecx4VJ4deFHhCvhGsKPFn7+AyuPgT7BY3yE
lkuCx/hILSvU5x/1GS/8t/AfzPvCvwp/V7lP1Dppnw8L/6P2v4gBwkHrUu0P
FcXKCT8ITxS8NHge5f7cqfO/WL9vEv5J236pfvcK/yL8beXz+Vn4a+H7CseX
xslzVmMtDbS0YWyorbf+25N5TW01tewIrjyGGD8DdKw11L4146fyeGVsXKX2
1dW+lfDmlcci46Rh5feBd+EO9emtPjcK3y7cS3iIcIPK7wnvSKPK454xuYnw
BOG9hP9XeUwznutXfmd4Xzh3tuO93qbyOGOMbVd5TDOeNw/eH2P9ujxWD+FY
wed1RB7DjHXex6uF6wrvXnh+Jl4SK69R+4Zq3yO/O1wf78NAtdcLvm/ELGIq
czvzM5wJbvCX+gxifDPOC/+/ai5n38znxFW4xmrMS8mxk7jZvnJ85T0POs5i
rTcrHFuIUcSXierfs/I5f1M4/sMD4AO1PHRWxjRiF7FyvPZ3kRp3y/eB+8d9
vCxzFWL6H8LXleY0xEE4BNtfofYfCnOVfsI/Fx4PY/X/eeq3U2H+cmFlDnNu
ZT7BucJ3elTmPCdW5gqcH9wJLgWfPLky3+Ia4CPnV+Ykp1TmZNyjJ3XOb2g9
pzDP2VkXG9V2pv6PWhqq/bnKcYIY8ULl2EZc+whep999hJ/XepZ+nyX8TOV4
Q6wZW5krwBNGVo4xxIVXk2MDY2Zo5VjFGLipclxhjB3NeNNyNu26rsMy751Y
mZfAScZX5h9wj/XgX9rvO8LrC9cXfld4A/iX8HvCNYXfE36b/lqvznsifJzW
DZLHBPMAcxDv+MNqf1v7P024qdp20XKi8FbEPt6L4HeQ95G5dIhwi8yBa2nb
TbXP94VvqBw7GR+D1WevYI7RL5iL3174PWauhcvB55mP4eg9g+dd+Dmc+pPK
cysagTkYrg4H/KDytvOIxcJ9eb46/puV+QMcf2bl/Tyl9lmV5w04xfTkOfdp
rWdXngPhF3Mqz7/3VuYBcID7KvMDuMGmxHfmEM69Mv+Ae7yezGPgMDfoevcJ
5lHooWmVNREaZW5lnTKsMocgRsJtP6oyv4XjlJ6X0TqvVtY7z2n/G2t5i/Gm
db3kuLOW/n9X+DXOU8e9U9tNYW7StrdouSP4hf5XeILgD5VjJPP/mskxiXj0
feW4QkwhHhLHuOfEC9q4J8Q4YinnfzO8W8tY4beTY8YI4eE6h9vVPll4ReUY
RvxaXjkes/3XnLt+76LfS4UnC28rvIR4JbwFsYj7Kbx96bF5YPTz4lh/aWmR
79EB0c9uJHFMy1PMRcHXx/38qTI/4Hr+rhwjiY+/V+YZcIxPK3MCxt+M5BhP
fF9UOfYz5sbqOK8E86fJWs8v/N69mtuYY6cIf1r4vXtReGHhd+Fx4Vn0ZR7T
fqbq96Naamj/tZPbn9fvBYXf37XVXkftrwuvI1w3ec5aV3hDxjf75P/K/Jk5
bXbh/k8Fz230v0vHGhgc9w/VdQzTci3jlvk5mDN8Xpn38B4uqcx7ePfWTuYx
cJh1hVcjHhfmPE9r27mFuc9Hhc/nfrU/y5hlXKnvBtrmFeZe7e82Lc8E+wQz
KnsF+AdvVfYQFgq/LXy18Glab5UcJ2YExxQ0+GTt/+PouIMeph0tWY9YlKyB
mee35PmpfXpwXCQevR0cI4inbwXHJeLFx8HHgXvMDd6O2DQ++nkvEe6qc1un
dOz+Xn3+F8yBv9Z6oxy7z9b/NTPf+FZtmwRzDHjFIcn94BWHJv/3nZb6wZwE
LfCL2udH65qWycd4Sr9/j77WzdR+bWXtsCOcMVlLLMuaAn6F7uUa8RA66Vz+
jL5vnwRzB+LsvOCYu02+Xu7ZFsJnaJ/bJP/3TrBfALdA1+8EGQiOF90ra4dZ
wW1wiQ+D42cDxlwwbyD+wjHwOtC5xPEdmYOEPwteww/RPs2Z14Jj+ubCXzOe
de6zo+M1MX0LtX8r/KzaPoo+Z549zxfO87jafoz2Ml4P9jhq5XP7onBMfy1Y
88CLVvEbuA0anGNurmW28JeF9TjcqWHy9nCqH7k/HF99UnD/HzIHRpetp3XD
YA6zpbZtmswF4bQHCdcO5qgHCtfiXILb4DOLgrdn26XB2zHO4ck/q/+86Hu2
bvB94x7CsXfIY2O/5N9faKkTzJ14PuvnZwRP3j/5GIu1bBDMi/Dz3qscc/G0
3kz2tfDD3q8cZxcLv8v4K+wLvlPZG8Qne6WyV4bGheOg+7qofc3S3hHjrUbw
2IPPH5B8bMYPvIMxwzPjuaBD4e17Jm+zsfAeyZphI/hpsk44B26bdcG/wRwU
TsUO4OvwqOW5HV76c7D+bCr8SzBXR3ecCx8szed/Deb2cPgQzdHhZmXm9ujT
F4UXRMfrKmsBPJAVeQzAc34K3rYJc4rO+eBk3o/u2Et4TeGzdMzVS7+DnbVO
pecfPJy1gr0adNO+6r9OsP/DGv/qeR33k+j5h7mL+8F8tbX6N0vWEl8GHxM+
/6nWawf7QuigvZOPQTyCL3yo5YnguEH8GJPn9hnCPXReW5b2f+CfJ2nb5sH8
8GT0uPCTwqcl89SXte0iLd0L8+HT1d6a8a+2VlpfxDkIHyJ8nvCF2vfWpT2Z
RpnrXsg4ieaY8N7Noo8Dt2yQeSYe7KPa/ynJv7n3jfM7yNw4qLLfsma0L8O4
XDuax8LJB+v/Vsm/14oeu3hl/wRjxnBdte8XzP/h2ycmn3cd7n0wz4fv/cY8
XFovdBJuo//+Dj4uur6++jcT7pbfkQPzseDhw9F4+n2a+owI5i3dotteZnwK
DxeeJnxINGeGn9yo9b3ce+GWOu69ydv/IlwrmY91Uv8xantGuKPwKOFJheP4
Pcn73TPvk/e6BXw52SuH07ZLvv5p6vNZtMaBDx+r9v2D+fBxwgcEa5zj8ax4
T6PXeH2j1d4+Wc9coHvUqLSPunF02znC9aL30SU/l/sr+wmbqP1gtZ9bWE91
SP79Z7C3iOezenSOAe69RnQ7XL0JXDvZF95d7d2CeQU5gj/UvlRtO2XfGO6E
b39lcr+DhPsk+5Lbqs/pwbx9G+HTgnXfPupzYXJehJzIRcn/HaWlY7B2w6/u
q/Zzgvt/XDkHsZv2c24w5yHP0kN9Tg7WkmcIH878FN3Wi/c6+ji9hfvAL0rn
RPBCL1f/s4M90suEuzLvRx8TfkWeomfyNVwMfyntkzdV+6XJHusu0dv1U3tv
/b9raW+WnEgv9enEWM4+LdrqVrUflazlameNw/u7QdZ3zBV3qk/b5P+6o91L
z5O1ojUTmggt/CtxHz2t9k+jtdX6Wu8ZrBP/Cvbl8WHWUfuuweMHXdk6+Xcr
4RHCo4XXhRsG62I09eFq3z0419Nb+Az2pz5nBusp8gi/E98ZO9H/E8uOZB/B
Oa89ot8J4t0rwoujnwv6/Qhtu4f+qxl9HLQ5mu7I5GvYInr+66n2qcILozX1
YepzX/I7eZWuv62Wp9X+jv7/Dm3A/c/6Gq3aKmN8uX2jtTF69rBo/YwGbxGt
jeHt++V2dHHbaI2GxjlGuH+wf4jeuSr5N3NAvzwPvKk+X0ZrgX3yPuEAe0Xr
c3gCY/2C/C4cHa0V7xc+OFofog3na//9k4/N3DKvsr/aLPdHVx6YPQe0W+to
LYf/0DwfC/2FZhyi/dyg34dG5/bQYpfqnh1Q2g+8ROt9S/OWU6L74m+8JfxN
tGY5SevBwVqmnfBVwRoQrfcnc0tprXe18AD9N0N9vo7Wy+ijgWq/hvkleo2e
+oZYk6yjlsKPkrUWGuoa4auF22f9hQfbIVp7obn66njNSz/To/J9Q58eG318
9PKJwoOCtTka9sbkuZ/7NyTfc7T8DWq/nvEX/f+Tec4fGjyu0Lk3J//mufxW
2XtZLdqHx684Ifo68KjxAa5Pvl/Eppty7CC+3JT8mzzOWcJthaerz1fRuv7w
aP96pPAZwvcLP5vj0S0Zt9a2I5Pj05lqH6v1c5yP2u5I9i+IZ48Fx8SXgrXy
rBwfHwmOiSSwaUdjHqt9Tkj+r3s0v0FTd4ne3wvC/fHYSl9jV7XfpfYXC5/D
bcF+xdnCdwu/VFj/3k281O+o9W3Jvgbi4dbkbfA3buG38Nva9tvoa8FXuSt5
X5w35wPXOivaj8Gf6Ry9v+eF++GTlR4nM9X+Q7SuvkZtJ5Tmaj2itT26/mgd
9wHtf3zwOU/I19JW7Q8m/24j/DdaONr3GJb8DE7X72HB3OBK7btV6TnhMjh1
aY/lHPWZmO9Dk2gPCP/niIxHEUeifRY8ljb5XR7BPKNj/aNjLVPbUcJjhccF
85qHg7kNXBPPAp/igmgMB22n/uPV/6Fg/sOa+XAAvlrpe3UkPEF9Hgx+vuPy
/bwar670s+bePpCf6RHqPyb59+HCo5PH3EXqu11pjkHev4vajwnmqO2CORu6
BN2It8NYm5rHG97Oy8H+zk/whNK6ciLno2VasJf+ZrAWnhDt+zCW8UfwSeYx
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
d7J41cQlvoclNlHryreH5En+DzNJmxw=
             "]], 
            Polygon3DBox[CompressedData["
1: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
1D39Ss6OOkh/98MmvrU+qrp/lRLfUxugf/tBk9hUzlR/+/0msezQOmMrlsjO
0Tapj7VF2ijnrlDi63rN9+AvSvaCOnP8En17EfhBP1WJfpWbuF976m9bcjYO
qxMfeI1z/Ybymz+z5oV19rDxt/dwbTn5UqKfz0e+r4ptHA98bh0b6dmcoI2/
7hn9Erm0sZ1yKcbDPpPP4hrGs55pz7JrGE97D9d2Dfm5e5twm55xdeHNJXtB
nSjf9njnC/Wv438vTN/gOn3Pg+8GrwPerwrf8BJ9w6rMkS94tdufcvKvIC9S
ws24Hz/mee5pMyZvL3/3Av/3r7Kmay1Ustdd8/E2nJicl/6c/MsY5HUZX7mO
7l28RDerg13rXvB6ddZUdy8G3qSODlcXL1HiW6uT5T9e6c7fRvR9ifwOfUfX
sfnG8180ydUdWSde/7xJru/wOnyI1zjXnJTf9rQSrtxv7Nw3S671Gr/NoiX3
8hv9gPx6yVqn1tGF6tBBnU40vnytia7xHYxv3wXvibxdHb7luybchWdKvuCr
Jv6I76D8XgnXZ99j4MtKflu/r/H+W01+y639vcDL0rb1+WgP6duBl6/DN8tv
PdyEm7VPPvax7vfvB34E+SL6VkTeib5HwaNKfiv5Wfll+5SdY7zvPVx7Oc8A
8uklvtp29D2AfEnJ2hvU8eXOLPEN9enkF/7dhBtflr53PNslvp9cu77guSVj
+oTyzy/St02dPeK7XFjCffpO6u7bwYPq6HD5jzfp27dKjuZT1r+3jWze5m3a
MiXfzv0mH/N2t5/9hur65Up+K3W+/PZz3Xre4w3kpUq4Vu/3GWt/XOJLmxv4
mvZ+iW+sT2l8t2SJL6EOd607S7hN15T/eaOzP1vWefalS2TH9V/XKuEW5Fzl
vtQ3cmFyYPKV+kz6Ssa4cgvaQ2NjOQa5JvfHMVU4J7kW30/uQc5F7lJ9Lxco
h2l+1Xx8/yr5Ably+UJtyYe9cE1+P22JnJNcifparkLO5OBO359ShaOVn1Bf
y6XIAR/Sxn6oG1bqhbuV79AWfNALl649kksdx5l39sXcipyKXKf2TO5OzlPu
UvskVymHKdcv3+nZ7t+Eq/O8nl2FszM29XzJzRmjyu+bf5SbkY/S99KnLJ0P
Jtcv/6ruX6MJV6h+kPuTM5Tb8/f2Wjk+uULt0agqnKFco/bmrCqco7ky7b9c
oDkzuQE5C7kKOQJjPf2hi6vEfHJH8j1ySXJIw9vsP221HLu5fv2lS6rk/OXP
JivxDS6rw1dNWuI7maM1llmnZMyYRr5sAvB1dWym/F2fEl/iWvCf1P3g69WV
ddYaRBtdZ01jsXVLYiNjsr7qypJrtanyY5OU+I9eM7m2oiQ21eYZq65Xwj0Y
s8qlub7cmpya3K3xg1yuHK65UPloY43fe8mvft8b59aP45vNj1Z8y0mr8PPW
VsiHWItijYW5WXO0chH/64XbUP+b+5LjMBdu/szYfIYmtS3yG9aijKtxMT4D
31DH57dWRb5iiio1K+YO5Jt8FnMI5g6Mz+XOzSHInRvfmFuQQzdXJF9g7Yc5
I/nVvp0/4jeXS9a+yd3LKcsVqx+OrsIZyw2rX/TF5IjN9amPPbvm/MzXG2cb
b5tP03+0fmDtJvrJ/JP5enMH7iH9SesfNmjif5sfNo411jIHZz2L/L3c7MtV
8g+fNuGe9TGtH7LeqE9+hnH5GnOw5l49w3IR6kx1pZzEUSWcgM8o57dfSQzt
PY1B5SL0ofSd5CSMffXx9e2NgeUetCHaDjkI60fM4Zq7XbVKrsuc1xRNOMw9
+T9jk9/XnLJ1D32b1IaYMx3eJP9r7YmcuHUP0zWpLZHj3qtJPlh7Zc56b+RZ
m9hCc7zm4owrjCXMyVmvJf8tF/5mlfylvIVnxZzaiCYxsbGw+U1zY8YRxhPm
yMzlme82npmti8flvydowpfK509Z4k+agzD/Z1yrb2WOfNru+eXyrXeQPzJ/
0DTht+T6tKfmvuT8zDVrr80Vm3M2N6Y/IbdvjszcgPbZXIE5AmtD5P99/z81
yUXrT5hbMye9VZt4Rt/KmoTdOn/uiCo5OnNz+hvmrs3RmSvWf9iySs7Y3L7x
kbGtOX5zy/pD8snjcsxt4jt9D2sGrC0wftu+So2B9W7Wh5j7mahKLlt/U3/G
nPYObeyxvoQ5VXPT+sv6QuaozfVZc2W9hTm/Pt1+MTdv/Ze5b/0P/SFz4Ob+
9c93qFIDYC5P/1hfwpyeuTv9SWMbc3jDOn/X3Iw5CXOB+u/GsuYEd+385cOr
5HB2buOfG/uYEzXfKe9j7OUc8zVTlMQPV9fh37S52lptsvGq8YL8/ezdWfJM
DQHP1aS26/nOvzQXq//0Vne+3+8lfn6m89/macJd6+Po25iLNlejfpdrNmdj
/KA/bDz4Xi+5AWMUYxNzwdZPbVCSW7Km4NLOHpjrMWdtPZL1eeZO3VPWnsgv
jK5Sg6Jt0T+S29PGmLuTzzf3ag7PWj/5h8uq1PxZyycfom9vTZ+1KmM7f91c
tPbhvjb6a0inW9Qx1l7M3CQ3pf00F2SOauk2fJv5AWvKnu++4XxN9pDxoPGd
/v563dn1DMt3jd/5Gvoc8tOv9FK7tkDJ+1rDdltnz6z1maRKrGHMYXyzVuc7
6EOYT3i1F39ttRJ9PqY7n4+2Of97dLpfG6B/8Fln7x5us5/Vhepada6513XA
N3X21dolhsbpKnWWud+fe7EV43X+grUA+ktj2/D51kj4bf3GczY5o/pnT7TJ
31iTYW3Q2iX2xNywukkdNVuVHKe1f3OW+KPWAGo7tCHW86zWJDen/2Gtgjk6
azflN82/WMM5oE0+abUqNYXWeplvUhda82VtmfkobYU1Zt7PmkO5+td6qRXa
sPx/LtP8spymXKYcprWT8verVKmhtDbN/MCAKjVq+isPtNE/42rV2uRf1dVf
9lILZn7HfIQ1Yeoa+V5rDdQ5nmXPh7Upnml1/eCSs63O92x5xhbs9rC1PPKB
1v5Y02OuVv/t2So5W8+yZ3rR7oybzx/R2R45V2sXzH/pO1nD4O9jvlPf8Yte
7Kn5QGtBrSGxVsl8orVL1iwt0oZvNh9iTZu1hvK1+h7WHC7Zhl+2FtEaQmsT
5Ze1ZdYoWltsPmaFKjXG1oaa79BWWSNqLtr3N3dtTtraZPMl5sqsUbb2Ur7W
XIo1mNZeyq9a62gNprUX5jsHVanBsDbDfJu1GNZoWItlPnPtKjVZ1r6aX7R2
0BpYz6f1hOb2Xu/il5VK4gdrUKzdMf/Ur0oNj7lw/WFz5ebErV02n2mt8Lga
5jb5Jm2JNcT/Byg20CM=
             "]], Polygon3DBox[CompressedData["
1:eJwV01toz2Ecx/HfbNMybEhyimmaU8yGmeLCLKdJOzSGhU2ZhTXCtJJDklup
kQul1EpSK8Rms7Fhm8ONciyKDcukrGkX5vVcvPt+P+/n+zz7Pb/ffyllVQUH
R0RRlIF4VMdFUbrmS0wUVcRGUSyecge4RQZr5IXoln+rN+z5wa/RX+YSsFl/
Gtv5OjkOm+RTKOEuyEPO3CCfRBHXyX0L+5yXpS7HSy7R3F2uQC7EWDkP/fYU
yfetHZWXmv3umfdxI1HDZXF9XKWcgFdyEt9szxZ5K/rRxa9Wc1Bv7YX8V9+g
7/N31usfc3fULC5JTcZ4ZxXil5kSuTW8P3PN+Mp1IBOT5es4oj9nrji8U7lD
3WvPZz5F/whP+BnqTOyx1iG36HfpP5mbps/mmvBebsJPdzwf7u9Zcq2fwEY+
g2vEO30jesylyWXmhuTy8B25Rrmcn8S1YS4/zF3kiuUu5IXn4yq4efIxeT5u
cju4ZK4VqdwZLocbdPb+8M3wmqvlVpqplZdhAM+5teo63HLHJrWdm6JORSk3
Rr6CUnu7kc/3YpUze+Ql4c7hW6m5XC+XrT/L7bSvgZstH8IEa5Xcg/Ab17dj
AXaH72suzcxhTOSehRl9bfj/UDNxL9zb3Efr4/QrrOWbq+Omy1WIt3ZbTeU+
6EeHveYehnsEr3/DD+KS3ML/0Q+E34G1bXK9vbOsVYf3x18Nvy/+n34Yc8y1
ydfC8+jfcjHhG4X7quncKDURnc6q4hebOR7W8B+uJH8Q
             
             "]]}]}, {}, {}, {}, {}}, {
         {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0TkvRFEYBuAz1rETvYkfQKJHoiYSShIJHQXR0RAVUUg0dBIJCvuuE4xC
awzGTvgPEoV4ThRv3ue798y5596pHxjpHk6EECZlOy+E6HX9patlpMA1F1Nc
o9fyQ2jket7jFm7iDr1qbRv38jl38RD365y14zzKnzzDU7yov62dj3tzbWEI
y3zEe7rUvcu4H+861w1v6DNzlm/l2nyn7yXDOf0gj3JjftLPkuUX/Rp/x2/6
XdLxXcwfvKkvzBlOOcspp+O30UlnOeQl/vEOqzzHC3F/9yZ4Oj6X40cd4z59
Z+0gd/IV93Art+tZaxu5mWe4jhu4Uq9YW8e/suNcVXpLZ9yr5Ao5MZfrMjnm
Ul0iR5zUxVIkB2avEzwi7LOtgwqXif///Q/ZqUTR
           "]]}, {}, {}, {
          Line3DBox[{690, 754, 755, 866, 1522, 756, 757, 869, 770, 1502, 771, 
           872, 778, 779, 1489, 875, 786, 787, 878, 1526, 794, 795, 881, 802, 
           1507, 803, 884, 810, 1512, 811, 887, 818, 819, 1491, 890, 826, 827,
            893, 1530, 834, 835, 896, 842, 1517, 843, 899, 850, 851, 1493, 
           902, 858, 859, 721}], 
          Line3DBox[{691, 758, 726, 692, 1495, 759, 728, 697, 772, 1503, 730, 
           699, 780, 732, 1524, 701, 788, 734, 703, 1497, 796, 736, 705, 804, 
           1508, 738, 707, 812, 1513, 740, 709, 820, 742, 1528, 711, 828, 744,
            713, 1499, 836, 746, 715, 844, 1518, 748, 717, 852, 750, 1532, 
           719, 860, 752, 722}], 
          Line3DBox[{693, 760, 905, 761, 867, 762, 1501, 906, 763, 870, 773, 
           907, 1534, 774, 873, 781, 908, 1535, 782, 876, 789, 909, 790, 879, 
           797, 1506, 910, 798, 882, 805, 1509, 911, 806, 885, 813, 912, 1536,
            814, 888, 821, 913, 1537, 822, 891, 829, 914, 830, 894, 837, 1516,
            915, 838, 897, 845, 1519, 916, 846, 900, 853, 917, 1538, 854, 903,
            861, 918, 862, 723}], 
          Line3DBox[{694, 764, 765, 868, 1523, 766, 767, 871, 775, 1504, 776, 
           874, 783, 784, 1490, 877, 791, 792, 880, 1527, 799, 800, 883, 807, 
           1510, 808, 886, 815, 1514, 816, 889, 823, 824, 1492, 892, 831, 832,
            895, 1531, 839, 840, 898, 847, 1520, 848, 901, 855, 856, 1494, 
           904, 863, 864, 724}], 
          Line3DBox[{695, 768, 727, 696, 1496, 769, 729, 698, 777, 1505, 731, 
           700, 785, 733, 1525, 702, 793, 735, 704, 1498, 801, 737, 706, 809, 
           1511, 739, 708, 817, 1515, 741, 710, 825, 743, 1529, 712, 833, 745,
            714, 1500, 841, 747, 716, 849, 1521, 749, 718, 857, 751, 1533, 
           720, 865, 753, 725}]}, {
          Line3DBox[{932, 1133, 1325, 1132, 931, 1131, 1324, 1130, 930, 1474, 
           1496, 1323, 1129, 929, 1128, 1322, 1127, 928, 1126, 1321, 1523, 
           1473, 927, 1125, 1320, 1124, 926, 1123, 1319, 1122, 1501, 925, 
           1121, 1318, 1120, 924, 1119, 1317, 1118, 923, 1472, 1495, 1316, 
           1117, 922, 1116, 1315, 1115, 921, 1114, 1314, 1522, 1471, 920, 
           1113, 1313, 1112, 919, 1111, 1312, 1110, 1135}], 
          Line3DBox[{934, 1134, 1326, 1044, 933, 1136, 1327, 1045, 935, 1502, 
           1137, 1328, 1046, 936, 1138, 1329, 1047, 937, 1139, 1330, 1467, 
           1503, 938, 1140, 1331, 1048, 1452, 1141, 1332, 1049, 1453, 1534, 
           1142, 1333, 1050, 1454, 1143, 1334, 1051, 939, 1504, 1144, 1335, 
           1052, 940, 1145, 1336, 1053, 941, 1146, 1337, 1468, 1505, 942, 
           1147, 1338, 1054, 943, 1148, 1339, 1055, 1160}], 
          Line3DBox[{945, 1149, 1340, 1056, 944, 1150, 1341, 1057, 946, 1475, 
           1489, 1342, 1058, 947, 1151, 1343, 1059, 948, 1152, 1344, 1524, 
           1060, 949, 1153, 1345, 1061, 1455, 1154, 1346, 1062, 1456, 1535, 
           1155, 1347, 1063, 1457, 1156, 1348, 1064, 950, 1476, 1490, 1349, 
           1065, 951, 1157, 1350, 1066, 952, 1158, 1351, 1525, 1067, 953, 
           1159, 1352, 1068, 954, 1161, 1353, 1069, 1162}], 
          Line3DBox[{968, 1186, 1367, 1185, 967, 1184, 1366, 1183, 966, 1480, 
           1498, 1365, 1182, 965, 1181, 1364, 1180, 964, 1179, 1363, 1527, 
           1479, 963, 1178, 1362, 1177, 962, 1176, 1361, 1175, 1506, 961, 
           1174, 1360, 1173, 960, 1172, 1359, 1171, 959, 1478, 1497, 1358, 
           1170, 958, 1169, 1357, 1168, 957, 1167, 1356, 1526, 1477, 956, 
           1166, 1355, 1165, 955, 1164, 1354, 1163, 1189}], 
          Line3DBox[{982, 1215, 1381, 1214, 981, 1213, 1380, 1212, 980, 1511, 
           1211, 1379, 1210, 979, 1209, 1378, 1208, 978, 1207, 1377, 1206, 
           1510, 977, 1205, 1376, 1204, 976, 1203, 1375, 1202, 1509, 975, 
           1201, 1374, 1200, 974, 1199, 1373, 1198, 973, 1508, 1197, 1372, 
           1196, 972, 1195, 1371, 1194, 971, 1193, 1370, 1192, 1507, 970, 
           1191, 1369, 1190, 969, 1188, 1368, 1187, 1217}], 
          Line3DBox[{984, 1216, 1382, 1070, 983, 1218, 1383, 1071, 985, 1512, 
           1219, 1384, 1072, 986, 1220, 1385, 1073, 987, 1221, 1386, 1469, 
           1513, 988, 1222, 1387, 1074, 1458, 1223, 1388, 1075, 1459, 1536, 
           1224, 1389, 1076, 1460, 1225, 1390, 1077, 989, 1514, 1226, 1391, 
           1078, 990, 1227, 1392, 1079, 991, 1228, 1393, 1470, 1515, 992, 
           1229, 1394, 1080, 993, 1230, 1395, 1081, 1242}], 
          Line3DBox[{995, 1231, 1396, 1082, 994, 1232, 1397, 1083, 996, 1481, 
           1491, 1398, 1084, 997, 1233, 1399, 1085, 998, 1234, 1400, 1528, 
           1086, 999, 1235, 1401, 1087, 1461, 1236, 1402, 1088, 1462, 1537, 
           1237, 1403, 1089, 1463, 1238, 1404, 1090, 1000, 1482, 1492, 1405, 
           1091, 1001, 1239, 1406, 1092, 1002, 1240, 1407, 1529, 1093, 1003, 
           1241, 1408, 1094, 1004, 1243, 1409, 1095, 1244}], 
          Line3DBox[{1018, 1268, 1423, 1267, 1017, 1266, 1422, 1265, 1016, 
           1486, 1500, 1421, 1264, 1015, 1263, 1420, 1262, 1014, 1261, 1419, 
           1531, 1485, 1013, 1260, 1418, 1259, 1012, 1258, 1417, 1257, 1516, 
           1011, 1256, 1416, 1255, 1010, 1254, 1415, 1253, 1009, 1484, 1499, 
           1414, 1252, 1008, 1251, 1413, 1250, 1007, 1249, 1412, 1530, 1483, 
           1006, 1248, 1411, 1247, 1005, 1246, 1410, 1245, 1271}], 
          Line3DBox[{1032, 1297, 1437, 1296, 1031, 1295, 1436, 1294, 1030, 
           1521, 1293, 1435, 1292, 1029, 1291, 1434, 1290, 1028, 1289, 1433, 
           1288, 1520, 1027, 1287, 1432, 1286, 1026, 1285, 1431, 1284, 1519, 
           1025, 1283, 1430, 1282, 1024, 1281, 1429, 1280, 1023, 1518, 1279, 
           1428, 1278, 1022, 1277, 1427, 1276, 1021, 1275, 1426, 1274, 1517, 
           1020, 1273, 1425, 1272, 1019, 1270, 1424, 1269, 1299}], 
          Line3DBox[{1034, 1298, 1438, 1096, 1033, 1300, 1439, 1097, 1035, 
           1487, 1493, 1440, 1098, 1036, 1301, 1441, 1099, 1037, 1302, 1442, 
           1532, 1100, 1038, 1303, 1443, 1101, 1464, 1304, 1444, 1102, 1465, 
           1538, 1305, 1445, 1103, 1466, 1306, 1446, 1104, 1039, 1488, 1494, 
           1447, 1105, 1040, 1307, 1448, 1106, 1041, 1308, 1449, 1533, 1107, 
           1042, 1309, 1450, 1108, 1043, 1310, 1451, 1109, 1311}]}}},
       VertexNormals->CompressedData["
1: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

        "]],
      Boxed->False,
      ImageSize->Scaled[0.3],
      Method->{},
      PlotRange->{{-0.5, 0.49999999999994965`}, {-0.4999999999999874, 
       0.4999999999999874}, {-0.9999998571428571, 0.9999998571428571}},
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]}], 
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
           Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
           EdgeShapeFunction -> {
             GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, EdgeStyle -> {
             Directive[
              Thickness[Large], 
              GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, ImageSize -> 
           Scaled[0.5], VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], 1 -> RGBColor[
               Rational[4, 5], 0, 0], 3 -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], {
            TagBox[
             StyleBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                0.3954100979887313, -0.37993503101780424`}, {
                0.44429670652560765`, -0.38346806780211296`}, {
                0.49295692129322827`, -0.38934738255181967`}, {
                0.5412782000680146, -0.3975593774815831}, {
                0.5891487845236741, -0.408085059741211}, {
                0.6364579587078756, -0.42090008534266654`}, {
                0.6830963051081035, -0.43597481546328354`}, {
                0.8660254037844389, -0.5000000000000012}}]}, 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$1"], 
            InsetBox[
             FormBox[
              StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$1", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                0.010621778264911619`}, {-0.3648076211353314, 
                0.610621778264911}, {-0.33928696614102627`, 
                0.6524676742622335}, {-0.31178396226487193`, 
                0.6930382007678794}, {-0.28236221895097113`, 
                0.7322395255353922}, {-0.25108978333865395`, 
                0.7699809830328253}, {-0.21803898288182322`, 
                0.8061752841356209}, {-0.18328625806871401`, 
                0.8407387180104745}, {-0.14691198562895147`, 
                0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$2"], 
            InsetBox[
             FormBox[
              StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$2", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.6830963051081028, -0.5640251845367187}, {
                0.636457958707875, -0.5790999146573355}, {
                0.5891487845236735, -0.5919149402587909}, {
                0.5412782000680137, -0.6024406225184188}, {
                0.4929569212932275, -0.6106526174481819}, {
                0.4442967065256069, -0.6165319321978884}, {
                0.39541009798873045`, -0.6200649689821971}, {
                0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$3"], 
            InsetBox[
             FormBox[
              StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$3", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.7191134181554866, -0.3735913457232625}, {
                0.682739145715724, -0.34073871801047506`}, {
                0.647986420902615, -0.30617528413562134`}, {
                0.6149356204457841, -0.2699809830328256}, {
                0.583663184833467, -0.2322395255353924}, {
                0.5542414415195662, -0.1930382007678796}, {
                0.5267384376434119, -0.15246767426223357`}, {
                0.5012177826491069, -0.11062177826491115`}, {
                0.15480762113533175`, 0.48937822173508894`}, {
                0.13132833965468138`, 0.5324027052800367}, {
                0.1099447349939594, 0.5765062685699912}, {0.09070626354023958,
                 0.6215869080872107}, {0.07365742037777057, 
                0.6675403605144072}, {0.05883763637894179, 
                0.7142603438768308}, {0.046281187007849445`, 
                0.76163880335314}, {0.036017113047383975`, 
                0.8095661611865443}, {1.8369701987210297`*^-16, 1.}}]}, 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$4"], 
            InsetBox[
             FormBox[
              StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$4", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 
                1.}, {-0.03601711304738375, 
                0.8095661611865439}, {-0.046281187007849, 
                0.7616388033531397}, {-0.05883763637894135, 
                0.7142603438768306}, {-0.07365742037777012, 0.667540360514407}
                , {-0.09070626354023947, 
                0.6215869080872107}, {-0.10994473499395929`, 
                0.5765062685699913}, {-0.1313283396546815, 
                0.5324027052800367}, {-0.15480762113533164`, 
                0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$5"], 
            InsetBox[
             FormBox[
              StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$5", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                0.14691198562895247`, 0.8735913457232614}, {0.183286258068715,
                 0.840738718010474}, {0.21803898288182422`, 
                0.8061752841356202}, {0.25108978333865495`, 
                0.7699809830328245}, {0.282362218950972, 
                0.7322395255353913}, {0.3117839622648728, 
                0.6930382007678785}, {0.33928696614102716`, 
                0.6524676742622324}, {0.36480762113533227`, 
                0.61062177826491}, {0.7112177826491075, 
                0.010621778264909898`}, {
                0.7346970641297578, -0.03240270528003786}, {
                0.7560806687904799, -0.07650626856999232}, {
                0.7753191402441997, -0.12158690808721184`}, {
                0.7923679834066687, -0.16754036051440824`}, {
                0.8071877674054975, -0.2142603438768319}, {
                0.8197442167765898, -0.2616388033531412}, {
                0.8300082907370552, -0.30956616118654545`}, {
                0.8660254037844389, -0.5000000000000012}}]}, 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$6"], 
            InsetBox[
             FormBox[
              StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$6", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
              0.08660254037844384], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$1"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8660254037844389, -0.5000000000000012}, 
              0.08660254037844384], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$2"], 
           TagBox[
            StyleBox[
             DiskBox[{1.8369701987210297`*^-16, 1.}, 0.08660254037844384], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$3"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{0.35590252292901425`, 
           289.4400158444179}, {-132.8759342117649, 127.9555734919652}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[0.5]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[1], 
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.5], 
       Scaled[0.5]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.02]}}, "Rows" -> {{
        Scaled[0.02]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.584453331341503*^9, {3.584453364380904*^9, 3.584453388005743*^9}, 
   3.584453426023816*^9, {3.584453482315867*^9, 3.5844535616263227`*^9}, 
   3.584453624058505*^9, 3.584453758476562*^9, 3.584453920292246*^9, 
   3.584455416585041*^9, 3.5844554828927526`*^9, {3.584456248811783*^9, 
   3.58445626810047*^9}, 3.5844700890653667`*^9, 3.5844765227274647`*^9, 
   3.584476887323517*^9, 3.5844776925638323`*^9, 3.5847985962028503`*^9, 
   3.58490495335284*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"teardrop", "=", 
   RowBox[{"Piecewise", "[", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{
         RowBox[{"1", "/", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], "*", "x"}], ",", 
        RowBox[{"x", "\[LessEqual]", 
         RowBox[{"Sqrt", "[", "3", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"4", "/", "3"}], "-", 
          RowBox[{
           RowBox[{"(", 
            RowBox[{"x", "-", 
             RowBox[{"4", "/", 
              RowBox[{"Sqrt", "[", "3", "]"}]}]}], ")"}], "^", "2"}]}], "]"}],
         ",", 
        RowBox[{
         RowBox[{"Sqrt", "[", "3", "]"}], "<", "x", "\[LessEqual]", 
         RowBox[{"2", "*", 
          RowBox[{"Sqrt", "[", "3", "]"}]}]}]}], "}"}]}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"cone", "=", 
   RowBox[{"RevolutionPlot3D", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"teardrop", ",", 
       RowBox[{"-", "x"}]}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", "0", ",", "1"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"\[Theta]", ",", "0", ",", 
       RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
     RowBox[{"Mesh", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"5", ",", "10"}], "}"}]}], ",", 
     RowBox[{"PlotRange", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Red"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"bulb", "=", 
    RowBox[{"RevolutionPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"teardrop", ",", 
        RowBox[{"-", "x"}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", "1", ",", 
        RowBox[{"2", "*", 
         RowBox[{"Sqrt", "[", "3", "]"}]}]}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"Mesh", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"10", ",", "10"}], "}"}]}], ",", 
      RowBox[{"PlotRange", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "2"}], ",", "2"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"-", "4"}], ",", "0"}], "}"}]}], "}"}]}], ",", 
      RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"footballF", " ", "[", "x_", "]"}], ":=", 
   RowBox[{"Piecewise", "[", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{".9", "*", 
         RowBox[{"(", 
          RowBox[{"1", "-", 
           RowBox[{"x", "^", "2"}]}], ")"}]}], ",", 
        RowBox[{"x", " ", ">", " ", "0"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{".3", "*", 
         RowBox[{"(", 
          RowBox[{"3", "-", 
           RowBox[{"x", "^", "2"}]}], ")"}]}], ",", 
        RowBox[{"x", " ", "\[LessEqual]", " ", "0"}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], "]"}]}], " ", ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"footballBF", " ", "[", "x_", "]"}], ":=", 
    RowBox[{"Piecewise", "[", "\[IndentingNewLine]", 
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{".3", "*", 
          RowBox[{"(", 
           RowBox[{"1", "-", 
            RowBox[{"x", "^", "2"}]}], ")"}]}], ",", 
         RowBox[{"x", " ", ">", " ", "0"}]}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{".1", "*", 
          RowBox[{"(", 
           RowBox[{"3", "-", 
            RowBox[{"x", "^", "2"}]}], ")"}]}], ",", 
         RowBox[{"x", " ", "\[LessEqual]", " ", "0"}]}], "}"}]}], 
      "\[IndentingNewLine]", "}"}], "]"}]}], " ", ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fatFootball", " ", "=", " ", 
    RowBox[{"RevolutionPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"footballF", "[", "x", "]"}], ",", "x"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", 
        RowBox[{"-", 
         RowBox[{"Sqrt", "[", "3", "]"}]}], ",", " ", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", 
        RowBox[{
         RowBox[{"2", "\[Pi]"}], "-", 
         RowBox[{"\[Pi]", "/", "3"}]}]}], "}"}], ",", 
      RowBox[{"Mesh", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"5", ",", "10"}], "}"}]}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
      RowBox[{"Exclusions", "\[Rule]", "None"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"fatFootballSlice", " ", "=", " ", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{"RevolutionPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"footballF", "[", "x", "]"}], ",", "x"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", 
         RowBox[{
          RowBox[{"-", "\[Pi]"}], "/", "3"}], ",", "0"}], "}"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Mesh", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"5", ",", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Exclusions", "\[Rule]", "None"}]}], "\[IndentingNewLine]", 
      "]"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"slimFootball", " ", "=", " ", 
    RowBox[{"Show", "[", "\[IndentingNewLine]", 
     RowBox[{"RevolutionPlot3D", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{
         RowBox[{"footballBF", "[", "x", "]"}], ",", "x"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"x", ",", 
         RowBox[{"-", 
          RowBox[{"Sqrt", "[", "3", "]"}]}], ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"\[Theta]", ",", "0", ",", 
         RowBox[{"2", "\[Pi]"}]}], "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Mesh", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"5", ",", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", "\[Rule]", "Red"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Axes", "\[Rule]", "True"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Exclusions", "\[Rule]", "None"}]}], "\[IndentingNewLine]", 
      "]"}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"sphere", " ", "=", " ", 
    RowBox[{"RevolutionPlot3D", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{"1", "-", 
          SuperscriptBox["t", "2"]}], "]"}], ",", "t"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"t", ",", 
        RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"\[Theta]", ",", "0", ",", 
        RowBox[{"2", "\[Pi]"}]}], "}"}], ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", " ", 
      RowBox[{"Axes", "\[Rule]", "False"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{"(*", " ", 
   RowBox[{"four", " ", "pillow", " ", "code"}], " ", 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"vradius", " ", "=", ".35"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"hradius", " ", "=", " ", ".5"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"f", "[", 
    RowBox[{"x_", ",", " ", "y_"}], "]"}], " ", ":=", " ", 
   RowBox[{"Piecewise", "[", "\[IndentingNewLine]", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"vradius", "^", "2"}], 
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "/", 
                 RowBox[{"hradius", "^", "2"}]}], " ", ")"}], 
               RowBox[{"y", "^", "2"}]}]}], ")"}]}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"hradius", "-", "y"}], ")"}], "^", "2"}]}], " ", 
             RowBox[{"x", "^", "2"}]}]}], ")"}]}], "]"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"y", " ", ">=", " ", "0"}], " ", "&&", " ", 
         RowBox[{"y", " ", "<", " ", "hradius"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Sqrt", "[", 
         RowBox[{
          RowBox[{"Abs", "[", 
           RowBox[{
            RowBox[{"vradius", "^", "2"}], 
            RowBox[{"(", 
             RowBox[{"1", " ", "-", " ", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"1", "/", 
                 RowBox[{"hradius", "^", "2"}]}], " ", ")"}], 
               RowBox[{"y", "^", "2"}]}]}], ")"}]}], "]"}], "*", 
          RowBox[{"(", 
           RowBox[{"1", " ", "-", " ", 
            RowBox[{
             RowBox[{"1", "/", 
              RowBox[{
               RowBox[{"(", 
                RowBox[{"hradius", " ", "-", " ", 
                 RowBox[{"-", "y"}]}], ")"}], "^", "2"}]}], 
             RowBox[{"x", "^", "2"}]}]}], ")"}]}], "]"}], ",", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"y", " ", "<", " ", "0"}], " ", "&&", " ", 
         RowBox[{"y", " ", ">", " ", 
          RowBox[{"-", "hradius"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"0", ",", " ", 
        RowBox[{
         RowBox[{"y", " ", "<", " ", 
          RowBox[{"-", "hradius"}]}], " ", "||", " ", 
         RowBox[{"y", " ", ">", " ", "hradius"}]}]}], "}"}]}], 
     "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"t", " ", "=", " ", 
   RowBox[{"Plot3D", "[", 
    RowBox[{
     RowBox[{"f", "[", 
      RowBox[{"x", ",", "y"}], "]"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"x", ",", " ", 
       RowBox[{"-", "hradius"}], ",", "hradius"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "hradius"}], ",", "hradius"}], "}"}], ",", " ", 
     RowBox[{"AxesLabel", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"x", ",", "y", ",", " ", "z"}], "}"}]}], ",", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", " ", 
     RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"b", " ", "=", "  ", 
    RowBox[{"Plot3D", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"f", "[", 
        RowBox[{"x", ",", "y"}], "]"}]}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{"-", "hradius"}], ",", "hradius"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"y", ",", 
        RowBox[{"-", "hradius"}], ",", "hradius"}], "}"}], ",", " ", 
      RowBox[{"AxesLabel", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"x", ",", "y", ",", " ", "z"}], "}"}]}], ",", " ", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
      RowBox[{"Exclusions", "\[Rule]", "None"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"planeBig", " ", "=", " ", 
   RowBox[{"Plot3D", "[", 
    RowBox[{"1", " ", ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"y", ",", 
       RowBox[{"-", "1"}], ",", "1"}], "}"}], ",", " ", 
     RowBox[{"PlotStyle", "\[Rule]", "Green"}], ",", " ", 
     RowBox[{"Mesh", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"4", ",", "4"}], "}"}]}], ",", " ", 
     RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
     RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
     RowBox[{"RegionFunction", "\[Rule]", 
      RowBox[{"Function", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"x", ",", "y", ",", "z"}], "}"}], ",", " ", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "5"}], "\[GreaterEqual]", "  ", "x"}], 
         " ", "||", 
         RowBox[{"x", " ", "\[GreaterEqual]", "  ", 
          RowBox[{"1", "/", "5"}]}], " ", "||", "  ", 
         RowBox[{
          RowBox[{
           RowBox[{"-", "1"}], "/", "5"}], " ", "\[GreaterEqual]", " ", "y"}],
          "||", " ", 
         RowBox[{"y", " ", "\[GreaterEqual]", " ", 
          RowBox[{"1", "/", "5"}]}]}]}], "]"}]}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"planeSmall", " ", "=", " ", 
    RowBox[{"Plot3D", "[", " ", 
     RowBox[{"1", ",", 
      RowBox[{"{", 
       RowBox[{"x", ",", " ", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "5"}], ",", " ", 
        RowBox[{"1", "/", "5"}]}], "}"}], ",", " ", 
      RowBox[{"{", 
       RowBox[{"y", ",", " ", 
        RowBox[{
         RowBox[{"-", "1"}], "/", "5"}], ",", " ", 
        RowBox[{"1", "/", "5"}]}], "}"}], " ", ",", 
      RowBox[{"PlotStyle", "\[Rule]", "Blue"}], ",", 
      RowBox[{"Axes", "\[Rule]", "False"}], ",", " ", 
      RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
      RowBox[{"Mesh", "\[Rule]", "0"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"highlightColor", " ", "=", "  ", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{"255", "/", "255"}], ",", " ", 
     RowBox[{"246", "/", "255"}], ",", 
     RowBox[{"238", "/", "255"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ShowOrbifoldGrid", "[", "slide_Integer", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Grid", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"slide", " ", ">", " ", "1"}], ",", " ", 
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<Universal Cover\>\"", ",", " ", "\"\<Subsection\>\"", ",",
                 " ", 
                RowBox[{"FontSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", ".020", "]"}]}]}], "]"}], ",", " ", 
              RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Item", "[", 
             RowBox[{
              RowBox[{"Spacer", "[", "1", "]"}], ",", 
              RowBox[{"Frame", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"True", ",", " ", "True"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"slide", ">", " ", "0"}], ",", 
              RowBox[{"Style", "[", 
               RowBox[{
               "\"\<Orbifold\>\"", ",", " ", "\"\<Subsection\>\"", ",", " ", 
                RowBox[{"FontSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", ".020", "]"}]}]}], "]"}], ",", 
              RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Item", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Spacer", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Frame", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"True", ",", " ", "False"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
             "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", "Plane", "*)"}], "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Item", "[", "\[IndentingNewLine]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"slide", " ", ">", " ", "1"}], ",", " ", 
               "\[IndentingNewLine]", 
               RowBox[{"Show", "[", 
                RowBox[{"planeBig", ",", " ", "planeSmall", ",", " ", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", " ", 
               RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"Right", " ", "arrow"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"Item", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"slide", " ", ">", " ", "1"}], ",", " ", 
                "\[IndentingNewLine]", 
                RowBox[{"Graphics", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Arrowheads", "[", ".3", "]"}], ",", 
                    RowBox[{"Thickness", "[", ".05", "]"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".3"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{".3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
                  ",", " ", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".3"}], ",", " ", ".3"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], "}"}]}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", 
                RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Frame", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"True", ",", " ", "True"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
             "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"Four", " ", "pillow"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"slide", " ", ">", " ", "0"}], ",", " ", 
              "\[IndentingNewLine]", 
              RowBox[{"Overlay", "[", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Show", "[", 
                  RowBox[{"t", ",", " ", "b", ",", " ", 
                   RowBox[{"PlotRange", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "hradius"}], ",", "hradius"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "hradius"}], ",", "hradius"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", "hradius"}], ",", "hradius"}], "}"}]}], 
                    "}"}]}], ",", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"slide", " ", ">", " ", "2"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Translate", "[", 
                    RowBox[{
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Text", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Good\>\"", ",", " ", "Bold", ",", " ", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], 
                    ",", " ", 
                    RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".3", "]"}]}], ",", " ", 
                    RowBox[{"Darker", "@", "Green"}]}], "]"}], "]"}], ",", 
                    " ", 
                    RowBox[{"40", "Degree"}]}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1.0", ",", "0"}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
                   " ", "\[IndentingNewLine]", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}]}], 
                "\[IndentingNewLine]", "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Item", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Spacer", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Frame", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"True", ",", " ", "False"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
             "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
          ",", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{"(*", " ", 
            RowBox[{"fat", " ", "football", " ", "cover"}], "*)"}], 
           "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"slide", " ", ">", " ", "1"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Show", "[", 
               RowBox[{"fatFootball", ",", " ", "fatFootballSlice", ",", 
                RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
                RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                RowBox[{"Boxed", "\[Rule]", "False"}], ",", " ", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"right", " ", "arrow"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"Item", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"If", "[", 
               RowBox[{
                RowBox[{"slide", " ", ">", " ", "1"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"Graphics", "[", 
                 RowBox[{
                  RowBox[{"{", 
                   RowBox[{
                    RowBox[{"Arrowheads", "[", ".3", "]"}], ",", 
                    RowBox[{"Thickness", "[", ".05", "]"}], ",", 
                    RowBox[{"Arrow", "[", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".3"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{".3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
                  ",", " ", 
                  RowBox[{"PlotRange", "\[Rule]", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".3"}], ",", " ", ".3"}], "}"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], "}"}]}], ",", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", " ", 
                RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Frame", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"True", ",", " ", "True"}], "}"}], ",", 
                 RowBox[{"{", 
                  RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
             "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
            RowBox[{"(*", " ", 
             RowBox[{"slim", " ", "football"}], "*)"}], "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"slide", " ", ">", " ", "0"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Overlay", "[", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Show", "[", 
                  RowBox[{"slimFootball", ",", 
                   RowBox[{"SphericalRegion", "\[Rule]", "True"}], ",", 
                   RowBox[{"Axes", "\[Rule]", "False"}], ",", 
                   RowBox[{"Boxed", "\[Rule]", "False"}], ",", 
                   RowBox[{"Background", "\[Rule]", " ", "highlightColor"}], 
                   ",", " ", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", "1", "]"}]}]}], "]"}], " ", ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
                  RowBox[{
                   RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"slide", " ", ">", " ", "3"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Translate", "[", 
                    RowBox[{
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Text", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Bad\>\"", ",", " ", "Bold", ",", " ", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], 
                    ",", " ", 
                    RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".3", "]"}]}], ",", " ", 
                    RowBox[{"Darker", "@", "Red"}]}], "]"}], "]"}], ",", " ", 
                    
                    RowBox[{"40", "Degree"}]}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1.0", ",", "0"}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
                   " ", "\[IndentingNewLine]", 
                   RowBox[{"ImageSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}]}], 
                "\[IndentingNewLine]", "}"}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Spacer", "[", "1", "]"}]}], "\[IndentingNewLine]", 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Item", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Spacer", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Frame", "\[Rule]", " ", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{"True", ",", " ", "False"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
             "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"Alignment", "\[Rule]", "Center"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ItemSize", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"{", " ", 
           RowBox[{
            RowBox[{"Scaled", "[", ".25", "]"}], ",", " ", 
            RowBox[{"Scaled", "[", ".10", "]"}], ",", 
            RowBox[{"Scaled", "[", ".25", "]"}], ",", " ", 
            RowBox[{"Scaled", "[", ".35", "]"}]}], " ", "}"}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Spacings", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Scaled", "[", ".01", "]"}], ",", 
           RowBox[{"Scaled", "[", ".02", "]"}]}], "}"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"{", 
          RowBox[{"{", 
           RowBox[{"White", ",", " ", "White", ",", " ", "highlightColor"}], 
           "}"}], "}"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"Frame", "\[Rule]", "All"}]}], "\[IndentingNewLine]", "]"}]}],
      "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"ShowOrbifoldGrid", "[", "1", "]"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellOpen->False,
 CellChangeTimes->{
  3.583689434030222*^9, {3.583690038818116*^9, 3.583690064557714*^9}, {
   3.58369221561723*^9, 3.583692295584877*^9}, {3.5836971219493*^9, 
   3.583697128587344*^9}, {3.5836974345230513`*^9, 3.58369746233471*^9}, {
   3.5836974976174173`*^9, 3.583697552388973*^9}, {3.58369763742273*^9, 
   3.583697661283956*^9}, {3.583697697187623*^9, 3.583697697681795*^9}, {
   3.583697921812044*^9, 3.5836979270391903`*^9}, {3.583698022251027*^9, 
   3.583698106174611*^9}, {3.583698152561407*^9, 3.583698152736507*^9}, {
   3.583698209683529*^9, 3.58369823806411*^9}, {3.583699151298019*^9, 
   3.583699185253458*^9}, {3.583699394613495*^9, 3.583699469642783*^9}, {
   3.583950965930999*^9, 3.5839509892351837`*^9}, {3.584136641185576*^9, 
   3.584136642988099*^9}, {3.58418582819775*^9, 3.584186027196117*^9}, {
   3.58418642444545*^9, 3.584186500754262*^9}, {3.5841866582220087`*^9, 
   3.584186766405637*^9}, {3.584186811686653*^9, 3.584186832061205*^9}, 
   3.5841869859448557`*^9, 3.584187040241329*^9, {3.584187077361844*^9, 
   3.584187079656089*^9}, {3.584187139344602*^9, 3.58418718644466*^9}, {
   3.584187237970829*^9, 3.5841873678137493`*^9}, {3.584187400198305*^9, 
   3.584187624951578*^9}, {3.584187726903932*^9, 3.584187789769574*^9}, {
   3.584187821025146*^9, 3.584187897118555*^9}, {3.584193110409483*^9, 
   3.584193138015587*^9}, {3.584193194922391*^9, 3.5841932098646507`*^9}, {
   3.584193249112626*^9, 3.5841932504566317`*^9}, {3.584193296068103*^9, 
   3.5841933106086807`*^9}, {3.584193366005022*^9, 3.584193367795381*^9}, {
   3.584193414660308*^9, 3.584193416458366*^9}, {3.584193458308425*^9, 
   3.584193461031646*^9}, {3.584193542363206*^9, 3.584193570383233*^9}, {
   3.584193631868184*^9, 3.584193654583934*^9}, {3.584207427977562*^9, 
   3.584207501726315*^9}, {3.584207597447155*^9, 3.584207626676507*^9}, {
   3.5842076755108*^9, 3.5842077203567533`*^9}, {3.584207767876896*^9, 
   3.584207853383381*^9}, {3.584207930296794*^9, 3.584207998168458*^9}, {
   3.584208035919663*^9, 3.5842080419817553`*^9}, 3.58420808388694*^9, {
   3.584211608664071*^9, 3.584211644171987*^9}, {3.584212203939707*^9, 
   3.584212208037219*^9}, {3.5842125744924917`*^9, 3.584212640724815*^9}, {
   3.584296319128419*^9, 3.584296395719811*^9}, {3.58429644238603*^9, 
   3.584296669869536*^9}, {3.584296736407246*^9, 3.5842967386965837`*^9}, {
   3.584296779136149*^9, 3.584296854690329*^9}, {3.584296892461269*^9, 
   3.584296996777444*^9}, {3.584297068795958*^9, 3.584297188399145*^9}, {
   3.584297293293878*^9, 3.584297335189075*^9}, {3.584297376168564*^9, 
   3.584297576953013*^9}, 3.584297766513338*^9, {3.584297848833336*^9, 
   3.584297914758376*^9}, {3.584297957218121*^9, 3.584298011394829*^9}, {
   3.584298117096738*^9, 3.584298202007159*^9}, {3.58429957778618*^9, 
   3.58429965971666*^9}, {3.584304202964367*^9, 3.584304214333768*^9}, {
   3.584396442592865*^9, 3.5843964496569*^9}, {3.58439649139237*^9, 
   3.584396495152761*^9}, {3.5843965389924498`*^9, 3.584396572888001*^9}, {
   3.584396611039075*^9, 3.5843966649230213`*^9}, {3.584396710218545*^9, 
   3.5843969957591143`*^9}, {3.584397029373207*^9, 3.584397090514019*^9}, {
   3.584397121962578*^9, 3.58439714435212*^9}, {3.584397187297997*^9, 
   3.5843972107109013`*^9}, {3.5843972488630857`*^9, 
   3.5843973682382812`*^9}, {3.584397504997992*^9, 3.584397549979723*^9}, {
   3.5843976623458014`*^9, 3.584397669807863*^9}, {3.5844024152102957`*^9, 
   3.584402422873001*^9}, {3.5844032315097427`*^9, 3.584403244997341*^9}, {
   3.584403383165803*^9, 3.584403383268681*^9}, {3.584403415828969*^9, 
   3.584403549242641*^9}, {3.5844453628826447`*^9, 3.584445483472341*^9}, {
   3.5844455249757853`*^9, 3.5844455387568483`*^9}, {3.584445668567906*^9, 
   3.584445695039089*^9}, 3.584445848157056*^9, {3.584447557377997*^9, 
   3.584447589914798*^9}, {3.584447668809864*^9, 3.584447733359954*^9}, {
   3.584447766549659*^9, 3.584447772230596*^9}, {3.5844479539716043`*^9, 
   3.584448050799884*^9}, 3.584448087719252*^9, {3.584448119330202*^9, 
   3.584448122190748*^9}, {3.584451125309754*^9, 3.584451210723267*^9}, {
   3.584451242810254*^9, 3.584451278477652*^9}, {3.584451332302908*^9, 
   3.5844514008722067`*^9}, {3.5844514883678427`*^9, 3.584451500859186*^9}, {
   3.584451564432324*^9, 3.584451608378124*^9}, {3.5844554021637993`*^9, 
   3.584455406292337*^9}, {3.5844701065684967`*^9, 3.5844701545689497`*^9}, {
   3.584470321504067*^9, 3.584470326742028*^9}, {3.584470526235984*^9, 
   3.5844705771756687`*^9}, {3.584470680332836*^9, 3.584470797921277*^9}, {
   3.5844708560485477`*^9, 3.584470887866243*^9}, {3.584471418766877*^9, 
   3.584471460546823*^9}, {3.584471518651182*^9, 3.584471627060676*^9}, {
   3.584471701131338*^9, 3.584471725955202*^9}, {3.584471760391368*^9, 
   3.5844718883008337`*^9}, {3.58447261327945*^9, 3.584472695988155*^9}, {
   3.584472868812215*^9, 3.584472988197104*^9}, {3.5844730686153603`*^9, 
   3.5844733975937033`*^9}, {3.584473434028576*^9, 3.584473451543425*^9}, {
   3.584473538312668*^9, 3.584473564683441*^9}, {3.584473655505319*^9, 
   3.584473665121619*^9}, {3.584476875568879*^9, 3.584476876314272*^9}, 
   3.584477062558551*^9, {3.5844776764880123`*^9, 3.5844776780821867`*^9}, {
   3.584554314525062*^9, 3.584554364730638*^9}, {3.5845544086317053`*^9, 
   3.584554676247604*^9}, {3.584554736962253*^9, 3.5845547373272867`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Orbifold\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, False}, {False, False}},
      StripOnInput->False]},
    {
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
3eYJX3uN35MTmu6uvG6f9g8c96fQP/Cd0h79Ay9Qa1n+v/wzzMFcfyVJ8Yeq
TyvUsP8e4y92EPa62f4XT3+aP1PpAd74kUJnnyu7n+br3Ld1z9dp755vnG0u
/YMe4AeqtPh7cIsM89zaUmnZ2cgnRNgVHfr1bvEy0xlhvw5M7tPWfz/RGWHX
v9l2b5WzTKdz79VNZ4TdIO3ddEbYxdK/m84IO6hStTZLc/zqKu66VjtwUZfC
CUfTzcRqp6Ozs537qonTn/6y/LJEpR+4qb545ZCVDv3A79ZbvOKPhgeUfpV7
uWcK+rk96Af+ovQP+oG/cXRWnWHbMzlPYjqX7nvnf5USmf8G/D/i60fxgcIH
WhfjsS7GY12Mx7oYj3UxHutipo3ddLTv+X1Ef5yJblN8bvjYBJZn4yHPxkOe
jYc8Gw95NpBn2tfGY18bj31tPPa18djXBvua9JLx0EvGQy8Z6CXSh8ZDHxro
Q/RT5cMmOz/JwR/JPf/drP3wPUT0k3Uk85ccPWzeyo1fHD08SPR2fmofGDX6
ZIDf0Tx6Plz0cx2iE3mFlaebvh98I0X7/8NDbyNvMaf4V/PaNk8n+vPq4QWS
F3mvVL2hTT5x1veyh56snBsPxttJheYk/34pU/nWXuLIW8d+rdxikyPPRSXv
0eb63xezqqWqXMXmxkmxdn3qLw9ue8qR5yseeq9Dbv+bbePFw9Ys3OvI83cS
7xbd3iLqzT8ceX5Qxm2wuEbnFUP2qX47LnFY/lX9Zz57N171wFCJu7dcCj1e
o6mjB/Dzq9JVLoy9uJ/0Ww5fSb8VWOHrH/SDzpsSN9cIjq0VMsfRAyNzx/3a
trxUs2T5GZlK5/ovSz+X5fe96j/QeULi7OrSD+jLlDjbfd8/OPqCh77CT8wL
dPaRuHyr8AF0hubyeZUpdKhnweWvOnq46Jxvy4fcExeAngDfehmsF+j53UNf
xfjkwWwQeQA9+Nm49/g9W3o662tz8znbzJEz5/x++9XRV4/75NNAPjFufw99
9Zwv/2fK7Pw6od4ZR18VkjzBqWtnxw9Z5ugr/Hzyj6PDL/ZP0/4veugryRea
V59f98h7uxx9FSN5izeOlvlpVvO92s8a0Ut1SQ9IHtFUnVL7SErZ3drP5XJp
Uy7m+JUlc+/rRZF+zjKFSf/E11tuP8k6Ytbl5tM2q/yvz37wQsA9fi/sZrFX
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
7L/kf/4Pl5MbHw==
         "], {{
           {RGBColor[0, 0, 1], EdgeForm[None], 
            GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
4/8fSJmTQQ==
               "]], Polygon3DBox[CompressedData["
1:eJwtmwf811MXx7/r3n/SpCg7RIUSZSQqlZQGyV4J2bI9yEyF7JEthEI05Omx
KUVGqIwkJSGbMpLwfN597uvV7XfOvfe77z3ncz7n/JsNGtL/jCLLspvLLKv0
e6OUv/U7I8+ytyW3iFn2keSodnfIsonq20fjvfR7pw4YquMGSF+udonkLdTu
YFzzn9GcsTrmbOmbau5GNVk2Sr9t1b+l+u7V7/Oa315zW0seqbH2ut5y6QdL
/lTy4zr+fM3dQvrGOv5eblJz99fPPZJf1vEdcp/zWum7S19Pej/pYyTnOsdo
6S019q/kw9TXiPNr/GHJ96mt1rk2Ut9Tkt/TvP7Sv9H4R5o/SX2bauxNtVHq
25ZrSL5Ec7aRPFhz2qt/lPRndK8Dpe8ovan0xzX+tvoO1vz6khdq7B6dr17u
e+ReW6lvgeR1uEfJW6u9J/kNHT9CxzaSPll6e55bz3+Gjlkgsbb6pvIt1P8W
966+yRq7Wcccof526v9Bx76v3wM19q36PpY+T/oR0n+UvkD6FWpfSb9Lx/4o
ubnaXJ6XPp1rX81/V/rrmd/XlRr/On3rnySfqd+F0m9T20RyW7Wjde5neD4d
u7PmLON49eW6/6vV9730izJ/7xc0fxfpP6gdJn0M30ljN6n/Nx17uPRdNXZx
5vF1dE8XSt5b44u4X/3eLX2p2nO6xhvMl/w5a0vjn7L+JNfXvM+k7672k863
seYs1tgCzf+Fd63xFRobqL5l0i+UPkP6dB27QvoDar9K/kXz95Y8QXItPc+V
mveD9P/qnB00doZaXY3VU2uksR3Uxmj8II1/JnlC9No/RvOa6/iP9fuT9Ks0
9ovGRur3V+mHa/5SyZfpfmok3yH5aY0frfkrpLfhe+gabdS3hPWu/pWSZ2p+
X+nzNX+m9Fel7ye90Phr0vdU+036Njp+mcYGSV8pfSvpx0o+UPO+zL0nmkje
Xue5X/KB6vtU8v6a00DXPVtjr7DWOZ/G+6brH65zLpJ+tua+nL4f37aJ+kbr
uDPV10O/t6n/Wck7qS3V+HiNz9Gx/dX/hfRV0g+QfLzG22n+COlTNH575eNX
a84gyZ01/qfkfdXWlfyG5uwvOWjsdelv6beDjv1Sx7zIeg/ea1eq/3/Se+t3
kfTemlNKPjR4PbOuX9L4AWrr69jzNfaq5BP1u0bz+2a2b6y/g9hfapdKvk19
jSU/q/au5EMq27P62Fjp96htIfk79c2VfHTwfv5e8vc6fz2d44rM34Q1wn7v
xXpWO7/0e+X93q62meTGpd9NJ81/TfIGaiOld5Y+U/KePKfkn9V3jfQG7GHJ
HdU3XfL6asMxqdJvlbxr6W9xpPRlpfcB++Ee7J3kprrHFzX2J3uetaXzfyB9
F9YP9j/aVj4pfbjGe/MeJVfqu13yzmoPs5elf87+YI9K/lB90zR/rN7DDpJ/
Vt/Hkk8N3l+LNPdnzV2XPSE9y+2zOvFdJE/kmaQXpe3DP/gyyeuoXSr5BbUW
rGedY6HmfyB9O8kD1PeV9LPYw5r7mq75R+Z39rvkc9XXU/oStfNKFkmW/Ye5
alvp2HY6xxTuXf1f8izq+z2961+j/VVvnedfne9kyZuxRyVfiw3Vs12vsb8k
X4/NlfyExs/j+qX9X+dqrdnP1qh1kXxd6fk8816V9+/OhW1CR8kbY085p/Tj
K9tbfOuGrJnkv27LbQOPkBx1zBjJO/ON0vrDPuFTX5H8YGX/jJ8ua7x+sBV7
qO9Vyc00PlLn7aJ2k+TAM2vsGs3pqecr1U5i/eH3dPzX+j1TY8ep73t8SOnx
yerbU/K90fjhPclLJH9Xei7PzLM/q9ZQ8hBsseQbWC+5v+FbkvdSXy2Nt8n9
TW5S346Sv1Z7R/L6+HSurTnrSe6nVh+7xLvQ/f1T+l101Zx/sd18D94ne0Xj
Q6WfgJ+RXiP97dK2Z2hu+/GanreP5HmsvRrjIWxF79zPxP7cUfpe0mewXnle
yc+pb4GO3ai0f+nJ/fLONX635GHqa4ztkj42N944UPow6WdI/5W9res1xEbw
bTS+P3sbHy39N96bxh/QPZ4mfaX0+jXGG/WlL9AzNZM+VfqjhX3o85r73+T/
wQFbaHxGYd9Uo9/fCtuLUzT3CPV9kXzUofqdldl3vaDWI/cz7Sf5BrVDdNwG
6usheWqw7eKdHCB5GpivsM1+Vdd8Rm1ryX+A62psswdLnpvZln+quePVxoE5
8EXqu5Lz67h1NX+DaCyyEhursSXqP0p6I/3WqbG/HayxQ9W3hPOC4dLarKvx
16X3A5toTjPJrwRj2z7SN5K8XPOOlX4ue1TXfVl9t2T+doujfT6+/0r8U2W8
cKzGB+S2aR+q73Dplyf7hn08QfohGl+MPdb4FPyZzn1K8sfH8K74ZglfDJTe
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
2LI+yd9Sz0BdIpj/yeh80NjSHA7x+/8BZ3wXeA==
               "]], 
              Polygon3DBox[CompressedData["
1:eJwt1XmQz3UYB/Df+h0YR6ppSAdJo4komlqpXGEmrCwiRyPFUG5hKTe5kqty
dKHGLRZJjsWu2Q4xZJ1djlKLclQ0E1uvz3z3j/d+nvf7eT/Pfn+fz/fzfO/q
MSCzf4lYLDYIkjDRn3Jpsdgu4qR4LDYQH5+KxS7iOVDI05PWhNYrEYu9CP/y
N8U30gvk+6gbRc+m9aN1oW1XO4HeHz9OPyTOUNdJ7k18NXRTMwea8m6wFkBb
nqO898Uj35/qr6rZzXOz/GV8Ff0ZcUeoy7+c9jGU59vL14G+kmcQ7TKtPP6Q
fvfjh8TP0kZYR8I6vqr0mvKl8Db6fYHvFT/J94p1KKzlO2f9Uf+D4lxxHkwW
36S2LeziX03LVd9KnwO0avAGzwdhT8UXoAzfQZ7WtLvFubQB6jLwdDivdire
CR4J+56MziGcR23ee/BRMI22Ht8AC/iu8P/CsxIayH2D9+E7J/6Upw7UwP+m
n+RZCulyX+HHobu4jLUsLNHvZ+sxntesVaztaUfVDxQn9doOa/CLcCPPKbyz
Z78U9j2cq35reJ8XN1RbkT6Zlsf3D5zEt0JzNXvw7vAW3yQoJ94Jj8p9x5MT
9kvtr/rto7/L8wkM1HtQOCO+fOso2imeZbAcDuN71S5T+7C6Cjwf0SrDWtoM
WhPabfgqvnr6vI4n6OXxfvS5+Ht6VePvi7cK74f4OZ5OMDf0oqWrzcFTcAM+
lH5A3UKowr9Un9G03/B1kA1H8AXW+dBG3Q6+/eLGqeie9VTzAqzBh+t5Pdwf
vgZQDy8NaeLHITv8Rnwh7xb8Univ9ErRxtL+EG+DrZCPr0hE+7uDryxMpCVK
Rs9fKfRKi873BFyhdeG/QKsf3lvYJ97Jt0TuHL5Zfg/eBa8IU8JvpeXTmuux
Rbw1EdW2sC7mqSy3SrwLdsKrqeiOfWbtGGaH/AC+W2Fq2AM4LL8YasqtC/eZ
73txmjgW+vJkwRGeJVCLnE0fFuYQvgg+hPV4B7VH5fvp3xvm05ZBLf6X4tF8
y+TZgeeEmSH3g9pNqWhPfw9xeF44hk+AUmF+8c6zPyXwTLhFPovWG5qHvYem
4va8u/2P0clob8IejZA7zr/ROgS+FE+Hr/WrGuYm70k1w9XeAdNoT0HpcK5Q
UY8rPPnJaJ4d5qkOt+Nz5eeE9yvMDT32hXeTPtJaMhHN6ff1Oks7Kz8mzAyY
EbRE9Nu/TUVnFc6sbiq683n0p/EH8U1qG9Ouq7sGi2iDoWW4CzwLwp3FC/lO
+x9ZPFVgeiq6H4XF+xn2NRc/k4zudx11tWE5bR70VDMOv5dvt7Uk33/iy/Re
/AXJ6MwLiu9XuGd78Ku8Z8R949HZh3egDj2DPoX2F20IbXAyik/QHpOrxFNk
Pa92WDw6g3AWhYnovPbLbxNvL/42hG9Ea/n9fBnW2bBS3cgwNz1fhVT03OH5
x4Z7Tn+Hdp2vOl5EbwdFeFbx3Z+JN+Krj48JZ4JvhswwN9QspT+g9yxaC74n
8HF8F0pE3+Twbe5Be5nWCJ+p5k64RluRjL6ns+nxMBPwrnzj5eeHd5reLRXN
2NPF8yvMsW14A95mPDOhKHxf8VnhzPFMyAvfAn3S6Q3j0QwLvyf8rvP0n4r3
IOxFZ3WzoR1P13g0U8JsmRNmQjyau2H+fk6rEe60Z24p7kF/G/8fHwM4jg==

               "]], 
              Polygon3DBox[{{1387, 896, 699, 700, 897, 1388}, {1345, 845, 658,
                659, 846, 1346}}]}]}, {}, {}, {}, {}}, {
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVHEch/G/phO5SRcaFVmCgq5EoWhZL0AtK29l3jLvMzWalo7mJXUU
RROqjZWlJN1eQ+u2LVuFm5a5EAQF8XMI5jfP9/me3zlnznCK2hO18YwQwnfz
MzOEGVNrbpqof3cihBo5Lt/ADZ7ODkEMfb4SeIAvzKHeJwzIg3iImYo5zOG3
8MiMyDF9Qs6Tb+NJ183VjfPH/Bx+0N2R8/UzfFAuwU39sq6Op3k9VuKKrkFe
ljsxFQvhD17nw7iGP+w8lP+aKv4U3+C63V+u28Xr+ShetPtW/q3v5i1yClfs
Vuo2eQ/vxH92n8tX9Nu8V+7FLbsFWSFMR+ebajOg/2avTf4qt0bkr1yjn0/x
L3hVNynv6Xv4hPwJL+vLo/+KPzD3TYXuo2Ol+jHeYZpNmb5Qt+7YM95uPuvu
4nn9a/2IfM9s61d1TfJLfSNew12/v0pekp/ge890YLeCL/J5POO8IXlfX8wX
5Gmcs3tal+RneTp6cXQpyNY/4rnyfPRs+kvuNczj/BTu8Fn5AiZ5vyyGodj/
9/UYuXRPOQ==
             "]]}, {
            Line3DBox[{1250, 1643, 1532, 1818, 1443, 1281, 1441, 1828, 486, 
             1442, 398, 536, 1147, 397, 448, 355, 1805, 1490, 568, 569, 1701, 
             1817, 1531}], Line3DBox[CompressedData["
1:eJwVz7kuRGEYBuCPzEatRSYxwhjXYYkoZibWmcYFcAW2ho5CYWt0qDEjERFx
G0rGMraWynOKJ+/7/f93Ts7JL62Ulzsios5PKuI4HbFNlRe6MxE92YgT2TB/
2xnVm3qFLn2WXjtnsuXsy05JH6FsPpVF9zMyR5ZPO0U5zKada1mjziILfNj5
kxvup3kwt2k6u5fvNPQ7+dgZcaXf6m9c6jfylXXPXpj3mEr+y9mQfqSvca6X
fN+87GfSWcvOoP7LIavO+uRc8q+Mm5/tFJJ7fYK0niFFlSf3ee8d0Lfcj7HD
Afvs8g8h6jHE
             "]], 
            Line3DBox[{1282, 1839, 1641, 1639, 1640, 1491, 1694, 1806, 1283, 
             1333, 1251, 1332, 1764, 1331, 1399, 1562, 1563, 1835, 1398, 1564,
              1335, 1445, 1588, 1765, 1706, 1444, 1284, 1448, 1707, 1756, 
             1589, 1447, 1285, 1450, 1819, 1702}], 
            Line3DBox[{1286, 1690, 1058, 1533, 1534, 1418, 1569, 1493, 1535, 
             1820, 1287, 1492, 1288, 1494, 1181, 1757, 1289, 1334, 1290, 1182,
              1766, 1336, 1400, 1337, 1781, 1183, 1341, 1446, 1342, 1807, 
             1184, 1611, 1291, 1449, 1292, 1795, 1185, 1495, 1293, 1451, 1294,
              1837, 1630, 1186, 1496, 1453, 1796, 1295, 1455, 1536}], 
            Line3DBox[{1296, 1791, 1537, 1419, 1570, 1497, 1538, 1667, 1808, 
             1452, 1297, 1498, 1187, 778, 1338, 1298, 1188, 1767, 1339, 1401, 
             1340, 1189, 1770, 1345, 1346, 1769, 1190, 1653, 1736, 1191, 1590,
              1592, 1591, 1838, 1631, 1192, 1612, 1299, 1454, 1737, 1668, 
             1193, 1499, 1669, 1809, 1456, 1300, 1632, 1194, 1500, 1758, 
             1670}], Line3DBox[{1301, 1539, 1420, 1771, 1571, 1195, 1501, 
             1502, 1457, 1738, 1504, 1593, 1503, 1196, 1671, 1768, 1343, 1302,
              1197, 1680, 1782, 1402, 1344, 1198, 853, 1349, 1199, 1714, 1654,
              1739, 1200, 1655, 1740, 1201, 1656, 1741, 1202, 1594, 1595, 
             1742, 1645, 1644, 1203, 1708, 1829, 1596, 1634, 1633, 1204, 1613,
              1614, 1833, 1458, 1636, 1646, 1635, 1205, 1810, 1505, 1303}], 
            Line3DBox[{1307, 1552, 1425, 1773, 1377, 1550, 1551, 1549, 1473, 
             1732, 1675, 1513, 1375, 1279, 1376, 1731, 1674, 1373, 1278, 1772,
              1374, 1366, 1372, 747, 1371, 1233, 1752, 1663, 1232, 1751, 1662,
              1730, 1231, 1277, 1650, 1649, 1841, 1230, 1276, 1617, 1729, 
             1711, 1229, 1275, 1616, 1728, 1709, 1601, 1603, 1602, 1831, 1472,
              1306, 1470, 1691, 1759, 1471}], 
            Line3DBox[{1310, 1792, 1556, 1426, 1386, 1554, 1555, 1553, 1480, 
             1735, 1677, 1514, 1383, 753, 1384, 1309, 1380, 1775, 1666, 1381, 
             1379, 1411, 1774, 1665, 1378, 1235, 1753, 1664, 1734, 1234, 1280,
              1618, 1606, 1832, 1607, 1609, 1608, 1478, 1308, 1801, 1476, 
             1605, 1604, 1477, 1733, 1676, 1474, 1475, 1760, 1692}], 
            Line3DBox[{1311, 1693, 1754, 1678, 1236, 1515, 1761, 1312, 1479, 
             1313, 1237, 1712, 1762, 1314, 1619, 1315, 1238, 1776, 1387, 1388,
              1788, 1239, 1389, 1390, 1777, 1240, 1316, 1382, 1317, 1778, 
             1241, 1318, 1385, 1319, 1794, 1557, 1436, 1582, 1516, 1558, 816, 
             1481, 1320}], 
            Line3DBox[{1327, 1755, 1484, 1326, 1245, 1517, 1815, 1325, 1393, 
             1324, 1244, 1780, 1392, 1412, 1391, 1437, 1584, 1779, 1583, 1395,
              1559, 1394, 1560, 1823, 1243, 1323, 1483, 1322, 1763, 1698, 
             1242, 1321, 1482, 1814, 1679}], 
            Line3DBox[{1416, 1790, 1529, 1417, 1330, 1413, 1568, 1651, 1789, 
             1528, 1488, 1489, 1440, 1530, 1642, 1840, 1652}], 
            Line3DBox[{1421, 1824, 1206, 1506, 1507, 1459, 1509, 1597, 1508, 
             1207, 1304, 1347, 1743, 1672, 1208, 1681, 1783, 1403, 1348, 1209,
              1682, 1784, 1404, 1350, 1210, 1657, 1744, 1212, 731, 1745, 1214,
              1658, 1746, 1216, 1659, 1747, 1218, 1357, 1748, 1686, 1220, 
             1687, 1749, 1360, 1221, 1621, 1797, 1713, 1460, 1361, 1222, 1710,
              1798, 1615, 1461, 1638, 1647, 1637, 1223, 1811, 1695}], 
            Line3DBox[{1424, 1822, 1548, 1274, 1600, 1547, 1469, 1512, 1813, 
             1697, 1369, 1273, 1370, 1727, 1673, 1367, 1272, 1368, 1726, 1688,
              1365, 1271, 1787, 1410, 1359, 1228, 1270, 1725, 1227, 740, 1226,
              1750, 1661, 1724, 1225, 1269, 1723, 1224, 1268, 1722, 1685, 
             1575, 1267, 1648, 1721, 1684, 1467, 1266, 1599, 1830, 1468, 1355,
              1465, 1265, 1800, 1598, 1466, 1305, 1464, 1799, 1660}], 
            Line3DBox[{1429, 1793, 1587, 1430, 1397, 1428, 1561, 1427, 1249, 
             1827, 1526, 1610, 1527, 1487, 1525, 1803, 1700}], 
            Line3DBox[{1519, 1802, 1699, 1485, 1328, 1246, 1816, 1520, 1521, 
             1486, 1586, 1585, 1826, 1247, 1438, 1439, 1396, 1523, 1522, 1804,
              1248, 1329, 1518, 1045, 1524}]}, {
            Line3DBox[{713, 1840, 652, 1155, 1156, 950, 1108, 1828, 715, 654, 
             830, 951, 1765, 1109, 717, 656, 839, 1807, 1011, 719, 660, 1736, 
             721, 666, 1740, 726, 673, 1746, 733, 1718, 681, 740, 690, 1752, 
             746, 696, 891, 921, 1774, 751, 701, 899, 1777, 900, 755, 705, 
             901, 1780, 905, 1085, 758, 708, 1043, 1804, 1044, 997, 998, 761, 
             711, 1793, 939}], 
            Line3DBox[{736, 1799, 968, 967, 1023, 1022, 677, 1825, 729, 1148, 
             924, 857, 932, 1096, 1824, 931}], 
            Line3DBox[{743, 974, 1759, 973, 794, 684, 1800, 503, 969, 465, 
             466, 1573, 286, 858, 372, 1597, 501, 408, 410, 930, 1771, 1095, 
             929}], Line3DBox[{762, 1165, 1051, 1817, 1000, 764, 1005, 1806, 
             1008, 1007, 829, 769, 1757, 834, 770, 911, 837, 1767, 842, 838, 
             663, 853, 916, 854, 670, 1744, 730, 1716, 678, 737, 1723, 687, 
             1176, 1841, 1177, 1178, 1179, 1180, 1129, 1832, 1128, 1144, 1145,
              1146, 1762, 987, 813, 990, 1035, 1036, 1763, 991, 819, 993, 
             1802, 1040, 822}], 
            Line3DBox[{766, 1060, 1058, 954, 1009, 953, 1012, 1808, 776, 1066,
              777, 1064, 841, 1768, 786, 849, 787, 915, 1783, 851, 860, 852, 
             1091, 1836, 918, 1092, 863, 971, 864, 1721, 1172, 1173, 1122, 
             1125, 1123, 1728, 1138, 1139, 801, 977, 802, 1733, 980, 1031, 
             981, 1754, 810, 984, 986}], 
            Line3DBox[{773, 957, 1796, 774, 958, 1013, 1809, 781, 960, 782, 
             1119, 1829, 1117, 1170, 1118, 676, 1749, 869, 1153, 870, 1720, 
             1154, 920, 1093, 871, 877, 872, 1726, 880, 796, 887, 797, 1731, 
             889, 806, 895, 807, 1735, 1029, 983, 1033, 816, 1081, 817}], 
            Line3DBox[{783, 1758, 961, 784, 962, 1135, 1833, 788, 1134, 789, 
             964, 1797, 1149, 873, 1067, 874, 1068, 1834, 875, 1069, 792, 879,
              793, 1727, 882, 798, 888, 799, 1732, 1026, 975, 1030, 808, 1077,
              1792, 809}], 
            Line3DBox[{818, 1814, 1034, 988, 812, 985, 1761, 811, 1032, 982, 
             804, 1801, 979, 803, 1143, 1142, 1729, 1141, 1140, 686, 1722, 
             866, 1099, 865, 919, 1715, 856, 862, 855, 1784, 917, 844, 850, 
             843, 1782, 913, 779, 840, 778, 835, 1059, 768, 1061, 1820, 767, 
             1010, 1006, 1055, 1166, 1839, 763}], 
            Line3DBox[{824, 1045, 709, 759, 1037, 1815, 820, 1038, 706, 756, 
             902, 1778, 814, 702, 752, 1775, 893, 892, 697, 747, 885, 884, 
             691, 1725, 741, 682, 1719, 734, 1747, 674, 727, 1741, 667, 722, 
             1133, 1838, 1112, 1161, 661, 1160, 1159, 955, 1795, 771, 657, 
             1111, 1110, 1756, 952, 765, 1157, 1167, 1054, 1818, 1053}], 
            Line3DBox[CompressedData["
1:eJwVzrEug2EUBuBTpC4BiUU7ugKd6GBTbd1BV8IFGBqbaJpKJARBR0OVThaD
RCINIjqoNLF16mIgTQwkHsOT9/3O+fL9/0xpo7ieiIgCp6MRl5wxxzFTYxG/
yYj2SESFK7NFs5bMMK1v8mBXZV5foGqXlbPjEWX5ZFf735sPvbcrn533yOkD
sxf9kEf9Vdbp6O/ynK7ely3e9IG8pqd/yBu2vPXjfCQ/nW9Z8v1lvsxzcttu
VQ7t7sjrKf9ZlAV27PflAWt8u3PPhJ52b0VOUnHvhCYXNPgDfEQyRA==
             "]], 
            Line3DBox[{937, 1076, 1773, 938, 890, 1028, 1100, 1027, 972, 1813,
              1024, 1025, 881, 1073, 1072, 1150, 1821, 1070, 1071, 1017, 1137,
              1136, 1798, 965, 790, 963, 1016, 1810, 1015}], 
            Line3DBox[{978, 1760, 976, 800, 693, 1127, 1831, 1126, 1124, 795, 
             1164, 685, 1121, 1830, 1120, 970, 861, 1097, 1098, 1785, 947, 
             946, 859, 791, 1743, 669, 723, 848, 785, 1738, 1014, 1115, 1063, 
             1062, 1065, 1791, 775}], 
            Line3DBox[{1018, 1811, 1019, 966, 1021, 1020, 1812, 1074, 933, 
             948, 934, 883, 936, 1075, 1822, 935}], 
            Line3DBox[{1046, 1803, 996, 823, 995, 1042, 1816, 1041, 994, 903, 
             992, 1084, 1823, 1083, 1082, 898, 989, 1776, 896, 699, 1734, 749,
              694, 1730, 744, 688, 1724, 738, 679, 1717, 731, 671, 1714, 724, 
             664, 847, 914, 1770, 845, 658, 833, 836, 1766, 831, 910, 827, 
             1764, 828, 1087, 1086, 908, 1003, 1805, 1004, 999, 1002, 1001, 
             1050, 1790, 928}], 
            Line3DBox[{1056, 1819, 1057, 1168, 1158, 772, 1837, 956, 1113, 
             1114, 662, 1737, 780, 959, 1162, 1163, 668, 1171, 1742, 1116, 
             1169, 728, 675, 1748, 867, 1152, 735, 1786, 683, 868, 876, 742, 
             1787, 692, 878, 886, 748, 1772, 698, 805, 894, 753, 703, 949, 
             815, 1794, 1080, 1078, 1079, 1130, 1039, 1755, 821}]}, {}, {}}},
         VertexNormals->CompressedData["
1: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
+Mx+SXIP2IV3B1M5zE4dfILylEqBkygnpv4t1A48ZM0jaOeCffVrtLOoY71T
uD4bnKPadIXGWUQ3mJflurQUTtT2HdUL6iW1Cvr5/MUMkrp5zifntgII7Iuo
bnZkkvJnCVHPlLuJzR6GqKwHxUNwsRLq7SS7R6q3lIhSHhW6/2qzZw9MdUgb
pvrwTNjCH/VjmmX5UT9P5npkmTYbZKdOO+4yQONEQbvX8exb+KnEnxFsxybe
8y3uv97IJtbnSt1mGhbABqe3S/VOMUlJVsfuGVldRCZico2vWBc4tbteHVrZ
RYLtjG2vuTQRe6GVV56V9YCPr+Amqg97jB7poL6xqlk+6ke1JL7/LcSEj9vW
b7uzvZcIHuHJeCD85l854cjhX7nJ3XoR/K7lzKmXqB2QmT32x45Kzpp79Luw
WGPkAf0uKOtGn8bvJkXNlsfvfo18dwr1Lz43TEJ9zr6Asy/4d18cPxCOH+Bf
P4R4ziLoZxMN7jLqN6hLn/PHb1sKyy5SP0OY2ZHT1M9QxNxqhX6eL7q8Bf28
PDY5E/VVNx76LkP1OecInHOEf8+Rc+6Ec+7w77mzD5yLxnjrPpH3hcYJSHNv
yMY4kWw0c8F4c+ie3EHjCuIUD57CuLp80e8Bxpvk6NwqlFtNKDyA8qenPIow
3tysuBlox9i5Ox7tcOIcOHEO/8Y5Jy8IJy/g37y4Y/ryLuaj52aP/TSP4Mga
fsM/+TivSAjz0Vxifj3NO1DRu1qCeVf+64wR5iOXwpRClH9MuZuJ8qIc2xeY
j8n9W3XQjhhXrQra4eAAcHAA/sUBDm4QDm7Av7jhEVZrg/hzTG8Tb94BBnRb
uGcizqwP3hCC+OMgNjxA8QeyRSyf/k/86eTYWcixw8E9wsE9+Bf3vgYUfsum
+GmS+ViG4ico+QanIk7aZfyKRvwcFO2agvInTRIP/wN+/n92OLgNHNyGf3F7
63XL5fM3BKqpVkkMvy8ZIMNRXHprsjrg9KUqnheV3eRR/JxDP63ZRJB/4z2h
mia4z5O90XDSJbWo3lO2mzRZZLXkiRqRfoonDK6zqjyVZG6hxZPnEZ3kc/jM
pPSF/SDJVdGvTftJzciStvayLlI0p6jSX5UNR4cZ61a4dBLl+eFhC6CLbM4p
kl2ynQVLrVa2UzvAz/chCO1IjR+NQjviKU/Sj5oVkNPeFtV9KY0k21pywEpk
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
9zD2oRULpmzB+BHx5vvxILWbTKzlGcL3weWplscwbvWKslYhP7+7QtgJ73sb
dCcWIz8v7pi/Bd/3jbkOxuG7qpr0/XOYLzZt2zvxHcduKLgF3yWVSBwXvuO8
mT2x+KdFJ5HQHvNeLNkKs/1O5Cc+6gHXW1tq8Z0oZVOSK74PPud6k4J5fSOo
8oagfxsJfiWmOurRBjov+R/e3NALnZbNNXifUBXCfonnYrjtRyqeSw1zjaA8
xb29cd69FPdIK1vPHnGvSOTeq3nZLHLRWHVpTROTWLruvKDxoA4c+e+ekeVn
kee25r9suhkkZJt69EPKx1xCb6auo/1X7JuWaI94Jvm5lqd+pVQ9tHRUiCyj
fQFDTEtmnPJ3GZPNYyVRLfBtj53vlSwW0Zr4Sngt7TNUUlmFMpMaYP+L2zcM
pFhkivFWw3gTBrEVqr3T6NoK896ov4ibSvsgpWOXAhndZDQozxHv23nZZ7Ro
/sKJCPvbNH/JmPc2E8zfec56srRugkn+Mn6smyNfT9Zi3bQrIvto/YXvwty7
sf6KBgWcwvo7+dn9Z8/XV4PQoJdkWHEXzDw1esLhdy+YRB1dQ+Wk0CRgDpWT
9/JzrqFc3MXaEuvLm1r57bS+kBeni/KwvlRWnuehdZA4O9r0Yx38IOyXgnWQ
74PjbVpPyUXdHQZYT9P28mlhPZVVlfuA7+9esQ8P4+8Q/H5/48Y6/uHkoQ7k
Pz+qOkrwXaPo1twIrONdElr7aB2H9Kn3/LCOT69q4sU6PnWdShDem5VvcxbG
e6098vaL8V5LJ9nO8/t5il+2396tEGeRK8oZAr8SKd+uqbmLPHxfXqYQ3iOZ
VGiPIA93bOeqpvEDGi3c49882ojOd4MHGD/Lx99Ak0MTqO7Pvn/2WyMxTyhS
feTdDz9rX/P/pv1CStZFA7wvSjEMUMJ+ocFdgUXjFjwc3uyicUtED5fmYNzm
DOw6hO8gN09KamHfGuQzpQjz4uEOxp4lpTS/eSaF//zdQQ6+qRNdfYAJMy9K
2WO/80a8dTTgDpMYx+2qwn7HIkJHFfsphajHunhfdG1RqyL2U3tq5lS4UN7l
4ym1/K5lB+zLEmUtc2OCi53W52i/FsLlaGUeLNQIFdP3X9ut3g9rEr+c5pVg
Ed4tclOX6bLItu7la7l318MCIb2y3cvZxFDvdqj9CIvkOW19bpz/DtJhwiSx
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
cv7uvokPihnkd+DM43h/Rb+rj9/d8tdcdvoiE773cnVksqcC3/O0duJvq9OI
92aPWqqh6kQLMXD5LYn37RW9ThV4L0frhcp/mssWOiB2rSeojWiYn+zGe2/m
/tkyeE8o9vGCQ6F6Mbk+RTKlXKuayBhrSihOGwYRzlz2jb/msstPht2jcU4+
JG9xpXFOHry404dxPrTl/xX23nE9f+//eLbMrDSMklDRMDLCRUQDkVRGr4Ss
hKySslKhlBAKlb0bdomjPWiXttbz+SxNUWbley4u79vr83y//X7/XrdzO8/z
PI9zrus692vcTRUqY9+ySpnzzke909hy9dpsxEWPUf31caq/Hk/111L2qpE1
qzLZ/PWtRxAfbls/aB7iw+J11luozjouXCqLrxMW3OycztcJ6xvTB+E6+f+d
8r/qqTtKaI75t7/USP6S4EnNnoI7QnZ+Va/Z2ycKWKPTrV3XNPOhi8TqX98r
gr6XNH0v+DpSdWuyNJP/EpEpv6WRDdny8KaRdhJ0lQj+5Y/NovmraP77GYo+
Uqeq2OWh+u9FWkL29d56H3OPaFigYz3olYOIZT0u6lhhKGKTB+W62ZfEQKvL
fIdOjiLWGrF75g4unxoYvSCkLAbKDy+vLpsvZBZhVgV+plUs4/g715FP42B9
bnerPtoi9mR62JJ7a4Ss+9euUqYKmSA757ppDffLB43xuOYpqIB98snpU5JL
wLn1kzP/vxAxSmUZ/7+gH5Mrj/+3t7+tjcsuEbjKZEuFzBLBQZktk0S5sWBj
o7Cezw9qhqOW8vlh7+QPlUv5/Jr2Tk8wnj6+3+mnGE+PmLBh5TS+fqOtUYf5
+iF1/YHxfP0wOvC0Ka4/0Paij/6pKthbc3/1bS0hzHPvJ2PA98HqnCLuJ9B+
gjzt53KV1DSs4/7g+ruO2yXqdx13Z4mTv+RRVN/t1/IfuSPWcQdSHbcE1XF3
kHjl+O++we8Iv8Vz8m8/eTz5yc4vsg6g3S+cP90Z7VfUNeFXtF+3z9w98lS7
jLkEt8Ssrt7B6vIM1h86WwsuY7saFVsLIWG8+dkxJyrh+67054vViqAhysd7
xtRKqI+wH1b9uhxKLy8V3ltdwd9JT6d+0KuEvPYBMk/PCpn5sWqv08ZF8Gr3
wUbUJ35RCxPRD887HbAQ9UlfH3jlZSuAMwr3dVKXCtj1mXaXfuQV/afu+CvV
HS+kuuNdbb/lwR1+y6uu/5bHuU/NRr2XM117H/rVmxzVBqPe8+tTfO/HCQEo
z/ZXu7O3kp2+rLPIPqMECnpOmHXHWARxfo83Pe8rYld7HxrSqpT8n3rkzVSP
nE/1yDvTguXRLmS+6PzTh/vJ6iFSfdAuiOMVToRXvJQ48zifn6sDD8rD1zwV
MncDQ8GtR2lgEvpafvcBIWw17Hbp4VABG+YzWgHjJq4519y6DxDBxREHjnXR
E7K2wOuX71pmwdCACUfQXp/xXnwX43S2p9ra0F4Pm9CkqDVWCFenSx4L061k
/vNsfsWV6jzX+15fJwTXY3GiCGsh660SNGyyMAe+7IxYyOUs6U1XtUj+PWVs
1wxB+f5ndrr2/P1uaWUnNF4uhGJLxR1mXbPgsKuhMvqZ3X06mKP/sDBCJRH9
h+S3AfPRz1xltF4W/ZCX4anb0A+RIj8wlPxAdfIDX+7p3BnXWb5f8BTjX3a1
6a9wna8D3ljw/8t2ftd+xv8vPKzPDsb/G39qw9eCeSJmdNPaV1pfBPIe3/az
fxJg84uAL7v4vj010cjAeJO3zJCvo/m+RVSvD+T7zGo/X0nm+wyvi15V4j7/
wRkEhDOMJpyhXLvBzA37nu2yWtsyRgTjUn5IpD1LBMkr1q2e/B0k2KAIaPfn
p2lJ4fddSfXIQVSPfJ7qkev9fstV5vyWd7z9W/4o5WcgvuOen9WSXDWpHEzr
WpTwHSdepzyM6pQVJcfhOWTb7j7HcwjDvx78dQ7/UfW35eeWbSx12MbPLYQt
eLcYz612/Mj3YXx8UZrSgBw+/uE1j1+43/u37w/iu9Ig9F0Q2n2ZLjJyeP67
PK9KbywTsgVZI21m6Qthhd7HYSumZsPrwVvs8F059KD7NPQrrJYsyUW/oqZN
2QjfxYsHXGjG+JSB7eF3+C7ea1loy+8pU5AM8eb3FAz8Ll3Be3olRMEF39eO
gnu16Cd4yHQxwXtdNv2r+vASIdv7rEjnwEshdJk4edA5+UywObWzP/oDrzt8
VsB41nvnJlP0B2ZtHRzTqFfJvndffoDrDWjp3ec86g0lT4HldiMh2ypp/dnX
VQRHLd7fUKhJhxPvavuhnumnE2iE43UGz1+B4z+X1x35uEsAtiPvDvAIFIJ6
lteMdYfywFy58j3O3y81Dcczp0OhKTi+n+qdebjOoud6w/k6mXJv23G4zmmW
Fz+63BIxc8Vls7u3C5iSbWqid0QGjJHSs+bzsxEzhw/i87PJoUsf4fymF8yL
r7SVsUULnt3D+NecsJFuGP/q2PnBpl6PK5jN8nEx+/oLWbv6q58i03eQI/HK
C/ezQ8kNK9R7A0zsX+N+ekdd36hkKWQ7J+psWdnM9Zz09dibB7P+WqdcT/J8
kruS/C7pzy+kPw1If+baLz26J1zIXO8KD+Y1CNjevtoXnzrkwjQTyWfoZ+a8
juyDOMM2hS45eB7+zPOZ5llK84j3bSgiPak73l3y/gQh+37lWMuw45Wsb+Kk
tLGxRWDUPlGndL4IlLXndtObL2KrO5kZeKxMgFE7TMd6cXnJh+vW67icOQ88
hPfdPGm3Eb5f3svtVcV3bqjyvATUPxMuf1aw2FkFt8zGhIq6Cll+6qDxnS8k
gMyM91uS+4mgh3BGe7OFkJ2zmL94GddjxlZPOnvJ10DXpqS3jr3vshWbDvbA
ONos0LuOfkL30J1D0C+6MrtAH/2Ee9ukNblfwaw+ur5EvyJhwY4W9Csqd/ov
Qj9KOSd6L/oVwd+vzcfxf6tTbiV5AcklCn/L8z7p9uP7A6l1s7oNP14JU/o9
PIL7k0J1yh+oTnkf1Sn/rX7ZivSJHukTBdInK++8bp4ZK4Sg3sHqGpcFoLIu
/luB+dv/0mOnSI/1O1i0jdtxxrKi1dGOf7l+vQXt+N/6KqjnL++wTF7Etoc1
rX70QgimhV1fDL6Z/te6Zk2Snya58p9659rlQWj3sxc82oz6JPSw/y48/+J4
ox7hjdNG1ul6egmga3xQ0MeFVdDl2LPSbZfT4NPC5XekVomY3LHbjjdWiMBu
9bS5A6K4XzfZLQXvY8hy2VR+H2Hm6J478D5KTZlhgPdxufT5Rn4fIcLnYibe
R4nyJZIYv778tikUx6t+vWSO42eorTnFx8Own+GxOP6L3uhzOH7cq2ev+O/C
fnuDNfi7yzeP/fW7zb6zvw9XFbGobtaqLZYiWFz4dOqw5ATupyn8istbUJzr
JsW5OkpkvPtf/aw6SGg+xPomic2/669HUf31gtPH19curmJdHtwLONlbyFZP
2js6wyoJhsz7eWnTtvdM7dTjPpvqKtjqC4YTqjdFcz8w+BdeelOsn6SubV/n
b98roKXEz3vBuvdMo0fV59fbomGWw8vWGi6/nHZXczqXL844Gqi3IxoMvBJT
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
7/zCAZJWtfB7ATWVo3P4vQArS/9DeC/+9EM+T/2QlakfckfVTe38/IOuxNxc
fv7hhMSteXj+562Mceb3FPTX3tdHP2qr28MqvKeH7kYuR3xGqBYWcDq8AG6d
MXNGfEZ3os23NItceLdb422I7lv4tCx7RLcedf/FR/nHXmwJW1SKeE7r46Dr
cl3K4Yirw3jEc84kjOtz5noZ2HncbOL6BD7XVdiiPkkS46/8Y0cOb35iM7i3
CDp3zZ+gPlMIY0/pa7r6Z0HgX/i8zpH8gZjclHi+dorxfK34C//XgrR1Q1B/
XtSSD+L6E9ZlO1ig/vxSW3Wd622wd3Hcy/U2FLduNkS9/eOKSgDXz2D3fIAB
18+Q6DXIHfXzE7dHI0XLslh5Z6sjQ1aUweqTP2dIcf9WY6SCwdhFiWyp2fzb
OL/oQtZqnH8g9VseRP2Wx1O/5YK3PRK5HYEV5/o/43YEgreevz+a25Fvfn1i
TJU3z1wqWZKXtqiUNR9aKyWqroUNN7u82mGZxuINmZ63fBm7+o98x0Nna2Co
mJ7/o/81FOem8e/LZBXLX/Dvy7YlFWng9903OXQCP5+ssKKoPz+fbF3yek88
nx1C3Yv5PWIDZWx28XvE/J5O0MZ79EDt7oUjrTnszKyjkzOupbAFjRu/FjjX
8/P3mz9rBfFnxRJ/1lGKt+4Q4886S/xZJcSfdZj4s6KIP2sS8WcZE3+WL+H8
eWLxWYuPl5/x9UDPjXrb+XrAYl3vD7ie9vdDii7+eAPJn+ZeVLqeDWvkJOYg
nqnxweDITss0UC7svoTvG+jY6tYf5PsmmfnkRlbXctaUFNKn0LSKzfJttT3m
VQTuYnq+P+n5cNJjDaTHfEmPObwKN3Y9VcUcXed8XKslZJ+jW9TOe0TDjG3R
O7unClihmkWAS4SI+dlqbzxpnAkfiQ/0OvGB+hMfqM7WMNt4ELGA4HabwCtC
NjrZffcr7XRoo3zvdsr3HkH53gPXJics1ReyeusPKZp8/d3ndFpa/iQOjtH6
NWj9PWj99M5l51TL8J0L5+idW6d6Vgrzuu+lnzxzf5YIEm031DXnxv4nTzuN
8rTlKU97uXvTDr5OeN6ssZ6vE8YPuKWA6yx44xeYYpkOmYFGe30k38OW7WHL
eplUwPXyF/2zu5ZD55S4xgLTKgj553ryUb7Pb270tnp+qgp66NaajdISQs9+
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
          "]], 
        GraphicsComplex3DBox[CompressedData["
1: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
lOC0r/UepfscLcQelvwV+FlF9PpJkU/15+RfB9IPfN+Qznesx/lOvnMo0dvR
nO/tlDRpXFBuvDlX4k2KZy3iWcjPJLpXSHbWws6ifTzdKwSOeqQyhBf30EtS
d2EvSZ0GcJzPHpb1xb5rJ/V1q7vcKf3eNCefcGJi48B/7y8U+WfrhmPTSqmc
1AzedjU5l8+Xzo/bueabDbRfDtocuWdH+9FiP9I5lPU4h1L9hvao8+wYO6D7
gOAMPhcwOBcAfoVwyInkXc0VsjtNRQ+MFT1A58V6vkbny4bPl7G/HitVscHQ
cll87q/37IB3EnyH4NDjmEdTeQcP+UTgx+S9MuwH4O53XCMMtwd93D/2OfDh
8i4f8q1Y/0pJTT/47SHnnXbgMauKJb4xynlfF3j/+7pdPdLEiT+AR45YkHgx
wnn3EPjmin23fljLeceQ+wedTM9jn4/9rGGu3geeMWd6UqG4aM0fgd9T5N0S
yKXme1Kf7fHFaed9CeBTmx3pNyrW+Z4R8CGH3vmyflHnvXjgvwVELe/wnHM/
DDjuO2C+3B7zBZ7y8RL/Rred7xndm54Mw/TXvFI2+d+6c+BfS/72qK++XP3l
j/PeaQlT/gD/anHlqa9P1/ejFJ9XvdkrP6U678MDf2jq8IEXejpyC/zJv0xS
8Zv8fbHgaP6+GNrjfgRwtOfvjqG9+54I/jl11OCzR/+G+wf/Peg3TD/W5d58
yDDMN+RVmc+VOn1bOCMoW/Gxn/Z/sPhTK5VvsDONXfREKL7Jda/Ezw84+IP5
cnvMi/vH+kKvr93ds2uhjY78A4d8gh7gLP/Anyf55/boB/oeegD9AIfeAJ2w
G+PoHVHgLUh/Av+Z9Cdw1p/cHny7d/+O/9IlsfHKou2d98GBn42s+MeMGvp9
EHNvPM549QM/6JHB4/+YedY5twbewfVuQ4Txao+8AvIMrXz5X8PvMOHeBfyF
0T0WXHzrhb0W91KwLwpI3gz3T4DXk7gP90yAl5a4EvdJgKMe45KH3rjsoR/O
e+zr3z32L/KzPC7q74Ej/kU9PXDcA0J9PHDc61njOld27rHhHg72XVLLWhdS
uyVr/g74jaZ7PwsMSrO4VwN86fh9E7s9kgl/XfF5SzudbHQgy+J+C3Dcm0Be
W+sXNla5MLf0AYt7C8BrPlsvu/ucTJxDKP7klKhlmyql4x0SxU/Hl3t29Xsp
tp3vPEbx80Xn/en/wWbEA6ofojt2ujilSLrFPR/g7/U6OeLHBZkW93CAL/+q
8k+LShywuEcBvFu7W35bAzMs7j8Ab/zMkbnnY/da3NtRv/ubDQ/O2ey8fwE5
79//RP9D9aK0/p7zKKhTB97jcnJCxphU3EcyvC9Qbw281o4Br/UYHq73FrgO
BfX9wIvL95jCCMd3mlAfr/G6fNepP+ED3LhhfCjh6Ad14TzuN4SDTtRbA79a
11d3jfseXF+D+xjAg+tseDl0eIreTwA+af++Hr8HpWvdOfC4Caej145Mx30P
xcdVulLn8cO79P4J3zdFHAV8h8gh6qG5PfKMsMvHRc7v9HvqVHBuHAg5T877
rtlaK/dnnPtPed8d225RP833U3HvAvLZQOrnUTcPHHxAPTffZ8U9E65Xwv0N
4FjHdYQ/KDjyTZpnEnkYQPhAN24YH0I4+kHdP48bTjjoRH08zwtyAvsYKPsL
90CAY5+ivhn4ONmnyJswvkvyJtwP5JDHnSn1ClxnijpjrVcSPYN4knHkI5AX
uXG+eM3dufEy7qVAnyS8HJRz55LzfTHgZ8R/QPwM/Jkekydvmb1HcezTt2Vd
cG6K9k37dh6y6eV0rbdG+y7yvZszhOM7OMiXYT8++ti8cZ1y0sBPB98x4GLd
hpm6LsChn1HHzP1fJxz04JwJ+/fx45OmfV45TevsgcO+oG5Y82ePrCscNCVL
67yBvz3wUvc5a53vuaifH7H16/hS+/T+APBlYpex7hj3K7FfyL9oXarYa/d3
voKjB9F3voAjf+7+zldw9BX6zhf7LbgvwfZ6kIffhXuPTOclDz8KeUP2Q1BH
i34aif+AOlfWq+7vdgVH3/u7Xc583d/tcviGuAz0IC5DnTH7G4jXlH6J17SO
E3m+C37Vezd1vtsFfKXEcaAfeEWRE9Rnsz8DPx848gmgH/h/JN5Hvht4z3/e
DqtWwqEfeGfJA4B+4A1lX4B+4EskH4I6ftgXyD/q3dmPAv16j9aVn4lSfEr1
HavrT3LOCdguYL5oX0XyOZgv8HqiT9aTvSgj9gJ8QPuNT1eOiZ210+IeAtpD
n5z7/3HD+BUPHPcDof+hPzfIuYvezxO9DT4Abyb6GXoJ+Ie/9D+986809G+5
f5znwY7scb23HGoQ3/0tdgR2CXoe54OwO8AfXuHfJrO2g7Mehh2BnsT6Qv9D
70E+oZ+1Psu1j5w6sr+S9r43ow1/P8vRA+7vZwVH3/v7WcHR9/5+loO7v5+V
rx/dv6AHcbTuC8lngs9Yl0rCN9Tvwo5X+XTugM1T42086Xl8Hy2R9Bjqt1/z
1UPne08F9dbAK62cX2vInS1aT4b1Gij5EMSVWK9jdatUL/DEFq1HwXqdXnoj
r75rka9OOt+7LIlEP+gMc9WjO3HuTamz4fdaIK/QPy37+erKUD8EPj/4qI9O
1JFDnptWmLPsnZKJFnXkwKsKnzfLewdcT4E6cuDPCd+kzlvpR723+ztiwdGo
6y5K9veqq24nv3y6v5Pl9IP8A/TJh7JeqDuBXG3L+vHnUu+lW9SRgH/J8j7z
HcKTBEc9MeTkvmYTEife2qHyjPj3YckLQZ6BL+9+ZmvD1nu0Dhj4t1KHiX7Y
/0Q/Hvokn18HO4L2nSTfBT3p4cca9mNRZ4z2s5b9s3NEt9W6r9G+pNgL6BPs
i6enlZ1fdEWy1g2jfchfXVzfyWL/FvXBaH+kcvR3b3xRUPUM9w/9hn23umHE
Ywf/SFT/gXH4e5q3X1ey0qetne9nsV8Kf4nbD6Y8VSHJUxUn/+qSyHOFUkOK
ZgRlq994Je+7VyvVL2X/B3QCnynjwi9l/wp8YH8J9HM/8p6Oxtcj8757FYH4
Ot/7T+gfeBjxmfH6B4vOatjWOUctUPCpMe/GRkMvWdZL8J/Zb4FcAW8h6w47
5eHPWPZnID/cD+RN4+LjPnnDfQbojW9F/mGv2d/AfuH2uOcAfRLn2u+hiq8U
/YD7DNCrZUXPoD4J+qeJ6G3Em2wfEc/eWy/FWdYP4Bvv6wFkB/F9MeSTgT8t
eXvENYyjHpftKeqzsa+nj6mT9Par8VofCXzV9lblA4/t0fpdxlGny3YZdQPQ
A6vkXd8JhOO9X9QtAce73NUIryM46nGBn13hs/uJvvdcVM9sy3s3eLPW0wP/
+vibv8V8Hqv19MCRx0Y9PfBfu5x7NP5ygsYd0DOIZ+PJ/4FfhLperfOSflB/
rHGNzAv3nbBf1gmfUQfPdnYw2V/ICfLk2BcvVoucEVgkWe0g7wu5h5avPgV1
P8DxvYM+hH8hOOrUPdobbn+/vJfE46LOnv2cH6TO1cOPsuxHoT/sU7zjh3pE
4IOlzhn3lNgvHSf84XOlWrJ+wM9G+uqiE5r78rTYd23a/Jb3/Rq8uw18F30f
Cvif8h0c3MPhfDvqV7DvUD+s30ERvEHvxaW7v5iodTCaNx7V7cahsiVw7qP+
XhG3PVUc9tT9nabg6NH0nSbgyNv8QTjOy4qSvYb/6f7uUnD0VKmTxH0b7KPV
sn/hD+h7eFJfKnpG91ek6JlJhEP/TCT8O8GFb07eO7h7Ht9Qf4x9OlXy9qg/
Bv6J6FW8yw38SVkXWUfFS0zwrSPe5ca+vknfRQJ+ir6LxHFcddFfwE9JHSnu
W2K/vPBZ2MNfbUzQuI/zqEdk3wF3+/PTDOPrKO+Hc8aOFBejjhHvm7D8oK4O
+7G10DmI7OMo17m5EyeulfxJeDl3/cywy5fy8kXu7/s48ube58HR7eg7PsD5
ez2cr3N/lyc4Gu/547wJOOqu3d/lCY7GdwQ6Ul4RfHN/lyc4+t7f5XH26SCy
Fx8I327J+nK8Bn0DHO9O4P6ARxxnOY5D3T/kbanoW9T1Qn6QL0IdLfBWYr9w
3sH5drwbpXWg399csM04+TrO81Qlv6Ke2F/Ut3G+HXGTR17IcN4e8gP/Yc/F
uZWeSN8Ff8CyP4A6b+CnpF4U6wi8/fivD4+pHqNyzvlS+EvA4UdVIRz+Buq/
oX9wjolzAfZDcI6s/r+cg8C/5Twq6jiB49wT5wjAl/TpX+jiI85+Z72EOkiu
A0TeHuu7SPqBf+XhTxr2J3Ffi/09xEH3zj/vspzHRpzikTfOdy45mOwv4lnc
MwE9N6WOwv3dE0f/uL974ugr9/dKHP3g/l6Jo2egH4DjPGWwB17NIw/p/o6J
o/cGUDzC/irW8ZPb0fsOxWZo/QbHKXjXDOv4P/meSAzh+M4I7L5HPGI4Huns
q5NW/u+QOhCJIwzHEbgPBn21Ynps2BMTtup9MNVjc3o+0GFmgt77Ao46ZOhJ
9ktxPwp65aULg1Yf6F5K3uPbrfS/KN/vKEI4f9dD31Gj761gXq1Fz+i7J6J/
cH4kcq/yj/dIIefAs5utrPLf+Cz1HziOPue7Z2s4P9xd4mutj+38YIEOn2bZ
dyXuAP1FTi6sWqfLAX0HFjjelcU5NfBf3/60ZU5Olr63i/mukzoivBsLHPVX
eL8VOOqR5D2OfO95491b4Ojnmug38Ad09pX4SO/ryLzeF38M+gR8wPuzwHH+
i3sprJ/xrijXmeDdQ80HSv0G3hnk+ha868f1MHiHVPWt1C/hvTzw7eDNpHcX
5fqfyBvou3GC494F11lVo3gZ+vzEvuE1u4Y49fVXP+yQfHJ7POyaYbuGd0s1
7/Sa7/1SvPvJ9Q+4n4B5vSH1Wninj8+F8d6cvn8gdWiI31l/Ig/D9WlSz2a5
nk36N9w/8gZ8jo/3nrjurr3H+RTeK+E8MO7rahwk5x24l8v1POiH83u4t89+
3eu+d8ANn9cMoXwv6jNxj5rrD3F/ifMeuP+veYa5vnvH8l5PvnureD8I+rZJ
ji+uny51Mlxf197j3D+c8kWoI3XH847/X1vmg/4Rr8XJvub6PakHU/2GejC8
84v1elL2I+6rc75L7IW27y5yfsGjDhn3XdHPz+Kv4nfQ89fCsGPNXz1A9XPB
0Xifyl2vFhx97+8pBEejDtytZx3cnTcPjkadtrvuyvFP9J6J9IfzXNAJ/Mte
nwW3u+3ECcCb/PTe492bOnQC37GieamSl5z6OeDhK79b3uwJhx62p5BX4Mvf
D7v/17+de3PoD/GFxjmCH161MXDoJkfPAk8OmzerYXtnXPZj9T0HwX9/aeq3
X25J0nE1XyF5e31fTvC+0dP6FG/m3EcD3lLaYz6gt5+0P0R2p77YHfe9TmtP
CT1YP76Hgv6BY76YD/CPap9rUL2rMy7wzgWXFTwZ67xXqe/ICv/RTv0EWUfQ
w/c4QI/6jSQPwCE/oEfHFXkDP4GfuZ1Q8uPKTn6E70cAxzjMH313X/Yj2vN9
BKy7s2989hHt1D6+03PyQ6+V13mBf3tn2q/n73DsJfq7I+8F4e9VHrY9mt6s
fjnVs7qPW/nsC/pV+3LE1x5/Dzp/lfeLMC5wvFMEHOOnCp10f98+eeZY20KD
nfv7rIfRHvOKoneNQFePvm1mNb3o3ONTv0j2HfjP98jQP/AX+1ZZfX8H5/sC
mr+66TvvAF/Atx9FD3B9wuQ57nfk8HcvSf9oB7yX0K/1LsJPfh+Scf1uCORH
3knDfMF/1O3QPXfTWPiP9nwfEHwBHw7JfNFO9R/pc+CbXnrh3Lhizru+GGc9
vafKdkrvnwq930o/aMf3boDzuQPoAH7181d/a3KigtIDep/65plKxyc8ovKq
dC1tmoeDDvVbfmlX2hyvoHSCnpny3gXWBXzCvkA74N/f8NW9P032/QTdXwbe
65UZn726epfOR+1zvzMjrscXV7kFjvaYJ+iF/se6OudB7ndvdL7RRy9EX39A
+0X7nh8v+Wl7N2dfY/xAwfU9ZeF3sugB9MP7Wv1gobex2DXwDXhTwUEHxhlT
w7fvQDfoathi9qL1DR8kvzM4epfIid53Err6Et9UDx/u4dLDwNNIv6G/7sQH
8GelnFupHhF8tPi9WCfwrUwNn/4HPeDTRyJv7vO84Gjcl8d8VU7OlQgrHVFW
6eRzCsgV/n96p5aDAzaXpXqy4Oh44Rt+53tkwDF+krQHHZjvm8IfrC/ndTF/
/N0vsi+Ag3+/it+iekr411P0KuapeQlp744/g6ORb8fvXPfoFUdgPPw/7CPo
w7p16ZHdONnP0Tvo/+t5PSM/XVlV5wl+P/BPz8qlP6rmvLsF+y/5n/8DRKpd
zA==
         "], {{
           {RGBColor[0, 0, 1], EdgeForm[None], 
            GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
4/8fSJmTQQ==
               "]], Polygon3DBox[CompressedData["
1:eJwtmwf811MXx7/r3n/SpCg7RIUSZSQqlZQGyV4J2bI9yEyF7JEthEI05Omx
KUVGqIwkJSGbMpLwfN597uvV7XfOvfe77z3ncz7n/JsNGtL/jCLLspvLLKv0
e6OUv/U7I8+ytyW3iFn2keSodnfIsonq20fjvfR7pw4YquMGSF+udonkLdTu
YFzzn9GcsTrmbOmbau5GNVk2Sr9t1b+l+u7V7/Oa315zW0seqbH2ut5y6QdL
/lTy4zr+fM3dQvrGOv5eblJz99fPPZJf1vEdcp/zWum7S19Pej/pYyTnOsdo
6S019q/kw9TXiPNr/GHJ96mt1rk2Ut9Tkt/TvP7Sv9H4R5o/SX2bauxNtVHq
25ZrSL5Ec7aRPFhz2qt/lPRndK8Dpe8ovan0xzX+tvoO1vz6khdq7B6dr17u
e+ReW6lvgeR1uEfJW6u9J/kNHT9CxzaSPll6e55bz3+Gjlkgsbb6pvIt1P8W
966+yRq7Wcccof526v9Bx76v3wM19q36PpY+T/oR0n+UvkD6FWpfSb9Lx/4o
ubnaXJ6XPp1rX81/V/rrmd/XlRr/On3rnySfqd+F0m9T20RyW7Wjde5neD4d
u7PmLON49eW6/6vV9730izJ/7xc0fxfpP6gdJn0M30ljN6n/Nx17uPRdNXZx
5vF1dE8XSt5b44u4X/3eLX2p2nO6xhvMl/w5a0vjn7L+JNfXvM+k7672k863
seYs1tgCzf+Fd63xFRobqL5l0i+UPkP6dB27QvoDar9K/kXz95Y8QXItPc+V
mveD9P/qnB00doZaXY3VU2uksR3Uxmj8II1/JnlC9No/RvOa6/iP9fuT9Ks0
9ovGRur3V+mHa/5SyZfpfmok3yH5aY0frfkrpLfhe+gabdS3hPWu/pWSZ2p+
X+nzNX+m9Fel7ye90Phr0vdU+036Njp+mcYGSV8pfSvpx0o+UPO+zL0nmkje
Xue5X/KB6vtU8v6a00DXPVtjr7DWOZ/G+6brH65zLpJ+tua+nL4f37aJ+kbr
uDPV10O/t6n/Wck7qS3V+HiNz9Gx/dX/hfRV0g+QfLzG22n+COlTNH575eNX
a84gyZ01/qfkfdXWlfyG5uwvOWjsdelv6beDjv1Sx7zIeg/ea1eq/3/Se+t3
kfTemlNKPjR4PbOuX9L4AWrr69jzNfaq5BP1u0bz+2a2b6y/g9hfapdKvk19
jSU/q/au5EMq27P62Fjp96htIfk79c2VfHTwfv5e8vc6fz2d44rM34Q1wn7v
xXpWO7/0e+X93q62meTGpd9NJ81/TfIGaiOld5Y+U/KePKfkn9V3jfQG7GHJ
HdU3XfL6asMxqdJvlbxr6W9xpPRlpfcB++Ee7J3kprrHFzX2J3uetaXzfyB9
F9YP9j/aVj4pfbjGe/MeJVfqu13yzmoPs5elf87+YI9K/lB90zR/rN7DDpJ/
Vt/Hkk8N3l+LNPdnzV2XPSE9y+2zOvFdJE/kmaQXpe3DP/gyyeuoXSr5BbUW
rGedY6HmfyB9O8kD1PeV9LPYw5r7mq75R+Z39rvkc9XXU/oStfNKFkmW/Ye5
alvp2HY6xxTuXf1f8izq+z2961+j/VVvnedfne9kyZuxRyVfiw3Vs12vsb8k
X4/NlfyExs/j+qX9X+dqrdnP1qh1kXxd6fk8816V9+/OhW1CR8kbY085p/Tj
K9tbfOuGrJnkv27LbQOPkBx1zBjJO/ON0vrDPuFTX5H8YGX/jJ8ua7x+sBV7
qO9Vyc00PlLn7aJ2k+TAM2vsGs3pqecr1U5i/eH3dPzX+j1TY8ep73t8SOnx
yerbU/K90fjhPclLJH9Xei7PzLM/q9ZQ8hBsseQbWC+5v+FbkvdSXy2Nt8n9
TW5S346Sv1Z7R/L6+HSurTnrSe6nVh+7xLvQ/f1T+l101Zx/sd18D94ne0Xj
Q6WfgJ+RXiP97dK2Z2hu+/GanreP5HmsvRrjIWxF79zPxP7cUfpe0mewXnle
yc+pb4GO3ai0f+nJ/fLONX635GHqa4ztkj42N944UPow6WdI/5W9res1xEbw
bTS+P3sbHy39N96bxh/QPZ4mfaX0+jXGG/WlL9AzNZM+VfqjhX3o85r73+T/
wQFbaHxGYd9Uo9/fCtuLUzT3CPV9kXzUofqdldl3vaDWI/cz7Sf5BrVDdNwG
6usheWqw7eKdHCB5GpivsM1+Vdd8Rm1ryX+A62psswdLnpvZln+quePVxoE5
8EXqu5Lz67h1NX+DaCyyEhursSXqP0p6I/3WqbG/HayxQ9W3hPOC4dLarKvx
16X3A5toTjPJrwRj2z7SN5K8XPOOlX4ue1TXfVl9t2T+doujfT6+/0r8U2W8
cKzGB+S2aR+q73Dplyf7hn08QfohGl+MPdb4FPyZzn1K8sfH8K74ZglfDJTe
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
2LI+yd9Sz0BdIpj/yeh80NjSHA7x+/8BZ3wXeA==
               "]], 
              Polygon3DBox[CompressedData["
1:eJwt1XmQz3UYB/Df+h0YR6ppSAdJo4komlqpXGEmrCwiRyPFUG5hKTe5kqty
dKHGLRZJjsWu2Q4xZJ1djlKLclQ0E1uvz3z3j/d+nvf7eT/Pfn+fz/fzfO/q
MSCzf4lYLDYIkjDRn3Jpsdgu4qR4LDYQH5+KxS7iOVDI05PWhNYrEYu9CP/y
N8U30gvk+6gbRc+m9aN1oW1XO4HeHz9OPyTOUNdJ7k18NXRTMwea8m6wFkBb
nqO898Uj35/qr6rZzXOz/GV8Ff0ZcUeoy7+c9jGU59vL14G+kmcQ7TKtPP6Q
fvfjh8TP0kZYR8I6vqr0mvKl8Db6fYHvFT/J94p1KKzlO2f9Uf+D4lxxHkwW
36S2LeziX03LVd9KnwO0avAGzwdhT8UXoAzfQZ7WtLvFubQB6jLwdDivdire
CR4J+56MziGcR23ee/BRMI22Ht8AC/iu8P/CsxIayH2D9+E7J/6Upw7UwP+m
n+RZCulyX+HHobu4jLUsLNHvZ+sxntesVaztaUfVDxQn9doOa/CLcCPPKbyz
Z78U9j2cq35reJ8XN1RbkT6Zlsf3D5zEt0JzNXvw7vAW3yQoJ94Jj8p9x5MT
9kvtr/rto7/L8wkM1HtQOCO+fOso2imeZbAcDuN71S5T+7C6Cjwf0SrDWtoM
WhPabfgqvnr6vI4n6OXxfvS5+Ht6VePvi7cK74f4OZ5OMDf0oqWrzcFTcAM+
lH5A3UKowr9Un9G03/B1kA1H8AXW+dBG3Q6+/eLGqeie9VTzAqzBh+t5Pdwf
vgZQDy8NaeLHITv8Rnwh7xb8Univ9ErRxtL+EG+DrZCPr0hE+7uDryxMpCVK
Rs9fKfRKi873BFyhdeG/QKsf3lvYJ97Jt0TuHL5Zfg/eBa8IU8JvpeXTmuux
Rbw1EdW2sC7mqSy3SrwLdsKrqeiOfWbtGGaH/AC+W2Fq2AM4LL8YasqtC/eZ
73txmjgW+vJkwRGeJVCLnE0fFuYQvgg+hPV4B7VH5fvp3xvm05ZBLf6X4tF8
y+TZgeeEmSH3g9pNqWhPfw9xeF44hk+AUmF+8c6zPyXwTLhFPovWG5qHvYem
4va8u/2P0clob8IejZA7zr/ROgS+FE+Hr/WrGuYm70k1w9XeAdNoT0HpcK5Q
UY8rPPnJaJ4d5qkOt+Nz5eeE9yvMDT32hXeTPtJaMhHN6ff1Oks7Kz8mzAyY
EbRE9Nu/TUVnFc6sbiq683n0p/EH8U1qG9Ouq7sGi2iDoWW4CzwLwp3FC/lO
+x9ZPFVgeiq6H4XF+xn2NRc/k4zudx11tWE5bR70VDMOv5dvt7Uk33/iy/Re
/AXJ6MwLiu9XuGd78Ku8Z8R949HZh3egDj2DPoX2F20IbXAyik/QHpOrxFNk
Pa92WDw6g3AWhYnovPbLbxNvL/42hG9Ea/n9fBnW2bBS3cgwNz1fhVT03OH5
x4Z7Tn+Hdp2vOl5EbwdFeFbx3Z+JN+Krj48JZ4JvhswwN9QspT+g9yxaC74n
8HF8F0pE3+Twbe5Be5nWCJ+p5k64RluRjL6ns+nxMBPwrnzj5eeHd5reLRXN
2NPF8yvMsW14A95mPDOhKHxf8VnhzPFMyAvfAn3S6Q3j0QwLvyf8rvP0n4r3
IOxFZ3WzoR1P13g0U8JsmRNmQjyau2H+fk6rEe60Z24p7kF/G/8fHwM4jg==

               "]], 
              Polygon3DBox[{{1387, 896, 699, 700, 897, 1388}, {1345, 845, 658,
                659, 846, 1346}}]}]}, {}, {}, {}, {}}, {
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVHEch/G/phO5SRcaFVmCgq5EoWhZL0AtK29l3jLvMzWalo7mJXUU
RROqjZWlJN1eQ+u2LVuFm5a5EAQF8XMI5jfP9/me3zlnznCK2hO18YwQwnfz
MzOEGVNrbpqof3cihBo5Lt/ADZ7ODkEMfb4SeIAvzKHeJwzIg3iImYo5zOG3
8MiMyDF9Qs6Tb+NJ183VjfPH/Bx+0N2R8/UzfFAuwU39sq6Op3k9VuKKrkFe
ljsxFQvhD17nw7iGP+w8lP+aKv4U3+C63V+u28Xr+ShetPtW/q3v5i1yClfs
Vuo2eQ/vxH92n8tX9Nu8V+7FLbsFWSFMR+ebajOg/2avTf4qt0bkr1yjn0/x
L3hVNynv6Xv4hPwJL+vLo/+KPzD3TYXuo2Ol+jHeYZpNmb5Qt+7YM95uPuvu
4nn9a/2IfM9s61d1TfJLfSNew12/v0pekp/ge890YLeCL/J5POO8IXlfX8wX
5Gmcs3tal+RneTp6cXQpyNY/4rnyfPRs+kvuNczj/BTu8Fn5AiZ5vyyGodj/
9/UYuXRPOQ==
             "]]}, {
            Line3DBox[{1250, 1643, 1532, 1818, 1443, 1281, 1441, 1828, 486, 
             1442, 398, 536, 1147, 397, 448, 355, 1805, 1490, 568, 569, 1701, 
             1817, 1531}], Line3DBox[CompressedData["
1:eJwVz7kuRGEYBuCPzEatRSYxwhjXYYkoZibWmcYFcAW2ho5CYWt0qDEjERFx
G0rGMraWynOKJ+/7/f93Ts7JL62Ulzsios5PKuI4HbFNlRe6MxE92YgT2TB/
2xnVm3qFLn2WXjtnsuXsy05JH6FsPpVF9zMyR5ZPO0U5zKada1mjziILfNj5
kxvup3kwt2k6u5fvNPQ7+dgZcaXf6m9c6jfylXXPXpj3mEr+y9mQfqSvca6X
fN+87GfSWcvOoP7LIavO+uRc8q+Mm5/tFJJ7fYK0niFFlSf3ee8d0Lfcj7HD
Afvs8g8h6jHE
             "]], 
            Line3DBox[{1282, 1839, 1641, 1639, 1640, 1491, 1694, 1806, 1283, 
             1333, 1251, 1332, 1764, 1331, 1399, 1562, 1563, 1835, 1398, 1564,
              1335, 1445, 1588, 1765, 1706, 1444, 1284, 1448, 1707, 1756, 
             1589, 1447, 1285, 1450, 1819, 1702}], 
            Line3DBox[{1286, 1690, 1058, 1533, 1534, 1418, 1569, 1493, 1535, 
             1820, 1287, 1492, 1288, 1494, 1181, 1757, 1289, 1334, 1290, 1182,
              1766, 1336, 1400, 1337, 1781, 1183, 1341, 1446, 1342, 1807, 
             1184, 1611, 1291, 1449, 1292, 1795, 1185, 1495, 1293, 1451, 1294,
              1837, 1630, 1186, 1496, 1453, 1796, 1295, 1455, 1536}], 
            Line3DBox[{1296, 1791, 1537, 1419, 1570, 1497, 1538, 1667, 1808, 
             1452, 1297, 1498, 1187, 778, 1338, 1298, 1188, 1767, 1339, 1401, 
             1340, 1189, 1770, 1345, 1346, 1769, 1190, 1653, 1736, 1191, 1590,
              1592, 1591, 1838, 1631, 1192, 1612, 1299, 1454, 1737, 1668, 
             1193, 1499, 1669, 1809, 1456, 1300, 1632, 1194, 1500, 1758, 
             1670}], Line3DBox[{1301, 1539, 1420, 1771, 1571, 1195, 1501, 
             1502, 1457, 1738, 1504, 1593, 1503, 1196, 1671, 1768, 1343, 1302,
              1197, 1680, 1782, 1402, 1344, 1198, 853, 1349, 1199, 1714, 1654,
              1739, 1200, 1655, 1740, 1201, 1656, 1741, 1202, 1594, 1595, 
             1742, 1645, 1644, 1203, 1708, 1829, 1596, 1634, 1633, 1204, 1613,
              1614, 1833, 1458, 1636, 1646, 1635, 1205, 1810, 1505, 1303}], 
            Line3DBox[{1307, 1552, 1425, 1773, 1377, 1550, 1551, 1549, 1473, 
             1732, 1675, 1513, 1375, 1279, 1376, 1731, 1674, 1373, 1278, 1772,
              1374, 1366, 1372, 747, 1371, 1233, 1752, 1663, 1232, 1751, 1662,
              1730, 1231, 1277, 1650, 1649, 1841, 1230, 1276, 1617, 1729, 
             1711, 1229, 1275, 1616, 1728, 1709, 1601, 1603, 1602, 1831, 1472,
              1306, 1470, 1691, 1759, 1471}], 
            Line3DBox[{1310, 1792, 1556, 1426, 1386, 1554, 1555, 1553, 1480, 
             1735, 1677, 1514, 1383, 753, 1384, 1309, 1380, 1775, 1666, 1381, 
             1379, 1411, 1774, 1665, 1378, 1235, 1753, 1664, 1734, 1234, 1280,
              1618, 1606, 1832, 1607, 1609, 1608, 1478, 1308, 1801, 1476, 
             1605, 1604, 1477, 1733, 1676, 1474, 1475, 1760, 1692}], 
            Line3DBox[{1311, 1693, 1754, 1678, 1236, 1515, 1761, 1312, 1479, 
             1313, 1237, 1712, 1762, 1314, 1619, 1315, 1238, 1776, 1387, 1388,
              1788, 1239, 1389, 1390, 1777, 1240, 1316, 1382, 1317, 1778, 
             1241, 1318, 1385, 1319, 1794, 1557, 1436, 1582, 1516, 1558, 816, 
             1481, 1320}], 
            Line3DBox[{1327, 1755, 1484, 1326, 1245, 1517, 1815, 1325, 1393, 
             1324, 1244, 1780, 1392, 1412, 1391, 1437, 1584, 1779, 1583, 1395,
              1559, 1394, 1560, 1823, 1243, 1323, 1483, 1322, 1763, 1698, 
             1242, 1321, 1482, 1814, 1679}], 
            Line3DBox[{1416, 1790, 1529, 1417, 1330, 1413, 1568, 1651, 1789, 
             1528, 1488, 1489, 1440, 1530, 1642, 1840, 1652}], 
            Line3DBox[{1421, 1824, 1206, 1506, 1507, 1459, 1509, 1597, 1508, 
             1207, 1304, 1347, 1743, 1672, 1208, 1681, 1783, 1403, 1348, 1209,
              1682, 1784, 1404, 1350, 1210, 1657, 1744, 1212, 731, 1745, 1214,
              1658, 1746, 1216, 1659, 1747, 1218, 1357, 1748, 1686, 1220, 
             1687, 1749, 1360, 1221, 1621, 1797, 1713, 1460, 1361, 1222, 1710,
              1798, 1615, 1461, 1638, 1647, 1637, 1223, 1811, 1695}], 
            Line3DBox[{1424, 1822, 1548, 1274, 1600, 1547, 1469, 1512, 1813, 
             1697, 1369, 1273, 1370, 1727, 1673, 1367, 1272, 1368, 1726, 1688,
              1365, 1271, 1787, 1410, 1359, 1228, 1270, 1725, 1227, 740, 1226,
              1750, 1661, 1724, 1225, 1269, 1723, 1224, 1268, 1722, 1685, 
             1575, 1267, 1648, 1721, 1684, 1467, 1266, 1599, 1830, 1468, 1355,
              1465, 1265, 1800, 1598, 1466, 1305, 1464, 1799, 1660}], 
            Line3DBox[{1429, 1793, 1587, 1430, 1397, 1428, 1561, 1427, 1249, 
             1827, 1526, 1610, 1527, 1487, 1525, 1803, 1700}], 
            Line3DBox[{1519, 1802, 1699, 1485, 1328, 1246, 1816, 1520, 1521, 
             1486, 1586, 1585, 1826, 1247, 1438, 1439, 1396, 1523, 1522, 1804,
              1248, 1329, 1518, 1045, 1524}]}, {
            Line3DBox[{713, 1840, 652, 1155, 1156, 950, 1108, 1828, 715, 654, 
             830, 951, 1765, 1109, 717, 656, 839, 1807, 1011, 719, 660, 1736, 
             721, 666, 1740, 726, 673, 1746, 733, 1718, 681, 740, 690, 1752, 
             746, 696, 891, 921, 1774, 751, 701, 899, 1777, 900, 755, 705, 
             901, 1780, 905, 1085, 758, 708, 1043, 1804, 1044, 997, 998, 761, 
             711, 1793, 939}], 
            Line3DBox[{736, 1799, 968, 967, 1023, 1022, 677, 1825, 729, 1148, 
             924, 857, 932, 1096, 1824, 931}], 
            Line3DBox[{743, 974, 1759, 973, 794, 684, 1800, 503, 969, 465, 
             466, 1573, 286, 858, 372, 1597, 501, 408, 410, 930, 1771, 1095, 
             929}], Line3DBox[{762, 1165, 1051, 1817, 1000, 764, 1005, 1806, 
             1008, 1007, 829, 769, 1757, 834, 770, 911, 837, 1767, 842, 838, 
             663, 853, 916, 854, 670, 1744, 730, 1716, 678, 737, 1723, 687, 
             1176, 1841, 1177, 1178, 1179, 1180, 1129, 1832, 1128, 1144, 1145,
              1146, 1762, 987, 813, 990, 1035, 1036, 1763, 991, 819, 993, 
             1802, 1040, 822}], 
            Line3DBox[{766, 1060, 1058, 954, 1009, 953, 1012, 1808, 776, 1066,
              777, 1064, 841, 1768, 786, 849, 787, 915, 1783, 851, 860, 852, 
             1091, 1836, 918, 1092, 863, 971, 864, 1721, 1172, 1173, 1122, 
             1125, 1123, 1728, 1138, 1139, 801, 977, 802, 1733, 980, 1031, 
             981, 1754, 810, 984, 986}], 
            Line3DBox[{773, 957, 1796, 774, 958, 1013, 1809, 781, 960, 782, 
             1119, 1829, 1117, 1170, 1118, 676, 1749, 869, 1153, 870, 1720, 
             1154, 920, 1093, 871, 877, 872, 1726, 880, 796, 887, 797, 1731, 
             889, 806, 895, 807, 1735, 1029, 983, 1033, 816, 1081, 817}], 
            Line3DBox[{783, 1758, 961, 784, 962, 1135, 1833, 788, 1134, 789, 
             964, 1797, 1149, 873, 1067, 874, 1068, 1834, 875, 1069, 792, 879,
              793, 1727, 882, 798, 888, 799, 1732, 1026, 975, 1030, 808, 1077,
              1792, 809}], 
            Line3DBox[{818, 1814, 1034, 988, 812, 985, 1761, 811, 1032, 982, 
             804, 1801, 979, 803, 1143, 1142, 1729, 1141, 1140, 686, 1722, 
             866, 1099, 865, 919, 1715, 856, 862, 855, 1784, 917, 844, 850, 
             843, 1782, 913, 779, 840, 778, 835, 1059, 768, 1061, 1820, 767, 
             1010, 1006, 1055, 1166, 1839, 763}], 
            Line3DBox[{824, 1045, 709, 759, 1037, 1815, 820, 1038, 706, 756, 
             902, 1778, 814, 702, 752, 1775, 893, 892, 697, 747, 885, 884, 
             691, 1725, 741, 682, 1719, 734, 1747, 674, 727, 1741, 667, 722, 
             1133, 1838, 1112, 1161, 661, 1160, 1159, 955, 1795, 771, 657, 
             1111, 1110, 1756, 952, 765, 1157, 1167, 1054, 1818, 1053}], 
            Line3DBox[CompressedData["
1:eJwVzrEug2EUBuBTpC4BiUU7ugKd6GBTbd1BV8IFGBqbaJpKJARBR0OVThaD
RCINIjqoNLF16mIgTQwkHsOT9/3O+fL9/0xpo7ieiIgCp6MRl5wxxzFTYxG/
yYj2SESFK7NFs5bMMK1v8mBXZV5foGqXlbPjEWX5ZFf735sPvbcrn533yOkD
sxf9kEf9Vdbp6O/ynK7ely3e9IG8pqd/yBu2vPXjfCQ/nW9Z8v1lvsxzcttu
VQ7t7sjrKf9ZlAV27PflAWt8u3PPhJ52b0VOUnHvhCYXNPgDfEQyRA==
             "]], 
            Line3DBox[{937, 1076, 1773, 938, 890, 1028, 1100, 1027, 972, 1813,
              1024, 1025, 881, 1073, 1072, 1150, 1821, 1070, 1071, 1017, 1137,
              1136, 1798, 965, 790, 963, 1016, 1810, 1015}], 
            Line3DBox[{978, 1760, 976, 800, 693, 1127, 1831, 1126, 1124, 795, 
             1164, 685, 1121, 1830, 1120, 970, 861, 1097, 1098, 1785, 947, 
             946, 859, 791, 1743, 669, 723, 848, 785, 1738, 1014, 1115, 1063, 
             1062, 1065, 1791, 775}], 
            Line3DBox[{1018, 1811, 1019, 966, 1021, 1020, 1812, 1074, 933, 
             948, 934, 883, 936, 1075, 1822, 935}], 
            Line3DBox[{1046, 1803, 996, 823, 995, 1042, 1816, 1041, 994, 903, 
             992, 1084, 1823, 1083, 1082, 898, 989, 1776, 896, 699, 1734, 749,
              694, 1730, 744, 688, 1724, 738, 679, 1717, 731, 671, 1714, 724, 
             664, 847, 914, 1770, 845, 658, 833, 836, 1766, 831, 910, 827, 
             1764, 828, 1087, 1086, 908, 1003, 1805, 1004, 999, 1002, 1001, 
             1050, 1790, 928}], 
            Line3DBox[{1056, 1819, 1057, 1168, 1158, 772, 1837, 956, 1113, 
             1114, 662, 1737, 780, 959, 1162, 1163, 668, 1171, 1742, 1116, 
             1169, 728, 675, 1748, 867, 1152, 735, 1786, 683, 868, 876, 742, 
             1787, 692, 878, 886, 748, 1772, 698, 805, 894, 753, 703, 949, 
             815, 1794, 1080, 1078, 1079, 1130, 1039, 1755, 821}]}, {}, {}}},
         VertexNormals->CompressedData["
1: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
3zd28nVXWdy3CSUzD+O+bdTxCOH7zJasnTUV9/mrUeE13Oebl4dEv/tezQLf
buyQ9q0KflxW3zRozmtwcr+ZrJSSCfPivFUaRiSwKNijGrylEa51+Hgy5O5L
KHOSic21f8b0E3QGnT/WBNvSBs/H/TluMXcd3x+Wo1V9EfdH7WlMHh/PJgVK
v8TxOvG9B+D4ApNJtXx+NrWn/iicPyDlmzLO/zbt55OvPmWgdWKOjs32Qma2
7LnfjrgamJx15xE/n2BnqBLFzyc7uNJNC89nOOz7iOd/ksGPg/w8M1W3rF/n
eeKzMSV4/n1dEnfw88+GlW6/guff9ofLPDz/a++/dsHxV6/O3oDjpQ68uzl1
Wxo0l9lc43qArXjs2oJ6YG1z97eoN5KvHP/E9QbT+VHminrDT6yP6NC/9BGN
oj6iT6hfaLNYv9BU6oM9WCxuK97XPZL6ukdR//b11L99PfVv196zPavvOCEU
2Z+vN7sqYDpRZ+0XOxSA3waZFENhMQyY1et7on4F02w5qOQmWQ2jJn0ZaSQs
ZupX3etR/mVMfj+UXy3t2VVqnJCtOCUbj/M03FCai/Oklxk3Z3M9Vzqu92YD
/q6Pf7TKzcS1FOSoP09/ejedonfTmNT9k3OWVTGP8esAxytOPrIAx6+c1fV0
wm2vF3q1T8dXjnzH+in4FEm/qoK1poWjzH5UsqFeTYf7Iu7UNXlOr20xIFCT
yDN34X7qiM/yj25VwrZMTatmnSpoJ15Cb+IlNCNewkjiJUwhXsLuxEtoT7yE
WcRLaES8hFnES3iceAnHEi/hP6Q3LMX0hhTph5di+kGd7vV1sXu9h+5vV7H7
G0D8g3OJf/AG8Q/uIf5BQeNv/sGXxD/4lvgHhxH/4DTiH7Qg/sFexD9YQfyD
ESealshuaWJhN6s63lOSh/P1/k4HtJPhkJJklM1OASyRdGnv1VDBom5szdhc
Wg5lestTvgypgB+u+Q5KSkVs/e4rBz/frYYL3WN3KqoXwYMOJdD3bBa7+Nxj
uFxBHWwy7PK184MseNhQf9vCNJHlp6+Y+mhGI2yQe1RdZhILnZrO7G3Kj2YZ
T2qu1u5pgihrPVPvbxksI7G3+0DHeCa1qP7bKt9GeCDb5Yq6QQG7dmfKLou6
DHbpqNnG1MP1sPhM+tL1M8rZEROZd7FSBWzzhubeAzK4nz/hi1/Rqyrm+mPk
3i6Z5WxhekTr4fBK2NcSnH94ioh1HVh4dcgWISutcN3eVpUJ/Xo8CKt8WQ4h
dr2TfO2L2UT/lOyRvtXgbrv4zoH3+dA0+PHw0F05bMqFtDMnJOvBwd/xyL3o
VEjsJ3fkc9MrpmkZajz5UCNIzrJJtZlQyhYkD/IJOJzPIk5MSnJsegenv66/
ub2ykh1K0NTWGV3Ophkp3pFREcCkynELJu7MgcTKUYvee+axmxM+NUa710Pd
zStPp5oK2O7IZWqD9wlh+uxRl1S3F8CVpQMlrPNFMK7u/qD+H4Vg9LHSvVU9
FjoHJx+ImF4Fip4qNbCwCpy/GcZoJ5bDicjADhYuFey896uueC9CXFSN8F7k
BE/yuiUQss+yQvVc7m+MWxZjWHAuC8a+OB+FeOkJiHGagHjpKYNr0l9iwZx4
1qKIZ60D8az9jX8tmPjXDIh/bSjxr50juR7JFUheQrxszcTLFk+8bFUk/0ry
mP8fvjZPkpeT/ADJh1NdQwDVNYyhuobqK7Z3ep2tBtUm1V5WskLoKtPnemR1
LDw0WLPF+R8BKIxM3bHpciX06blmQ4xGOUwf/mRx2Btudx6rfiy/VALbmmHa
w+Rq+Oqv1vNkRRnrF9fjw8rgEniw6tFot4RqCF8RHiulJmT1sUHZeawKFgaO
72c0txhCX955vcRRBP0uRfRbZCiCLhlNd91LY0G3g9MTPIfS/ZP9+TmEnf2X
lOA53FU7uhDr6KuPWRm7Y/zrZke1jVh/FN3tCD/nMFbF3Iafc9jat7usKz/n
Y9ImqYf0EoFqpyGVBwYI2dubRy69Xp4DVhtNun0IFUJLiiii/R8B6yE5U2vv
8XxIjB5ewNfD4mujuvD1sNIf+Q9wPT0pf76J8ueNKH/+ceuZXXwfWK5Dfd+K
SyVMQ9ZQGfdhqHVRKN9PJjwn7ML3k51UOXkL93PC/OqrGHfWV0rfldNXxJYt
v82M/z/4wrxJ7kXy9SQP/AuP2BmSryL5DJK/Jn6xds3f/GKfiF8s4y+8Y4nE
O/aQeMeGEO9YMskfk1ye5JmZWR1VbtWw2mg92eA3VezS9Bd9ij/Hgp7SCmd+
v2DgnhszcrGfZ53mArxfLvorbPGe2th07DVrYRXbeWVvKN7TLZVb49F+qWgN
mc7vKZvl0M8Y76n0dskPXM4+B34YhfJHI3vqoFxB5ekZPg+7/2nNJ37fWb/W
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
          "]]},
       AxesLabel->{
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]},
       BoxRatios->{1, 1, 0.4},
       Boxed->False,
       ImageSize->Scaled[1],
       Method->{"RotationControl" -> "Globe"},
       PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}, {-0.5, 0.5}},
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}], 
      GraphicsBox[{},
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, False}, {False, False}},
      StripOnInput->False]},
    {
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
2hv53kUJJCjgzvY7S3zJt6tJ58/WvCY/0j9Nl84vrLpXq5VzfY+v239WrTl4
ziyGHCrTHPA2LxKv/x4485Oljj8ZX1KlQmYcx7q19k9pLZ137D3fZtItrk/y
dXt0UsOH5RHRpEO5pni5fQrW57ET/sZ5fZNI52sWllSSiXWY4tT+/tQeKaTz
TdsO755dw3o76Ps2Y4z+FfJ75+i0KTqFWFcjP+jXH/JMJ9V15XaZwcVYP8Fn
XzstrJcQq63qbUYolmKdPLaWP1ZglEmuLrh0V/FxKdaDdevc+PDITHLkn9Fx
3pPK8Ln3aIxr99Y+k/SNyDl9oX0ZPt/onIk6Vl8zSGtf3R4NvUvwOdr5r9Lr
FXiZnLgvKn2yuwCfl7txTn+tWO7z6kZtmWyWhc9l4r3DNdcPbRZbakw7w/lo
5D8veO6j+owQomsattQkKR75r+u2SeNMHJHY36KWnmUnkP9+47H97LbbilcU
ZNlJ+yfPf8XlaYsHLp4vWWr+yu5RTiryH37T2lV7+1KJuaN517eB2cj/5eVO
ZQse20m+Td4ktpp1HfkvOSq+HmWzRpKo2zhkhFIx8j+0+Y1Vm5drJZfDlqzT
dyxF/pma/hOz85wlx085JyhVlCH/YP9lUZ2i1kv2XdU265tRjvwLGz6VPW3n
Itl6z2/aysEVyH+Ip0jBu3i9pMXJxXGGL8uR//fDrgstJzpLPhts/TFrchny
L9Iv0YuJd5D8qh34Ttmi6M850hu546XiMsnIA9P0C3VykL+yqd6H8VPWiHeF
LPmXy4vIf7LzaIu3lWaSH2XHJvfZeQb5B3gnSRbo+FPJm68xYkH9L3qZ4GKh
opQxnc1LkH+t79KxKyOiqfUX74ZlgvpPO3KZ5PdNouOzj/YU1v+lHW80THuk
0HeK79IaBPVftXumyTj9K9RopXihsP5HxT48c8QznY7K3vWdCur/Um3Y7MX1
Erq0y+Oi4YL6T1E3Ci80yqTuptvDhfU/0LL47NHITLpUPtheWP//pE5rX2+f
Sb+N/OIorP9b9i8UrL9m0N5vrOPqBfXfNTU7RT3wMh3kn+QqrP+n8zQGaccm
0c6T3hkK698u1Lime6B6xtUQ1j95/g+7D1vxLiOETpm6QUFY/6+C5++wnh5G
XeP7aAn7ptmbyE6rOb84qa/7EGH9i3p3qOT6Iw2qvmfhLuiPT82+nOP6II28
9dujvaAPtgy6GcT1O/o6JHNSpKDf5ddsi+P6Gp193HKHp6Cv5bby2f/zbAGt
rX5aeUTQv74qvDHqWX2DDlPqENNJ0KfsHp67wfUjOmJUfv1LQT9qf6hIs/Fz
MX1m1PPCUEHfGTdN7SfXX6jx/DWTBgv6i+vO8B9cH6FXNN+uMhP0kXlmI1zr
BuZRizy9L8GCfpFJzmZxfYEOddj1cqCgLyiZxh4nnC/cci9ZS1j/IztP6Zpo
FkOf3zDf9kag/5nWiYmcn6G+fvnaOwV+Zplet2TpPCWgbsnaCoH+n7A8Yc75
FtrnVsx+bYFvSZB/4Mv5E7o0cMzxDwJ/Mm1xx0DOh1Bn18evRwh8SLzhChPO
b9AxCpbnpwj8Rq35uzLOV9CLU4+8HSfwFXNpTgXnH+ir8WGRrQX+QcMlXpvz
CXSt68WndwQ+YY7dyQrOD1CjfnJjegr8QBU5KX/LuZw6Lh/Z6lfln75/Llru
G9ffqXb7qovnBP2dhI+8x/VxGrUyOadR0MdXulVe4vo1Nb1XPeaGoF+73e23
QZp/PP6Z1Jgm0H9l2wu6XL+m045E6t8S9GuevyfjT3n+jtb2p6T5fz+Z2qpa
4Bt5/t0ZfyrLfyHjT2X5OzD+VJb/cMafyvJPYPypLP9HjD+V5W/P+FNZ/uMZ
fyrLfxXjT2X592H8qSz/cMafyvI3Zvwpz39HvxNe0py/5d1nz5sC/8PzN2b8
Kc//DeiPC9OfZvx9GH/MrWLQn0CmP8j/GejPCaY/yF8B9OcV0x/kXwD6M4vp
D/LPA/15zPQH+X8H/RnK9Af524P+DGf6g/w7gv7UMf1B/gagP0ZMf5C/G+jP
ZaY/yN8S9Gcu0x/knw36M4TpTzP+6xl/zKe6oD/PmP4g/0Dovxms/yL/laA/
B5n+IP+6v/sv8s/4u/8i/yvQfxtY/0X+j6D/TmT9F/mPgf47kvVf5J8G/XcJ
67/IP/Xv/ov8B0H/XcL6L/JXgv77lfVf5H8P+q8667/Ivyf0X03Wf5H/s7/7
L/LfBPqzjekP8n8M/Xcy67/If/XAiIEC/4n8Z0L/NWb9F/kHZ5fZCvwn8t93
22+DwH8if5fco+UC/4n8f55WKxT4T+Q/bF9bG4H/RP4tkpONBP4T+ZMeQdEC
/4n8SzxGVgj8J/Lv3+DSSuA/kX9Wm38XCfwn8k/SOjFW4D+R/80hjp4C/4n8
VaH/urP++2cOtrztfIH/RP61kL+MWf5C/pMzKl0F/hP5+0H+UmT5C/kfhPzV
heUv5B8N+UuF5S/kvw3yl8KupvyF/HtC/nrK8hfy3w75y4blL+RfCflLwvIX
8p8O+SuE5S/k3xHy1wCWv5C/P+SvTix/If+5kL9OsfyF/B0hf3Vh+Qv5f18/
9bHAfyJ/I8hf+ix/IX9rmNucZ3Mb5O8K+Ws1y1/I3xvmMwPZfAb528EcRp/N
YZD/c5i3vGbzFuT/H8xVZrO5CvL/F+YnOmx+gvxbwpxEmc1JkP9YmId8ZfMQ
5K8Nc4/HbO6B/O/CfKOWzTeQvy7MMVLYHAP534R5RQCbVyD/eTCXeM/mEsj/
hwnLX/tY/kL+rWD+cIzNH/7UP8zTTNk8DfnPgPlDMJs/IP8rMDe7xeZmyL8f
zMcIm48h/wMwBytnczDk3wfmXeFs3oX8HWCudYzNtZD/XZhf3WPzK+S/AOZU
g9icCvm/gnnUdjaPQv57YO60ic2dkH8izJdmsvkS8u8LcyRrNkdC/nNhXqRs
0zQvQv5jYf6wgs0fkL8E5kWZbF6E/OUr2Nyh9XvHAWfiZkp4/i1gbmnM5pZ/
/j4C8yUfNl/C+x8vYbla77bCvLeV1hLZ+x/4mKjB3V/M33/rtzbO0ry95lPN
SWtO//j1tHbJBdJcXTw47C7X5zFfONMJPyRcrnbudDOD6/OYLzon6h+R5ur3
rauvc30e80Xq3Jyh0lz9rIVnJ31O5/jnu+ps1TVprp79K8kvkNM5/vl2Xpyb
KM3VOj/WG9tyOsc/3/fk8TZprs72WNrzBqdz/PO12mZiJs3Vmr/KRhzjdI5/
vj/dlWdIc/Xpbsf2cX0e80Xg0bfrpLl6jcH4eq7PY74wX+EwWZqra0wb3Hpz
Osc/337TQnpJc/WlRXPjuT6P+YLn7B69woLjLOY5D5v0qHIql6sD7oQOfM/p
HL8edlH92kMuV3vPnHaT87nI2bbs/fXNXH72r63oeIjTM57z2q1BnaX5edyv
ca2LOT3jOa89dTzlBJefvyo9KpHqGc/ZovG6tjQ/W51OfS3VM57zgT7j3KT5
2dDkxD3OzyJnuzu9xkvzc+SrsCDOzyLnhz03eUnzs/+RWI1unJ7xnN+/mGIk
zc/fjfI8OT+LnOVTlCq1ufzckPNsXgSnZzznj6uMWkrz89yGRHNXTs94ztkZ
FdHS/Dxh2LkUzs8i53JHP3dpfnb7mKvWyOkZzzl46lItaU5+tUx3AedbkefN
3/WGXlxOnjU5L0OqWzzPMP+MEVpcHj7V1XepVJ94nqfWWPk3cnl4baNjqFSf
eJ773770Gc7l4aQCh3ipPvE8t84MajOZy8NK/0iWSPWJ5+l6wLrjWC4Pmy25
UC3VJ57nxoSxQQpcHj7ufP6xVJ94nkYVQeW3uTwsP26hvlSfeJ7F5HivHlwe
3nwpqVaqTzxPld0e9T+4POxZsqULl8+QZ0JB+pUzXB6eGri57SZOn3ie0zQK
NN5zedhb7k2DVJ94nh279VUv5PLww74v8qT6xPM8dLh1cDmXe9cMD5om1SGe
Z7RqRLfdnO5PXRcSKeTp0ePgi8Gcvs8JTtUX8hwrUUn8yOn7M2XTLUKeWp/v
zR7J6XvQu7OeQp77UrstMuH0/dyq9jpCnra/i0sNOH0PNRiRK+QZd/PHmbac
vit1qswV8rygXP7lLqfvExI+9RDyLGyxbKYap+8DVI/kCHk+mPC0528u3+ol
FjRWCHh+N/mZmMTp+6ALe19tFPA8GhO6/COn726jN2YJeYaERcwq4vT90fWs
GCHPqMOi/yo5HR9+oFRNyLPPsX5+Uh/z5OFSHeF5H/g6s0aaV59bGh0LEJx3
36H2r6R59XtgqmWR4Lyn7ntcIc2rLXqkLxKe92kmdbekefWrqtEK4XnvEnF4
jNSv1GU5EeF5TzH9+o/UrxT2IvU9BOd9pEm3xVK/EqN5ybWr4LzvDnujIfUr
G6vLi94LzvvIT7kXpHn1cemM6OOC8z71SWixNK/2VPVJcBGc9xfFwdOkfkXP
LklHeN517DxspH5l1d7AVe8F591gpkGpNJeSdKuKc4LzblH9qkqaS1U6ed63
EvSpG08tukn9d9kzraAVgj6lnvtlnNR/91aLysoT9Kmj6+Jqpflz2ufv200E
fcra7Yqf1H/bt+2zc6ygT1lXDhkp9d9bZ3S8eVjQp27m/34hzZ9eBTm2iwR9
SnlOz6tS/y1J79+rUNCn3Hyf7pX6b73E60OOCvpU6xdVflL/vXfeN9+3gj5V
b5hfI82fAcGBPRcI+lToxU+RUv/9un/gx16CPtVeZGYj9d8DzBujtQR9qtGk
ja7UZxdYZZ5sEPSjGsiZ+8Z17C72nyPiebafwfJkTPr3bc/HOIh4nmWQJ7vG
T6qa7rlBxPOMmcLy5Ka1lsvulW0R8Tw9RrM8Obbbg7qObT1FPM+h4SxPbt+Q
pOij7i3iefaKYXmyS0nCEJv4nSKep2Iay5MfNIsNfBN2iXie8vdZnuy3TWW8
0oDdIp6nD+TJgdk+l8yqdol4ni6GLE9uSp7o/KvjThHPM/8Jy5M2Ix+09iQ7
RDzPK5AnA+u71vQe4ibieeaVs9w4deP9pJWutiKe5zyoz86sPqlsfd5k9Yk+
uTfUpxqrTypbnyasPtEn20B92rH6RJ9sA/W5idUn+uQSqE8PVp9Utj7TWX1S
2focxeqTytbnHlaf6JMboD73s/pEnxwG9fmC1Sf65A5Qn/1ZfaJP/gD1mcfq
E/1wP9DPx0w/kacm6Oczpp9/5h6gn1+Zfv6ZO4F+/u7epJ/Iczro52emn8hT
BfTzCdNP5HkJ9PM600/kOQr0M5rpJ/LcA/q5gekn8tQF/axm+ok8TUE/uzP9
RJ4vQT91mX4iz5GgnyuZfiJPQ9DP8Uw/kWcG9PcprL8jz3+hv89m/R15Tob+
Xsf6O/I0gP4eyPo78jwB/f0s6+/IcxP09xDW35Fn9t/9HXlm/d3fkec96O8a
rL8jzxd/93fkqWrK+rsm6+/IMxn6+wbW35FnzN/9HXlegf4+jPV35BkN/nMO
85/Icxv4zxjmP5HnAfCf65j/RJ5rwX8mM/+JPOeD/+zC/CfyNAP/OZ35T+Rp
Cv4zgvlP5DkE/KcC85/IMwX8pzvzn8jzxy7mP72Y/0SenuA/TZj/RJ5a4D93
Mv+JPD90Zf6zmvlP5LkW/KcT85/I8wDkIz+Wj/7MPyEfHWb5CHkuhXxkzPIR
8lwE+UhOuSkfIU8zyEdLWD5Cnt6QjyaxfIQ8rSEfJbB8hDzLIB+FsHyEPJ9C
Pmpl3JSPkOeniywffWf5CHm+hHy0kOUj5HkZ8pEJy0fIMxfykSfLR8jTH/JR
I8tHyNMVcv0BluuRZwrk+jqW65GnI+T6nSzXI8/2kOs7tGnK9cgzCXJ9q5ZN
uR552kKud2W5Hnl2hFxvwXI98nwLuf42y/XIcy7kegOW65HnF8j1GSzXI8/9
kOsPsFyPPCdDrv/Jcj3y7AW5vpDleuSpCfk9keV35KlXp7XR+cNB8l/+u/Jb
BxeT3OkVBjFvv1HDsVd+iRWPkZTRRSVRIx3IKLlP0fOd35LRcL3p9abrKX+9
PlyvrNd0PeWvr6UlF6a0dRE7/xg0tNPECfh3RuOqnmueKQaQ0bOX31RSnCDh
7+NwIORxhOEOccFO3y+ag6bj/Gem/qqI2eJjZK33y4ree6aJ+fvz91m0QV56
HzF/H0e4z0p2H/w73WPYz2m2H5w78fd/VXLgFnd/CX//qJnP7I19s0j3/et/
mnk5i1tbLjK1c/pADVO15K/mFBPNeIMOifLbxNYevhlRJi9prtzh8P5lhWT/
7b2/Bt26Qvj1GfC9xMXwO+LZ8L3E3bfcpv/sUEHOP0nZM/WNl9ikb77duqpL
5PWVldo6LW+QZV8PBUeucRdfVWmffdvpEWn/tOLwpnnXSVWR96EX61IJv77B
Kayu7EA28VLu+t1ycj7+v7lHag+8vp1J5Nzb6qepX8PrDT+SuhHbT5NpNywn
JioU4/Wn1I8p6baPI+H6K/+rtCjE6+UaDWfpbj9NnX5vVhRe3173zOAx7eNo
pP+AROH1DaXlgeUHsmmIufU64X6m+z8e9uZ2Jl39TnT1qmA/s5xKf3DcaJVj
soOmgJu1VefX3OelR9p1HvBc8Hl9rjbxp96F/ud2O3iK+Otfpjdxo0PmqNoU
FnqI+Otnw/3vs/tT/nobuH8Auz/lr38H+w9i+6ey+1/F9o/XdwU+jowPXt8b
+JxgfPB6VeBvzvjj9buA/zHGH6+3h+e7jz1fvD4Nnm9b9nzx+gyow9OsDvF6
eaifr6x+8Hq+zguVb0nrXCJb5yOePJLWuUS2np/A92xl61nneV8frp4lsvW8
/PLgEK6eJfz/q/9gTLXu+iKSsLb94xd+yfjcRTv7L29ZUkAu7R9o/v1OIj73
X6qOOrFl10jq8myXNHEuXl8zy+TbhqIcMmNAbOe7i7Px+h3Fhg3BnCuYddKy
a4uUG3g9/epbopR+gZzeaxgrGlCA1ye5Xl6+8kYANd/vHLDm3J86z/v8YHHI
wIN01cHUnPtv/9T5vVn+u67mZFDt1Udm1+QV4PWnR5Uc12mZRn+72iX+tzwf
r78f/Cb3UvB12ud4o4ZVbiZevyfxp+m1WXl0kt62n0VOErx+0MFjD4+vLabj
P5i3OSWJxOvlOv+3+NPFQqpVVzipdc8TeP38X5P7jV5fRH8uvaL33C8Zn7tq
QZcIjicdplRp/OVOIj73dp8eXOd40h6nN9+8Ks7F6zMrwna5FeXQ4ecPb72z
OBuv17q8JSCUptDBWRtz5VJu4PUZXppmXdIv0IId9Qs5nnj9816lqxbfCCA7
lHVOcjzx+pBBnm0PDTxI9Lq9LOd44vW5frZyV3IyyGqNqCyOJ16/teSQeETL
NLLnq4pq1fJ8vD7r49kpHE+yt6hPFccTr19yau2d3Fl5ZNdLX/ObTpI/998y
JoPjScSHMj3iJJF4/bys/RM4noQM07Zv1/MEXm9rekezj2UWCY4+Mzj9+RHC
nwu1EXFGZVmZpLFz+o+GM9G4PnvU+KRV39LJAuvYdQVZF3D9e+N74yspV8im
8+6+jfdTcf0a7Kcb2w8+3wL4XNvY52rWR/acPLRA2EcuwO8LjsH7E/j1RFiX
yKxfgt99LIP3APDrh9fcN/KpLCe77pvp302JIfz5Xej2NmuhLnfe/Q7b1224
hOvjfCe33+heQuJ+Rf3c5nYN1w1vv5xw8fUN0t7RxrrtiwJctwTOKowz1q09
PK817HnhulbaujIj32RyXuHB8JO2EuTmufnZwfUn4kl0/+CuDXMycf0W1M8K
Vj/ILRY+71qZz5sk8zt9fn1k7YOYHx1ySDf/jxPStpfi/hWVDxoHV6aR7lWn
rN9eLcP1AKhPT1afuP/PK4ZaXvq8i0wxLn+Ssi0L96kd+iJA8nkX/a734b5w
vav6X+cF978f9ukss8+t8Hu0i/D7d35d9/qnpF55QcR8u3ej9a9y3KfDtxGR
A/OC6NPKwufC9So4j6PZecT9b7I4sM31RDxVyVpQVy/g3KeXxiVj32T69Gzp
6UjBcxkI+jCE6QPuP0Lmd/r8PtfD7xZr4Hfl/Ppgq4AFoZVpVCdmgqaQc1iJ
UcTPDjk0ZN2Er1cFzyUV9KeQ6Q/uv7Y84DN37ujdj7X57wXnrmCq3OTV39Jp
pMQt8LrgnLYBPVRjeoj794R9Vsrs0wx+39oIv9fm19vVtlRIeX2DVu/vvreN
oP6nT7mXwJ0X2tM/prPwvEhAb3WY3uL+5cMP23M6Q0Vn2inUC3Rm/eTdBpwu
0fqJml0vC3RpHui/3LIm/f+jG7DPcpl9zoffQWe17tJpUPVFEb/+Yejo19x5
p0P+WTX5ieC8e9kZWHH6QC/sLiisEOiDCvSX0ay/4P5dYJ/P2D4pv0/+c41j
nwvX+X6nx/od6jO/z8oRVyO2nEhM5/c5Ez5XMfy+mF/n9xnH9kn5fX6Ez6XJ
Pheu8/20L+unqP+FUCcRrE5wn3VQV7dZXeH6f9Df1Vl/x/1Pg33Wy+zTG+qq
An63y6/PgDrpweoE99kB6qqK1RWu+4B/mMj8A+5fHc5pHTunuM/dcK67sHP9
Z//gZ7SYn8H9u8I+H8rs84zM72H59XA4p8HsnOI+R/x9rnH9HPilX8wv4f7N
/9ZJ3Od+0NWpTFdx/fvf/g337wv7vCCzz42gq+vhd6b8+mXQySdMJ3GfT/L/
0lVcr//bH+L+naFPnWJ9CvfZHfpaGutruL4S/Oo85ldx/6Eyv4dFztDXNsPv
N/H8KrE+pcb6FO5zAPQ1NdbXcD0R/PAZ5odx/+/Bt3gx34L7nAQ+x5H5HFxv
BH+ezfw57v807NNRZp+nwZ88gd9F8uvDwT90Y/4B9zkM/MYV5jdw/Q74fyvm
/3H/PcCnqSo1+TTc52LwdVeZr8P1MZBHclgewf2fg33myOyT92NuBV/+ykEL
wC/9Zn4J93kI/FUG81e4rg955wHLO7j/A7FmarahlJxxcQmZuu4c6nwy7Oes
jK87ozZ0kLp2Gflw22urgU8m6vOWvYo7FB6mkCKHbvPOr0nD+yTCc1kt44te
Vg/Jn5iZTzzmfmpcdb0Y73P/9qTEyLERZL/XTauU7n98S8Tf9Yn3GSLX4lLb
D0mkPiq1U0bAH78x8YRayqmxEVQn39FQeB//v88p3ifh7dSn7T8k0agPxW/S
BffxaOlj3uphCn0W5JyULPhc/PsQHsj066gAx1ijzHz6yKnvROHnUhlf7c9x
pktaBadPFnA2B91+LNM3z5evXMlxpmNVVN31BZyPzG7K0XSD++vQd5auIv4+
fP+ygfeN8PeJvN2Ul6nGru2/9rTcLeLvowr7Wcj2Q2X3UyXTRy7Afkaz/WBd
bQc+TxgfvM8W4HNXRs+jgU8144P3sYHnNYI9L7xP+N++Du9zFZ7XSfa8/ug8
1I8/qx+8z96//S3epwvUTwOrH7zPWqjn26ye8T5RUM8uMjrzH9SzD6tnvM9u
OF+l7Hzhfc7C+aqQOe+xcL7a3mk6X3gf/v025w4VmYVX7sL32/Dvw5k9qU24
v+ZUfB8O/94b73Ees0YHH2723hsrA/ero3eHN3vvjeOgs+tX9Yxs9t6bloYH
V7aoiGr23pvXd56OW/36VLP33gz9dfZVuF1ss/feZJ997nF0Ylyz996MrFVL
atwS1+y9N++0t0Zlz4pt9t6bpI6j9L6YRDd7701VV69Crfzjzd57s3C6+arh
EwPwvTdjgedp4PkOeJYCN0/g5g3c9IHbfODWBbgpArc1wM0EuD0HbnLAzQG4
LQdur4Db/v/DbeH/4Sb+P9zuRjJu44Hbe+B2EbjNB27JwC0IuE0Ebo+BWzxw
Ww/clgI3H+Cmq9vY9L3k58t2HPPraGG4GubecnJyW6V12C7IpKkOF0MdTgDO
KcC5HjiPB542wFMJeCoDTyfgOQl4vgae8sDT7v/U4V7gKctNB7gZAp964JMN
fOYCn0Tgcxz4GAKf+8DnLPBZDnysgI+fzPuULFarN/Hh/y7Af29Evja7qmSD
W7PvjYweP3hP+OwDzb430i34uHmLS8HNvjcyqX+n4JsKEc2+N9JxSVJJ2L6T
zb43Mv3ydN3wxuhm3xt5FGqzcXVGTLPvjRQpVIW0fB7b7HsjHb6Whtm7xjX7
3kjnw3LzD/SLa/a9kdJYv5CDbWOafW/kX6u17l+VTjb73kiE2ex3AVtDmn1v
ZOi4l1Y/Rnjj90buwjndDefUE84p3weHwTmygHMke15MQGf4fvpu3bJSYhvU
rJ/y95Htp6c3qXaMmB6H/ZT/e8GTkrFO23+cbPb3grS9qkvWG0Ti3wv+BwP7
mkk=
        "], {{
          {RGBColor[1, 0, 0], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFm3f8T9Ufx+85t71EEqWMyE5KkpEVyiiZEUKaKtqFhERbJColpKmhPVXa
m9ZPO2nvoaGhfu+n18ujP87jvL/3c+65557zPu/36/U691trxOjeJ+aiKO7a
qCjKqFdH4e+KUXZJRVEhSpOwN416t6j3jrJt2E2j3i/KJmHXjbp5lLVRdorS
MMovUapFqR/l7yg7R2kcZbNoXy/qFlG2TrrWOsqWSfftG2VNlC18/09RNo9S
Ncp20aZZ1O2j/Oxr9PVblB2jNIiyTbT5l7HTR9K1lvSRNJZ9onzH+0SpwrvG
9VpR7xFlo7B3jXrPKBeGvSDqJVEuCHt+1HdGuTzsW6J+MMr5YV8X9R1RJoZ9
ZdQ3Rbk07HOizA57ctRXRX1zlFlh3xr1Q1EuCnsh8x5lZtLvD0Qpw65d6D3v
4rlRng77lFico6KcFPZpUR8T5ZSwL4nfF0V9T5Qi7JqF1uaypLHcH2Ve2NOj
3BD2uVFfXegdfmA9ouwQ5bNC618pyklhjIwyOuwxUR8R5cSwR0c9IsoJrFn0
MyDqo1izsPtFPTLKXmEfHPXQKK3C7h/1kVFOjPuGRzk+7BOiPjzKqLAPijbt
ogwKu1HUBxTqt1rSWnXBp5L8gt92TFrPrvhUku90Y83CPijqIVHahj0w6mPw
UXw1Svewf/S74sd7xLWeUQ/Gd8PuFfXhUf7Ch+yv39tH8O+vo1Qu5B+/R9mq
kK9/FWVj//YFPoSfRvkVn7ZffulrrOvnnmN87pNC+4w1axFj6B31cPw17L5R
H4G/ht0n6hFRTo45OzLKGJ6X5KcdojRJmgPe+ezYvP9EvY7nJPl1O94jaY92
ijIl7LmFfHFq2NdGfVuUo8OeGPV01hUfxpdZr7CnRn0FYwp7PP4b5biwz8V/
oxwb9uSoZzDvYU/CB6NMCHt0lGn4UtQXFNonZyb9zv4ZGfbZUV8c5ZSkvvHR
U5OuMdbTk8bCWM9IGuO8KKPCnhL15VHOSnr+fOYq7AsL7b0RYY8r9PeRMT+z
4+9Hwl4U9XOF9nK1uH5wks+MjTmeVervbmwK++2O0aZXXDsu7PZRHxLlsLAb
xvU+npf6bjMWHwq7b9J+aRr2oZ6X3cMe4LneJex+SftrbtgPR5kQdo2o+yft
wSa2WY+avhcfWBj1M4X2ePcYY+n40MjPZU6nJc3T7VHGJc0TcaePx8WYr0+a
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
dp/s2UPivbcr9b7d3H6e9+mpjif72saHu2SdbbB/O2TpMugmrbK4NPuos9fr
Kq/RKLfZK0tnmeI9Av9FDxmRdR75oGMX3BJe2T/GVbPUmeIRvg4Xuz7sJ7M4
VP8sXkqs65PFV/Gx4bYfsG9cZH/oF/3tXMqvBjl+ovUzlkkeD/2gPd3sd8GG
z/fNOndkbPjvDPtwJ/sw2kSf6LtqqXcflsVt77f/Y6NrLQx7WRY3Zu/Dt4kD
HW3TD3HuRMc64t5ox4dOtme7Pb49y3tqjMc5L+ylWddfTTrDA9tz3wTfy76b
vmFfZHF49s5gzxV8/rCs8+Ml3kfwefyWd73Ue7Z0zIFXHu4+OUMZ6vbw/Jey
uDY8nPw1x3lnZRYHgRuMyuLhT4R9Y9jPZPHnw2Ium5Q6CxmbxavhjMfbXkaM
yuL/8Mpjsjg8/P1022j6p2Wdu8DZj3P7x+1Xi+x73Is2xLOOzToros2h8fy6
pfyEe+d6nINtMz9nZJ3foEEMjLb1S/neCVm6wJNh3xD201ncdmSWvoA/n+Qx
wAHhCuBvsHc12+Bt+A14GiwNjoZvgLc/zMLltIE3fOV74THge7B9Fdvc+34W
Rgef7+A+seGj8FL46VFZ2gS6BOeMaBbstTFZZ2zw8dFZZ1Hod6e4DdrFqb6X
s5ZB8ZxGpc69XsniovBQ9hN7jH26OouPMc4B0XbXUthmkNcC3ILfoCOgIawu
pDXAK9FF0ErQVb6yvaEN+kN0sR5novWgjUzO0ug3nOeg068qpBUttY2ega5B
+0/8LDSNDXolWuXg6G+PUu+OPoFOsdLreK/nh49R0IT45uEz90k/Z2XpIMvt
t4/YZ/BtxoDPLw77uaxxoW/R5kP3yZnZM/b/a+1Xw70WxBlizALHmaFuc7dj
Efeisw3J0kPZ44vCfiprH+GraJFPeS9f5/3Lnp7nfT0ua+7Yg8zlU55LfBy9
mDOyo7POPtmDzMEyzwPnXy94vSZlaWdPJD3nDj93nPcL/cBx4cBw1WwbLgwf
XG0b3QJ+DpeBO2LDJYkpH9lmT5EjN3zDA/eGd8PXP/C95E/aoA98lKWP0AYt
4T1ffyuLw9f3eNBoatlnsGsW0ofQg6q6T/IxuXiNba7DvYjLxGT0GDTK2oX0
BPQFtIU3srQn7n0tS/tA90D7ROND34PzrbTd2HuNGLe7YybxqGmpWEpsbWa/
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
+3BE4jjn/vAkOAhncPADtBq+d0Kf+z97TYHT
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtl3mgl0UVhufOJwqKZOIVF0yviiu5hCRRpiIiroiIuQGKKAiKSF7BJLOM
ApRNQEWpTLJIcMslI9cWlFKjRUQJaXHJ0FJTjKzseTrnj/fOOXPm993vmznn
vO+0jbzklPG1lNKhpZTNGG/H+URTygP4E7G/Cw7Ffxj/Cuz+2K8z7oFfGFeA
JeD5Er/pR/xl/B2w3wdH4b+KvxP2JvAb7N+CHVm/Jfgd9nNgnxJzR7P+DX3W
dmD8NtiduQX4p2Ef1sT6jaxdx9wa7BfAQfhtYDH2fqy5ndgo7FvBrvjX4Q/C
/gbYFr8dvy/2t3w3/Kn4A7G/Aw7EX4Y/Dvs2sDf+Ivxh2H2beP/3+F/PMncl
/tfBTsyNZe5I7D9idyX2DpiJvRpsItYZHEt8o88h1sr4KfxfMb5N7Gnmvog/
A+zC3MXMLcC+CRwHLsLvw7iS2GvYT7L+avyZYDfmJjD32Sb2oyH2MvgK/lyw
J3OXER+A/Tf3iNgWjFfhXws+hj2e+A3YC8Hx4FL8YxjfJtaL9V0Yp+BPAztj
jyM+EPtd7D7EuzJ+Gv+XjH8htpq5L+PPBrszN5G5L3kWYFf8S/CPwH4Je0vW
bgCH4/8evyP26+BG/JvBCeDzfjOxpeClEjm5IvN1Jf4asAj/I+4VsV7Y17tX
oDv+m2Awsc5gDPZhzM8FfwKt+K+CZ7GvBZ1KnMkc7PWgM7H1YF2N9z20RM7u
w7P2BSuwfwhuJrYF/tms7YF9A3gffAa/E+NCUIkPbYk9vxH8CxyNvw3jPPBX
0AP/XXAT9ofgBOxujAvAO6A3fmW8hmdd38T/auf/P8U4rUYtmyPfxO5GfArr
j8SeAZ4BbxBbydyfa9Rrf/zeYJa17DthryI+G/vFGv1hDVhb43xcu1eJer4O
bFWiJobwvz7qWbF2APOnYm8HJuMfj3+LedXE2bsXf6hRL4eXqOFXavSLASX2
+BZzg/Xn8/ue2G/VyMdhxE4CpxDrAsaaO8zPB38HPfE/AGea+9YQ9uga+2P9
bMtvG7+ZP58057CfAR/HPqAJ+1GwP3ZPc9p8A2dh72VO8rwLec4Z2G1gHv7I
GvljPXdjbcfMV/vnKuz1oBf2IeDFEs88CPtge1qJHJqT+f5ffnccz5ye9b8J
/yhrpEZ/HFLizM7O/FtMbIL7ku+7BL8d/yTszcDp+AfiD8LeHJyJfzD+idgt
YAj+fvgnY3cC5+H3wZ+V/eDf2AN9H8anwQY5Awwltj34ArETmX+zRn8ZWuIM
T7e32NOIn8X88NzfO/An4X8Ou7s9Bf8M+0YNfvFszYnTiO0IriF+qnWE/Wtr
gNha5r7q3nsmzF3O3M75vDvNfTAVez7Ym/gkz6SJb/Zb/cax2JPsd9gXlOiX
F5pvJeasL9cYswYvwr7CZ2CPKVF7i5qoe2uwQ/aqPWrs8b3ZP/ZnbV9wT9bT
nuYC+EkNfluKvdwcy3y/CnsmWJb7vTl2K3gk+9tU7PngiRr8thj7B+DurN/u
Jf5nk728rUYOuF/jwOgS3+C3Xt5Erp2f++U3+m2DWoIfzgMjSvQo+/cocI7n
m/x3DhiMfYTPwJ7YROxc1lxgLwDHWB8l+GOE/RG7X/KXv3Gta1bV4ES50DMe
aa9oIveHl+BH57T7M/c1c6+Jdx2efDPad5ZrW+LdJzSx1m8Yg93eRGwU/l3Z
D91bz8TfXtZErvuMO2vw99Yl9lS9ogaQ+zdm3J5pr5Tj1SNyoNwnB5vPagK1
gJrp/uzhNXv8vclRcpMc848aGkjtI6c+lv3bs/aMbVpqge41ava9Gpwul6sp
5HJ7rL1VfvlpDf1ibjxhjiTHyC1y3n3ZM+2VcuTPa+gf167KfixHy81quJ/V
0FfmqpxrP1LzqfXUbNa/mk+tp8awX6sZ1YpqCLXSxU1oBzXTAzU4slP27P/U
0Eit2f/M5/9zcEtw0trsAda+GuEXNTSRWkjNIT+rEdWGaoplyXly3YY8bzlN
LpMDH62hB621RXJ4Dc6Va+Xsx2voQ2NLs37VDGoFOfHHNfje3mNNflBDE3XN
fim/qcnUYmrCB2twvlzfO/lXzaPWUTMvr6EP5Ed7wD9raLAu2f+tD/uf3CvH
+Dz1wOASNen7qIHUPmqQrZrQO7OJXV2CW+Zkf7JPlez/V5bQl3LN9Mwv88zz
9k7gXUBN3TH5YUaJ32zdBP/OtXeW4IpZ2W/sO/KpnClX2vO3aYJj5BY1QmsT
HC53yyHyoZwml93nnjWh2dRqagj7mXzmt1ya/VPNr9b3jjAi88teZI8x/9X0
ank1vHyuJlALyJHysZwpVz6U76d+WVjiG30/+e3WEt/o+6hn5Bb3dIcm+GlJ
id9Yv+phe50cbX6qh9tKaA7rVf1v7xma/d47iXcRNc73a+gD32Ut8R5N6A21
yN0l6tM7mXcx7yjqFzlVLl1uj2lC76hV5MDdmtAnalPf8Xs19IZ7uxr/jhr6
x9+uw9+lCb72f/nN8pl6wbNVf8t1kzPf5Tz1rxpI7aMGsZ7VX8fK/dlv1Ndy
Xb8S/UY9Lhe6Znb2Y5/tHWF69nvvPubgzOQPz9o7jncZ+Vqt653Gu8j4JnLX
O4m9zx4oVz1Ug/vlh8klNIBaQf5WC6gZrHf1ue86Or9PTpfrf1TjriKfebfy
zjIj+cS7knc0a0n+9G5lTc1K/vCuYw24n2oktZEa6Nx8X7lvWPK5Gl1t7p3F
elKjqc3GZv2q4dRuY7I/qInVwt4hzD81t1pbjWQ/807rXbY9+cb7hHs/OPWC
d1rvst6JzS81mtpMTWu+qLnUWvOSf7xDe3eekvmlZlOrqanVW2p8tf207Jfe
2b2re6f+H4ti520=
              "]], 
             Polygon3DBox[{{868, 881, 696, 762, 96}, {875, 888, 697, 767, 
              103}, {919, 872, 100, 765, 766}, {918, 870, 98, 763, 764}, {917,
               865, 93, 760, 761}}]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0UsrRGEcB+D3uF8HX2A0H8CUPcqa1FhSwo5CdmzkOkYuZcNOWbiXUmyF
mU8w7nfK55DnZPHr+f3fznnfc0kNT/SORyGEMVksCSHus/xho0QWmtnENFNs
Zyu72cl+ZjhYGsKoPqRPc5I5znGbm9znLi94xgKvmXXmbXwtr8x3+r0cmB/4
KIf6E5/lRY7Mr3yTY/2dH3Kif/JL8vZaNn/r87wxF/VL5nnKc+5wjxvc4kx8
H+OPM8WsdxvQR/Qe9rGDXUyzjUm2MMEkf2XJmQ1cYNF6Qq+XdXMda2VNr2G1
rOpVrJQKWTGXs0xyuscICIXo/3/9AaekNh0=
            "]]}, {}, {}, {
           Line3DBox[{648, 712, 713, 824, 714, 715, 827, 728, 729, 830, 736, 
            737, 833, 744, 745, 836, 752, 753, 839, 760, 761, 920, 842, 768, 
            769, 845, 776, 777, 848, 784, 785, 851, 792, 793, 854, 800, 801, 
            857, 808, 809, 860, 816, 817, 679}], 
           Line3DBox[{649, 716, 684, 650, 717, 686, 655, 730, 688, 657, 738, 
            690, 659, 746, 692, 661, 754, 694, 663, 762, 696, 923, 665, 770, 
            698, 667, 778, 700, 669, 786, 702, 671, 794, 704, 673, 802, 706, 
            675, 810, 708, 677, 818, 710, 680}], 
           Line3DBox[{651, 718, 719, 825, 720, 721, 828, 731, 732, 831, 739, 
            740, 834, 747, 748, 837, 755, 756, 840, 763, 764, 921, 843, 771, 
            772, 846, 779, 780, 849, 787, 788, 852, 795, 796, 855, 803, 804, 
            858, 811, 812, 861, 819, 820, 681}], 
           Line3DBox[{652, 722, 723, 826, 724, 725, 829, 733, 734, 832, 741, 
            742, 835, 749, 750, 838, 757, 758, 841, 765, 766, 922, 844, 773, 
            774, 847, 781, 782, 850, 789, 790, 853, 797, 798, 856, 805, 806, 
            859, 813, 814, 862, 821, 822, 682}], 
           Line3DBox[{653, 726, 685, 654, 727, 687, 656, 735, 689, 658, 743, 
            691, 660, 751, 693, 662, 759, 695, 664, 767, 697, 924, 666, 775, 
            699, 668, 783, 701, 670, 791, 703, 672, 799, 705, 674, 807, 707, 
            676, 815, 709, 678, 823, 711, 683}]}, 
          Line3DBox[{864, 891, 903, 877, 863, 892, 904, 878, 865, 917, 920, 
           905, 879, 866, 893, 906, 880, 867, 894, 907, 923, 881, 868, 895, 
           908, 882, 869, 896, 909, 883, 870, 918, 921, 910, 884, 871, 897, 
           911, 885, 872, 919, 922, 912, 886, 873, 898, 913, 887, 874, 899, 
           914, 924, 888, 875, 900, 915, 889, 876, 901, 916, 890, 902}]}},
        VertexNormals->CompressedData["
1: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
s4Lqau8y34vgV1Tqls6C8y6ncITyc1hHcBn4laE4mWPgX9gawvS8J7mrHwZf
YpV/TBvOu5mHAPWH0Wd0v4Avf6kT4NFE6lTAjSHKz7fxua/Bf8sfaVcmeRRv
5eqneFa2l0WB/15tXG5qTuqUicBT6sNvx7x9Af47MFEtFvx4avMdiqfI7uQs
8N+LfT4+Bj/uflGf6uenS4/iwX8bvntz8gupU2Lp0fS8n/xQ2wL5c6hwrbcF
qVNceeYigKfwwHpt8N8FlzNiwI/L8hZ1AZ7/kqWfgv+W9Jxw9C+pUxJeXuMB
T2FVg0HIn5E7Grw/kjq1bp4TPe88LxcVgv9uky9UCyB1yrjWkOJ51MnyPvjv
+XqtK5VInWrSUKH8/BgR3w750+SGbRX48cSIFx2A5xbfgk3gs+2TLn4F3316
1wg/e5mcWW8/3bpkoiFLi8mbrUyeNI/YofRK0JDV6j6SKyVDR/JkoL+R8WIv
Y9YHj5Fc+YXJk/9yHt+6pmnC6t81kisP+4/kyVUJE4eb64xYiMmV/CYjeXLX
8Bnx7DAjli6TK/uZPJnbc8RBcNseVoPISK58wuTJRz+jn3ziN2EpMbmym8mT
b8zmBQ+eM2b1WIzkymtNI3nSEhuV38g1ZvnWjuTKA6dG8uTqJUJvBhQNWYjJ
lTlMnqyvEnqngI1YTkyunJ4zkie9WzM/dTsYssYzuXJ65EhujODii3WKMmDd
ahqp+1xbed8DP2NWSTwk/ERirTPpeecpUkkBfuZtOGcK/ZKs5Rcpnmrsr9eB
n76nn14i/ETvwx9Tnzw9918C8HOe379ywk/0guFnvkPzC+Dn5reldYSf6AV2
oee9mPvJLeDnNrl9dwk/kSjDz0/+MjXAz8kKA08JP5HUggSKp6KapTrw83rm
zXLCT6RvFzoefNTcO8seAD9nP1OJIPxEyDYoEPD0UL/QA/yMOG/3nPATDS9c
WAZ4Fhn4ZAI/rQx6LQg/kSHDz+fbP4QDP91jnh4m/ERhmoGUnwcaPtUDPzNf
1nNDv+SwvQw97zynkxHwc85TFz7oi4zyU3fle2XQzyJ+2RXQF3T/MVKPnEWX
VoB+3r5q5QH9v0eMfu45/UcH9HPBj+cNRD+R5PyRelQksLgG9PNI/ri10P/b
hCpo7oi97JUC+rmjqnaY6CfqZvRTSX3/VaqfKp5fiH6iYkY/1xV0Xwb9LLQT
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
tJTB50yD7TjAZ4O8/EaCDxJm8PHyFVOXI/iL3d6zE+av7j1J5+vLXBXaSfD/
u3ydA8zvro2vg/nHhVIy4fnufef0D/YTki1M9y865JACz/fNtwof2E9BATdd
P3bp03Dg4QVtbX/CQ9Sth+j8yTt3uwB/xFwsggh/UMgsc7p+jcAIzw/EbPY9
IxnBesDwfJDhua/Oo+nKNyJYvxmexzHv2d5l3rN9y/DZzm+EzzpPI+Ze6I5g
XWH4nMPwmWup9c6JieGszwyfdc4tkjdd1I3nPbXXa48sw3N1Im8dqMlBz5MH
nt0T6MI5NgOR42o/4KxJqf5Z/eVY+skL66K5rTgsfnO3n0szTu65dhPmR4Sf
cnmv34LV5HdPHxf3DYv3RNL5+rIBLE+hCmxXUGxbbNGFe6wu0PmK8sfq3uh8
xguVr4jL67JxzMrldH5nv1fjt69PkOedrNDa0xws6r4qCuYfsltbH9H1GL2T
FzJo296NJ5vb0PmzZtdzPwisR1ke2d2Bhp1YUOVYJMwPb+Tx32Jch3Sski22
G3Xg0M4BP5h/fvMysVliHchsHp9Vd14DFp+teBvmL18uMXPpjHYUM9VvKmd+
AzbWG9n/9bTDkmrqHNTBEXGWLMvCFQIxdP2Tn7K/9U7rRrML57meQVk48EQc
nd90cbYtwRMJps6OaI0sQzvWYjr/1KdD/QRPlJLp/ZOr9gOSfWFO53+1SRxf
PLcVcYZ0NhA8kaBpE8UnZ9LTaSX6LSgoWPUkd9w3NO+TC52vmryt4aJQBXq3
IlaS4In2/p1G5/PdYdtl63xG9/DlvAW6bKQQKkrnFw9afaj9+gQvX/Y8juCJ
3k9QpXgGrFsz63rXY1wRImVF8ETSdoJ0fga/kEtsYD0OXyJvFmTYiSIWudP9
8+0unr7ZuA6/2qJbSvBEth0L6Xw534TQmWIdWLP1swwnrwFpzNlJ92PWVnlH
dUY7FvrqjQmeqPG0CZ3/e012/wp1Dv6yIvvXzLIs9PLpLDpfa9/cHIIn1s70
+OKOslDXJWE63yszJena/W78+2LdyRWXsvCWJzVH/34sQbOscT/XrS78aMly
x0pUhpuklI7B+HPjrqfqEe34/Bm/cSucG7BlyVc67nfwWpvXqxbsoBj9LF24
Gc+4M9kOxl9/SvkJ+4m6nLN3Fnm+nNURlP92lZbe8Lt+D2qtIL8L63D06D5H
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
Pd3I1NPRvxeQ9bf/b38vIOuL//ffC/4fvQYU1w==
         "]],
       Axes->False,
       Background->RGBColor[1, 
         Rational[82, 85], 
         Rational[14, 15]],
       Boxed->False,
       ImageSize->Scaled[1],
       Method->{},
       PlotRange->{{-0.299823326344286, 
        0.2998233263442558}, {-0.299462627196952, 
        0.299462627196952}, {-1.732050612422391, 0.9999998048535137}},
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]},
       SphericalRegion->True], 
      GraphicsBox[{},
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, False}, {False, False}},
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[1], 
       GrayLevel[1], 
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25], 
       Scaled[0.35]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.01]}}, "Rows" -> {{
        Scaled[0.02]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.584451791110559*^9, 3.584452334118638*^9, 3.5844525737053623`*^9, 
   3.584453625334292*^9, 3.584453759588986*^9, 3.584453922949636*^9, {
   3.584455409191222*^9, 3.584455419337179*^9}, 3.5844554857541857`*^9, 
   3.584470158040777*^9, 3.584470328107181*^9, 3.584470578483862*^9, 
   3.584470799582218*^9, 3.584470889666604*^9, 3.584471463625763*^9, 
   3.58447152145658*^9, {3.584471582639426*^9, 3.584471607428212*^9}, 
   3.5844716603803596`*^9, {3.584471761620867*^9, 3.584471780663105*^9}, {
   3.5844718235345716`*^9, 3.58447184715158*^9}, 3.584471929460177*^9, 
   3.5844727562669077`*^9, {3.584472876168309*^9, 3.584472896800375*^9}, {
   3.584472960908691*^9, 3.584472989723806*^9}, 3.584473113678817*^9, 
   3.5844731486762037`*^9, {3.5844732063550587`*^9, 3.584473227408073*^9}, {
   3.5844732597341213`*^9, 3.5844732809582644`*^9}, {3.584473328848897*^9, 
   3.584473398959422*^9}, {3.5844734354769163`*^9, 3.584473452979405*^9}, {
   3.584473540544249*^9, 3.584473566192995*^9}, 3.584476523685483*^9, {
   3.584476877723791*^9, 3.5844768914897213`*^9}, {3.5844776797467623`*^9, 
   3.5844776968571577`*^9}, 3.5845543668956833`*^9, {3.584554420468525*^9, 
   3.58455445001608*^9}, {3.584554539115205*^9, 3.584554678339045*^9}, 
   3.584554739616043*^9, 3.584798597236367*^9, 3.584904954492188*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowOrbifoldGrid", "[", "2", "]"}], "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{
  3.583689434030222*^9, {3.583690038818116*^9, 3.583690064557714*^9}, {
   3.58369221561723*^9, 3.583692295584877*^9}, {3.5836971219493*^9, 
   3.583697128587344*^9}, {3.5836974345230513`*^9, 3.58369746233471*^9}, {
   3.5836974976174173`*^9, 3.583697552388973*^9}, {3.58369763742273*^9, 
   3.583697661283956*^9}, {3.583697697187623*^9, 3.583697697681795*^9}, {
   3.583697921812044*^9, 3.5836979270391903`*^9}, {3.583698022251027*^9, 
   3.583698106174611*^9}, {3.583698152561407*^9, 3.583698152736507*^9}, {
   3.583698209683529*^9, 3.58369823806411*^9}, {3.583699151298019*^9, 
   3.583699185253458*^9}, {3.583699394613495*^9, 3.583699469642783*^9}, {
   3.583950965930999*^9, 3.5839509892351837`*^9}, {3.584136641185576*^9, 
   3.584136642988099*^9}, {3.58418582819775*^9, 3.584186027196117*^9}, {
   3.58418642444545*^9, 3.584186500754262*^9}, {3.5841866582220087`*^9, 
   3.584186766405637*^9}, {3.584186811686653*^9, 3.584186832061205*^9}, 
   3.5841869859448557`*^9, 3.584187040241329*^9, {3.584187077361844*^9, 
   3.584187079656089*^9}, {3.584187139344602*^9, 3.58418718644466*^9}, {
   3.584187237970829*^9, 3.5841873678137493`*^9}, {3.584187400198305*^9, 
   3.584187624951578*^9}, {3.584187726903932*^9, 3.584187789769574*^9}, {
   3.584187821025146*^9, 3.584187897118555*^9}, {3.584193110409483*^9, 
   3.584193138015587*^9}, {3.584193194922391*^9, 3.5841932098646507`*^9}, {
   3.584193249112626*^9, 3.5841932504566317`*^9}, {3.584193296068103*^9, 
   3.5841933106086807`*^9}, {3.584193366005022*^9, 3.584193367795381*^9}, {
   3.584193414660308*^9, 3.584193416458366*^9}, {3.584193458308425*^9, 
   3.584193461031646*^9}, {3.584193542363206*^9, 3.584193570383233*^9}, {
   3.584193631868184*^9, 3.584193654583934*^9}, {3.584207427977562*^9, 
   3.584207501726315*^9}, {3.584207597447155*^9, 3.584207626676507*^9}, {
   3.5842076755108*^9, 3.5842077203567533`*^9}, {3.584207767876896*^9, 
   3.584207853383381*^9}, {3.584207930296794*^9, 3.584207998168458*^9}, {
   3.584208035919663*^9, 3.5842080419817553`*^9}, 3.58420808388694*^9, {
   3.584211608664071*^9, 3.584211644171987*^9}, {3.584212203939707*^9, 
   3.584212208037219*^9}, {3.5842125744924917`*^9, 3.584212640724815*^9}, {
   3.584296319128419*^9, 3.584296395719811*^9}, {3.58429644238603*^9, 
   3.584296669869536*^9}, {3.584296736407246*^9, 3.5842967386965837`*^9}, {
   3.584296779136149*^9, 3.584296854690329*^9}, {3.584296892461269*^9, 
   3.584296996777444*^9}, {3.584297068795958*^9, 3.584297188399145*^9}, {
   3.584297293293878*^9, 3.584297335189075*^9}, {3.584297376168564*^9, 
   3.584297576953013*^9}, 3.584297766513338*^9, {3.584297848833336*^9, 
   3.584297914758376*^9}, {3.584297957218121*^9, 3.584298011394829*^9}, {
   3.584298117096738*^9, 3.584298202007159*^9}, {3.58429957778618*^9, 
   3.58429965971666*^9}, {3.584304202964367*^9, 3.584304214333768*^9}, {
   3.584396442592865*^9, 3.5843964496569*^9}, {3.58439649139237*^9, 
   3.584396495152761*^9}, {3.5843965389924498`*^9, 3.584396572888001*^9}, {
   3.584396611039075*^9, 3.5843966649230213`*^9}, {3.584396710218545*^9, 
   3.5843969957591143`*^9}, {3.584397029373207*^9, 3.584397090514019*^9}, {
   3.584397121962578*^9, 3.58439714435212*^9}, {3.584397187297997*^9, 
   3.5843972107109013`*^9}, {3.5843972488630857`*^9, 
   3.5843973682382812`*^9}, {3.584397569884097*^9, 3.5843975764419823`*^9}, {
   3.584397624268221*^9, 3.584397657349945*^9}, {3.584397692254575*^9, 
   3.584397696373185*^9}, {3.584403260121707*^9, 3.584403268627508*^9}, {
   3.584445905803979*^9, 3.584445910356195*^9}, {3.584470826136714*^9, 
   3.584470830445258*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Universal Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Orbifold\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, False}, {False, False}},
      StripOnInput->False]},
    {
     ItemBox[
      Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyFmVuoVGUYhoekA3nXAYIoMiSK6AAadJEt60LwBNFNJVFQKARtgshAtDI7
QIER0o2VEhUVSQeMrEBbsdBKtkGsDhIbUafUyjTtIkECi1nzzrCed705F3uY
Z7551/e/6/v///vXnnHfQ7cvPaPX683+78+0/95n7Fn80alTf5Z67w1ex4pl
j3y4fsvEYePvTj9/9cTUQeNHX1++bOb8vvGlA52pEF8HXhnvDV8hvgj6xof5
hPi+8eF4jQ/9MT78nHgpX+kzuXwml8/k8rk7vg68Mi6fQ3wR9I3L55C/cfkc
/DEunwMv5R99JtdncvlMLp+74+vAK+PyOcQXQd+4fA75G5fPwR/j8jnwUj7R
Z3L9nlyfyeVzd3wdeGVcPof4Iugbl88hf+PyOfhjXD4HXsoP+kwun8mlS67P
3fF14JVx+Rzii6BvXD6H/I3L5+CPcfkceKlx02fydj3XoZ7rUM+MrwOvjMvn
EF8EfePterb8jbfr2fwx3q5n46XG1+1zFXyugs9V8JnxdeJF0DHe9sfyNN72
pwr+GC97rdcx7HNj3l6Xx7y9jox5u+4ZXydekMufcF3j8ieMy7j8CVz3sYCO
cdTPiKN+Rhz1g/g68SLoGEf9ME/jqJ8RR/2Ql+37ZutY8KcO/tTBH8bXgVfG
dUdDfBH0jWMdCz7beI1jHQs+Gy/b88D2ZfOZHPuy+dwdXwdeGZfPIb4I+sax
L5vPYbzGsS+bz4Grrwv13A/13A/13A/1zPg68Mq4fA7xRdA3jj4z1LON1zj6
zFDPxsv2Om3nJvOZXD6T49xkPnfzyrh8DvFF0DeOc5P5HMZrHOcm8znwsr3v
2XMA85lcPpPjOYD53M0r4/I5xBdB3zieA5jPYbzG8RzAfA68bPcR9lzLfCaX
z+R4rmU+d/PKuHwO8UXQN47nWuZzGK9xPNcyn7uvO1nqvX3dzcb1Wd8jvgjx
kVMH+syzCFx5Wjw5xkUe4qvET+PP+FygOun2uTqNPzzXKE6vY8jPeOiTR/pp
XKEPGfPtVz5xxdSWI6XexTV/yYefixBvHPq2PpBD3zjrX/p83ot4yyfNL173
rzUHH5yYOlrqHbwIXPHUKciVX9Jn/opL+Yfrmj+It/ue8ud1V514f/q6N3fa
fBHvtV4Wb3U7/N7qlly/J7//vL1vbTnycblp68oVE6/sHOWjz/pe/NiyixbN
nP9eEeIjp474UM+uq+uEeONDfXKNy+LJ4cOIK7/Ak45x3C9bJ8lxv1gntk62
76vVj6178Gek886Sd5+duHh7rAd9j/h430N8ui/St/tFjuvaftft5+bkp+3v
qEPjm1YunLZu5tqkY+NK9Tn78Nx5U49+MeLDz9F/fT/iTR7mf/u+27gK09G8
wLgwXq5j1p9AxzjHi/uVfBjrDPML993WN/hDfeOY7/TZOOZ7GfRHfN8n1545
a9bPtr+I8/+Djy+4+e7163davDjjn2647YPijO8317V4ccYrT/5/TfmQ67rk
0ieXfvt58FifXPrk0ieXPv+fIn1y6ZNLn7ydfx3yr0P+dci/DvpViK8svtd6
jePJoV8E/aI7fvy8EeMdcYw36Nemz+dsuF+mT477FfLvh/z7If9+yL9v+nyu
gvli+uSYL6bP5wlYH0yfHPPd9NnHYl0yfXKsM6Z/53MP3Ljjjj9svizYePnu
724Zn4+kf9NHU8v7Vx+1+r/m65cuOH6hr6uvXrbr0lU7Dpn+Czc8s+35D341
/dWD999M/+F7T5x8+6nfTb89z8b69a5Db9xyyS+mv33/a7fedvYB09/y9137
7zl+wPTnD3zYY/rNePea/jkrpl119vJ9pn9y7davLrx3v+k3eX5v+k0+P5j+
ywM/d5v+Y4PvfzL9RmeHxZ81yPNbi587GO8Gi58z4NssflHDrd5WNTpWb+c2
17V6bnS+MZ3Pm/xN58lmvKazofHH5sVnjZ+m/2Pjv+n/09wv02/y32f61zf1
YPqLm/ox/U+bejP9L5v6NP3vm3o2/fZ+MtZ/pJkvpr+mmV+m/2IzH01/YzN/
Tf+6Zr6b/pxmfTD9hc16YvpLmvUn1YPV/7z/52E/mjR9PgdDfOhPXId9pnTY
34KbPuPV/3F9U79Irn6OXH0Yufqn7vg68Mp4b/gK8UXQN67+IORvXPsxufbR
4FuKL3Uf6DO5fCaXz+TyuTu+TrwIOsblT8jTuPwJ403xpeqX/pDLH3L5Qy5/
uuPrxIugY1z+hDyNy58w3hRfch2WP+Tyh1z+kMuf7vg68Mp4b/gK8baPyOeQ
T4jvG5fP5PI5+GZcfSrnr/pLcvVt5Oq3yNUnkasfIlffQ67+hlz9Crn6DHL1
B+Ta18m1H5Orj+e8Vv9Nrr6WXP0oufo2cvVh5OqfyNX3kKtfIVefQa7zCeep
zhXk6tfJ1WeTq48kV/9Hrr6NXP0Wufokcp2vOC90LiLXeYNc5wRy9ffk6uPJ
1TeTq98lVx9Jrv6PXP0f76/6P/qj/q97X5gM+/Jk2Gcnwz41afrq26ijPi/E
Wz7SYbzOsYzXOZbxOsfST533yLcNz1fkuh7XE12PXL9PnPmLM3/9nvHiKT7l
T67fk/8LxV/4uA==
         "], {{
           {RGBColor[0, 1, 0], EdgeForm[None], 
            GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Y8gzzFcrck7OMZ+W1Ldf/Ayb1I9811slz0yceYbbjits87qRc7KGBc6d1LSP
Rp4zOBd85b1uVWXNTI5uo/bXkdrYWu0vIn25ZZX/APDP5mp/HKmZG6j9uX24
hdpvWvvqux5Gm6h133ZsNlT7s0j/J5afjzxTrvLaOpesdz5xvDRzH7SgCzoW
WTu0rfKMQ37lXPNRZPw1rTK2qWNeE5ZG+nUT3V8S6Z+NqqwF8dM11V4cGQtr
qP1hZCyvrfb7jqO11P4yMq7xw2XeV+owai/2nDh/wHpK3mnv/eS/x1clY4n4
+aykfuFnX9sniJsR3svhHrfcY9FstBKdXOoxY+0P7PVCj1lsP2FdP3ltHas8
33FO59yH9h9lXUFzXy6pa6/6Gn3GZmdEnt95frp9epG/Ea18w/ZFkzh/cg7u
VOW5klzzrPu/WbIWhSdbM+jLmbBOODZK1rKst6ljge9v7DhY5W+lY237/G8e
z3dW9vOaGMLvl3u+1c89dqX3CZuhLcTIdNsX29Z2TNXU1Cv9DeF1LnM/4paY
7UkcRe7lO95j9reH7jWN3Ev2/JuSGsrc9b2OvuJ1It+9MToRuX874DeR79hK
3CzSPzZFu6zH24lbRvoCtkGD+J5vwjWV+Fv7Cv5NnHJWw583VHs9P1/i3ID/
d1G7QaRvbi9eN9LPODeRuzs7FqjXG1c5Rx/PQ7xTazSoco4tPM+O4saRGrco
smZBE5pE2g6bvRVZq3R13JEPiN8Oaq8fqX3UMPwbIDbfizwDEr9d1e4U+d9o
a3QjUlt7i9eItDsxyzm0pXWMXN7C+sM5FR3rpXbDyP37IPJM2cRaRw2B/rDO
qf7GzSPXx9o4q+ML1DboDHluLesJdR5at6XaHSM1+o3IM2I9ayz1B9q7aZXn
H7R0TXG/yHqtV5V1HvbZpMoaFw3ErhvZti0i/QPf2LDK/6cr/E3b+rvaRvoc
/tYq0ofwD7SU/zho/neR/ynRVep+tIT/Zs0jfRE/7Fnlfxl8oEeV//vqVLkP
g70X+M429h/2obv3YqfI2CAusMcg2wS/5ZxOrhkYGQ/EAvu5gfe0W6RdsEl/
caNITdy4yn/Hv/jeAN/fqMp/x9QS/G+hhmad7SJjjPj6HaHxxwA=
               "]], 
              Polygon3DBox[CompressedData["
1:eJw1l2UYVkUQhXev3YGgCAaKSBkgdqHYYiuYqKjYgt0BBmJ3YGEBKpgotiJ2
i63Yoghid7/vM+OP8+yZe+937+7szNnztes/cNtDmlLKp2Bm8HstZTXGVcGT
8D/BGvAdGZfjwdbgAeL7wTdc+wOsXuI3T8HnAyuDL4jfA//Ad2XcBbwA/wus
WeKdz8Bn532nwE8GbxMvBjYAU4g/B3Nwf3CJZ97i+t9grRLveBa+AFgVTCWe
DNrA1wPfwT8DreBrg6/hH4MWzhdMg38I7oN/y3g6GA5vx/e+gR8LFoNXsAd8
d/Ay90sTvB94ifjuGrk7E+wP/xfsVmLNz8Nn5fl94HuD14lnIx5Q4tobxCuC
bmA68fvuAff3YuwPXuP6TE3wPcGrxLM08a7+8OXhi4IHS+zJt1xbCfQAM4g/
AoPgNzBeDK6HL8Lz4103+Jq4BfGd8DvAFOKFiO8qce0L4m3MCXxBcCr8cdDe
9TJ24dkfGbsTdwOPwrf0G+4bGAzfGrSBzw2GwH9wzfAVwEPwBXnH7fCx1iDx
06Az/Kyst0MYrzQG18EngmXhwxi7mlvGI809uBy+bc6vJTgNvn2+zzmcAf/F
+oT3ABPgv4JVSlx7Av59jbktDx6G/1zj2T653oGM1xFfAEbADwU3wy8DN8AP
A6NLzPlG+E/uSYkcPWa9NrHWMdYn8STQF35J7ufejANL1MBl8L1qrM2auhS+
cBN7dy+YTrwTWLdETs+G75Hv2wRcBO9dIxez2kPw+0HrrNl7GHuBtjV6zZ45
Gv5IiT0ZDb8XfAXfHtwFX5zvf1miJ9qoBe5HPuOzv9XQjr65P8dYMyVq6hb4
MlzrUqPH7LX2oEONd/ruB+Gdsiftzd1rfHtDcCF8lxrcPTsXflCN2j4NXAPv
Z83C13eP4JvVqN2ZwMnwAeD4Ejm+Ar5rjVypYefBD66xl0PBtfayNV0ix+fD
96vxrU9SLw6sUQuDwdXwnWt82z0/B/5hfu8q64r1tQT3EN8NpnKtFfG4Ete+
It4u69seOj31Yif4zuBN4rma+P6p4L3cnw/szxp74Z6qnV1zr9Un1zIl99v1
bgrfMetDDVPLLrYv1QJ7qIR+j6tRj4PgJ2S+3BPXvkiNvRoKdsiefqTGb/zt
Mozjc38usRdSf8zv5fCR2S/293BrI/tlXzDEvc58vpvxlYzdmN8RNXI3IevJ
+tihRA6sT3VRfRyU/bNsE/qwT/5+TnCUdZ75M5/yY8D79noTPT0y+8vz54gS
73iHeMkmtLUzfGn4npm/A7I/u6Um+Q3nPncTZ8lxzjH72We9r17N10RuTwQf
E8/fBD/JGiPunpozooQ+z9PEu6wpa2ulJjT+xqwn12dtDMnvH15D2x/Nfj6y
hnY8CW6tobGe7da/2nsCeKVEz47N/mkBX6qE/p8E3vRZcIe1VMM3tMj+OhFM
gk9UQ1ID1AL7Ve1Wj1pZHyX0eXrOZ2Tm3rnoDTbNfvS36slG2e/qsHrcK/vL
86UtvEsJfZ+a9XFz5sbzqDVxx+yn48Az8Ldy/pvbYyXmpD6qwdaQ+jsp+9ta
NP/q/bE1cvd6rk99sxZfzXypn+b6JTDGOqjhlfzmbTXOENegPniWbuGelZij
5+UB4OwSPeF5p6fQW9gz6tFW1kCJNXueqv894VuV0Cf1x9zYw+qfemnu7BH1
c4kmvE9H+FJN6Jnexx5VP9VkzwbPCLVaf3Z4iR7Qf42qccbZr/o//c4WJTTy
RXiHJri6qZ7o/3qXeOZ/P6T2qGn6H/2Nc+tTwu/or1zL1iX8lv5Lrqa/kvm3
tsZl/Xp+dyihmRPzm37bd6ht6pMexvrVnxwPXixxxo3JerCWx+f+TMl+uSl7
Tz/m3PpmPWwENqzhbfWcalx78G4J7bPfh5XYs8nWvT1dw9t5xtnf51q72e89
waI1vKpn3p35LtfbL/td7zMs9cMz0vt+07Nz3ibqxbrxfFmHceEaXtczdhP4
xjW8sWe0mqV2f1JCy9aEt6zhFfWg1oRniXpqrawBX6iGV9ZDq1fO3W9+VMP/
dyrhsdQP/z/Ya17z/4B+vSt8OfBcDf9zjbVcwu+Nyh4x/zNq+EHv6bE+J+7c
hL86NPXB/w/2uu/U//t/xFq8tYT/1Q/LbwPfETdNeOdpuZ62TWj9jFy/NWWu
zal+xuc/yH7Rb/u8ufLM9XyYnP1oj/j/QD/mWTGqhJ/WX8tH53o6NrGWgVlP
nZrw44NSn9wz9849Vs/1n0s4txL++Mes3aVL+Ef9q9ppzetX9Zfea596op+4
qUTOptU4m/XmaoT+UL8/An59CX+vH/db7Uqc3/p/7znHL2v4Fc8W36k/+Q9e
Wrwm
               "]], 
              Polygon3DBox[{{507, 394, 340, 43, 455}, {550, 403, 353, 93, 
               460}, {517, 404, 352, 88, 467}, {501, 392, 338, 37, 449}, {504,
                393, 339, 40, 452}, {554, 422, 373, 180, 490}, {552, 420, 371,
                174, 484}, {526, 411, 358, 124, 479}, {551, 409, 359, 129, 
               472}, {553, 421, 372, 177, 487}}]}]}, {}, {}, {}, {}}, {
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0MtNAmEYhtFBFBBvVCCxAK0ACzBCTNwJOxew0wSWAlagFWgFWgHagOJd
vGyJDRhDiLeF50tcHJ55F/PPMEvbu5s7qSRJtphyEdcpPx9aoMi5vaKrlOnb
NW3Q4sXe10OOebNP9YwxWftS0/oT93PFnn2tN9zStu/0ngc69qMOeKJrP8fz
+CRnv+qk/uoFPd7tEz3igKHd1Sb1OMuu6jqluM9e1kVGZOwFndBvnWeODXtW
Z8hTsafjPeI/xnl2Jr5jvBNrdjrO4ev/+/4B1u0rmw==
             "]], 
            Line3DBox[{301, 271, 309, 286, 293, 439, 292, 548, 294, 265, 310, 
             272, 303, 304, 305, 266, 315, 277, 306, 307, 308, 267, 298, 547, 
             280, 442, 297, 268, 320, 282, 319, 283, 321, 269, 323, 284, 322, 
             285, 324, 270, 300, 440, 281, 549, 299, 291, 318, 279, 316, 278, 
             317, 290, 314, 276, 312, 275, 313, 289, 296, 546, 274, 441, 295, 
             288, 328, 327, 302, 273, 311, 287, 326, 325, 301}]}, {
            Line3DBox[{444, 497, 443, 498, 445, 391, 446, 499, 447, 500, 448, 
             555, 501, 449, 502, 450, 503, 451, 556, 504, 452, 505, 453, 506, 
             454, 557, 507, 455, 508, 456, 509, 457}], 
            Line3DBox[{459, 510, 458, 511, 460, 550, 560, 461, 512, 462, 513, 
             463, 539, 542, 548}], 
            Line3DBox[{469, 519, 468, 518, 467, 517, 558, 466, 516, 465, 515, 
             464, 514, 543, 546}], 
            Line3DBox[{471, 520, 470, 521, 472, 551, 561, 473, 522, 474, 523, 
             475, 540, 544, 547}], 
            Line3DBox[{481, 528, 480, 527, 479, 526, 559, 478, 525, 477, 524, 
             476, 541, 545, 549}], 
            Line3DBox[{483, 529, 482, 530, 484, 552, 562, 485, 531, 486, 532, 
             487, 553, 563, 488, 533, 489, 534, 490, 554, 564, 491, 535, 492, 
             536, 493, 423, 494, 537, 495, 538, 496}]}, {
            Line3DBox[{329, 383, 330, 387, 337, 391, 341, 395, 345, 399, 349, 
             560, 403, 353, 405, 355, 407, 357, 561, 409, 359, 412, 363, 416, 
             367, 562, 420, 371, 424, 375, 428, 379}], 
            Line3DBox[{331, 384, 332, 388, 338, 392, 555, 342, 396, 346, 400, 
             350, 432, 436, 439}], 
            Line3DBox[{333, 385, 334, 389, 339, 393, 556, 343, 397, 347, 401, 
             351, 433, 437, 441}], 
            Line3DBox[{335, 386, 336, 390, 340, 394, 557, 344, 398, 348, 402, 
             352, 404, 558, 354, 406, 356, 408, 358, 411, 559, 362, 415, 366, 
             419, 370, 423, 374, 427, 378, 431, 382}], 
            Line3DBox[{380, 429, 376, 425, 372, 421, 563, 368, 417, 364, 413, 
             360, 410, 438, 442}], 
            Line3DBox[{381, 430, 377, 426, 373, 422, 564, 369, 418, 365, 414, 
             361, 434, 435, 440}]}, {}, {}}},
         VertexNormals->CompressedData["
1:eJztyMEJwCAURMGPqcQeck8PKUHwbAsp2RLMSTANBGTeYRcml3bXFBHnO0fM
nvX7xTnnnHPOOeecc84555xzzjnnnP/gnzjnnHPOOeecc84555zv7gMVQOWe

          "]], GraphicsComplex3DBox[CompressedData["
1:eJx12LGqFUcAgOGLvkdIJK+QNicWggmBQEgjBAshtlbpbATTWNhfSFKkD6kM
IsqAIFGwS2HtA4jaCHaRe/yz7DfMhcMyH3tnZ//l7L3MZ9dufP/TuZOTk/cf
Puc/fG598+WPp6fPRseTs583h/vvrry8+vbJ5K//+Pn6518/nvzb3y+8+Pfi
o8kfnM1zb/Lvzs7/c/Ifzvy3yY/H2w/1r47nH/RLx/knv3dcz+SXj+uf/NXx
fif/+9hn8o/jlY+62lmvs15nvc56nfU663XW66zXWa+zXme9znqd9TovfNTP
znpjvc56nfU663XW66zXWa+zXme9znqd9TrrdV74qJOd9X5fb6zXWa+zXme9
znqd9TrrddbrrNdZr7Ne54WPethZr7PevHpjvc56nfU663XW66zXWa+zXme9
znqdFz66bzvrddbrrHc9vbFeZ73Oep31Out11uus11mvs17nhY/uz856nfU6
63XWW4feWK+zXme9znqd9TrrddbrrNd54aP7sLO+f79vvn8fbb7//my+f96b
79e3+X68eZ31Out11uus11mvs17nhY/9erfOep31Out11uus11lv3Xpjvc56
nfU663XW66zXeeFj//y3znqd9TrrddbrrNdZr7Pe/eiN9TrrddbrrNdZr/PC
x/77tHXW66zXWa+zXme9znqd9Trr3afeWK+zXme9znqdFz7276ets15nvc56
nfU663XW66zXWa+z3v3rjfU663XW67zwsX/fb531Out11uus11mvs15nvc56
nfU663XRG+t11uu88LH/+7l11uus11mvs15nvc56nfU663XW66zXWa+X3liv
88LH/v+Rab9u6qyzXzd11tmvmzrrddbZr5s66+zXTZ119uumzjr7df/7r58+
/+Tmk39GR/vrH8eHxfmTM//0fHXmn3y1fvchOX9az6qP1737xS+P7vz1dHTE
DwvvfOc56K1vNb/r77zV+hfXnfpw/vTcV+v3uv8B6K5rWA==
         "], {{
           {RGBColor[0, 0, 1], EdgeForm[None], 
            GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
              
              "]]]}, {}, {}, {}, {}}, 
          {GrayLevel[0], 
           Line3DBox[{246, 1, 242, 227, 16, 31, 46, 61, 76, 91, 106, 121, 136,
             151, 166, 181, 196, 231, 248, 211, 244, 236, 212, 213, 214, 215, 
            216, 217, 218, 219, 220, 221, 222, 223, 224, 233, 249, 225, 245, 
            237, 210, 195, 180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 
            229, 247, 15, 243, 235, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
            2, 234, 246}]}},
         VertexNormals->CompressedData["
1:eJztyLEJACEURMGPVmIl9nAlCBdfC5ZsanZGgtjCLDwWprTveVNEzFWOvX7+
qJxzzjnnnHPOOeecc845v/0H/ZUifQ==
          "]]},
       BoxRatios->{1, 1, 0.4},
       Boxed->False,
       ImageSize->Scaled[1.],
       Method->{"RotationControl" -> "Globe"},
       PlotRange->{{-1, 1}, {-1, 1}, {0., 2.}},
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}],
      StripOnInput->False], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
3eYJX3uN35MTmu6uvG6f9g8c96fQP/Cd0h79Ay9Qa1n+v/wzzMFcfyVJ8Yeq
TyvUsP8e4y92EPa62f4XT3+aP1PpAd74kUJnnyu7n+br3Ld1z9dp755vnG0u
/YMe4AeqtPh7cIsM89zaUmnZ2cgnRNgVHfr1bvEy0xlhvw5M7tPWfz/RGWHX
v9l2b5WzTKdz79VNZ4TdIO3ddEbYxdK/m84IO6hStTZLc/zqKu66VjtwUZfC
CUfTzcRqp6Ozs537qonTn/6y/LJEpR+4qb545ZCVDv3A79ZbvOKPhgeUfpV7
uWcK+rk96Af+ovQP+oG/cXRWnWHbMzlPYjqX7nvnf5USmf8G/D/i60fxgcIH
WhfjsS7GY12Mx7oYj3UxHutipo3ddLTv+X1Ef5yJblN8bvjYBJZn4yHPxkOe
jYc8Gw95NpBn2tfGY18bj31tPPa18djXBvua9JLx0EvGQy8Z6CXSh8ZDHxro
Q/RT5cMmOz/JwR/JPf/drP3wPUT0k3Uk85ccPWzeyo1fHD08SPR2fmofGDX6
ZIDf0Tx6Plz0cx2iE3mFlaebvh98I0X7/8NDbyNvMaf4V/PaNk8n+vPq4QWS
F3mvVL2hTT5x1veyh56snBsPxttJheYk/34pU/nWXuLIW8d+rdxikyPPRSXv
0eb63xezqqWqXMXmxkmxdn3qLw9ue8qR5yseeq9Dbv+bbePFw9Ys3OvI83cS
7xbd3iLqzT8ceX5Qxm2wuEbnFUP2qX47LnFY/lX9Zz57N171wFCJu7dcCj1e
o6mjB/Dzq9JVLoy9uJ/0Ww5fSb8VWOHrH/SDzpsSN9cIjq0VMsfRAyNzx/3a
trxUs2T5GZlK5/ovSz+X5fe96j/QeULi7OrSD+jLlDjbfd8/OPqCh77CT8wL
dPaRuHyr8AF0hubyeZUpdKhnweWvOnq46Jxvy4fcExeAngDfehmsF+j53UNf
xfjkwWwQeQA9+Nm49/g9W3o662tz8znbzJEz5/x++9XRV4/75NNAPjFufw99
9Zwv/2fK7Pw6od4ZR18VkjzBqWtnxw9Z5ugr/Hzyj6PDL/ZP0/4veugryRea
V59f98h7uxx9FSN5izeOlvlpVvO92s8a0Ut1SQ9IHtFUnVL7SErZ3drP5XJp
Uy7m+JUlc+/rRZF+zjKFSf/E11tuP8k6Ytbl5tM2q/yvz37wQsA9fi/sZrFX
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
7L/kf/4Pl5MbHw==
         "], {{
           {RGBColor[0, 0, 1], EdgeForm[None], 
            GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJw1mwf8l9MXx59xn/vLiko0UGlYpTIyS1ZkJhlltMhIQra/kaKMyqYShbKJ
MkoRQtkSmdkplFH2+n/efa7X63d/5zzne5/7rHvP+Zxxm/Ub3P3UIsuyHaos
K0Vv178HRHcS3U/tSfFdRN9Vp9biJ4kuUmsj/g7RffXbxeLXEt1IxzfnWXaj
2roaL0oWarJsex1foD4b0k99LhFtpvZc8DgHqu/d4jcQ3yFm2XU67xnxB4u+
pf5NxY8TvUHHL4g/XHSo+i8QP0D8LPFbiv9QfU7Rtc7PPNZe+m2a6O6iB0p+
C2OqvSB+vuiVahPE36r2kvjn1W8E54qeqjEvF19f/LFqL4o/UnQryReKP1n8
o8HPsTP3LP4njXOs6NH6ba7kPUS7qz0t/gDRf0VnMKbaITq+TLSe6Ak6b6r4
M9VyjdVDz3GV3kldtXqS3aUxB0l2vPoN0fFwHbcW/7jOfUTtIe5BdKD69JF8
sI7/0bmH6vhK0Q3UNpLsQZ33pPqdJf5v/ba7jv8SP0qyJ3ge8Z1E91b/TcQ/
zLMW5m8RvVbHP2j8o0Xbqp0l/nf1f1PtZvVpKrqJ+o2XfKzaszq+VPL1ROfw
zcTX5t1q/GGiP+pZv5DsBrX9mYM6PlLjbq0501l9NpbsIR0/U3rOrC3aTW24
+Dqipfofputdrb67qq0v+WT1by6+l/h3xZ8ifqj6/qW+LcVvLf4n8ffrvF3V
5zjuUf3WYH6If1+0We7jr5mvooeKLlKfo0QHcR3mt9pIHb+hViN+B9G6orXV
ThU/XePvJ3qqxlwhuo7k/UTnFV5nV4k+q9Zf/GUSjNe4B+r4B55XfQ8S31vt
Yf12sOhtovUk71Z4/DHqv43ozXxfyY8ofD+v5v7uazK/xR8ivjtrR/1+l+ws
0QaSr6d2Ld9Y9BjuQ22yrrGbZNvoHqYxlyU7Tm1D8T0L99+O9yD+XvW9hnXL
N9f3qi0+iG8j/mfxR+ucNyrfQ+/cOmVB8HfJJF+uMQ4R+7joWJ23RPwFojug
jJCJXKTjcaItRadqjM3UvtPxezqeILql6B5q53GK6IWlv9n/ROvrG2/O2ta1
mqn1lPwdXX8L8X3EfyB+K/F90RviD1L7WfxInXta5W+ySmO0Ez9A8sX6/bvS
6+tr0UN0/BvvWHwD8X/wTcWvL/4Y9fmK765z75O8vWgbte0k21Dvp5Ge73re
v1oueS30qujo3Gv5dLVtdbyL+n+pe6jEryvZ3bxjtdroBNG10dmsA425rcZc
p7AO6iT5PpKvK/mdOr+nZK9J9iPrQvzrok/l/kb3aKxfdd5J6EXRAfptovgW
XEvHh6nP7To+NJpuKvmzajcyp5GJ/xXdJfo/9d1X7SbGqqxv91Kfc1kLuXXE
08yr3HPxVfWZIrq16Olqk8W3Fi1y68bN1WYxDzLrr7c1zmbobPSaWufc+voX
0d1y6+sXK8+dfXXdjUqvwdNEX5H8LuaM6CrmNfYH3VZa95whGgu/K/rNV787
RNtJfpL4SeJbiS5W20l9HhH9PPP87KFW6txDJb9N/MWsZ9HNmA/R6+s69X+/
9O+tRTfW8THoH9F+lXXL26ytyvrmLfHfFOafFD1Y8q68M8k/LP0t2vBcaq+L
78NcwR6Lf1R0/2Dd1E/y/qxH8cNED698v0eLdtG9nah+m2uezKt8z3Uka6Vz
DhN/nmgNa0PP9Y74lyrff1PWUGW9/a9+/1HXO1b8M6INJd+de8bmqLXQeWto
/HNK999Y9GHmCnqAuVF6LjXB1peeM5uK3qf2lfjzRV/LbRPrYIfEd1Qbhp6S
bGVuu/JasG3/k+cO1i1/iy5Vny7ip4p+rrYj60j0s8I6e4roPPXbW/yqYAwB
lrgdnKLjN8X3x2aqfcI8Fz2qNHbYULSLnmUL8TPVd6/Kc3aG+LOxJUn/v67j
buL/Ej1O7XrxjSXfTtfolObtmQmT9AJ/iW+V+/nXZJ2L3qbzdhLfWb//rPfW
TXxb1pnk96pvc7XFmW3XB8ylzPNhJ9F7RTeV/CPsBu9KY1wn2kj0FN57Zjv4
lfrtLP4+0Suwj7nt97t8/9zz7K7SWKlnabuAHVmk47PVf+/c454vuk/u51wr
WifMZv2JvivZNWpjdfyyaFfRLyp/02mia2rcupLvKdqr8v3+rmfMcuNMMMHl
ks8T3Uf0ocrYoJ5op+h7mCl+z8rfqIHoubmvNZr5qnH3BO+Jbl0Ym4JLD1G/
dugPXestyfbie6jP9uAk8Vfpt5d1/KroMaJ/l5a/yJoWPbLwPY1FX+v4Qo23
v9oezAfRg6P11WPiR1R+Zz1En6j8Tg5FZwfjmUkac5SO7xRtqrVzfTT2nCba
XL8/mVvnvh+sQ1olnf1TZjxRN9pOniz5Yzrv27Q2DwjW0UG0dvT86qs+PxQe
52nR2sHjoBu/L6w3Zhe2vV+KP1ztyuh1/Hw0TnhUbaXk31WmW0s+nHHFDxY9
Qsd3gqlEZxbWLdj0j9K85flbJIzBe1lT/c7GzurcEyrrFnRM78rXR+eAIcFV
4LHF6ntRwgYrE6YCW70XfP/Ysp8K4685rOvSOOQp7qWyjfhVfWvlXgu7JL2+
NOn2FmA1/fan+I0SpgLP/F4Zj10heo7aw6wp3ft2ac1+oTFfL4z3rxfdrbR8
tOgYjdMmN+Z+WXRjtQfFd9Rva4l+X3q+z05zfnLlvttp/As07ij130j0FdHj
Em5oqGssE3+N2pTKvkZH0caSr5DsBt63znk8ra+9S/sXYxKGeiIzhn46zQew
8ubBNrhraTv8VGZb/I7GnY6+4dsGr1nW7rmij2Ue9331mYk+V583CvtkN4An
dbxK/Bn6/cPcuukdzs+tM7smvXG3jjuL1mgNfKrz/ie+ls4ZyJwRrSP5Orrm
ZZI3EF8H/4TnFd9U/BTJPxYdpv7LJa8n+R/YTsnXE19L/DDxX1bWvx3FbyD5
Nnwf8Z9IfobkO4mvI34wulX0zcqY9q00P7/R/X5T+XlPlbyIxr7gq18rv6uT
xf9LH/22gjnIvanl2EfJx6k1VZ/No/2X/zAXePVO5khlf5A5sXNlTIstxiaD
Ue/OjPG2SjgHvPN6wnvbaJytot9xd+yV+Pck31L0h+j1MBA8Unlt/qN3Nr20
bp9S2hZ9LPkBmb/Pp+kbHZ2wxLeFG/wM0Xtyfzvs0SPR2Gw6eqAy1vot+B7w
sYZKNl/0vcz+2JGVbRd9rlCfhrr+M6J3JLvWUe0WcIvkTyNXvw5gSvH3id9F
fB/xf2icYbqXk6N9nzqSNxS/MhrrtxX9O9ofGyLauLJfsx6YX3NgvvgzozHL
h5nvu35l/Yzf2bPy+8A2MRfwc/CzdlXrWhhfDyr9LNxryB0HACvE6JhDFa27
0K3oNfQferBzZr3YMr1D9C59wGef5PZr0Inodvi2+G06dytabl9zi9z67uOE
JbjXCZXlg5PN4RrY4o5gHvH3Zv7O9AeTnVI4zoD5HZ30lV5Ndhk+uvgxotcU
9kfwN+7T87TN7ZvMFW3Hvei3k3LL8XPwF7jWbaKjC8uIOXyTe31tp0ZAqj32
Qr9tH83j+1xb2A/C5/mxdN8ZopfrPrblWYLfGc+FH9sw2B8fX/rbMweuBzOU
9q8niG4reR/xN0k+W7/Pyu2bjE66epekq4mT8OyLcuOhqNZY5+6BH6kfGuce
/370fu5nxD8cVfi8zup3dbka8mbfgrVSf/zGj4JtFr7PjGTbT1Cbq3NPRJeC
GUv7PsSLiIlgEw5DlwW/Y/Q8sbo8d7zm2tJ6mrhcw9zPyL11DcYn+4neWBqv
Epu6GfunPqeIHhkdI9tEdEzh8cGdzN8y9xwek2wHfveC3JgJjPWAjgeJPlga
n4GJRos+oHEbix+hMQ8sbWeu09hvqjURP7ZwzOg55p/ayGh8/Ua0L/h85nvl
mXn2mwvPZ3z2duARHa/K7R/UFNZ72BhiXryHa6J1LN/tInSj6Olqc/TbxZXj
e0vBR8GxnVvxHSXfXvIlkt1SOcbCs7yp38/J/WxPBN8vOHNfte3Ef8W3Tjb9
NB0/GfztrtU9nBaNo1fip+j3IbnxdF9drwPPJfpi7m8E1sSX4Lmv03kHVO7z
dbCuAH+Dl7oEX2tq6TnVOM2rngmr8yzEkIhPETsitgt+YV3wXPVzx5HAsPXT
c/EOiCsRU1qtO9PcxiZwXWJBrK16acxeheNKyIeU1lvYDmwO9h0cv01ljANe
OrxwHI3xiUmx5liDrfScTXK/84/SuZ1EW0q+Se53C70is6/Ut/Dzcm/gMvCZ
/lbbFnwh9C82FdvKe2PtN8o9P7En9MGmME6j9N5ey9yfGO6jydfD5xtc+jmw
SQ9H+5v4nR/reLn4S0WfwvcQ/5Pk8zRGl9xzaEbyBX6U/IHCfKP0rfE1mDdz
S/t0xJxPLxxnaJQ5dr5Dbj8FXwb/ZVvxw6NjovPRQ+rfDv8WOyNZg8zx9xdK
+zXEtAdH+zMDRB+vrCO/D8ZBYLstk14/KelqdOqg3DoX3AW2W4gNj46zT1T/
X0rf51HoldJ+/ewk4xkuzOwn7ZHbh1pUecx1RNtEy7mHKbkx/9XqcwT3UBj3
tE/24Gx4/FMdb5rZ98fWN8/cl3OOF39HNE98b3HpWB9xknV1fLjkJ4tekpsn
BlTo3AvUurHmguki9S/E7y/+jdJxsB65Y4XjNX5X3jG+leQHZY574/Mi57ue
KPkh4nuj6yvzCzXeB6XjlsQvnyt978TGP6r8LOCXIYV94ZaZ41rEB/h+YFMw
6ldg5srv4V78oOg4wnGiVwf73Q8Wjkd1z/38xLWOzB3HnBotJxb6O3qssH/+
Uen7JTb1t47PK/z8Ed9G8nHRWHto5lj+zsHvgzk/J/lWB4K/kpzfwSL4JiXn
iPZP+hCKDVxHhnFZuTrcmzXivNy5EPIg1+X2Z/BlwCBgkTMy+zmMSYyUvpyD
TQWfNCj8+7J0Lv4JcdZGib8pty+EH3RecEz43OCcFbkrfJV7NNjW6NMa+0zI
yWdNTdeL6RzOJXb2i+iGyU6jE86S7FkwfOk45Nul74d7IN57We7+kzOP3zhd
F/+CNfhA8m8G5PYDyfmQ+5F4dewRm/Vx5RwL/PDMfgq2FRvL3GEODdPxZ/g1
2InKMRZszeeV/Z1WyXZNSDYIfdo2rX3yQ0sq690VwbEO1uZfpeMjzMeH9Ixl
5W+1vehnpdfftqK/gyPEvyT6fGEs003nfV56Do4QPVnyo1iPvMfo53y7cnyd
PBZzoknwe1hRpr6F/Zz91H9kbt/q0+B3T4z9y9Lj7VDaR2Pe/Sa6Y+FxFxCT
kPDE3P418ahNC2Ph58HzOn4ObKzfjswcuySeRGxr98xr6/y0xjfXb7fy7Lp+
rnYeRidYN6OjiTV1Tf2Jg10VHeOcm+JhrDvi5PuntcZY9YPnB3H4Mhizv6pz
RkXHkl8SXSt4TaPb8G3RYcTPidsMz51jWBdfKHd8Hnq/Wr/C6/q+xOOfETfE
ToP3iTmC+R/MHSPi3ohrgXNGZY6D3yG6U/D85T5576wz1irra/PKfYido1/R
s5OweZl57rV5ui5+BzkBcgMHMvfAWrrGh7rnnypj3rW1Bmeqz4jcvgnv5xJs
XGlfn7nEnCLfMjTNuV907ob6rbnO7YfNyY058NGuyI17kF+ddBGY4cokH6lz
J2q8f6JjBhcVzotsnPozDn4A/gCxmE2DdWML0ZcTzgfvFxrnT9G2NdZJ6CZ+
GwiW1fHnwTJ02B3q2zLYtjJhR/Ed1ecP5pzaCHzSzP4RupA4C37YmDQmuuXa
JG+R7uefwnEe5IxZp/DcxlatrXs4mvGD843YXWxuax1Pyp3XblbY3wYXNUiY
B+xTK1pWE93gl+u8LoXzMe0z6yR005yk39Cd6CbyxcQA0a3ElJCvURrzj096
bD29ixrJ/o2Oa4OFDoteT7fn9i9CNPbpQaw3Oq8/V+etX5gHk10dnUN4QXR0
dJ7wA9FJ0Wu0vl7c97ntAPe2PHcMAcx0e1q/XAMffULSjcSNWQv/lNaXyMHW
yFgnYGbw821pvYCTJ+fG562CcdAWwRgLPc+zEzednjtmyrpi7bRPcuKq5F43
q+zfFzXOx05L/avC/ehTT8/1UO7cDTFlrknstEPw+tsxeM3dndYdOZWvMseB
O6c4G/MBLMQ45IKJpz6SO6aK7OEk/zm3j4X9GJd4bA1+29j0HfcunD9okdkv
G5fmA7YOG4y9w1cbm8ZpF2xrLgqOWXNN8mVg2pFqDTPHP8gBEwOZGG2L1tc7
2YSYBope/CLJl3Hv0TFyYuXEoIndEsMlPvue6NaidxbOG/yYu4aDGBV4C9u2
S3SdA3Ud4Fqw7Gb44MH9b9W5vYNxKPUMvINV6Vl+Tbp/fpLzvrDJndL4lycd
SOwb/D0g2D6QF0I3o6P/swl/J13djXhW7twWdgPcxhoGm6xI73NIZX+X2Crz
ekWa25skv5j3v5t++y23b9In2L8kp8E6+id3rnZPtT/F7x6d90OOLdy3sBzf
5gCwodq/ueNJn+XGf/hqxHP5lsRGns8dDyc3TExjpegvCSsR28B3J94BPiBu
RsyMfPRv4geKvlg4JkFMhmNsPrURvZNsdpLznRmHb01umRwz9mJW4vEte5f2
u8mXEpuZmfqQs8fnIxZETB2cil3oFIz1iNlQG4W+JwbfsnBsi5gIc+q53POK
Whp44jyvFv6d2Mlmhf1AfMAm0ZS4Qv90LXIKe+qcl3LXC20c7QsSS8AvxD/k
O7UqzPMbzzQr3X/7aGy1qeb/waKf5sbhS3LbCewL8X7sC/GafzLH+om/gKPB
6NghbDpYdnL6Jnwb3uenpecVmO2L0t8HfHVv5TqrtSrbSezlFB1/Ujr+DA58
LLfOQl/dX9mPxe8j5g22JdexMPmVNaKNKmMBfKu1c+d3mFd5igWcDsYMXgv9
Re9JcQbiDZ0KxzF5L2ANMAe6DzyLTwum3UW/71wYU95TWXZ/tG+D3cSeb58w
LbmbvxLuXqrxPwmep8QtwRpgDmo7wAXgCbABGB97DBYilonNxi7vqPG/zV3b
1jP4PcwqPVe/TPOTnBnviXoVdC9xYWLCN+r4fvXN9X0XFNZV40WH5o4FH5t0
4+Kkq1fH6vOUO1f7Lnfe5Ypg/sbkU3FvxE+JnRD7YA0QM2c+TBS9LMVqiNl8
nzm/2B87VRhP903zd1Saw7cE59Af1m/vVbanxOa51rL0HvD9ybdOkvyz4LVL
PPa1wjFkYsmvFI49jE5rmrWN7ugerW/4IOSiicESCzu7MibbSL83UHsid14J
vdEpzYfnkv7nPqmPoU4GbHEA8ZPCuWPiK/DEWA6SvDZ4IlpXMK+I5RL3WLPw
nOdcahnv0XNMD/bl6d8xXZf++By8K+rxri4cRx+mfydF1/GdED0XmZOsh9ai
nQvHvdsk/Af2I65NLKaZaLPSNRLUSuA3cS7jcJ2d0rXGpDjOJsEyvtXk6HfB
/aE3Ps+tc1nP1DBxvzcF4zjwHLlqrrNeYUy1fmnbRV0kNVr1Ctc0HKJx6xau
bSDGQKyB9Q92alIYI/VImO3LYFuETfoP98FjmwamWGGb4BocxgHfn1S63pK6
S3AEeOI/e7txOvfnwmsTX/NM9dtL/EPpO9RK34LaHGIifTLHP+DJn2Fz1iic
q9sm9/etnWwP8xNf4sFofTMnOlYETgILHaz+eeFYwIWFMdlxCUPRh1jSySnu
tENwDIlYErm9wxLfV/yWhXNg5L9uiK7lmSHaL+k6dB55RepgqIEhn4rNp0aU
OkLgD7Hf+4PjhcQHwMrE5MEi2JG3ku04oXRMlNxU1+j7p1YKW0AumbGQ44Dv
Izq58LcD9z4eHJcihkDeFz1HfSm5TeoO10zXXJCuFdM6xe6Sd3g7d+0ENRLT
iBPg10Z/r5Xp94XJVhIPI8Y3FN2TO19JvS81px/knhPEVt9O/VtHy4lXcM1F
ST8Q36WmE1+FfCfjLE/vdZ/C174yGAtSZ7oyXZf1TOyxdVqP1NySXxuW4lrw
2E3WAeuBWE/ftN55fadE48NpwQ3+geg8C/lB1hp5NManFhecC94lftsu8eBe
cDR4mlqcLF2LdUfOCx1BzSV1q8S79w6OAXYoXF8EXoMHs/WPxuOPBduCtoVr
bftGPys6bP3K73uq6PHR/txLks8Nxsw3g4ej52kv0RHBNuap0tgEjELeolfq
851+v6n0PNhL/CuSv6M+Z4ueobZf4Rotaoj5rqeLX4o+KZ0nuijla+6Nricn
tkztGLVw1GlcKvpUdC3Xz8H4ASw9p3IdGnOfWiDWEfj1xuA6JOIvSyt/o70k
H8QYaluVrm37NroWpzn2RG2x+nwLBilcT3VP4To6cuHHis6Orp36RX0mBNc/
UJ8AnsAn/1v819H1FrtUznuBv6hLfzK6/vho1nRpm0xuE6zeV/JWNY5bMaeY
WycFz4NbRRunWAExA3Qgea+B4scHz5FxzHOd+Enhb/FadO3+udE1DdQ2fKqx
32TtSH6e6OvRfs6gZG/B+dTSUY8KzqXO5Tv99l3hOoHfxB9ROj/1q9qhpfNc
v6jtXzrvdkyw3aVGHt8JH+qqpFeJSeBrMD+JYxPPZu6RpyBfgb+GL0btOTWT
1OWcKDo93fMysG50bc2OlevlwLcdiJWmOcZco+4B+3J3msNbSH4M169c43cJ
cym4JnBpeocHpPeMT9ld8icK125QqzmrcA0VPhvxtjnB+yMuiK5pQ/+S36cO
jDVBLnV5dF3jtZLdGF2bOTO6HoxYDDXgK6LrroZG+5Cjk059LLo2kTlIHdQX
ki8Dm0XXb10q+jS6SfLzo2tKl2Qe51O1BcQro9/JWPVrX2PfAB+BWNQ30XnZ
3StjGrBN7+h6VOoeqe+gng1fZFZaI3eUrr1Hh1B/3C9ah6C/qMGg7pR67OPx
QXT8seTfBNcLUUe0upZG/D7iL46uF0WPUsNLPRxxWWrGqJEm9n9n5RozsO8G
0XXR5IXuE30xuqacuhrq37DBxEWei64BJSYQEuYH+3dJ8xtcOTHhXup5qMcj
J0Vuivjz5Tp3dDBuJ07US/TZ4DpJnuX54Hox9MNN0bWiC0Wj3u9pwXHyWjWO
C5D7eyZYh/Adie1MylxfPDu4NpX5TP05vhc1dNSN45NRHz2tcN0NNahcC52M
bqY+b3V9b4rREcc7XLRljdcedocaYmqJqbFnH8TEzLXex6S1gP4BazUVf6HO
OSMY+w0Jrumhtoe6+gcTtgfjU4vM/aD3XgmuPabmFL8JH2q5+reoMabHH2V/
B34Q/lDtGsfib4uukyeeTHyX2npw8zel97SQz6HOjT0pL2TO/7PvhZxQj+Ac
EnX5+NN7VN43xBym3o66u4NKz3NsNfcwP7geGHtBvRr1VOxhqp38U/xU8mun
5a4rWzv5ufi7a+laG+i8u6JrcdlbdG7lentq7ai5A3+Ch8kDbVnjuCo65+xg
rHBOcG5o/cTj0/FOBmFf1O/wYJ/07WR30CcL0tphXS/GFoLFo/2Uweq/RY3P
W6pxjhCdGlxTcU60b/W15IdJNi96P9VZ0XEDfABqw+4qPJfYu0QciRgC9VHU
WFBrwf4v/Eb8x5Hq82r0fjDGZ18Q9Sbs1UKngafAdI8E79vC1jwavY8Iu/9y
dM4Yu/MOur40rtisxrGwPRJGQI9NFL0hGKdhu2cl3ct+Hmwr9hLfnZgJ9SrU
rRBjIZbSU3RCdN06sd/WNY6zgCXI/W3A+wyOJ+OrUJPFXiHy+NTCNayxfcVv
2kj8v4VjFMSCiP/gbzZLsXXWCGt93cIY5r3o2n102pTgecg7/1NtSeFa09sK
19Gwlw0cRS0y7xYsSp4b+9hM132/sN+0JM131hO1fGBdMC9+OnUYTaNj9cTt
8aHA+fMTJqSWhvoT6lCo36b2Yt/gvX7UhbDHCBv+Yua9budVriUCqxyfdDj2
hRwQuneN4Lz46vwwa1ZjDFB7vXStMribWhXi8EdkzqlR200clPw1sbh5CROS
QycPdEJwrSC6p6pxvuyC3DaONc/aZ/8f7w/sR936jISXVqXYFDnCusHxN2KP
F4v/q7If3KjGNTbsiWBvBHveiBtQv8W74x0OSXgAfY5eJ0cP7maNsc+OPBC1
NtS5sZ6+iq5J2yatu3OTTgCHcF1yPeR8qJemrpL6SvJ65NeoxSZPT04RnEdM
m3gwdRnsQyRe/Fvp+nLqJ/4sXbNOfnFe6fp56mBaJpyAj4eNoc6ZOTyudH0M
ewrod2LCTtRRk7u8KH07cgSPJv8Uez4ns59NzvHC3HWt1LPif1Iryx6HudiR
ypgAbMDeCPKSl6rP2sE1GNAvovfXkFdknwc2m/nDPAI/gp/ZJ4HPi49C7Qw1
/DwHNpM9VMTZlpTO3ZAPpe6SGgzm2ifRMUFig+2D92ERIz40eE8TdnOd4H1A
1HGyB+WtaNsLlqLWk5pP8Bj7udCH3YPzEeSGGZN4+F+59dKupesAdgve98F6
+V9lm0jNC3tdiZcSB9k1GIOCRanvZQ/mZZxbGRdTS8feUPYDEGuhJoc9JOgE
cDg5I+L45B3YC0n/8yvXI1Efhf88K3pPy4XRdRT9kt1EZ1C/RS0bMTHupUmN
a7CxUytL14Gg/z5HJydMgu2mDoRYyZrB9hT7uSw6J0selhg+9THdkh4gnk+u
pWPw/rLLc9dgs0eDe2gRHc8nzkJt4ReF8d4j+LTR/ja4kZqBY9O33jXpH/TQ
o5XXIPUt+DP4NeBX6vyJDw9X/3ejx+U9kP9lDlAjwN639bDzevZVlXPHYAxq
8lmn15Te60ROiT1b7C8bnnmP6RWl4+E8FzaK2AN7jlk/rCP2JlInQAyoVnCe
kTwJdT7EYagvbJ5sEDU/TSrvMSFuQS00ey3JEVJnvbB0roW9VtR0kYektoc6
LuIBP5f2TS9O17qpcLwSLMpeNrDc5aX9vNW+TLAPzXxjnzF7gcnR44dS30J+
hvoO9AO5TeqKqBVB39TVu+rAtQq/O2qt2R/BPgl8O9Y++5uxh8R9fiodh6f+
b9vg/ZPkDvBDqVMHX4GzqO2gxgO8R1039dTUg5M3J4bMngZyLuTqWF/UfAxI
4/8fSJmTQQ==
               "]], Polygon3DBox[CompressedData["
1:eJwtmwf811MXx7/r3n/SpCg7RIUSZSQqlZQGyV4J2bI9yEyF7JEthEI05Omx
KUVGqIwkJSGbMpLwfN597uvV7XfOvfe77z3ncz7n/JsNGtL/jCLLspvLLKv0
e6OUv/U7I8+ytyW3iFn2keSodnfIsonq20fjvfR7pw4YquMGSF+udonkLdTu
YFzzn9GcsTrmbOmbau5GNVk2Sr9t1b+l+u7V7/Oa315zW0seqbH2ut5y6QdL
/lTy4zr+fM3dQvrGOv5eblJz99fPPZJf1vEdcp/zWum7S19Pej/pYyTnOsdo
6S019q/kw9TXiPNr/GHJ96mt1rk2Ut9Tkt/TvP7Sv9H4R5o/SX2bauxNtVHq
25ZrSL5Ec7aRPFhz2qt/lPRndK8Dpe8ovan0xzX+tvoO1vz6khdq7B6dr17u
e+ReW6lvgeR1uEfJW6u9J/kNHT9CxzaSPll6e55bz3+Gjlkgsbb6pvIt1P8W
966+yRq7Wcccof526v9Bx76v3wM19q36PpY+T/oR0n+UvkD6FWpfSb9Lx/4o
ubnaXJ6XPp1rX81/V/rrmd/XlRr/On3rnySfqd+F0m9T20RyW7Wjde5neD4d
u7PmLON49eW6/6vV9730izJ/7xc0fxfpP6gdJn0M30ljN6n/Nx17uPRdNXZx
5vF1dE8XSt5b44u4X/3eLX2p2nO6xhvMl/w5a0vjn7L+JNfXvM+k7672k863
seYs1tgCzf+Fd63xFRobqL5l0i+UPkP6dB27QvoDar9K/kXz95Y8QXItPc+V
mveD9P/qnB00doZaXY3VU2uksR3Uxmj8II1/JnlC9No/RvOa6/iP9fuT9Ks0
9ovGRur3V+mHa/5SyZfpfmok3yH5aY0frfkrpLfhe+gabdS3hPWu/pWSZ2p+
X+nzNX+m9Fel7ye90Phr0vdU+036Njp+mcYGSV8pfSvpx0o+UPO+zL0nmkje
Xue5X/KB6vtU8v6a00DXPVtjr7DWOZ/G+6brH65zLpJ+tua+nL4f37aJ+kbr
uDPV10O/t6n/Wck7qS3V+HiNz9Gx/dX/hfRV0g+QfLzG22n+COlTNH575eNX
a84gyZ01/qfkfdXWlfyG5uwvOWjsdelv6beDjv1Sx7zIeg/ea1eq/3/Se+t3
kfTemlNKPjR4PbOuX9L4AWrr69jzNfaq5BP1u0bz+2a2b6y/g9hfapdKvk19
jSU/q/au5EMq27P62Fjp96htIfk79c2VfHTwfv5e8vc6fz2d44rM34Q1wn7v
xXpWO7/0e+X93q62meTGpd9NJ81/TfIGaiOld5Y+U/KePKfkn9V3jfQG7GHJ
HdU3XfL6asMxqdJvlbxr6W9xpPRlpfcB++Ee7J3kprrHFzX2J3uetaXzfyB9
F9YP9j/aVj4pfbjGe/MeJVfqu13yzmoPs5elf87+YI9K/lB90zR/rN7DDpJ/
Vt/Hkk8N3l+LNPdnzV2XPSE9y+2zOvFdJE/kmaQXpe3DP/gyyeuoXSr5BbUW
rGedY6HmfyB9O8kD1PeV9LPYw5r7mq75R+Z39rvkc9XXU/oStfNKFkmW/Ye5
alvp2HY6xxTuXf1f8izq+z2961+j/VVvnedfne9kyZuxRyVfiw3Vs12vsb8k
X4/NlfyExs/j+qX9X+dqrdnP1qh1kXxd6fk8816V9+/OhW1CR8kbY085p/Tj
K9tbfOuGrJnkv27LbQOPkBx1zBjJO/ON0vrDPuFTX5H8YGX/jJ8ua7x+sBV7
qO9Vyc00PlLn7aJ2k+TAM2vsGs3pqecr1U5i/eH3dPzX+j1TY8ep73t8SOnx
yerbU/K90fjhPclLJH9Xei7PzLM/q9ZQ8hBsseQbWC+5v+FbkvdSXy2Nt8n9
TW5S346Sv1Z7R/L6+HSurTnrSe6nVh+7xLvQ/f1T+l101Zx/sd18D94ne0Xj
Q6WfgJ+RXiP97dK2Z2hu+/GanreP5HmsvRrjIWxF79zPxP7cUfpe0mewXnle
yc+pb4GO3ai0f+nJ/fLONX635GHqa4ztkj42N944UPow6WdI/5W9res1xEbw
bTS+P3sbHy39N96bxh/QPZ4mfaX0+jXGG/WlL9AzNZM+VfqjhX3o85r73+T/
wQFbaHxGYd9Uo9/fCtuLUzT3CPV9kXzUofqdldl3vaDWI/cz7Sf5BrVDdNwG
6usheWqw7eKdHCB5GpivsM1+Vdd8Rm1ryX+A62psswdLnpvZln+quePVxoE5
8EXqu5Lz67h1NX+DaCyyEhursSXqP0p6I/3WqbG/HayxQ9W3hPOC4dLarKvx
16X3A5toTjPJrwRj2z7SN5K8XPOOlX4ue1TXfVl9t2T+doujfT6+/0r8U2W8
cKzGB+S2aR+q73Dplyf7hn08QfohGl+MPdb4FPyZzn1K8sfH8K74ZglfDJTe
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
2LI+yd9Sz0BdIpj/yeh80NjSHA7x+/8BZ3wXeA==
               "]], 
              Polygon3DBox[CompressedData["
1:eJwt1XmQz3UYB/Df+h0YR6ppSAdJo4komlqpXGEmrCwiRyPFUG5hKTe5kqty
dKHGLRZJjsWu2Q4xZJ1djlKLclQ0E1uvz3z3j/d+nvf7eT/Pfn+fz/fzfO/q
MSCzf4lYLDYIkjDRn3Jpsdgu4qR4LDYQH5+KxS7iOVDI05PWhNYrEYu9CP/y
N8U30gvk+6gbRc+m9aN1oW1XO4HeHz9OPyTOUNdJ7k18NXRTMwea8m6wFkBb
nqO898Uj35/qr6rZzXOz/GV8Ff0ZcUeoy7+c9jGU59vL14G+kmcQ7TKtPP6Q
fvfjh8TP0kZYR8I6vqr0mvKl8Db6fYHvFT/J94p1KKzlO2f9Uf+D4lxxHkwW
36S2LeziX03LVd9KnwO0avAGzwdhT8UXoAzfQZ7WtLvFubQB6jLwdDivdire
CR4J+56MziGcR23ee/BRMI22Ht8AC/iu8P/CsxIayH2D9+E7J/6Upw7UwP+m
n+RZCulyX+HHobu4jLUsLNHvZ+sxntesVaztaUfVDxQn9doOa/CLcCPPKbyz
Z78U9j2cq35reJ8XN1RbkT6Zlsf3D5zEt0JzNXvw7vAW3yQoJ94Jj8p9x5MT
9kvtr/rto7/L8wkM1HtQOCO+fOso2imeZbAcDuN71S5T+7C6Cjwf0SrDWtoM
WhPabfgqvnr6vI4n6OXxfvS5+Ht6VePvi7cK74f4OZ5OMDf0oqWrzcFTcAM+
lH5A3UKowr9Un9G03/B1kA1H8AXW+dBG3Q6+/eLGqeie9VTzAqzBh+t5Pdwf
vgZQDy8NaeLHITv8Rnwh7xb8Univ9ErRxtL+EG+DrZCPr0hE+7uDryxMpCVK
Rs9fKfRKi873BFyhdeG/QKsf3lvYJ97Jt0TuHL5Zfg/eBa8IU8JvpeXTmuux
Rbw1EdW2sC7mqSy3SrwLdsKrqeiOfWbtGGaH/AC+W2Fq2AM4LL8YasqtC/eZ
73txmjgW+vJkwRGeJVCLnE0fFuYQvgg+hPV4B7VH5fvp3xvm05ZBLf6X4tF8
y+TZgeeEmSH3g9pNqWhPfw9xeF44hk+AUmF+8c6zPyXwTLhFPovWG5qHvYem
4va8u/2P0clob8IejZA7zr/ROgS+FE+Hr/WrGuYm70k1w9XeAdNoT0HpcK5Q
UY8rPPnJaJ4d5qkOt+Nz5eeE9yvMDT32hXeTPtJaMhHN6ff1Oks7Kz8mzAyY
EbRE9Nu/TUVnFc6sbiq683n0p/EH8U1qG9Ouq7sGi2iDoWW4CzwLwp3FC/lO
+x9ZPFVgeiq6H4XF+xn2NRc/k4zudx11tWE5bR70VDMOv5dvt7Uk33/iy/Re
/AXJ6MwLiu9XuGd78Ku8Z8R949HZh3egDj2DPoX2F20IbXAyik/QHpOrxFNk
Pa92WDw6g3AWhYnovPbLbxNvL/42hG9Ea/n9fBnW2bBS3cgwNz1fhVT03OH5
x4Z7Tn+Hdp2vOl5EbwdFeFbx3Z+JN+Krj48JZ4JvhswwN9QspT+g9yxaC74n
8HF8F0pE3+Twbe5Be5nWCJ+p5k64RluRjL6ns+nxMBPwrnzj5eeHd5reLRXN
2NPF8yvMsW14A95mPDOhKHxf8VnhzPFMyAvfAn3S6Q3j0QwLvyf8rvP0n4r3
IOxFZ3WzoR1P13g0U8JsmRNmQjyau2H+fk6rEe60Z24p7kF/G/8fHwM4jg==

               "]], 
              Polygon3DBox[{{1387, 896, 699, 700, 897, 1388}, {1345, 845, 658,
                659, 846, 1346}}]}]}, {}, {}, {}, {}}, {
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVHEch/G/phO5SRcaFVmCgq5EoWhZL0AtK29l3jLvMzWalo7mJXUU
RROqjZWlJN1eQ+u2LVuFm5a5EAQF8XMI5jfP9/me3zlnznCK2hO18YwQwnfz
MzOEGVNrbpqof3cihBo5Lt/ADZ7ODkEMfb4SeIAvzKHeJwzIg3iImYo5zOG3
8MiMyDF9Qs6Tb+NJ183VjfPH/Bx+0N2R8/UzfFAuwU39sq6Op3k9VuKKrkFe
ljsxFQvhD17nw7iGP+w8lP+aKv4U3+C63V+u28Xr+ShetPtW/q3v5i1yClfs
Vuo2eQ/vxH92n8tX9Nu8V+7FLbsFWSFMR+ebajOg/2avTf4qt0bkr1yjn0/x
L3hVNynv6Xv4hPwJL+vLo/+KPzD3TYXuo2Ol+jHeYZpNmb5Qt+7YM95uPuvu
4nn9a/2IfM9s61d1TfJLfSNew12/v0pekp/ge890YLeCL/J5POO8IXlfX8wX
5Gmcs3tal+RneTp6cXQpyNY/4rnyfPRs+kvuNczj/BTu8Fn5AiZ5vyyGodj/
9/UYuXRPOQ==
             "]]}, {
            Line3DBox[{1250, 1643, 1532, 1818, 1443, 1281, 1441, 1828, 486, 
             1442, 398, 536, 1147, 397, 448, 355, 1805, 1490, 568, 569, 1701, 
             1817, 1531}], Line3DBox[CompressedData["
1:eJwVz7kuRGEYBuCPzEatRSYxwhjXYYkoZibWmcYFcAW2ho5CYWt0qDEjERFx
G0rGMraWynOKJ+/7/f93Ts7JL62Ulzsios5PKuI4HbFNlRe6MxE92YgT2TB/
2xnVm3qFLn2WXjtnsuXsy05JH6FsPpVF9zMyR5ZPO0U5zKada1mjziILfNj5
kxvup3kwt2k6u5fvNPQ7+dgZcaXf6m9c6jfylXXPXpj3mEr+y9mQfqSvca6X
fN+87GfSWcvOoP7LIavO+uRc8q+Mm5/tFJJ7fYK0niFFlSf3ee8d0Lfcj7HD
Afvs8g8h6jHE
             "]], 
            Line3DBox[{1282, 1839, 1641, 1639, 1640, 1491, 1694, 1806, 1283, 
             1333, 1251, 1332, 1764, 1331, 1399, 1562, 1563, 1835, 1398, 1564,
              1335, 1445, 1588, 1765, 1706, 1444, 1284, 1448, 1707, 1756, 
             1589, 1447, 1285, 1450, 1819, 1702}], 
            Line3DBox[{1286, 1690, 1058, 1533, 1534, 1418, 1569, 1493, 1535, 
             1820, 1287, 1492, 1288, 1494, 1181, 1757, 1289, 1334, 1290, 1182,
              1766, 1336, 1400, 1337, 1781, 1183, 1341, 1446, 1342, 1807, 
             1184, 1611, 1291, 1449, 1292, 1795, 1185, 1495, 1293, 1451, 1294,
              1837, 1630, 1186, 1496, 1453, 1796, 1295, 1455, 1536}], 
            Line3DBox[{1296, 1791, 1537, 1419, 1570, 1497, 1538, 1667, 1808, 
             1452, 1297, 1498, 1187, 778, 1338, 1298, 1188, 1767, 1339, 1401, 
             1340, 1189, 1770, 1345, 1346, 1769, 1190, 1653, 1736, 1191, 1590,
              1592, 1591, 1838, 1631, 1192, 1612, 1299, 1454, 1737, 1668, 
             1193, 1499, 1669, 1809, 1456, 1300, 1632, 1194, 1500, 1758, 
             1670}], Line3DBox[{1301, 1539, 1420, 1771, 1571, 1195, 1501, 
             1502, 1457, 1738, 1504, 1593, 1503, 1196, 1671, 1768, 1343, 1302,
              1197, 1680, 1782, 1402, 1344, 1198, 853, 1349, 1199, 1714, 1654,
              1739, 1200, 1655, 1740, 1201, 1656, 1741, 1202, 1594, 1595, 
             1742, 1645, 1644, 1203, 1708, 1829, 1596, 1634, 1633, 1204, 1613,
              1614, 1833, 1458, 1636, 1646, 1635, 1205, 1810, 1505, 1303}], 
            Line3DBox[{1307, 1552, 1425, 1773, 1377, 1550, 1551, 1549, 1473, 
             1732, 1675, 1513, 1375, 1279, 1376, 1731, 1674, 1373, 1278, 1772,
              1374, 1366, 1372, 747, 1371, 1233, 1752, 1663, 1232, 1751, 1662,
              1730, 1231, 1277, 1650, 1649, 1841, 1230, 1276, 1617, 1729, 
             1711, 1229, 1275, 1616, 1728, 1709, 1601, 1603, 1602, 1831, 1472,
              1306, 1470, 1691, 1759, 1471}], 
            Line3DBox[{1310, 1792, 1556, 1426, 1386, 1554, 1555, 1553, 1480, 
             1735, 1677, 1514, 1383, 753, 1384, 1309, 1380, 1775, 1666, 1381, 
             1379, 1411, 1774, 1665, 1378, 1235, 1753, 1664, 1734, 1234, 1280,
              1618, 1606, 1832, 1607, 1609, 1608, 1478, 1308, 1801, 1476, 
             1605, 1604, 1477, 1733, 1676, 1474, 1475, 1760, 1692}], 
            Line3DBox[{1311, 1693, 1754, 1678, 1236, 1515, 1761, 1312, 1479, 
             1313, 1237, 1712, 1762, 1314, 1619, 1315, 1238, 1776, 1387, 1388,
              1788, 1239, 1389, 1390, 1777, 1240, 1316, 1382, 1317, 1778, 
             1241, 1318, 1385, 1319, 1794, 1557, 1436, 1582, 1516, 1558, 816, 
             1481, 1320}], 
            Line3DBox[{1327, 1755, 1484, 1326, 1245, 1517, 1815, 1325, 1393, 
             1324, 1244, 1780, 1392, 1412, 1391, 1437, 1584, 1779, 1583, 1395,
              1559, 1394, 1560, 1823, 1243, 1323, 1483, 1322, 1763, 1698, 
             1242, 1321, 1482, 1814, 1679}], 
            Line3DBox[{1416, 1790, 1529, 1417, 1330, 1413, 1568, 1651, 1789, 
             1528, 1488, 1489, 1440, 1530, 1642, 1840, 1652}], 
            Line3DBox[{1421, 1824, 1206, 1506, 1507, 1459, 1509, 1597, 1508, 
             1207, 1304, 1347, 1743, 1672, 1208, 1681, 1783, 1403, 1348, 1209,
              1682, 1784, 1404, 1350, 1210, 1657, 1744, 1212, 731, 1745, 1214,
              1658, 1746, 1216, 1659, 1747, 1218, 1357, 1748, 1686, 1220, 
             1687, 1749, 1360, 1221, 1621, 1797, 1713, 1460, 1361, 1222, 1710,
              1798, 1615, 1461, 1638, 1647, 1637, 1223, 1811, 1695}], 
            Line3DBox[{1424, 1822, 1548, 1274, 1600, 1547, 1469, 1512, 1813, 
             1697, 1369, 1273, 1370, 1727, 1673, 1367, 1272, 1368, 1726, 1688,
              1365, 1271, 1787, 1410, 1359, 1228, 1270, 1725, 1227, 740, 1226,
              1750, 1661, 1724, 1225, 1269, 1723, 1224, 1268, 1722, 1685, 
             1575, 1267, 1648, 1721, 1684, 1467, 1266, 1599, 1830, 1468, 1355,
              1465, 1265, 1800, 1598, 1466, 1305, 1464, 1799, 1660}], 
            Line3DBox[{1429, 1793, 1587, 1430, 1397, 1428, 1561, 1427, 1249, 
             1827, 1526, 1610, 1527, 1487, 1525, 1803, 1700}], 
            Line3DBox[{1519, 1802, 1699, 1485, 1328, 1246, 1816, 1520, 1521, 
             1486, 1586, 1585, 1826, 1247, 1438, 1439, 1396, 1523, 1522, 1804,
              1248, 1329, 1518, 1045, 1524}]}, {
            Line3DBox[{713, 1840, 652, 1155, 1156, 950, 1108, 1828, 715, 654, 
             830, 951, 1765, 1109, 717, 656, 839, 1807, 1011, 719, 660, 1736, 
             721, 666, 1740, 726, 673, 1746, 733, 1718, 681, 740, 690, 1752, 
             746, 696, 891, 921, 1774, 751, 701, 899, 1777, 900, 755, 705, 
             901, 1780, 905, 1085, 758, 708, 1043, 1804, 1044, 997, 998, 761, 
             711, 1793, 939}], 
            Line3DBox[{736, 1799, 968, 967, 1023, 1022, 677, 1825, 729, 1148, 
             924, 857, 932, 1096, 1824, 931}], 
            Line3DBox[{743, 974, 1759, 973, 794, 684, 1800, 503, 969, 465, 
             466, 1573, 286, 858, 372, 1597, 501, 408, 410, 930, 1771, 1095, 
             929}], Line3DBox[{762, 1165, 1051, 1817, 1000, 764, 1005, 1806, 
             1008, 1007, 829, 769, 1757, 834, 770, 911, 837, 1767, 842, 838, 
             663, 853, 916, 854, 670, 1744, 730, 1716, 678, 737, 1723, 687, 
             1176, 1841, 1177, 1178, 1179, 1180, 1129, 1832, 1128, 1144, 1145,
              1146, 1762, 987, 813, 990, 1035, 1036, 1763, 991, 819, 993, 
             1802, 1040, 822}], 
            Line3DBox[{766, 1060, 1058, 954, 1009, 953, 1012, 1808, 776, 1066,
              777, 1064, 841, 1768, 786, 849, 787, 915, 1783, 851, 860, 852, 
             1091, 1836, 918, 1092, 863, 971, 864, 1721, 1172, 1173, 1122, 
             1125, 1123, 1728, 1138, 1139, 801, 977, 802, 1733, 980, 1031, 
             981, 1754, 810, 984, 986}], 
            Line3DBox[{773, 957, 1796, 774, 958, 1013, 1809, 781, 960, 782, 
             1119, 1829, 1117, 1170, 1118, 676, 1749, 869, 1153, 870, 1720, 
             1154, 920, 1093, 871, 877, 872, 1726, 880, 796, 887, 797, 1731, 
             889, 806, 895, 807, 1735, 1029, 983, 1033, 816, 1081, 817}], 
            Line3DBox[{783, 1758, 961, 784, 962, 1135, 1833, 788, 1134, 789, 
             964, 1797, 1149, 873, 1067, 874, 1068, 1834, 875, 1069, 792, 879,
              793, 1727, 882, 798, 888, 799, 1732, 1026, 975, 1030, 808, 1077,
              1792, 809}], 
            Line3DBox[{818, 1814, 1034, 988, 812, 985, 1761, 811, 1032, 982, 
             804, 1801, 979, 803, 1143, 1142, 1729, 1141, 1140, 686, 1722, 
             866, 1099, 865, 919, 1715, 856, 862, 855, 1784, 917, 844, 850, 
             843, 1782, 913, 779, 840, 778, 835, 1059, 768, 1061, 1820, 767, 
             1010, 1006, 1055, 1166, 1839, 763}], 
            Line3DBox[{824, 1045, 709, 759, 1037, 1815, 820, 1038, 706, 756, 
             902, 1778, 814, 702, 752, 1775, 893, 892, 697, 747, 885, 884, 
             691, 1725, 741, 682, 1719, 734, 1747, 674, 727, 1741, 667, 722, 
             1133, 1838, 1112, 1161, 661, 1160, 1159, 955, 1795, 771, 657, 
             1111, 1110, 1756, 952, 765, 1157, 1167, 1054, 1818, 1053}], 
            Line3DBox[CompressedData["
1:eJwVzrEug2EUBuBTpC4BiUU7ugKd6GBTbd1BV8IFGBqbaJpKJARBR0OVThaD
RCINIjqoNLF16mIgTQwkHsOT9/3O+fL9/0xpo7ieiIgCp6MRl5wxxzFTYxG/
yYj2SESFK7NFs5bMMK1v8mBXZV5foGqXlbPjEWX5ZFf735sPvbcrn533yOkD
sxf9kEf9Vdbp6O/ynK7ely3e9IG8pqd/yBu2vPXjfCQ/nW9Z8v1lvsxzcttu
VQ7t7sjrKf9ZlAV27PflAWt8u3PPhJ52b0VOUnHvhCYXNPgDfEQyRA==
             "]], 
            Line3DBox[{937, 1076, 1773, 938, 890, 1028, 1100, 1027, 972, 1813,
              1024, 1025, 881, 1073, 1072, 1150, 1821, 1070, 1071, 1017, 1137,
              1136, 1798, 965, 790, 963, 1016, 1810, 1015}], 
            Line3DBox[{978, 1760, 976, 800, 693, 1127, 1831, 1126, 1124, 795, 
             1164, 685, 1121, 1830, 1120, 970, 861, 1097, 1098, 1785, 947, 
             946, 859, 791, 1743, 669, 723, 848, 785, 1738, 1014, 1115, 1063, 
             1062, 1065, 1791, 775}], 
            Line3DBox[{1018, 1811, 1019, 966, 1021, 1020, 1812, 1074, 933, 
             948, 934, 883, 936, 1075, 1822, 935}], 
            Line3DBox[{1046, 1803, 996, 823, 995, 1042, 1816, 1041, 994, 903, 
             992, 1084, 1823, 1083, 1082, 898, 989, 1776, 896, 699, 1734, 749,
              694, 1730, 744, 688, 1724, 738, 679, 1717, 731, 671, 1714, 724, 
             664, 847, 914, 1770, 845, 658, 833, 836, 1766, 831, 910, 827, 
             1764, 828, 1087, 1086, 908, 1003, 1805, 1004, 999, 1002, 1001, 
             1050, 1790, 928}], 
            Line3DBox[{1056, 1819, 1057, 1168, 1158, 772, 1837, 956, 1113, 
             1114, 662, 1737, 780, 959, 1162, 1163, 668, 1171, 1742, 1116, 
             1169, 728, 675, 1748, 867, 1152, 735, 1786, 683, 868, 876, 742, 
             1787, 692, 878, 886, 748, 1772, 698, 805, 894, 753, 703, 949, 
             815, 1794, 1080, 1078, 1079, 1130, 1039, 1755, 821}]}, {}, {}}},
         VertexNormals->CompressedData["
1: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
+Mx+SXIP2IV3B1M5zE4dfILylEqBkygnpv4t1A48ZM0jaOeCffVrtLOoY71T
uD4bnKPadIXGWUQ3mJflurQUTtT2HdUL6iW1Cvr5/MUMkrp5zifntgII7Iuo
bnZkkvJnCVHPlLuJzR6GqKwHxUNwsRLq7SS7R6q3lIhSHhW6/2qzZw9MdUgb
pvrwTNjCH/VjmmX5UT9P5npkmTYbZKdOO+4yQONEQbvX8exb+KnEnxFsxybe
8y3uv97IJtbnSt1mGhbABqe3S/VOMUlJVsfuGVldRCZico2vWBc4tbteHVrZ
RYLtjG2vuTQRe6GVV56V9YCPr+Amqg97jB7poL6xqlk+6ke1JL7/LcSEj9vW
b7uzvZcIHuHJeCD85l854cjhX7nJ3XoR/K7lzKmXqB2QmT32x45Kzpp79Luw
WGPkAf0uKOtGn8bvJkXNlsfvfo18dwr1Lz43TEJ9zr6Asy/4d18cPxCOH+Bf
P4R4ziLoZxMN7jLqN6hLn/PHb1sKyy5SP0OY2ZHT1M9QxNxqhX6eL7q8Bf28
PDY5E/VVNx76LkP1OecInHOEf8+Rc+6Ec+7w77mzD5yLxnjrPpH3hcYJSHNv
yMY4kWw0c8F4c+ie3EHjCuIUD57CuLp80e8Bxpvk6NwqlFtNKDyA8qenPIow
3tysuBlox9i5Ox7tcOIcOHEO/8Y5Jy8IJy/g37y4Y/ryLuaj52aP/TSP4Mga
fsM/+TivSAjz0Vxifj3NO1DRu1qCeVf+64wR5iOXwpRClH9MuZuJ8qIc2xeY
j8n9W3XQjhhXrQra4eAAcHAA/sUBDm4QDm7Av7jhEVZrg/hzTG8Tb94BBnRb
uGcizqwP3hCC+OMgNjxA8QeyRSyf/k/86eTYWcixw8E9wsE9+Bf3vgYUfsum
+GmS+ViG4ico+QanIk7aZfyKRvwcFO2agvInTRIP/wN+/n92OLgNHNyGf3F7
63XL5fM3BKqpVkkMvy8ZIMNRXHprsjrg9KUqnheV3eRR/JxDP63ZRJB/4z2h
mia4z5O90XDSJbWo3lO2mzRZZLXkiRqRfoonDK6zqjyVZG6hxZPnEZ3kc/jM
pPSF/SDJVdGvTftJzciStvayLlI0p6jSX5UNR4cZ61a4dBLl+eFhC6CLbM4p
kl2ynQVLrVa2UzvAz/chCO1IjR+NQjviKU/Sj5oVkNPeFtV9KY0k21pywEpk
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
9zD2oRULpmzB+BHx5vvxILWbTKzlGcL3weWplscwbvWKslYhP7+7QtgJ73sb
dCcWIz8v7pi/Bd/3jbkOxuG7qpr0/XOYLzZt2zvxHcduKLgF3yWVSBwXvuO8
mT2x+KdFJ5HQHvNeLNkKs/1O5Cc+6gHXW1tq8Z0oZVOSK74PPud6k4J5fSOo
8oagfxsJfiWmOurRBjov+R/e3NALnZbNNXifUBXCfonnYrjtRyqeSw1zjaA8
xb29cd69FPdIK1vPHnGvSOTeq3nZLHLRWHVpTROTWLruvKDxoA4c+e+ekeVn
kee25r9suhkkZJt69EPKx1xCb6auo/1X7JuWaI94Jvm5lqd+pVQ9tHRUiCyj
fQFDTEtmnPJ3GZPNYyVRLfBtj53vlSwW0Zr4Sngt7TNUUlmFMpMaYP+L2zcM
pFhkivFWw3gTBrEVqr3T6NoK896ov4ibSvsgpWOXAhndZDQozxHv23nZZ7Ro
/sKJCPvbNH/JmPc2E8zfec56srRugkn+Mn6smyNfT9Zi3bQrIvto/YXvwty7
sf6KBgWcwvo7+dn9Z8/XV4PQoJdkWHEXzDw1esLhdy+YRB1dQ+Wk0CRgDpWT
9/JzrqFc3MXaEuvLm1r57bS+kBeni/KwvlRWnuehdZA4O9r0Yx38IOyXgnWQ
74PjbVpPyUXdHQZYT9P28mlhPZVVlfuA7+9esQ8P4+8Q/H5/48Y6/uHkoQ7k
Pz+qOkrwXaPo1twIrONdElr7aB2H9Kn3/LCOT69q4sU6PnWdShDem5VvcxbG
e6098vaL8V5LJ9nO8/t5il+2396tEGeRK8oZAr8SKd+uqbmLPHxfXqYQ3iOZ
VGiPIA93bOeqpvEDGi3c49882ojOd4MHGD/Lx99Ak0MTqO7Pvn/2WyMxTyhS
feTdDz9rX/P/pv1CStZFA7wvSjEMUMJ+ocFdgUXjFjwc3uyicUtED5fmYNzm
DOw6hO8gN09KamHfGuQzpQjz4uEOxp4lpTS/eSaF//zdQQ6+qRNdfYAJMy9K
2WO/80a8dTTgDpMYx+2qwn7HIkJHFfsphajHunhfdG1RqyL2U3tq5lS4UN7l
4ym1/K5lB+zLEmUtc2OCi53W52i/FsLlaGUeLNQIFdP3X9ut3g9rEr+c5pVg
Ed4tclOX6bLItu7la7l318MCIb2y3cvZxFDvdqj9CIvkOW19bpz/DtJhwiSx
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
cv7uvokPihnkd+DM43h/Rb+rj9/d8tdcdvoiE773cnVksqcC3/O0duJvq9OI
92aPWqqh6kQLMXD5LYn37RW9ThV4L0frhcp/mssWOiB2rSeojWiYn+zGe2/m
/tkyeE8o9vGCQ6F6Mbk+RTKlXKuayBhrSihOGwYRzlz2jb/msstPht2jcU4+
JG9xpXFOHry404dxPrTl/xX23nE9f+//eLbMrDSMklDRMDLCRUQDkVRGr4Ss
hKySslKhlBAKlb0bdomjPWiXttbz+SxNUWbley4u79vr83y//X7/XrdzO8/z
PI9zrus692vcTRUqY9+ySpnzzke909hy9dpsxEWPUf31caq/Hk/111L2qpE1
qzLZ/PWtRxAfbls/aB7iw+J11luozjouXCqLrxMW3OycztcJ6xvTB+E6+f+d
8r/qqTtKaI75t7/USP6S4EnNnoI7QnZ+Va/Z2ycKWKPTrV3XNPOhi8TqX98r
gr6XNH0v+DpSdWuyNJP/EpEpv6WRDdny8KaRdhJ0lQj+5Y/NovmraP77GYo+
Uqeq2OWh+u9FWkL29d56H3OPaFigYz3olYOIZT0u6lhhKGKTB+W62ZfEQKvL
fIdOjiLWGrF75g4unxoYvSCkLAbKDy+vLpsvZBZhVgV+plUs4/g715FP42B9
bnerPtoi9mR62JJ7a4Ss+9euUqYKmSA757ppDffLB43xuOYpqIB98snpU5JL
wLn1kzP/vxAxSmUZ/7+gH5Mrj/+3t7+tjcsuEbjKZEuFzBLBQZktk0S5sWBj
o7Cezw9qhqOW8vlh7+QPlUv5/Jr2Tk8wnj6+3+mnGE+PmLBh5TS+fqOtUYf5
+iF1/YHxfP0wOvC0Ka4/0Paij/6pKthbc3/1bS0hzHPvJ2PA98HqnCLuJ9B+
gjzt53KV1DSs4/7g+ruO2yXqdx13Z4mTv+RRVN/t1/IfuSPWcQdSHbcE1XF3
kHjl+O++we8Iv8Vz8m8/eTz5yc4vsg6g3S+cP90Z7VfUNeFXtF+3z9w98lS7
jLkEt8Ssrt7B6vIM1h86WwsuY7saFVsLIWG8+dkxJyrh+67054vViqAhysd7
xtRKqI+wH1b9uhxKLy8V3ltdwd9JT6d+0KuEvPYBMk/PCpn5sWqv08ZF8Gr3
wUbUJ35RCxPRD887HbAQ9UlfH3jlZSuAMwr3dVKXCtj1mXaXfuQV/afu+CvV
HS+kuuNdbb/lwR1+y6uu/5bHuU/NRr2XM117H/rVmxzVBqPe8+tTfO/HCQEo
z/ZXu7O3kp2+rLPIPqMECnpOmHXHWARxfo83Pe8rYld7HxrSqpT8n3rkzVSP
nE/1yDvTguXRLmS+6PzTh/vJ6iFSfdAuiOMVToRXvJQ48zifn6sDD8rD1zwV
MncDQ8GtR2lgEvpafvcBIWw17Hbp4VABG+YzWgHjJq4519y6DxDBxREHjnXR
E7K2wOuX71pmwdCACUfQXp/xXnwX43S2p9ra0F4Pm9CkqDVWCFenSx4L061k
/vNsfsWV6jzX+15fJwTXY3GiCGsh660SNGyyMAe+7IxYyOUs6U1XtUj+PWVs
1wxB+f5ndrr2/P1uaWUnNF4uhGJLxR1mXbPgsKuhMvqZ3X06mKP/sDBCJRH9
h+S3AfPRz1xltF4W/ZCX4anb0A+RIj8wlPxAdfIDX+7p3BnXWb5f8BTjX3a1
6a9wna8D3ljw/8t2ftd+xv8vPKzPDsb/G39qw9eCeSJmdNPaV1pfBPIe3/az
fxJg84uAL7v4vj010cjAeJO3zJCvo/m+RVSvD+T7zGo/X0nm+wyvi15V4j7/
wRkEhDOMJpyhXLvBzA37nu2yWtsyRgTjUn5IpD1LBMkr1q2e/B0k2KAIaPfn
p2lJ4fddSfXIQVSPfJ7qkev9fstV5vyWd7z9W/4o5WcgvuOen9WSXDWpHEzr
WpTwHSdepzyM6pQVJcfhOWTb7j7HcwjDvx78dQ7/UfW35eeWbSx12MbPLYQt
eLcYz612/Mj3YXx8UZrSgBw+/uE1j1+43/u37w/iu9Ig9F0Q2n2ZLjJyeP67
PK9KbywTsgVZI21m6Qthhd7HYSumZsPrwVvs8F059KD7NPQrrJYsyUW/oqZN
2QjfxYsHXGjG+JSB7eF3+C7ea1loy+8pU5AM8eb3FAz8Ll3Be3olRMEF39eO
gnu16Cd4yHQxwXtdNv2r+vASIdv7rEjnwEshdJk4edA5+UywObWzP/oDrzt8
VsB41nvnJlP0B2ZtHRzTqFfJvndffoDrDWjp3ec86g0lT4HldiMh2ypp/dnX
VQRHLd7fUKhJhxPvavuhnumnE2iE43UGz1+B4z+X1x35uEsAtiPvDvAIFIJ6
lteMdYfywFy58j3O3y81Dcczp0OhKTi+n+qdebjOoud6w/k6mXJv23G4zmmW
Fz+63BIxc8Vls7u3C5iSbWqid0QGjJHSs+bzsxEzhw/i87PJoUsf4fymF8yL
r7SVsUULnt3D+NecsJFuGP/q2PnBpl6PK5jN8nEx+/oLWbv6q58i03eQI/HK
C/ezQ8kNK9R7A0zsX+N+ekdd36hkKWQ7J+psWdnM9Zz09dibB7P+WqdcT/J8
kruS/C7pzy+kPw1If+baLz26J1zIXO8KD+Y1CNjevtoXnzrkwjQTyWfoZ+a8
juyDOMM2hS45eB7+zPOZ5llK84j3bSgiPak73l3y/gQh+37lWMuw45Wsb+Kk
tLGxRWDUPlGndL4IlLXndtObL2KrO5kZeKxMgFE7TMd6cXnJh+vW67icOQ88
hPfdPGm3Eb5f3svtVcV3bqjyvATUPxMuf1aw2FkFt8zGhIq6Cll+6qDxnS8k
gMyM91uS+4mgh3BGe7OFkJ2zmL94GddjxlZPOnvJ10DXpqS3jr3vshWbDvbA
ONos0LuOfkL30J1D0C+6MrtAH/2Ee9ukNblfwaw+ur5EvyJhwY4W9Csqd/ov
Qj9KOSd6L/oVwd+vzcfxf6tTbiV5AcklCn/L8z7p9uP7A6l1s7oNP14JU/o9
PIL7k0J1yh+oTnkf1Sn/rX7ZivSJHukTBdInK++8bp4ZK4Sg3sHqGpcFoLIu
/luB+dv/0mOnSI/1O1i0jdtxxrKi1dGOf7l+vQXt+N/6KqjnL++wTF7Etoc1
rX70QgimhV1fDL6Z/te6Zk2Snya58p9659rlQWj3sxc82oz6JPSw/y48/+J4
ox7hjdNG1ul6egmga3xQ0MeFVdDl2LPSbZfT4NPC5XekVomY3LHbjjdWiMBu
9bS5A6K4XzfZLQXvY8hy2VR+H2Hm6J478D5KTZlhgPdxufT5Rn4fIcLnYibe
R4nyJZIYv778tikUx6t+vWSO42eorTnFx8Own+GxOP6L3uhzOH7cq2ev+O/C
fnuDNfi7yzeP/fW7zb6zvw9XFbGobtaqLZYiWFz4dOqw5ATupyn8istbUJzr
JsW5OkpkvPtf/aw6SGg+xPomic2/669HUf31gtPH19curmJdHtwLONlbyFZP
2js6wyoJhsz7eWnTtvdM7dTjPpvqKtjqC4YTqjdFcz8w+BdeelOsn6SubV/n
b98roKXEz3vBuvdMo0fV59fbomGWw8vWGi6/nHZXczqXL844Gqi3IxoMvBJT
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
7/zCAZJWtfB7ATWVo3P4vQArS/9DeC/+9EM+T/2QlakfckfVTe38/IOuxNxc
fv7hhMSteXj+562Mceb3FPTX3tdHP2qr28MqvKeH7kYuR3xGqBYWcDq8AG6d
MXNGfEZ3os23NItceLdb422I7lv4tCx7RLcedf/FR/nHXmwJW1SKeE7r46Dr
cl3K4Yirw3jEc84kjOtz5noZ2HncbOL6BD7XVdiiPkkS46/8Y0cOb35iM7i3
CDp3zZ+gPlMIY0/pa7r6Z0HgX/i8zpH8gZjclHi+dorxfK34C//XgrR1Q1B/
XtSSD+L6E9ZlO1ig/vxSW3Wd622wd3Hcy/U2FLduNkS9/eOKSgDXz2D3fIAB
18+Q6DXIHfXzE7dHI0XLslh5Z6sjQ1aUweqTP2dIcf9WY6SCwdhFiWyp2fzb
OL/oQtZqnH8g9VseRP2Wx1O/5YK3PRK5HYEV5/o/43YEgreevz+a25Fvfn1i
TJU3z1wqWZKXtqiUNR9aKyWqroUNN7u82mGZxuINmZ63fBm7+o98x0Nna2Co
mJ7/o/81FOem8e/LZBXLX/Dvy7YlFWng9903OXQCP5+ssKKoPz+fbF3yek88
nx1C3Yv5PWIDZWx28XvE/J5O0MZ79EDt7oUjrTnszKyjkzOupbAFjRu/FjjX
8/P3mz9rBfFnxRJ/1lGKt+4Q4886S/xZJcSfdZj4s6KIP2sS8WcZE3+WL+H8
eWLxWYuPl5/x9UDPjXrb+XrAYl3vD7ie9vdDii7+eAPJn+ZeVLqeDWvkJOYg
nqnxweDITss0UC7svoTvG+jY6tYf5PsmmfnkRlbXctaUFNKn0LSKzfJttT3m
VQTuYnq+P+n5cNJjDaTHfEmPObwKN3Y9VcUcXed8XKslZJ+jW9TOe0TDjG3R
O7unClihmkWAS4SI+dlqbzxpnAkfiQ/0OvGB+hMfqM7WMNt4ELGA4HabwCtC
NjrZffcr7XRoo3zvdsr3HkH53gPXJics1ReyeusPKZp8/d3ndFpa/iQOjtH6
NWj9PWj99M5l51TL8J0L5+idW6d6Vgrzuu+lnzxzf5YIEm031DXnxv4nTzuN
8rTlKU97uXvTDr5OeN6ssZ6vE8YPuKWA6yx44xeYYpkOmYFGe30k38OW7WHL
eplUwPXyF/2zu5ZD55S4xgLTKgj553ryUb7Pb270tnp+qgp66NaajdISQs9+
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
          "]], 
        GraphicsComplex3DBox[CompressedData["
1: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
lOC0r/UepfscLcQelvwV+FlF9PpJkU/15+RfB9IPfN+Qznesx/lOvnMo0dvR
nO/tlDRpXFBuvDlX4k2KZy3iWcjPJLpXSHbWws6ifTzdKwSOeqQyhBf30EtS
d2EvSZ0GcJzPHpb1xb5rJ/V1q7vcKf3eNCefcGJi48B/7y8U+WfrhmPTSqmc
1AzedjU5l8+Xzo/bueabDbRfDtocuWdH+9FiP9I5lPU4h1L9hvao8+wYO6D7
gOAMPhcwOBcAfoVwyInkXc0VsjtNRQ+MFT1A58V6vkbny4bPl7G/HitVscHQ
cll87q/37IB3EnyH4NDjmEdTeQcP+UTgx+S9MuwH4O53XCMMtwd93D/2OfDh
8i4f8q1Y/0pJTT/47SHnnXbgMauKJb4xynlfF3j/+7pdPdLEiT+AR45YkHgx
wnn3EPjmin23fljLeceQ+wedTM9jn4/9rGGu3geeMWd6UqG4aM0fgd9T5N0S
yKXme1Kf7fHFaed9CeBTmx3pNyrW+Z4R8CGH3vmyflHnvXjgvwVELe/wnHM/
DDjuO2C+3B7zBZ7y8RL/Rred7xndm54Mw/TXvFI2+d+6c+BfS/72qK++XP3l
j/PeaQlT/gD/anHlqa9P1/ejFJ9XvdkrP6U678MDf2jq8IEXejpyC/zJv0xS
8Zv8fbHgaP6+GNrjfgRwtOfvjqG9+54I/jl11OCzR/+G+wf/Peg3TD/W5d58
yDDMN+RVmc+VOn1bOCMoW/Gxn/Z/sPhTK5VvsDONXfREKL7Jda/Ezw84+IP5
cnvMi/vH+kKvr93ds2uhjY78A4d8gh7gLP/Anyf55/boB/oeegD9AIfeAJ2w
G+PoHVHgLUh/Av+Z9Cdw1p/cHny7d/+O/9IlsfHKou2d98GBn42s+MeMGvp9
EHNvPM549QM/6JHB4/+YedY5twbewfVuQ4Txao+8AvIMrXz5X8PvMOHeBfyF
0T0WXHzrhb0W91KwLwpI3gz3T4DXk7gP90yAl5a4EvdJgKMe45KH3rjsoR/O
e+zr3z32L/KzPC7q74Ej/kU9PXDcA0J9PHDc61njOld27rHhHg72XVLLWhdS
uyVr/g74jaZ7PwsMSrO4VwN86fh9E7s9kgl/XfF5SzudbHQgy+J+C3Dcm0Be
W+sXNla5MLf0AYt7C8BrPlsvu/ucTJxDKP7klKhlmyql4x0SxU/Hl3t29Xsp
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
zA==
         "], {{
           {RGBColor[0, 0, 1], EdgeForm[None], 
            GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
4/8fSJmTQQ==
               "]], Polygon3DBox[CompressedData["
1:eJwtmwf811MXx7/r3n/SpCg7RIUSZSQqlZQGyV4J2bI9yEyF7JEthEI05Omx
KUVGqIwkJSGbMpLwfN597uvV7XfOvfe77z3ncz7n/JsNGtL/jCLLspvLLKv0
e6OUv/U7I8+ytyW3iFn2keSodnfIsonq20fjvfR7pw4YquMGSF+udonkLdTu
YFzzn9GcsTrmbOmbau5GNVk2Sr9t1b+l+u7V7/Oa315zW0seqbH2ut5y6QdL
/lTy4zr+fM3dQvrGOv5eblJz99fPPZJf1vEdcp/zWum7S19Pej/pYyTnOsdo
6S019q/kw9TXiPNr/GHJ96mt1rk2Ut9Tkt/TvP7Sv9H4R5o/SX2bauxNtVHq
25ZrSL5Ec7aRPFhz2qt/lPRndK8Dpe8ovan0xzX+tvoO1vz6khdq7B6dr17u
e+ReW6lvgeR1uEfJW6u9J/kNHT9CxzaSPll6e55bz3+Gjlkgsbb6pvIt1P8W
966+yRq7Wcccof526v9Bx76v3wM19q36PpY+T/oR0n+UvkD6FWpfSb9Lx/4o
ubnaXJ6XPp1rX81/V/rrmd/XlRr/On3rnySfqd+F0m9T20RyW7Wjde5neD4d
u7PmLON49eW6/6vV9730izJ/7xc0fxfpP6gdJn0M30ljN6n/Nx17uPRdNXZx
5vF1dE8XSt5b44u4X/3eLX2p2nO6xhvMl/w5a0vjn7L+JNfXvM+k7672k863
seYs1tgCzf+Fd63xFRobqL5l0i+UPkP6dB27QvoDar9K/kXz95Y8QXItPc+V
mveD9P/qnB00doZaXY3VU2uksR3Uxmj8II1/JnlC9No/RvOa6/iP9fuT9Ks0
9ovGRur3V+mHa/5SyZfpfmok3yH5aY0frfkrpLfhe+gabdS3hPWu/pWSZ2p+
X+nzNX+m9Fel7ye90Phr0vdU+036Njp+mcYGSV8pfSvpx0o+UPO+zL0nmkje
Xue5X/KB6vtU8v6a00DXPVtjr7DWOZ/G+6brH65zLpJ+tua+nL4f37aJ+kbr
uDPV10O/t6n/Wck7qS3V+HiNz9Gx/dX/hfRV0g+QfLzG22n+COlTNH575eNX
a84gyZ01/qfkfdXWlfyG5uwvOWjsdelv6beDjv1Sx7zIeg/ea1eq/3/Se+t3
kfTemlNKPjR4PbOuX9L4AWrr69jzNfaq5BP1u0bz+2a2b6y/g9hfapdKvk19
jSU/q/au5EMq27P62Fjp96htIfk79c2VfHTwfv5e8vc6fz2d44rM34Q1wn7v
xXpWO7/0e+X93q62meTGpd9NJ81/TfIGaiOld5Y+U/KePKfkn9V3jfQG7GHJ
HdU3XfL6asMxqdJvlbxr6W9xpPRlpfcB++Ee7J3kprrHFzX2J3uetaXzfyB9
F9YP9j/aVj4pfbjGe/MeJVfqu13yzmoPs5elf87+YI9K/lB90zR/rN7DDpJ/
Vt/Hkk8N3l+LNPdnzV2XPSE9y+2zOvFdJE/kmaQXpe3DP/gyyeuoXSr5BbUW
rGedY6HmfyB9O8kD1PeV9LPYw5r7mq75R+Z39rvkc9XXU/oStfNKFkmW/Ye5
alvp2HY6xxTuXf1f8izq+z2961+j/VVvnedfne9kyZuxRyVfiw3Vs12vsb8k
X4/NlfyExs/j+qX9X+dqrdnP1qh1kXxd6fk8816V9+/OhW1CR8kbY085p/Tj
K9tbfOuGrJnkv27LbQOPkBx1zBjJO/ON0vrDPuFTX5H8YGX/jJ8ua7x+sBV7
qO9Vyc00PlLn7aJ2k+TAM2vsGs3pqecr1U5i/eH3dPzX+j1TY8ep73t8SOnx
yerbU/K90fjhPclLJH9Xei7PzLM/q9ZQ8hBsseQbWC+5v+FbkvdSXy2Nt8n9
TW5S346Sv1Z7R/L6+HSurTnrSe6nVh+7xLvQ/f1T+l101Zx/sd18D94ne0Xj
Q6WfgJ+RXiP97dK2Z2hu+/GanreP5HmsvRrjIWxF79zPxP7cUfpe0mewXnle
yc+pb4GO3ai0f+nJ/fLONX635GHqa4ztkj42N944UPow6WdI/5W9res1xEbw
bTS+P3sbHy39N96bxh/QPZ4mfaX0+jXGG/WlL9AzNZM+VfqjhX3o85r73+T/
wQFbaHxGYd9Uo9/fCtuLUzT3CPV9kXzUofqdldl3vaDWI/cz7Sf5BrVDdNwG
6usheWqw7eKdHCB5GpivsM1+Vdd8Rm1ryX+A62psswdLnpvZln+quePVxoE5
8EXqu5Lz67h1NX+DaCyyEhursSXqP0p6I/3WqbG/HayxQ9W3hPOC4dLarKvx
16X3A5toTjPJrwRj2z7SN5K8XPOOlX4ue1TXfVl9t2T+doujfT6+/0r8U2W8
cKzGB+S2aR+q73Dplyf7hn08QfohGl+MPdb4FPyZzn1K8sfH8K74ZglfDJTe
X/pCyW8FX49rbCf5zWDfzZyWkmdpznX4EvX9Lbm2rvmI5J107kZ63jrSx2MP
sFVpP1yQG5M+onvYpLKtYg930NhZ7DHwkvpy1or0g6VfnDDH8uD9wT5pXGM8
dTx4R331wD7Bz4svqK3xG3X9oZpTW2MbSP9X46ewF7m29Kj+S3Nfg2v9zfuW
fpPalhr7SH1HY1sTBvg2WKbvRHwJe0Z6XY1tqPN9E3yvnO8YyTN1neE8K2uO
fa++q/S7seY31fw/pF+Nb1bfu8F4fgL2Xn1NNedn9Y2QvJ7kJpq/Kqx1Gdkb
xFV6ti+lPCZ9ZFqDD0fvH3wt63Uj9Y0C26h9U/o8IxI+Yn+dGx2nXYdd0/wf
eW/SR0jfXAOPRtvjZile4p3wbtphY5L/uhlfr9ZcY125RuY+/Bl2Dft2vfpe
lzwKHJf7mcGDYFyw7jS1PSr719tz27BWldcN6+czHT8e31kaazMH/0scRjyG
DyJ+qq/7nSD5S82px7vA50h/QG07jf9Z2tZh89pIPwT8rPu7VPKmNV63rN8G
fDPerdog/GjuGIhn4FkuSPa8gY5/UvJo9W0cHFcRX7GmWmi8Ld8k95pmbbN+
L0z6i5KPDb7Xx0vHV6xP3uVU9X0QvK5YXyen9cN6Y62z5hexd0pjlem5/fkr
hd8nGGeF5Br1XQRuzIzhiT/5bMR4xHqtgvETtuGL6H3CfsEmgM/BC9OTvwRb
rCP9irT+2RsD1F7HV4LxwGvB+B5b8rnOV0vzL9P4oer7UH27SZ+a2wbtIvkY
zWmT8MR41oL0x6TvLv1l6deAv/Gz2BTJ56ivYWEfSMzwVLStB5vib/+jvsbY
a7ULK2MwsNh20q+SflZl/8waYC0MqzzWqfAewB4R+zaRfLHke0vHqptLH1p5
nbBe+KY7Sj4dv8D+yIy/z9c9NtfvZZxX93Nw9PrbnnddY1/TEh5E7Qr1/a3f
7dXa5sZoJ2v+HtJv0FgbzT9F+jDps9P+5H1xPa7bWvpp+q0FrtX1VxXGZLxL
3uk1Gju1sm8lBry6tI3F1sJBEN8/qbGumTHedZp7dHT8TBy9g86/Wv1DNL47
e1jjNxIjpXseXhmjgdV2IKaqHE+2Bu9Iv0XykWrdCus3S75W5+1YOEYjHjss
ev10xRel5+VbbKe+1XqXLxdeay2kP4PNj14/rKOixvfLtRtozkOV8eqtmTEC
zzOZ87L2NOdtsITaNpLb8Q4kj6scP70PBpN+lForyR3BIJKPjP5efDewwiS+
K3tTfW9Jf0q/3cF+YPvKeBH8DoYESz4VzDcQq86Oft5tJbdnTcHFBPM/v+u4
N6PXA3i9de73yzpiPdXNzJ+dHv0+ea9ziBUqxzcfqe8d6fsHY5kTdL4PeB79
vi096Hw9NXeh5o1Re0DtfbBZadvaHJtTet2x/gbntv9vqvXAV6jvw2g8CR7p
npuzOF76+9JrSX9C+h6a8wv+IN3fGWrdC2Ou4yQPUduH9c49Su6q+50u+T78
X3Q8vm9ak8T0rBnWDmuK+A3eB/7naLU/JX9emV+AZ9hK6+GgaC6D2DXUmHPZ
tDSfBBczIjpeJdaAvwGHg8fBMGAZOI4t9XtnZu4DjmPz0vEx3AccwLal41e4
gSXB+Lhh+n7zg9/dqWq1gjmjiWmNwCW9r75jNNafbwA3pN8phd8x7/qr0s+G
T8e3f6exZwtzbkfgK9TOzR0PPR08H/x5Wub3AS4Hn8OPvERMERxf4pvBO69X
fverU/yxsDK2w/duLn20fnsW3qPs1bul71c45oQf/Z/O10XzlxSOV9oHx1rE
XMRmxA3ED8RUxFaPBMdLr6ntKnlFafwFxgBrfB2MHR9VGxBsz57PfQ93VI4r
iC82yMx/fKI5Q3JjjLEa/zD4Xa/LGpL+XPDa5B6bSn4u7dFuYIZozuZp6ftm
5nK2DObTwLpLNXYBuFXj/TJzNPgAfAExM/E07wcuqVa6PzA0WPqSwpzsgdH+
Bwy+lc5dVfbvazkhyb3U5kuel/bj4sr8FDzVlrpIH/0OAr/m5uDQ4ePw6fh2
9jPH7qP2Zmn/0kz9e3JPkmfhowu/Q/wBnNhAzZuTmSuD32F/wCnCLe4dzT/B
Q22r639WOX5pWBlvfls6ftH0tfgRDq6pfm/MzM29E8y9cMyOwRzXSdxjZu7r
keh4hrgGvAvndV5lewkXBud3XGX+DS4QzgHu4ajKfCbXH5TiA2L9EypzEdgI
+Dr8t/5l2+f27z8wB6yeOX7qofNx83AlLXS++8u1VE+2if6bWNpGYUvhh7Bd
cyrvVXIRbTX/Yf2+mJkjWg9sX5rfhtP/X+F8Bfw1+5N9ellp7g4OD37rG53z
PfW/LH1v9iI4S/J+mfk2OB54BfiFxyV/oevVybyn2FtwFsT5xPszpHeLtk1w
At0l76t2V+Zn7BmNucBexHPfwZWofafho/B3kidUjuWxWfDVrHnWPvHeJMnL
ozE2/FYnYim1b8B22G/J1xL/4Us1v1n0nmPv5aX5c47h2E3UNgALanxaZg6t
tvTapWME+K4O0vfBr/Iu1O5gHQdznXD2cPfMYe766f1/X9k342tW63p9gv0f
PN986b+m78eeZ++P0vgAfKPud8vo++H9duI7Sj8++N38XDj/sHUwNw+HDpe+
jfQHM3P6cPvw+sjgb/j7fyvHesuSf4FzJW+wNDMXC9+3OLO9we5cUJp7hYMl
v0H+hLXEmhpEbKs2OzOnBz6ZVlnH5sOvE098Kn2vzPgTTgxfsFnu/MqXlWWO
4VxfYdcTPu/Fu5X+Dv5RrVtwH2NgMPDIP5XXLs/As3SvzG+zn0/U/d4R7YvJ
FYAv/qj8LOSO/oqOIYgl4Bsekrx9cOwLhwmX2Vb645l9FtxJk+DcARgALLAM
/Fv6G7ULzmPwLY5TW1nYh+HLiJGIlVqrPZo5RiIeGhfNxZ5aGm8fGcy1wokf
LHlV5b23MNmnPytz9YuSPSO/xbdanPztk9JnZOa0Wc98U77tgHS+r8GPud9p
b4yOrn+17nM37Iv0g8AexFzSn6qMoeCXiG/w9+Tw8Bv4jzbBOcLJCQ+QO/wz
2meA3+6KzrFNK7xmWDvsOXJXzyT/B0c0R/rgwtwR+21fteeTvwTfEAcSD14X
bQOxhXAO5Ddnqe/55L/mVsY78B5wHtdH77HjNO+9zHuP/QXXSAxObvTJ0rnP
Y3WOCaUxRcfKfNjC5OPwdeD/ttE53M0q411yuzRkONc8mHOAe9g5d+6Whkz+
I0ger7aT9HrSq2CfBccBf4gvu059D5XmPOE+ifGJ4dg/46M5G2Js1ugOwRgS
LAk/8bv0rWvM6eNfHgzmsOAkDtfz3ST9HuZo7CMdPzKY04TbJB98fTDmB/uD
x66KjsfIb52Yme8khrhLv5tnji3g+OH6ya+cGex/sH3d8TPROUxymU+rb/dg
PhR8PxBbVeOcGbgB/EAuDRvXrbQNxvbhbw6qzF+Ta9gl4bc6yT7jr/qWzjk9
WjkfMsnLem1+gHvoVdoncm/s9zqV+chWaf92TJzEzsE5UGwmNrV5MJ4l78Ge
ZG92q1wLAD45pnTOkj3/o/QzNH4wmFxyK+6fdx7tW8jV/B4dwxDLEJO9RLwA
Ps+ce/ojms9lDmPwCbdIbpE5d7RK8rdqt4AJdA+PVI5BiEU4x9XR/vGiynwC
WBGOBh4IPgjuhhw3ue51pQ8L9iHksqlfwLfAwcLLws/CzcKh4385/zyd85fC
eT4wA3winAExH/USG+vYS4NtNTaGeonz1JqCr3Pny14K5vaJeeGPsclr87iZ
Y0HsI76KmgFqBz6o7OvhaOCfuSfuDQwMXiUHADeyd+78GXif3MUNmfE08Qr8
DHw6+BmOFa4VDDg2eo+z1x/OzBd/UtkXjM3MF5PjJm4Eo++l+c+yBnKvYfh8
chxbl+aLyH3UVTs9955/QvL0YNt1YmE89FjlvUXMszDYnlAbMlzja6TP0zUe
KowRplfGoGBRTDVcLHwqXCsx2XvBMRmxGZzL6oR34OLghP8J5qPIRcKp/hls
P9qV5uTg5ojnr9L4WdgfyY0rc8Dwd78G56ThXuFgfwn2hydl5oh/DOaA4YLJ
OZB7+Knyt+hCDBCcP8P28U4+CuY84D7O1PyPg3MwPUrbQ3IzxKTEptzT5PQ+
qX1on47H/4HlwRSHBcfExMbk46h1wD+TWwRPgEVGSx9YeA2yFtcNrr0gRttP
x56odk5mDH5SNOdyd2GOBS4GjoKcdbPM3AX+EdwH/usenKOEB4MPa5/wMLmQ
SQkPrK92eWYOrHf0+92tNKbg/a0M5sKfUzs3mNMhh078CNdDDoYcIPaM3Aw5
m/UrfwPwCJw53Dn5at7/Z8mXjMsc35BzJMbgnoh38YdjEz8xGqwebaewVy/o
2A2jYzdiuHOCa2ampPgTrPGJ9FY63334b8mzg+sNLtacFsl/1Cn9zHBJk4Kx
BTVBjYLt1YalvxH4CTzRvjQmYr//rGt0zuyj8FXYaGw1OR1yO3AI4MdzpH8R
jL/hmojZH5U8LvhbnJ/87cPBscp5yd+Swy1Lr0nWJj4SX3l28t934J8z5+ju
DK6ZqimNycEL8BGsbWqe4INWVvYF1ABsy7sM9pXk0McE4/t3M+cT4VPuDeYG
F6u1jvafw0vjRfDmxMrfYmZaX5tEcxFwanC1i7AZmTk49iv5QXKp1IjAV4EX
wb6f8AwYDT1vSziXwrVU5B+prWqc+/nIQZKLJAc6Ij0/Y4dq/o2Sbw223XBW
cFfUMD1Rek9R2wTHDddNTRf1DkvVmuv8e6bv87aO2SMz59Yv+P20ys0hwCUM
kd5Scl3i4WCOtE3pdwR3CicGN0aOdHLC57wrapLOSv66demYaEE6H1gEzHJf
MMcO1049SL8ULxEbEiMODsarT5eOObaJxrxgX2o2Ogf7XHwv9RtDg3OEa0pz
QOQOyekR0JMjIVdCzRu1b9RcYY/I2ZK7PRfuL30/bO0c/IPmztU5HizM+b4i
fZbaeRqbnzkfPL+ybyEnQXwMRgArUK9ycTAGAAsQk3YMxtPkXvGx90RjDrAH
JMJF+KZgrFIHewq+CF4bE6WfEhw/8i6JwU8O9vdw2ujE5uCdYaXfIfEm+K5z
6T1I/Mv3Z2+SMyd3TsxL7Avfenkw5gB7wEEQny+vvDeo8SJfTnwK9wnnQD7y
H/BS6ZwK/guMAlah5g1+YI3Gryhd08fzENMR21EfeGXw/gabUxsBNoYfJS9L
znNUdE6C3AT1SLtG2+s6hTlw7Bc5HvITdZL9nlqZi6LmhHqxljWuc6PerW+0
D8OX1S7sX/A3yGD+x4Lzp9hqOK9e6fqHVs5/kCshh08ufzed40X1/yfaF+GD
8EUXRGNvfBS+ako0P47NwHZQf0CtHPVIt0bzj8RS1AA1DD4ndh5enWtRswl+
IsfE/oCfJDaDg4UPhq/JC9cAzJJ+eHQuiBwD+YbLomM/fAS+gvoeYj9yFuQu
qNegtokcFLnLNZW5tO6ZuStyKKNL5xjINYAn965c74O9I6dTlc6ZkDv5qzLX
SQ0e/BuYi/3xT25+Cb4JmRpA+HA4lUGlbTC2GCBFLdIBmeNF+DZqG/LER/WJ
/pZ8Y741HNxJlecwFz6RGjRi8mui+UNq5eAU7oyOQfg+cGjEJsSTcNXki5uk
+4c77KY571R+PnJXYJx6urdvK2NVMCu5xW8qrwVqUqhNOTv4XPhofPWOpetM
qfGg1gP/Qq3H1GQ/2d/U+pDjxf5vFI3VqXG+IJgTgxuD4yZ/2yU6VwnH2jWa
g4KLgiOnPqdhdC6BGiJqicAsYBds+pjkL8jtUSNHrRycBtwGnC/cL/XC2GJy
KuRWqG+kFo+cC7kX+FdqDcjd7Z74YPIqXXXO26Lri8F6V2TGEy9In1S4Jns2
tjM6FgRDgaX+rvytyQmcnfBeh8I5I3KX84L5QPrAf+Qw/yqMCU9O/p1vRc3l
mel8vdL13k3+Giw4v/BehIO9M805S/pSyetkzkGeGp0TJW9LzpDc4dOV80Xk
yE6LtsHY4qdy12exX6j1pgYT/pmYjtgOzh7ufkLw3q5Vuv4JvhduFxtLnAcf
Njt3jvDO0jYRX/xV4r+wmfiCu0vbUupLqJe9N3M9wNz0/n4ozLXgg/BF25Xm
bqnzgtslB7FV6RiHWGduaS74/cQFkwNvVjofzt6FE0an/rxv4RoLai3IZ/Cs
cMSc7+PEDZ+kvk+IRQtjBXwY/No50diD2hPqS/AxcD2LC/sefPYssFCKn3+v
XM8It0luBf7n9Mz3QP07PoZYiToUfM856muSmz+hnuO3yt+eHBm5stlpfy4t
vBaJ/1tmxhDwaO+m+cs1Pj3ZZnwd9oh6UfiEN3LbP+wg+Rdq6ajRuKg0JiH/
AqcGVulXer3h8+EBwADE2wcm/gAfD3bZL/ENR5TmS8E3U0rXB4D1+BsA/hZg
SGms+BD2qTQfPlz6eqW5depN4S/wIfByewRjjV6J39ktmNuBs4G7of4U/gcf
As9HfS3cwavgmdL81kF61h74XM3vEpxr4FngNuDXN83M13CNC6PfJzEKscqA
6NoGaiyp1+yiOY0y80XcA/nULQrXz8zEz0djK2LqeWm/UAtETg5/eFE0FwMG
A4vhH+AS2V/9o7mV6ZnjUfiP01mTmfcU/DI12SMyYwCwwMjoep+e6f2Rr6Y2
hzXEWqIeDW5hp9L1XdS3wXU8mLm+hPo6uJHBlfNbxJDEknBUcFXk0MilrcrN
ob2VdNYQfBQ1Qzw77+Bk/Gblb4v9xQ5TjwyfNEOtfxqHfyam5vsTr2Fb65au
l+TvVciPX57570vIn5PP4B2cVtofYKuIAckvf5fwPjWM05I9vCvZMPz9sIS/
fyrMRVHDSP7/49x//4Edwh4NylwPxP4Fe7MG9gmO56m9JqdO/PFD5WN55ppo
+wb2Y48TbzBOrpG/MeFvTcgvUMswP+F94hly9OSjbw/mx8FO/M0Pf/tzYXAt
NWsMfL2scn0stYDUi5Lzo06denVygeS7iX34GwP+1qBDNHfAOyRf91g0f8he
B/sQj1JbDCdRJ5jP3bCyDyXeWq12ZOEaf2r9V1T+9nzz54P/HuOP3JzUsyl+
otaE9bRtcH4ZLow58FfwLeSoyVntFXx/5BLhm6YkG4othWNalfA3tlC3kF0d
jDeoqeJ7E/s3TjXA5CQejI6PqEnrJP2B6Pzp+QmzTYzO4VPDQAxNLI1N/G9h
H4OtJF5aVTqmJbbFp5GjZ8+yd7HvxBKssb7BfAh1hHAoK4LrJ6jZJyd0reQf
4Sxyx1RfBfNT3Bs199TeE4MTi1MjRn0s8+HaqZGnVp74n5o9/t6pgcb7B8dm
nJP6eeJraujwl5sF7xlqGuA82EvkD/avzAkQ7/L3COSW4G+or4c/xIfi7zYJ
5sDhwomJiV9ZY6w16k+pVWaNs9ap0SJ/jv0nFmRPkx+DUx+Y1kinaO6d3CSY
aA6+U32P5/bx1IfACcMN00f9IePUjlCTSG0iNQ7UOvQpnC+Ag4eLh2+hVoKa
QGoDx+X++5M1aQ9Tz3dacPx+SWV7hG1mPTOXGklqbclPjCu9xtGpryA3QU0j
8TU2dUhljDglPd+xleulyCWA16gBov6zCK4JojaIb0w9JPmT1pXrJ4k/Zib7
iM2Bb6a+hdotQmT4VGwutQXUOGOLwf/k4okZ9omu7+dvw/ibAf52oNL4izp4
qPrqB/PLDTT/ssK1veQ3qd3ib8r42zJqUKgxhaOGq74/mnuEo4Org+8h9qEm
i/qTXaJj0y0y84H4DGoeqWnGl8B3wWXxNzbtk/8n1seHdk7HwyXyN2e7RfMF
2LI+yd9Sz0BdIpj/yeh80NjSHA7x+/8BZ3wXeA==
               "]], 
              Polygon3DBox[CompressedData["
1:eJwt1XmQz3UYB/Df+h0YR6ppSAdJo4komlqpXGEmrCwiRyPFUG5hKTe5kqty
dKHGLRZJjsWu2Q4xZJ1djlKLclQ0E1uvz3z3j/d+nvf7eT/Pfn+fz/fzfO/q
MSCzf4lYLDYIkjDRn3Jpsdgu4qR4LDYQH5+KxS7iOVDI05PWhNYrEYu9CP/y
N8U30gvk+6gbRc+m9aN1oW1XO4HeHz9OPyTOUNdJ7k18NXRTMwea8m6wFkBb
nqO898Uj35/qr6rZzXOz/GV8Ff0ZcUeoy7+c9jGU59vL14G+kmcQ7TKtPP6Q
fvfjh8TP0kZYR8I6vqr0mvKl8Db6fYHvFT/J94p1KKzlO2f9Uf+D4lxxHkwW
36S2LeziX03LVd9KnwO0avAGzwdhT8UXoAzfQZ7WtLvFubQB6jLwdDivdire
CR4J+56MziGcR23ee/BRMI22Ht8AC/iu8P/CsxIayH2D9+E7J/6Upw7UwP+m
n+RZCulyX+HHobu4jLUsLNHvZ+sxntesVaztaUfVDxQn9doOa/CLcCPPKbyz
Z78U9j2cq35reJ8XN1RbkT6Zlsf3D5zEt0JzNXvw7vAW3yQoJ94Jj8p9x5MT
9kvtr/rto7/L8wkM1HtQOCO+fOso2imeZbAcDuN71S5T+7C6Cjwf0SrDWtoM
WhPabfgqvnr6vI4n6OXxfvS5+Ht6VePvi7cK74f4OZ5OMDf0oqWrzcFTcAM+
lH5A3UKowr9Un9G03/B1kA1H8AXW+dBG3Q6+/eLGqeie9VTzAqzBh+t5Pdwf
vgZQDy8NaeLHITv8Rnwh7xb8Univ9ErRxtL+EG+DrZCPr0hE+7uDryxMpCVK
Rs9fKfRKi873BFyhdeG/QKsf3lvYJ97Jt0TuHL5Zfg/eBa8IU8JvpeXTmuux
Rbw1EdW2sC7mqSy3SrwLdsKrqeiOfWbtGGaH/AC+W2Fq2AM4LL8YasqtC/eZ
73txmjgW+vJkwRGeJVCLnE0fFuYQvgg+hPV4B7VH5fvp3xvm05ZBLf6X4tF8
y+TZgeeEmSH3g9pNqWhPfw9xeF44hk+AUmF+8c6zPyXwTLhFPovWG5qHvYem
4va8u/2P0clob8IejZA7zr/ROgS+FE+Hr/WrGuYm70k1w9XeAdNoT0HpcK5Q
UY8rPPnJaJ4d5qkOt+Nz5eeE9yvMDT32hXeTPtJaMhHN6ff1Oks7Kz8mzAyY
EbRE9Nu/TUVnFc6sbiq683n0p/EH8U1qG9Ouq7sGi2iDoWW4CzwLwp3FC/lO
+x9ZPFVgeiq6H4XF+xn2NRc/k4zudx11tWE5bR70VDMOv5dvt7Uk33/iy/Re
/AXJ6MwLiu9XuGd78Ku8Z8R949HZh3egDj2DPoX2F20IbXAyik/QHpOrxFNk
Pa92WDw6g3AWhYnovPbLbxNvL/42hG9Ea/n9fBnW2bBS3cgwNz1fhVT03OH5
x4Z7Tn+Hdp2vOl5EbwdFeFbx3Z+JN+Krj48JZ4JvhswwN9QspT+g9yxaC74n
8HF8F0pE3+Twbe5Be5nWCJ+p5k64RluRjL6ns+nxMBPwrnzj5eeHd5reLRXN
2NPF8yvMsW14A95mPDOhKHxf8VnhzPFMyAvfAn3S6Q3j0QwLvyf8rvP0n4r3
IOxFZ3WzoR1P13g0U8JsmRNmQjyau2H+fk6rEe60Z24p7kF/G/8fHwM4jg==

               "]], 
              Polygon3DBox[{{1387, 896, 699, 700, 897, 1388}, {1345, 845, 658,
                659, 846, 1346}}]}]}, {}, {}, {}, {}}, {
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVHEch/G/phO5SRcaFVmCgq5EoWhZL0AtK29l3jLvMzWalo7mJXUU
RROqjZWlJN1eQ+u2LVuFm5a5EAQF8XMI5jfP9/me3zlnznCK2hO18YwQwnfz
MzOEGVNrbpqof3cihBo5Lt/ADZ7ODkEMfb4SeIAvzKHeJwzIg3iImYo5zOG3
8MiMyDF9Qs6Tb+NJ183VjfPH/Bx+0N2R8/UzfFAuwU39sq6Op3k9VuKKrkFe
ljsxFQvhD17nw7iGP+w8lP+aKv4U3+C63V+u28Xr+ShetPtW/q3v5i1yClfs
Vuo2eQ/vxH92n8tX9Nu8V+7FLbsFWSFMR+ebajOg/2avTf4qt0bkr1yjn0/x
L3hVNynv6Xv4hPwJL+vLo/+KPzD3TYXuo2Ol+jHeYZpNmb5Qt+7YM95uPuvu
4nn9a/2IfM9s61d1TfJLfSNew12/v0pekp/ge890YLeCL/J5POO8IXlfX8wX
5Gmcs3tal+RneTp6cXQpyNY/4rnyfPRs+kvuNczj/BTu8Fn5AiZ5vyyGodj/
9/UYuXRPOQ==
             "]]}, {
            Line3DBox[{1250, 1643, 1532, 1818, 1443, 1281, 1441, 1828, 486, 
             1442, 398, 536, 1147, 397, 448, 355, 1805, 1490, 568, 569, 1701, 
             1817, 1531}], Line3DBox[CompressedData["
1:eJwVz7kuRGEYBuCPzEatRSYxwhjXYYkoZibWmcYFcAW2ho5CYWt0qDEjERFx
G0rGMraWynOKJ+/7/f93Ts7JL62Ulzsios5PKuI4HbFNlRe6MxE92YgT2TB/
2xnVm3qFLn2WXjtnsuXsy05JH6FsPpVF9zMyR5ZPO0U5zKada1mjziILfNj5
kxvup3kwt2k6u5fvNPQ7+dgZcaXf6m9c6jfylXXPXpj3mEr+y9mQfqSvca6X
fN+87GfSWcvOoP7LIavO+uRc8q+Mm5/tFJJ7fYK0niFFlSf3ee8d0Lfcj7HD
Afvs8g8h6jHE
             "]], 
            Line3DBox[{1282, 1839, 1641, 1639, 1640, 1491, 1694, 1806, 1283, 
             1333, 1251, 1332, 1764, 1331, 1399, 1562, 1563, 1835, 1398, 1564,
              1335, 1445, 1588, 1765, 1706, 1444, 1284, 1448, 1707, 1756, 
             1589, 1447, 1285, 1450, 1819, 1702}], 
            Line3DBox[{1286, 1690, 1058, 1533, 1534, 1418, 1569, 1493, 1535, 
             1820, 1287, 1492, 1288, 1494, 1181, 1757, 1289, 1334, 1290, 1182,
              1766, 1336, 1400, 1337, 1781, 1183, 1341, 1446, 1342, 1807, 
             1184, 1611, 1291, 1449, 1292, 1795, 1185, 1495, 1293, 1451, 1294,
              1837, 1630, 1186, 1496, 1453, 1796, 1295, 1455, 1536}], 
            Line3DBox[{1296, 1791, 1537, 1419, 1570, 1497, 1538, 1667, 1808, 
             1452, 1297, 1498, 1187, 778, 1338, 1298, 1188, 1767, 1339, 1401, 
             1340, 1189, 1770, 1345, 1346, 1769, 1190, 1653, 1736, 1191, 1590,
              1592, 1591, 1838, 1631, 1192, 1612, 1299, 1454, 1737, 1668, 
             1193, 1499, 1669, 1809, 1456, 1300, 1632, 1194, 1500, 1758, 
             1670}], Line3DBox[{1301, 1539, 1420, 1771, 1571, 1195, 1501, 
             1502, 1457, 1738, 1504, 1593, 1503, 1196, 1671, 1768, 1343, 1302,
              1197, 1680, 1782, 1402, 1344, 1198, 853, 1349, 1199, 1714, 1654,
              1739, 1200, 1655, 1740, 1201, 1656, 1741, 1202, 1594, 1595, 
             1742, 1645, 1644, 1203, 1708, 1829, 1596, 1634, 1633, 1204, 1613,
              1614, 1833, 1458, 1636, 1646, 1635, 1205, 1810, 1505, 1303}], 
            Line3DBox[{1307, 1552, 1425, 1773, 1377, 1550, 1551, 1549, 1473, 
             1732, 1675, 1513, 1375, 1279, 1376, 1731, 1674, 1373, 1278, 1772,
              1374, 1366, 1372, 747, 1371, 1233, 1752, 1663, 1232, 1751, 1662,
              1730, 1231, 1277, 1650, 1649, 1841, 1230, 1276, 1617, 1729, 
             1711, 1229, 1275, 1616, 1728, 1709, 1601, 1603, 1602, 1831, 1472,
              1306, 1470, 1691, 1759, 1471}], 
            Line3DBox[{1310, 1792, 1556, 1426, 1386, 1554, 1555, 1553, 1480, 
             1735, 1677, 1514, 1383, 753, 1384, 1309, 1380, 1775, 1666, 1381, 
             1379, 1411, 1774, 1665, 1378, 1235, 1753, 1664, 1734, 1234, 1280,
              1618, 1606, 1832, 1607, 1609, 1608, 1478, 1308, 1801, 1476, 
             1605, 1604, 1477, 1733, 1676, 1474, 1475, 1760, 1692}], 
            Line3DBox[{1311, 1693, 1754, 1678, 1236, 1515, 1761, 1312, 1479, 
             1313, 1237, 1712, 1762, 1314, 1619, 1315, 1238, 1776, 1387, 1388,
              1788, 1239, 1389, 1390, 1777, 1240, 1316, 1382, 1317, 1778, 
             1241, 1318, 1385, 1319, 1794, 1557, 1436, 1582, 1516, 1558, 816, 
             1481, 1320}], 
            Line3DBox[{1327, 1755, 1484, 1326, 1245, 1517, 1815, 1325, 1393, 
             1324, 1244, 1780, 1392, 1412, 1391, 1437, 1584, 1779, 1583, 1395,
              1559, 1394, 1560, 1823, 1243, 1323, 1483, 1322, 1763, 1698, 
             1242, 1321, 1482, 1814, 1679}], 
            Line3DBox[{1416, 1790, 1529, 1417, 1330, 1413, 1568, 1651, 1789, 
             1528, 1488, 1489, 1440, 1530, 1642, 1840, 1652}], 
            Line3DBox[{1421, 1824, 1206, 1506, 1507, 1459, 1509, 1597, 1508, 
             1207, 1304, 1347, 1743, 1672, 1208, 1681, 1783, 1403, 1348, 1209,
              1682, 1784, 1404, 1350, 1210, 1657, 1744, 1212, 731, 1745, 1214,
              1658, 1746, 1216, 1659, 1747, 1218, 1357, 1748, 1686, 1220, 
             1687, 1749, 1360, 1221, 1621, 1797, 1713, 1460, 1361, 1222, 1710,
              1798, 1615, 1461, 1638, 1647, 1637, 1223, 1811, 1695}], 
            Line3DBox[{1424, 1822, 1548, 1274, 1600, 1547, 1469, 1512, 1813, 
             1697, 1369, 1273, 1370, 1727, 1673, 1367, 1272, 1368, 1726, 1688,
              1365, 1271, 1787, 1410, 1359, 1228, 1270, 1725, 1227, 740, 1226,
              1750, 1661, 1724, 1225, 1269, 1723, 1224, 1268, 1722, 1685, 
             1575, 1267, 1648, 1721, 1684, 1467, 1266, 1599, 1830, 1468, 1355,
              1465, 1265, 1800, 1598, 1466, 1305, 1464, 1799, 1660}], 
            Line3DBox[{1429, 1793, 1587, 1430, 1397, 1428, 1561, 1427, 1249, 
             1827, 1526, 1610, 1527, 1487, 1525, 1803, 1700}], 
            Line3DBox[{1519, 1802, 1699, 1485, 1328, 1246, 1816, 1520, 1521, 
             1486, 1586, 1585, 1826, 1247, 1438, 1439, 1396, 1523, 1522, 1804,
              1248, 1329, 1518, 1045, 1524}]}, {
            Line3DBox[{713, 1840, 652, 1155, 1156, 950, 1108, 1828, 715, 654, 
             830, 951, 1765, 1109, 717, 656, 839, 1807, 1011, 719, 660, 1736, 
             721, 666, 1740, 726, 673, 1746, 733, 1718, 681, 740, 690, 1752, 
             746, 696, 891, 921, 1774, 751, 701, 899, 1777, 900, 755, 705, 
             901, 1780, 905, 1085, 758, 708, 1043, 1804, 1044, 997, 998, 761, 
             711, 1793, 939}], 
            Line3DBox[{736, 1799, 968, 967, 1023, 1022, 677, 1825, 729, 1148, 
             924, 857, 932, 1096, 1824, 931}], 
            Line3DBox[{743, 974, 1759, 973, 794, 684, 1800, 503, 969, 465, 
             466, 1573, 286, 858, 372, 1597, 501, 408, 410, 930, 1771, 1095, 
             929}], Line3DBox[{762, 1165, 1051, 1817, 1000, 764, 1005, 1806, 
             1008, 1007, 829, 769, 1757, 834, 770, 911, 837, 1767, 842, 838, 
             663, 853, 916, 854, 670, 1744, 730, 1716, 678, 737, 1723, 687, 
             1176, 1841, 1177, 1178, 1179, 1180, 1129, 1832, 1128, 1144, 1145,
              1146, 1762, 987, 813, 990, 1035, 1036, 1763, 991, 819, 993, 
             1802, 1040, 822}], 
            Line3DBox[{766, 1060, 1058, 954, 1009, 953, 1012, 1808, 776, 1066,
              777, 1064, 841, 1768, 786, 849, 787, 915, 1783, 851, 860, 852, 
             1091, 1836, 918, 1092, 863, 971, 864, 1721, 1172, 1173, 1122, 
             1125, 1123, 1728, 1138, 1139, 801, 977, 802, 1733, 980, 1031, 
             981, 1754, 810, 984, 986}], 
            Line3DBox[{773, 957, 1796, 774, 958, 1013, 1809, 781, 960, 782, 
             1119, 1829, 1117, 1170, 1118, 676, 1749, 869, 1153, 870, 1720, 
             1154, 920, 1093, 871, 877, 872, 1726, 880, 796, 887, 797, 1731, 
             889, 806, 895, 807, 1735, 1029, 983, 1033, 816, 1081, 817}], 
            Line3DBox[{783, 1758, 961, 784, 962, 1135, 1833, 788, 1134, 789, 
             964, 1797, 1149, 873, 1067, 874, 1068, 1834, 875, 1069, 792, 879,
              793, 1727, 882, 798, 888, 799, 1732, 1026, 975, 1030, 808, 1077,
              1792, 809}], 
            Line3DBox[{818, 1814, 1034, 988, 812, 985, 1761, 811, 1032, 982, 
             804, 1801, 979, 803, 1143, 1142, 1729, 1141, 1140, 686, 1722, 
             866, 1099, 865, 919, 1715, 856, 862, 855, 1784, 917, 844, 850, 
             843, 1782, 913, 779, 840, 778, 835, 1059, 768, 1061, 1820, 767, 
             1010, 1006, 1055, 1166, 1839, 763}], 
            Line3DBox[{824, 1045, 709, 759, 1037, 1815, 820, 1038, 706, 756, 
             902, 1778, 814, 702, 752, 1775, 893, 892, 697, 747, 885, 884, 
             691, 1725, 741, 682, 1719, 734, 1747, 674, 727, 1741, 667, 722, 
             1133, 1838, 1112, 1161, 661, 1160, 1159, 955, 1795, 771, 657, 
             1111, 1110, 1756, 952, 765, 1157, 1167, 1054, 1818, 1053}], 
            Line3DBox[CompressedData["
1:eJwVzrEug2EUBuBTpC4BiUU7ugKd6GBTbd1BV8IFGBqbaJpKJARBR0OVThaD
RCINIjqoNLF16mIgTQwkHsOT9/3O+fL9/0xpo7ieiIgCp6MRl5wxxzFTYxG/
yYj2SESFK7NFs5bMMK1v8mBXZV5foGqXlbPjEWX5ZFf735sPvbcrn533yOkD
sxf9kEf9Vdbp6O/ynK7ely3e9IG8pqd/yBu2vPXjfCQ/nW9Z8v1lvsxzcttu
VQ7t7sjrKf9ZlAV27PflAWt8u3PPhJ52b0VOUnHvhCYXNPgDfEQyRA==
             "]], 
            Line3DBox[{937, 1076, 1773, 938, 890, 1028, 1100, 1027, 972, 1813,
              1024, 1025, 881, 1073, 1072, 1150, 1821, 1070, 1071, 1017, 1137,
              1136, 1798, 965, 790, 963, 1016, 1810, 1015}], 
            Line3DBox[{978, 1760, 976, 800, 693, 1127, 1831, 1126, 1124, 795, 
             1164, 685, 1121, 1830, 1120, 970, 861, 1097, 1098, 1785, 947, 
             946, 859, 791, 1743, 669, 723, 848, 785, 1738, 1014, 1115, 1063, 
             1062, 1065, 1791, 775}], 
            Line3DBox[{1018, 1811, 1019, 966, 1021, 1020, 1812, 1074, 933, 
             948, 934, 883, 936, 1075, 1822, 935}], 
            Line3DBox[{1046, 1803, 996, 823, 995, 1042, 1816, 1041, 994, 903, 
             992, 1084, 1823, 1083, 1082, 898, 989, 1776, 896, 699, 1734, 749,
              694, 1730, 744, 688, 1724, 738, 679, 1717, 731, 671, 1714, 724, 
             664, 847, 914, 1770, 845, 658, 833, 836, 1766, 831, 910, 827, 
             1764, 828, 1087, 1086, 908, 1003, 1805, 1004, 999, 1002, 1001, 
             1050, 1790, 928}], 
            Line3DBox[{1056, 1819, 1057, 1168, 1158, 772, 1837, 956, 1113, 
             1114, 662, 1737, 780, 959, 1162, 1163, 668, 1171, 1742, 1116, 
             1169, 728, 675, 1748, 867, 1152, 735, 1786, 683, 868, 876, 742, 
             1787, 692, 878, 886, 748, 1772, 698, 805, 894, 753, 703, 949, 
             815, 1794, 1080, 1078, 1079, 1130, 1039, 1755, 821}]}, {}, {}}},
         VertexNormals->CompressedData["
1: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
3zd28nVXWdy3CSUzD+O+bdTxCOH7zJasnTUV9/mrUeE13Oebl4dEv/tezQLf
buyQ9q0KflxW3zRozmtwcr+ZrJSSCfPivFUaRiSwKNijGrylEa51+Hgy5O5L
KHOSic21f8b0E3QGnT/WBNvSBs/H/TluMXcd3x+Wo1V9EfdH7WlMHh/PJgVK
v8TxOvG9B+D4ApNJtXx+NrWn/iicPyDlmzLO/zbt55OvPmWgdWKOjs32Qma2
7LnfjrgamJx15xE/n2BnqBLFzyc7uNJNC89nOOz7iOd/ksGPg/w8M1W3rF/n
eeKzMSV4/n1dEnfw88+GlW6/guff9ofLPDz/a++/dsHxV6/O3oDjpQ68uzl1
Wxo0l9lc43qArXjs2oJ6YG1z97eoN5KvHP/E9QbT+VHminrDT6yP6NC/9BGN
oj6iT6hfaLNYv9BU6oM9WCxuK97XPZL6ukdR//b11L99PfVv196zPavvOCEU
2Z+vN7sqYDpRZ+0XOxSA3waZFENhMQyY1et7on4F02w5qOQmWQ2jJn0ZaSQs
ZupX3etR/mVMfj+UXy3t2VVqnJCtOCUbj/M03FCai/Oklxk3Z3M9Vzqu92YD
/q6Pf7TKzcS1FOSoP09/ejedonfTmNT9k3OWVTGP8esAxytOPrIAx6+c1fV0
wm2vF3q1T8dXjnzH+in4FEm/qoK1poWjzH5UsqFeTYf7Iu7UNXlOr20xIFCT
yDN34X7qiM/yj25VwrZMTatmnSpoJ15Cb+IlNCNewkjiJUwhXsLuxEtoT7yE
WcRLaES8hFnES3iceAnHEi/hP6Q3LMX0hhTph5di+kGd7vV1sXu9h+5vV7H7
G0D8g3OJf/AG8Q/uIf5BQeNv/sGXxD/4lvgHhxH/4DTiH7Qg/sFexD9YQfyD
ESealshuaWJhN6s63lOSh/P1/k4HtJPhkJJklM1OASyRdGnv1VDBom5szdhc
Wg5lestTvgypgB+u+Q5KSkVs/e4rBz/frYYL3WN3KqoXwYMOJdD3bBa7+Nxj
uFxBHWwy7PK184MseNhQf9vCNJHlp6+Y+mhGI2yQe1RdZhILnZrO7G3Kj2YZ
T2qu1u5pgihrPVPvbxksI7G3+0DHeCa1qP7bKt9GeCDb5Yq6QQG7dmfKLou6
DHbpqNnG1MP1sPhM+tL1M8rZEROZd7FSBWzzhubeAzK4nz/hi1/Rqyrm+mPk
3i6Z5WxhekTr4fBK2NcSnH94ioh1HVh4dcgWISutcN3eVpUJ/Xo8CKt8WQ4h
dr2TfO2L2UT/lOyRvtXgbrv4zoH3+dA0+PHw0F05bMqFtDMnJOvBwd/xyL3o
VEjsJ3fkc9MrpmkZajz5UCNIzrJJtZlQyhYkD/IJOJzPIk5MSnJsegenv66/
ub2ykh1K0NTWGV3Ophkp3pFREcCkynELJu7MgcTKUYvee+axmxM+NUa710Pd
zStPp5oK2O7IZWqD9wlh+uxRl1S3F8CVpQMlrPNFMK7u/qD+H4Vg9LHSvVU9
FjoHJx+ImF4Fip4qNbCwCpy/GcZoJ5bDicjADhYuFey896uueC9CXFSN8F7k
BE/yuiUQss+yQvVc7m+MWxZjWHAuC8a+OB+FeOkJiHGagHjpKYNr0l9iwZx4
1qKIZ60D8az9jX8tmPjXDIh/bSjxr50juR7JFUheQrxszcTLFk+8bFUk/0ry
mP8fvjZPkpeT/ADJh1NdQwDVNYyhuobqK7Z3ep2tBtUm1V5WskLoKtPnemR1
LDw0WLPF+R8BKIxM3bHpciX06blmQ4xGOUwf/mRx2Btudx6rfiy/VALbmmHa
w+Rq+Oqv1vNkRRnrF9fjw8rgEniw6tFot4RqCF8RHiulJmT1sUHZeawKFgaO
72c0txhCX955vcRRBP0uRfRbZCiCLhlNd91LY0G3g9MTPIfS/ZP9+TmEnf2X
lOA53FU7uhDr6KuPWRm7Y/zrZke1jVh/FN3tCD/nMFbF3Iafc9jat7usKz/n
Y9ImqYf0EoFqpyGVBwYI2dubRy69Xp4DVhtNun0IFUJLiiii/R8B6yE5U2vv
8XxIjB5ewNfD4mujuvD1sNIf+Q9wPT0pf76J8ueNKH/+ceuZXXwfWK5Dfd+K
SyVMQ9ZQGfdhqHVRKN9PJjwn7ML3k51UOXkL93PC/OqrGHfWV0rfldNXxJYt
v82M/z/4wrxJ7kXy9SQP/AuP2BmSryL5DJK/Jn6xds3f/GKfiF8s4y+8Y4nE
O/aQeMeGEO9YMskfk1ye5JmZWR1VbtWw2mg92eA3VezS9Bd9ij/Hgp7SCmd+
v2DgnhszcrGfZ53mArxfLvorbPGe2th07DVrYRXbeWVvKN7TLZVb49F+qWgN
mc7vKZvl0M8Y76n0dskPXM4+B34YhfJHI3vqoFxB5ekZPg+7/2nNJ37fWb/W
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
          "]]},
       AxesLabel->{
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]},
       BoxRatios->{1, 1, 0.4},
       Boxed->False,
       ImageSize->Scaled[1],
       Method->{"RotationControl" -> "Globe"},
       PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}, {-0.5, 0.5}},
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}], 
      GraphicsBox[{},
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, False}, {False, False}},
      StripOnInput->False]},
    {
     Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
ud7/twWC8YkmYPXZjUosknK938Jw0MhEtxVMPEwDDcIjyE35wqiXi2g7eKCz
37Zszxhyu5vNGndSvwNMOhans10fR25s2l/ho9kO8Lw5eqp4hHK9T3Ug+hLp
Uweo80sxY/ChXNe3ni/TprZpA1F+1ZtP3RhFbm5MHDdbTZtAwN6PPkZHhpFb
q3Pa9KZ1DwKduLHii0XK72pSLl7/s8ZnD1ZaTN4I81LuUymlcn4su+wPxDW9
63jKKPejqH6pJGdi+cLg1OE7v2oo96Ms489vzauNAmZftr8+JUi5H7XIuHZt
jvkbUClIN1PKo9yP8mYz8739JAFULntPpvpQ7kedLgstnl38DkZUghetYyn3
o2w8i//01iaByOyW9750U8htmD5gU7dgMqCVBcU0cZT7USkhPPxXF5LAQT5V
UXplyn0nhR3hNzKWE8EmjYSjJq2U+053m/nE7xjEgvL60OoOQcp9J2ZOh4U3
Bs8IZ/0uhGwrpfzuS0D07i3D/FB4ds+2x2qclPuoc+aujiU06fD7W/t7wlsp
brSJ3+4pmhbAnTR+/k0RlPulPi73vi+/LIX6LeB2jzHlfmkANDz2L7USDhPC
+3+3EJEbu1Zxler2Writ8FcXnzvlfukeTeOgaZd62Hb7uIrzW8r9UqW+lAsz
vg1Qacc10U09E8jtXMGNHq/ZBnivVd/nyzPK/dLi62zSTdkN8GfKSPbXfZT7
otfkp8fPeNTB/R9j3qsXjiE3/82f+4t2VEK5mhONj1Qp90W96jM9b+2/nz/E
LrKYaUz5XSKThTDXZavv0N1/S9bZ7FTkdmA6QKH7dBkUHC1/3dVXjdzcPU7t
rriLXb/1Bt3orG5FbnlGh6RP57XBE/qH+fydepBbGNs7VjnBbnj+rKzWle2U
+/lS3q5h/Zl98FV4B7W9POV+vvyjdTP3uAFYXH/b7fookZJHzFYNzVwH4Y7q
sqmGZRJy49TOyw+bGoS67/cJLTwfQW6VV1YnPicNwrvSJiyZJyn37adtKqiW
eAagm9EE6x45yn17+eSU8/r2XbCS9ki68ccB5JZVOq79ic41/waPboJG+3vk
dlxFJoJcN1yE5Pwci9wsjWRUhPvroNMLIYbxpkLK93FnZF7+ONIBRQ4/OUQa
qEZuCSP8p2L9++Hik86T8meakNuLLsshocEheNNgQXe4ppVynjZnf7BQx64n
xpiPaYR3IDc/7dHcoGOj8PAy76tgLM/gbq42/y5F3xiDXh8IpkmcPcjNkH/5
0gfSGFwru/o7EPYgN9LEu3ICVseUzpHzcA9yO663cJtcxxztJH9P1Ulx82WW
1HowBH2Nek4xglbkxt81mba3zzd/wJbOPK7AC7mZqBfcOTCbBb2Xa4Exqxdy
u83MpTj7uRFeq/H+7iYbhdz811jdTvp2w1d1hBM1n5KQG8OvrycPbB2C8s+0
aY/mpyM3s66JIU8vEnwwzDN8aS0buVkRGnRHNMfgL6YPpRd08pDb/n23vh4z
m4D9q8nxuwchcntg6ZJ9tXoSBmtIqXQWFiC36+fU3+s/nsLiqNk5n8OFyK0g
0ufKacYpeCn4q5/gRAFyu/S7JXgkdBweY3Jj9R7Op9zv/UYjf4maBIkC2Uwi
6tnIrVggOHKzbED+yD+BXfZHXiI3T7t3XmofsuB0af/w3ScBqF71MxcBjrqN
UCLEJTIv5zuq/z3sfDXmBbqhafWQvklDFqr/4wcHTkmUD0LHeaMPh6ULKPcN
wu7mLsiSIO8elpAnBsWo/hdYq5I7vXkMxpXrSvH/LEX1f+XivtI15gm4g17T
+lxNOar/Vb1uKJ43mIQXe9cvFW+uRPV/duGL0p10U9BA7nJJdEAlqv8rY3QY
CLGT8BTPL9t/spWofn42c8Y+RW4cZmT2ulEzlaP6eYChZex7BhE2rVQZio8X
oTqfp+Gik7lXYP5NvT9ZvqdU0Pfsn2UWGJg60iCrUmcxl3E8cmNbk/XnfILF
bW//1ELWEuSm4VKYXL61HRa9Se5Kf1iP3K6HDzwT5u6DBw8dFbXwaEFuqxNr
3kdphqB0j2BctHcHcuP1eXvd/TYRii88U18q6EZusbIcdOfZRiCjKZWIAVcf
cnP4F/lN8/QoLFMsk5371o/ckooFCRUFo/A7gSRbJzyA3OyeCq7Jm4/CNMjb
LrDYj9wYWapufjAgwYSPceUdgr3ILbLmrtO85yBUCBi/1D3TjtyOj6gePBri
n++b+o3lcZcjciOdflx5EPOi/lSVxoj54W4CIveNizAvY2tZNrIf7naYt2gl
A/PK5pa4TPbD3cTZT/8ie+3RXlwUwvxwN/soKc8YzCvc+pc82Q93+/mDpLaM
eR0ee/7vDeaHu73SlDr/EPPyovnwVRHzw92knCX1/2BeQxUXz5P9cDdGzl+t
ZC9uyXcd5Zgf7vbN/ebqScxr376RILIf7sbfrtTSiXmp3ZdcDcT8cLcDUOx4
D+Z1MV5JkuyHu+nL3F3kifPJv6pS5UV+xd0sRARU9bHzc0DolhH5fMXdbCpq
dhRi56foq8s85PMVd3sgzMhkjp2fERGRguTzFXfbeTtM4yh2flZ3GnKSz1fc
TWLhVZI1dn463PwdSj5fcbcjP3n9T2Dn53ztfS7y+Yq7dRICNp/Hzs9jUhWf
yecr7qY+WblWip2f7KHsXOTzFXcLni12isXOz4oFjVDy+Yq7xdQLi65j5+cx
QhFJBjtfcbeDW8qoabHzM2YXy23y+Yq7/VZJsJDEzs/7tXzV5PMVd/PvrDto
gu2zz1XHSEewfYe71SwFahpg+SCG9qYVOT/gbiJiHVIuWD74Aao0yPkBd3tO
e+tZJZYPkm8cCyfnB9ytEJ62PYTlg/jIDEDOD+h3BRcYYy9i+UCd/tIiOT/g
bvbhbWvnsHzQ0tP5lJwfcLf5qnd2zFg+4Nt3u5CcH9DvTO6GvWvD8oFaRV0z
OT/gbtsU5l54YvlAY1DiOzk/4G7Bjx2aT2D54IgshxE5P+Bu1xkiGN2xfHCc
nSmVnB/QeZpw8LcAlg8yxYfUyfkBd7v5oUUkEotr/MtFduQ4h7u5+P0g2mB5
IvrWk1Zy3sDHHWTCes/YxIIbh5dsvu63BCUqzVLR039h9M+/reJt6eB7juJ0
xl0HIEK1EKlhNg3aOOZqcm74g1vj5XFHzsZAfP5Wi/z34GI42OfqPaEzkwrx
+VNSbX1VHB4EiWbSWrSaGvpextfWkb4rMAjsZps4uYs/Gh0nx8hTIm86HWT6
WpxrFr1LwI+TJXoh0OSrE+FVsFg/w2PKfihU+XqwOzAWJF51lmvbqUbAjzOX
qEdUfRZI+BZQ+UAr5C7Kj77JW4vmUqwJgdmD+h/yKPch70kJXcidjgL/biqv
vlpLQeu/udR1gKTaBW7P1OaGhjkTtty4c+HB4z/wpLu2Y/W1ETARu9lA1dGX
cNvuTV6E0gT0ah+wLygngk0lRv6plxsAPj608dzo3MZzo1c3focGYdLsiu8U
4NLWexj0MICgdLD8gWlvBjiksoMrEqs72bOerr4p8ybksNIXtT0eBEkfD4oK
dA8BQVq3+P3BtQAfL96h81TmzgD4eIyFhkO7D/1/nfZuCv6e0gvUutLnznp1
o/ly4kxG+3SaweH4SfWufUQ031bdFP70awSi2px0e2WH0Pxrcim3mZK/AbP9
bzMb5EfQ/BjBG+Fakl9Bn+yFfUdEiWj+n6B8nt6rVdAhw2zrqBoJzdeYEp3/
O1gOW1yujclpDqP5Kwen06TbuuFO0ZXITU8G0XzJPayhevKd0FaFUeJDfD+a
b7QqcotXfRj2e5A/hzY0v/nZ0keS+yCMUyX7taD5FRcquRd3jkDlAN+HS6E5
aP4Lbs3iLDoiNJg8L0R/LAvN38rjru9UTILjiyfLI/uKIT4/pWDl1hc4DFk/
Pt8VQ1cE8fm5R18crjQfgux3w+mceTrR/DdHGmjf5w7AHjPO97ea2tB8vo8c
M+R5V+6+a6nA/g6fz05z5MFtbB4VFM/3w/4On+9iZTweja3jE0lbgbwufL7H
1sM0sdg6LqmlypDXhc83VXVk/YO9zz1psRLk943Pd2Bqkt+Cvc++JJU28vvG
5y/Bv1RE1SrQ6xmVml3eBvF9XjRT6F2F+b4WPvOZ7I0fx3fjd5UpG7+rxPdz
i9eIfATmbu7h0kP+HPDj195tbd8VTgLH/sYOJmwtQ/6u3+K1LoQNgwX2DjW9
tWLkXyDUMsF4cAhcEZVn/cPUheZvqdvDYmQxAFhakk6fiG5H87/daSKwnu4A
okOkUL+CITRfPW36H+lvK7Do/9i+c/Mgmv/68fKlJ8mFIJrRmdd2kLI/85mO
izMyFgCWfQPfmroo+9OXWlpzghpC7vX5h8srlPmnqmOtmg7nwp2msZt7Zinz
N8m4eFWdb4cNDKSOuzuG0fzOEq6KOa5WWF+QKtCjRFlPVnfhhEX1IMxwkX9/
Zp7yfrU+yURFHh2A2a1UtaetO9D8uhvSZ0TtSPDxsv8eYcEKNL/4OiOp6eUw
/HJDRPTn71I0/3hrQ8h98RE4cXon266KZPQ59r7apd1/jAgvVyTVvudOQp8X
tXy8qWkvdn49CwpV0W5B87dOftD12jIEHbfFLtraNKH5kqKHY2vce2EV/5Wb
Hdi+xeeffdUo5lbXBftJ1ZNCun1o/ujBG3yX3OtglTyPOc9fIpofJGl/6m5G
NcxcHn81tpWyn822Kh7irPcFpx2P1my+StnPF7wrji/w+gBr9ktOdLKU/XxW
rfht1I1GsGvij96Od5Tjf3UacTj4vB5cD6DdbfFtCM3v+temF87RBY7s+krj
zf8N4Pvf0dZ78ze7TnDoyuNV74VsNE5n3drcydEOZJc8Oej4KtH4fok3zK80
W8Ev6VnnvPQ6NH6rld/BnGcEXJY/ZVJ3KgN9Xkmsy3+7goeBMWfjErjd+n/l
i/vKi/8rX5zceC4+d+O5eHycf2O84T/jkRvPd6+p/M/z3fi4vTRDhuStKZBO
p+cbbJQL8LyTETKX1fB9EqQqxfYdFK1B4zEBt4RV2MaBf9qXK8PXu9G4d+DR
Qw4io8DsELhrnzCAxovObje+z0EEnTJixMc8aWgfpnvdPHSkahAIWd5n26fb
jMbb3si5Wo81gB6HnmJrnhbk1rR/1ZHkXgNGZyK/R7G3oXHBKdLP6pQekOSW
9L2Sg5IvPm683y2q//v91m48f/164/lrfLzBbJuixp0hsF93zbNtiITWTxzk
K75J1Q9Krv75ObM+isY7uCVDXtN3gT+8hbq9Wyn56NUYC9NlrN4b4N+vQ5jp
QOtUq+IQE+hMA/SGn//pVnSi8XvrJQMaZjUgdv7WvBgfJZ782Finx3/WyWr/
P88179x4rhkfv+Kw6Ua9SBMo//VJ4eDuSbTOCXbdY7ORZSC0J193kWoKjVcJ
Huw+XVcJzmTROnwUpcQrg5SgVte/76F7mLWwq0IXZZ2cB9SuKqRAdRKPc+Ao
Zf37A673FNaGwdbJ/uEkZUo9ULTx/PWu/6wza+N54dCN54Xx8Xd5T2WPV0ZD
4wmCEdGNss7a8e33CB3FcDAlDfRxU8ZN/7H15x77Ag+XMJOEpSn1hvf4Re5D
EaWQ/swt2n/L7WidooI5ke9NqqEWp67Pkjll/5zf07qlQwuLXx9efGa5Ral/
ajbWGfSfdcptPIcbt/EcLjofs0gFyg7tcDRDQjyPfgKtk0k2qPdNdS/kHSz6
9kd3DI2z7e+54hfbAHd0rv3Js6bUV5vsfV3ftTTBiCxLk647TWidUZIOjnWL
LRCWD/GPF9ejcaOufYHMC/3Q28LhkfeJfrR+1Y11RvxnndUbz7fSsv3P8634
OPex5vI2Syxumpb4ErH8hc7rBeXf4mUjMLXEiCAhO4jGL73fuseKqhfqSr/Q
/nihB61/UkIIcsl0QMaVtlJN0xK0zsqnf0li1zrh2vKNFcLLXDTOf/atADku
+yWPeUVjcRpff9PGOn/u+d/rxJ8brdp4bhQf/5gR6Bt7fQLKjrZz0oi0oXUm
1Rdf/eQwCY3lE1WT5+rQ+FhE9LA5Fvd/seipc2N5AF+/WJTQpVrlLvgi4bOK
yD9ntE6axpBakxNdUHZPdkTLXCSqiyLfxFSQ8xBjxcnwE1hewtfvvbFOv/+s
02zjeUzrjecx8XGFX/HL6d5TsGNNz32lKgCtM3b4cFIEdn148KeeHqkwA+Lj
b0e4Hch5Lm+qkmELnw9a/32dmsSqzA7Y/nRyTXatEK1TWNeiWPVhO+TcGlV1
lKoCjTv5MIaR826PT/teFSwP4+t/vLHOuP+s8+TGc440G8854uO3timmkjom
4Pn4xAFGj2a0ToX2LFlH43FoHX90xISlC41/SbyXQM7rlsX5GjpYnsfXP5Gt
0Dub1QzzC8I6sgwa0Tr1Tt1Ty8b+HevNZEb+7/h454n1NHKd4X2Wrb0aqzvw
9fNsrJPzP+ss2Xh+cHHj+UF8PDQ+0XHYiAQ/7bq83Xt0CK3TMCzLl/zvGSbm
HeT/jvbP0rqfMFbHuDtKPn2N1TX4+s880v/Fg/kKHeZ5RvbG1/l4fZ+YPPZ5
PN58y5r8+eDjkmeJAapYXWV/tlSQXGfh60/cWOf6f9bZtfFcXvnGc3n4+FFW
0aNmmG8a46/pV5g3vs494x+EmbHPY3/ZvBX588HHX37s67TD6raa2I885DoO
X39QrU9pJ7a/rctP5JH3O77OKyLR8fux84Fm26Vr5PMDH89kZrVgw+rIRps+
T3Jdia8/cmOdVf9Zp+7G825RG8+7ofGeRwsT2P7mN7v4ibzf8XVyb/c7TMLO
B5edR9fI5wc+ftbpSeEHrE5dh0ZXyXUrvn5F4caXZ7D40ng2cac4Fm/wdUq0
ffW/jcUjxSyVdXJ8QvnrjMzKSaxujgPH75HraHz9gf95Lg9fp8vG9U7Gf653
xgUfhiRi8eWkyVVHcrzB13k11qpxExaPLJml2snxCR9vOVt1YRKry2uXXtA1
v6TUt0c4hHL/+vYAy+A7c+z5Y2h+xIxBoYFtB9C2UmO/IVmM4tKJjXqv7D/1
npvWSa77HyaAz7UEN9GBFhRPuHcZblNWagbeXmNe4sRGdBy8/w/1f+olP+5d
F17/JgIrMVu+MhNKXvAxeNFm2VwG6N7tKKdLpeTZ4v/0t8GPkyb9KK21qgMo
B4hJxOeNo+Mwksx9/Sw/g9XB4hZmaUq9MWn3/65z2s8UhAewJoOKZn9DNztK
PeCfbuBoQAOhQOoofQ43pT4p3sjjIf/J416G7Hlx7Q3w4sPjqttVKfXS4DWN
AacHDXBJefxmqQ+l/sT7b8T8J5+q3HgzKNwwCM2ZRF+raoyg43xn57pLvn6+
8Zd836gKHad+I68t/yev5Yv/CCJ/3hOF5PtAPeg4no96mhKpu2DLym2e3Xe+
o+N4beSX7//JL9Yh62sXZafgwqXR+zpbC9FxSkjOC0xRnZBbbfxczqNMtP9N
N+K8z3/i/PSnT84hXZNQdCmSl9GkEu1Dpg83Fet+tMI74pGx8eG16DjHN+It
03/ibY/R7t0cIaNQQbp3eh/7ADqOutS9nATs72PjtMdrsePhx8nZiHsr/4l7
8+Erjvuxv6/Zw5HEjh0PP06rj3dFLvZ+In9UNZLfH34cuBF/Kv8Tf3aE5Q0z
Y+/ntWOOFvn9oXrmX8oOZsyXftBqkuyNH8fm/xOv4p62fdHCfMV8MzmUZSlx
aYfLqNnv0lKwuf976GHLDNRnQ8E7zkn4eQvgCDjRuGNfKeqzse3cqcNxRT1A
1NirzjymFvXZePjLtTqlfxCMZdnrDTxuQn026kQ+miZlEsHT5jO9tlqtqM+G
xHin3aXxEVDu8krN63M76rMRtkt24e2TMdBRr1LJKtGJ+mwwpdR1GN0aB/HJ
n6SZD3ehPhuaeyte3vQfBwn7bL06dbtQn42khAeRmXfGQOKVoLY3XJ3o91Q7
Qu3plkRIYFb5IltQdyvqs2EyxhTLsXsAvGD0vkLn34D6bCRxie08vbUJvBWq
3xwbWIT6bPwOsnvYNPeecH3zUX67YBd0n/ZPrqviUey69F9PuZz8H0ofnpzl
3LwZv5eEEikbgWMnXCnPrWyvT2jLqgLdv0L4LhdT+vM4yx/yGinB/i37ptpd
sws5O5EuLUqptYPMaXUaw7sDyBmamL17SN8NmoZfPfb/R+nPc7rPRcd0tBe8
e6kUeX6d0p9nWtRb+/JkP5gvjI1xeDSCnH9LlJ3f7DEAVr9FPZWVHkXOuRp6
EVwpA0C9JcTquMUoci5+R3X7Slw3OMrod83n8TDytGExOPdttQX0C3umyr/o
RZ7tLtfecL0pB5cF33t6ujYgzzG/W5yZwyHg9IkvndKA0o9LTPORlOWqNuHs
kNo71d+U59dmtLWk7E9/A4wn30cm1FD6R909sWr/xCgFiNw2Wg+kofTpytA8
O8VAwvJAS7Xdu1FK/yirPKr7Hm9yAJerkariTkqfrrCrYuNTN/PAkMlFk1Qn
Sp8uCfbBZyLXIWj1ejjQKU3p0/VpKzX9yTMFYJVUGpEtRenT5bazh877XgEQ
7teVsbKj9OkymXHRfnLsB9jBo/DeO4TSj8tBwiU7LCgN9BZeT+gbo/SJihdo
ebzAHgPct8g+SWWl9OPa6s3Gc2hLEjw0tc7Cx0PprzUdGOVgy50P3+kl69wr
aUU+PoaKAW/4SyHXkZ6rE36U/lpXI0bez16qgt2cBYJtVBQfCWvRM8/t6+CJ
+kvnWrZQ+mtFmO8p8+ppgNQngh/MaFL6a52xelRkuk5+niw84BgVpb/WROlO
v/6YJigz9KDFdm4C+dgcFrdbbm6CjozPukVEKf21loYlxsOmG+E5NpHRgdFx
dP5qsz2P/ClaD9/v49438obSX0tOzM3sV1w5tDyg9EKeg+Imclbq8Qf3HFhx
Wolm6jilv9a+rDSPlTb7fH37xpUiRcrvrJgqmo755xTCD0XUXq9HKX0On0W3
8UTGNcBwGrc5nSpKn0PeX7oaDEZYfBp/e1JBjdLnkF3OjduVsxfSsWndpymk
9DmMVIlWeN03AHtK2S+nY/EG97zzT0OpOWYI+ka4GudVUvocpglqcMSMD8Pw
yEX64H+UPocJIxFZ1JFEyFJpxK+cSOlzaK71uqO2hQjf//jwuLGH0ueQM/D8
W6b2Ybh9la6pf4LS5zBSa+7bmPwg/PDVIdvIitLncN/t3Y9ShLqglS2t0sQS
pc+h/iHxSOc7tbB+UVLx1zqlzyENy3K9HZNvvtuh3kX9c5Q+h5fNj6bRvyqH
2jvmjRhC4pBn6+1fPov73fMnOZ290+NN0Hm98FlsXztHG/w9nkRzfD4bOZta
3GRb2N4P+43OzVhLF1H6O33IO2quPAyrj8lFGMSWIWfzqUs9qndGYO7XulCD
c1XI2URcV9D3xxhMm57qs95Ri5yprH8fkH4wAZOWQx74b6pHznxx1HHKdyZh
F/Fx8CBLA3IWYp5tXAmdhLwjxsF9Eg3ImZjSoXBvaASmSrScSB+oQp46rdtl
9bQG4dqw1si8XgnyFEu24xJ62gzT8gVHK3oykKf61d7hXIYKeC9bUu+0Rzjq
R1GwpDmvmuOerwgNFFaC9dH3gDyuuzkPf2qDO99YNjSbJqM+FXu3nm+sK+2H
qjp3NkXbZ6E+FecC5ap+5Q9D3f5b53ZZ5KM+FRn/9FMEhkdgtHNaDUNUIepT
8SCN4dCny+PwjYmCg45TMepTcSVfeo/85kl4M6E/d625BPWpeL53xpdj0xTc
LefkOBlQivpUqIsazaqcnYKb/P91/6ksRX0qGgRMc7SNRuEFWm2XHYxFqB/F
/v2VNpdLBiH/U3OXCf0fqB+F3JYHYemTzfBLUZ7x3sxE1I8iosmsWU+uGNI9
MdxGdyEfuXkcTlI5wNkEOeRKRYRf1CCfRp2dLQqmnTCmKXW7C1UL8jl0oP8l
b2g/vCp6ieN1TwfyIQhu59W7NgQ9ioSLDjT2IB9zZq1wprNEqOGgvUWlrx/5
xIoMJQZ9IcGb4hMWdNSDyGfMP1R1k9EIrC2+kCQaNoh8Tr0oo6b6MgKhyoPY
gapB5MPCL6ny8C0J1jvoivLMDqDf5699vKDyCA5B43kflQ+2vchtIWqedotF
D5x8cmZzlHYbcuMTEixsJdZDSarXnCTWSuS2/WnCZt/X7/Ir/MP7io54ou+p
RWRiSEK30+AlKuaDWkplyDN7ly0t7+FiWJq9wtE814I8G9KJxoJDVfDenZnh
GZNe5GlS5KrGlt4AX1r9Fi+6OIQ8zWRXet7daYbKwpOaFaIk5DnVUn/Z3bAV
sg0Rdd0tRpHn8MvNCavdbXDwdZ/CVrpx5HlDLujPVHI7jOfuoJf/PY48r8aY
2/4ab4cv9vz84n9yAnm+tTBrjCprgy2RnYLfZsaQp+Qrb1JdQzPk31mmPZtM
Qp6x0aHm7cx10F47RcDEagB5VjRqBSx1FcAvu2ROSz9pQp4qtbPSFf5O+a0M
Sk7XzCnf+z/U8HohEu0IBA+E7Vh4SunnYz9tTfMn6xzh1FqJlIYQ5fkX8/Ne
SUJvfIFVctroZup25Nz05+O6YvgHYP22ncDEN4Cc1UQt+bU+fQJ5Q1zEw3uI
yNn2lRt7Vn4Y8NVM1ZNVovT5GRD+8abwcwSYXfDN04eUPj+t3xofXpyNBH1p
P3772FD6/GhNVadfy4gCN/2FqEptKX1++n87K0ePRwEF3fHsfQWUPj/u0j/e
XOYNBzdjGbqrmij9fLprE08Wvw0Bt8d/y5XuHEKebEk2OeXDXoCG29Q08Syl
n8+IzLDVi5QeMOh1+mZBQC2wtA8/kiFOAtRyTD+H2r+DHQ9VCL2aGSDwrf57
W+q/MOu9RF8UoRQcsb901Lm1Fhyj7vrOP7wAG9+9SXE0bAD3k3+ZBDO0g+yn
l6s7iufga7nJGA/s+oTW3FTfYb0XXPhZMuIa+QvGXHXn5UvvAQzGrp5SvETQ
kaQjXVZNhDtTy1PzOPtBBdw9XdhOAn8k/Inn9vZCbTvbLH+1AcCXAzgbpkeA
JKPRtdWPDfAqK5NQduIAENDcvPv+41Ew6Uuzqd0+CVa1PV9+ZzQAenbsrGZn
GgVO7k0Rh38UgPSPe6dYentBUfu6E9USEayZ7NLv7GoBB/1WPr9VbACJ7wIu
7e1uA9KDoufSJkaA36M2w8dfsetdh/OePo0QcC4oMdzk+wkcCU1Jq8yBYLVi
EyhlKAGi3SHOdrzLsOGcz44v+7+CXK3wnquLLaDkCsuX49sWYPBoU9w552Sg
dVY+V9SqD6iXuf7oHJ+Fkv0tWqFHMoCwihDXOdlhUPN0KYHJfwbKb7vE0TWT
DUYS7JNj3o6A6XvDRCONcZhxnzD4l5QLahV3+JdwjQPmS3WcFWzDMPBPVNr6
FghG93RWBi9PAH0LiyillE44e7vowhO+AiB6gHSZf+8UuOzrw0NtWAXr1H7m
d+kXgFQtoWOWr6aAbm/xYaFFV6jW1yLFmgjBreVHNL3ukyBiNzv3Po9yQDUW
RmjelQuoqcrNmB6NAa9T4hGt8h3gl1uLPuFvOjgXP9j4mHMYHBVMCmbUHQJn
HTtvxxV9A2L/LFV/nW0HNOdK9VI+jQFnZ7XiCiVHcPHm+p+Rqu+AeLPrhEbv
NIDUwvQyHWVQcrjz6w2HAfDTVy5nBysR0CeYDNnptEFmw3ujPOqtIP1PUyd9
BQnc/Bugr+KTD4Feflf7bBiwvlpzuil7GbYf2jtP7dAEaWIP2j7PSQdbyuXU
HYIXoIwZI33Bn24o1rqppsmwAHw4k2l20mYOTqhtOnF00xCc3et88NnRUsCb
cuJtj+YvKGNqdXl4bhQ+m5cK/XWoBvhLCbqaSxFhpfGMck//OFRwNy0t1qsD
JsqnXoQsdsNxnXGiNPskZCOeOhXdVA/0z7I2xPypg5+V9PZSY/XM01elf5Sx
eiYerifeG4uBMjSX9slumYSO+vxbX+fVAy+998+sqYpBv/0Pg7/aY/C4jm99
5uca4Kz5pM5xtRXUC51YY3XohHecplIU5vKA3Q395a22o+BcCsdN6rP5cHd0
g+mT0jCgbfy8KD7nJ3hfP/vn2r9S+NBIwoR17gvc+YWGv7l/Cc4XmnF3ZrTC
5rf3k53zkmDE7ucKrwrm4YcCi/aZ9T5YzVAks3ckE57ymNYVDJuFncmwJsN4
GIZICvdcnMuD7psqlnJoZmCkuvKp2LARGOF6S9HDohDGT6UIspWOwW/KWtz1
B8YhsTQiJv9OMaxrD31g6ToEZ/xmA3iJE5D19qIv+FEC+11YpD97d0DTk4zv
0n9PQqGzarSMHqVQMavu6vcjFZDAv8lc7vwUfBwS8nhTbSk0e5B65e+PF4B3
1PLN/kOT8KLaxKrMRAmMn+5cMGmoBOXB1mLvyd8TbVfn09MugrsOBTK8vN8J
9itss4rSHoLfnTP7B6/lQoOogct6v4eAUs0Nn3DnVrh95l94XUASVMyZZ6cT
GgfzP+q755s+w0WTqPJKt2eQp55+6JvJDIh198389bgL8pO6uqoqWqDQVgvT
u1FEUAaE/qk4VUDqKzxddm1dcNGQxlvn1ghYdPPSv+VrAyoCR3zKdxdB9T2n
+o+ZL0NNrav+Vxq8gLHm1bvj4i2Q5BH7t/XqApRWnmdbrgsAtEmliWtTvfDp
Jq49ziJz0Pz5tsIK9lDQf+Rhh++eYUj39L2wyK5fUO/jbHg1dxg4/z5LNN5m
BIp07gouGB2Hn8+du57CHwGkedQe1R0dh9dL1hr2xQ7Dx+nPzdkjI0Ful9Tz
JdZJOKHdzDTb0gWrp9+trnpFgcpkYz3+C1NQ0/Daitr3Gpj7y3vx3mQU0Isb
P6ZfhOWdzF+ZJ6NDoYxsJ9vPq1Gg6ueJ69uXJ2HgGQ3VSoVSYLXME8TOHAEG
Yx/kj1KPw61KrZInDraDMnbZCmeFT+Bz7aus7u5hOJT1kpRdNwjoZt1+t+zy
A5tT/jnW0XXCgtr3iXcYxkDi37As1xMWQFx3qOpaRyb8MhT7dJPKNIhsUqJP
rPgKzoQs7mz2DAIrMgKRNj1/4Wkfsf3lbAVAzVCApSowCahtOCtvFSSGyFeD
M3oV7pacueBtajjky1uEJUyTXD3/GsGn9wLff3sUAdz/MXjrsjusC/hFNF4Z
e1INrDf8O5hiGhyq+4D/mQBb64J6kPjJc8HF/jf0Og77z/8bAFvMC631nRoB
/rn0sJ+CeRlD4Jvz3bEg5WZgz7vlyMP8KVi/X8ZB8y4J1DiueT/e3ga+7Pp9
u+TlCDz3mf9mhO4IKLTesiNyZzu4tvF5FQeYxAXdHwWJ7NxiGVwdoGit2/eg
3AA8TBeaKscxBuR7Z6/NdXSAsY3P8YdTheyz4jFwTbGm3dKtE1Q0e/r+n67O
PBzK9n3jLVKJ0uJNIqkkaZF9SbekyFJZCslrT1mzFS0qRKKQtexrQiJ74ZJd
9nWMdYYZ+x6VkJ/v8T49z3H8/p0/nuG877nv87rmOj+zwNAK6wfEnZ8IjCC3
LtOQ3O9kpI2tbxZNSfbn/RGUu2X5XuL5TnQs6dVy5b4iGBJaTNIPGUEetvrk
aaNVv5vz37pfyBgjidCGUbVTdrtIMhm9xdZ9tNX/OcenISSZNREZYt2BrN9P
H+qxa0JL2kdogWcHkVZ19cvI2XbEhO2HsS3P5KRXBpDwdenbKpGt6GgLR+6h
6R5kpKKvceBDMvptoSy/+8snlF+5NHlY+TdEmTbnh516fmZiaoFl26wTXs/K
hu88aLu3DH3rtGMOOF2LLsrYMbUJ/ITOU+JsKuQGtFU1qLXzRjvq+jTE68Y8
B4sXY7ItZ1sR4/3DBc7mPcjiiN7ZUxPTIE99+5qZm4x47t/dFxBHRb+kE/KL
wsbg27/PY57ZdSOanoPAnYUBxMHnN82hR4dXJbf7SeO9SHmYeUNrDh05Hfpx
afJ0Lyh6RCWvVaAgrT2yKUVdg6jgd01BIjSB2T6G5fUpFLRxhmWf4K0htHLO
M/nh5mzw+VU/vc2Fgm7bKalt4x9Cs0Y8kTFjBejsUPqivEwvUqNqOPpI09F9
108LJ/NaEI9fVMr8bAfikz++EuFORXuvTZZ/4aCgP+L/Vj5dU4OKpxQilUlf
kHpA7oSO4xiSK8lcHhDPRmUiY8KplAQUg32OooWvv+W/4IhOdLMz9LrEIk7n
8j+8vIvAMBh4lkc1GvlWt0cLadeiD5NSHK0bfkHre+emUOVMJB3TJXC3goIa
yLxqgpUz0MfKsGgXmYvsLV4OFT+noeJIMXLB5Qm4mrxB8BTnF9Rj6TJX5j+E
+r14WPdsHwKJuy53WsoK0f2ENHVX6ghicGRWcGymgLuDdYFOKCBFtn3rFu6N
IZXiycVYvjaIah7dbKRcjJQLatfxXx1H3Me9WnI0v0JpheMG17o+pHDvZEaA
JsEBm1L8/epjUhHq8Z9eDHs3ikYLfD8LX2lE/dEGS7O8n1HiPVHyxy+DKHEw
X+VBXTdiHkYiQ1OfkWYw2r4wUoLIj9m114eOo8gz47zfRQG1npyztjxAcJn2
HS94uCQfh36ZTffkFDciVi5PiQ20UWSr/Vk3/LUTxDBXKlHBH53J0tNptFqE
rQz0rXSlD+AoPcCWdKQcbcfuX2ZJd79SowzY+vPQniauatTA3+LgcukXLNRY
7tecLIDvHPOHauitKBa7l/fxGjzLSywDyTHb6w/bepAwdi+7urC+1Ewth4Mv
vtVbXO5DM7uKUjq3zcJNF7E4E2o1yG/MasvM6EfPsfv6S/B9y/ufv8FahVcq
rpcG0Ho2s1fbqRPAftF/rrClHhxm7cFCfhDxrlEvt4odguzHDuNMBY1wiI9y
+cexYVSH3eONSsmvty01go3CP7J2XsNIYez0UrUxFQICjJxYRptAV9Sf59zq
+vZg9zvvGaOV+p3NMH7esT6IaxQ1p16+qaLUDs/mEjsiI5phz8SfNR9WdZTD
7n1flzuyXBnNMDPhZ96+ZgwdY1RO2vy2FNgppUth7c2QekH6wlrxMTSO+QHD
puDd73c0wzqzabGJvaMoHfMDl1LTAvwrm0Boy+c+248jqCJaL3qXbj2q0iD/
W17UAMNuXVcEV+sINswnOFwoC1sfVw8Tv9JOSvIMIu7f2v1NyV0o3YQcqV+W
DC6ZKs75z96jrnVBF5sCfoOumcuVCpZccIvPD9RczEaOmP/kDr/4TqDetoiS
b2O/mOeFn1fvOQ6PRCVWgpBA/usdLyuQhROT6WOHn/DASkkydrgGwqrmuk3C
v6ENmF+9ND/kfxC1wN2uIFOG681oeeLxk+NX56Cvs/Ks7D9tcCKxNl9ibysK
wXysD41cwxhOhu232tyOWHSgl8bzYV2iM3Dew3M94u+C2hO8G4fpZMSH+VvG
rluxCyO9YCi9N37euQfJfGqz3nl8HBw4Z9MT/6EAzx+3a7JpvcjusvxlNudR
MLL8xuQSSIW8ZOEB0VIK0o8oTrCZpIPZgnWa6PZ+YH8x17JfiooCMJ9MmUzb
4XlsAPZ03XA8r9iP1m3Xyg/R74MFHan7Ku4D8FAieXk+rB+ZY/55ZY46vFuG
BuQTXs/5VQbQhaFjfFf6m0HgjOauMRsayDAZJ0U9HFitn/7z1YUuxi8FK2gw
n5DH2V+/Wnf8YNI8EJgPfxIKHm5vpYHuyr5Wru4B9ALz29/DDW++ekeDi0oZ
sakZA6glPWJu0SAPzaTyPLluRIMnjV6+6TYDKBjz4ZOXC/k3rvqtKjd10yah
fjQdpObrEdSM+H+f8l0y7AcG90b2w55U9Bzz50F7N6ef6O6Dgku/rw4Z9K76
/Ac89Tv6kGu87g7L4B6QOXdWSUisG8XKXRY0laGinxwK9Ei9PNgf6Bj89k0T
qk285pauPop2k79HqQg/g8gi9oLX0ZGID/OfHMfptgpFGaCj+kh2qj0QdWL7
8OD1U3t5M92KAmrPTUdXEb8r9DM4KGT6egPc2fP+csftT8gc22/tYpxzAu5k
8LuteWPnr0K0hO2r9Ioc8/YFClBiWB+ITZciH2z/eJv13Vt+RIPlFs9Xdtur
kDS2T34ve/J4XxoC7hrf4UL9GqSH7Ydlr3Szxxar9ZHnES/2rjr0h/W/dQ/d
oqPU2ToK9pvU77i6NSA5bH2rXZ9Wh70YA00+xoZHxxrRLmwd+fSyGFcMx6D3
XyuF+F2NiIatl4T78ZMpqiPgdMIatuXVoTlsXZh8Dh/33kcH+cnMUob6KpSO
6e+WdK3tp0UpHMz8vFziXoICNg/HpjGOIxf2s1POLTnwtmNYrKg0GxlgddOb
1xr7bW1fg1jcmq5uG0uQwc7zxdGYf3fu+QbV+RqCH/fFQz12blced9+kLk8B
hhcbTnXuyodp7BxOXPd5NGEbDXT0fdndJ4tgHXbeAr+jxvGDQ3Buis3LpP0r
HMLO291x2XLDLiOr+23iVeu7UriAnasp1g/y2g+MgYRVPdfrsTL4e34+9KnI
+rV1HIJT8kQjYsrhCHZOHrXl5QlSHQXnzuULsbR6/P4SZvv8yyR9FJhemplr
BZTBN+w8LFVXTnr7ZxAc5O+7CX3+CjzYuffxp0HiW6gGPksdLqpMGgrGdJMU
TfDZNDYKJarcxj7FZXh/b7OJtHvKxWYwLqrf+0IoFeqw/exSuxIvZxAB7ztV
Fv/sCQEuzG9srNrb2kIG2LTtn+0yzPkghPVPAljcWW67VkDQt/jEsMyvkIb5
kJude6SMEhtByatncPbkNyjF+iod8iFxTIIdwCFClXHe0AKaWF9lOpqeWhHf
CdL7b1uOfm+FRsy3aJx6fMo6oBe4msPjXm3pgG9Yv+VFqLJ04CUKeJ/r5yEn
kKEE8zMxMTqfYnP7wSIo3k7vTg/QMD8jrqigl/l9ANrfTMneN+yDrVgfpmgs
/MurlzSYZNL++IWfAoyYz3m2tqtz2YIO5YbnTid1UMAQ689Q7rJpaTfSwdpo
nX0AHxWuYP6nczFulFdtEIZfZvL2+lDhIta32Xyu1H1ltW4QV1NjyMmgAi/m
i0TFY30E4gZBXa2q+986KjBg/RyrwfBq7T46HAtZG64vTIX3WD9nKlFLmXKU
Dkt3dvLZJ1BgCPNL4ftInGFGAyDaKXb4/KNe8Mf6PG81ZX9FsfTDZ64AgV8m
3RCH+ahvO74dquCIg9DOxoyE0Sz469vf6ZqE7qpPhBuUCJu6n3kQjPUPjVtD
D900fVZ0Tf/IWueWJ3g/9oeY52xjbQHcODN0keN5Ayhhfr79/imWMasiqAu9
/NMwqRH+9hsl+3ad2d1QAZkzdhHDvzrgr88f8Ov4oudWCU/jctUVi8iQh/Uh
py4nkgrX1APX7oXRCEsKWGL+/4p/R3lhaD3sqd0m3gIU+NufrP+xeCBtuQn0
kyXM3D4NwG+sLtDRV2l+Id0Mtl9KD535MQDZ5Q4M5kxjwNXtLu+s3wqRQk6l
hy4NAidWLzz3YU4V8m2Fb1H3Zk1cB6Ed63OOkqyuFPO2Q9/H3JWnaBgeYnXE
ycZjd64ptAO3s0C0gskwTGP9T8HRnAtuV0jAdeDn3jCPESjG6guNox/2/TAm
wV2FvuODYSMggvVFZ3cY8JX0kUDXS4z9zsFRYJb/r+6YefsydzudBDVMAWGy
/KPQi/VLd6mvp/wbRYKhj2Trme4RoGP1SMLXU/kD7iR4oKii+v1/fWysjyqj
gdasT2qDiLiQOFL2ENzF6hSjtzvX7TNuA8crZu23zYdgnc1//dWOkLA+jt4m
ULt71WnGd9UXYPXL6xw2plrrJrASd13ZuXrf6tfue8CaSkFPaaWkhLBvEHJn
KbdgvAy2Yn67MPQ8zRS9B3nu/L7ezjigY/1DTx+TGzpSpuhn2pVjnJ0p8Lc/
8Iv7WL15xN0inuJT2z1KiHzfb51wL3UdT7S8pWDeLbYevLH+gPjuJCYjg7eo
+Hr82lxVKnzA6n0G4WjdfzdGI/vPJ2vqNtLhEVbX/znQyL3lSizKPM1oM844
DFFYXe/VNaAmzhSPHlP5JnYoj8JXrH5PvNE10y+agDqSAs+fbR2DSqxO10zM
WWFpSUBFr1Wc7sWOw2GsHs+oajxSpByPctfOyDPHjMIdrL4mfTI5+Xl/DNL6
UeA17zQIx7A62v5Di3WIUiZ87JfbuIa7HEhYXbOBPqrHIpUO8l69FcxlX4EL
62N33f5W/qU3Hi03Mq0fNiQ4WktXpG5m7fdEnNdpK1La9aCB1ZWxtR1e6pY5
iEtC6WT6vnc4h6Fx95aN1z82IEp4NOunq8U4hyGhli7hUdmBRLsesMb6VOMc
hpz7yjxXRCnI69CnDWdyGnEOw143Fb9HBgNI/HvqmujfLTiHwXXF8bYynY7e
6ZxYuBvQjnMYxqcqU/NLh1CHlthUyZMOnMOgpSl3vWpxGFVPlPW7lZBxDkPF
MbrtvZcjyGVvZ0u+difOYfCQUBwdE1+tE2ScWp6t6cQ5DD3OB9O+MA4hs6t9
IfRCEs5hkNntlG7Z348uiXRqxju14BwGn+YmlkvyH9DR91OkAh+Cf24vzXzD
5UMZYvYRoqVursP10R06X1sn0IgYpiwUvLMJzvnpEOfwbL42dJn+PVs1m+Cc
6xyPibyrREZ3Ajt6t5YQXJSs9wXNrIHdqKdb7eMyKw3XR4W5VsKdoQ9N1Ziq
2FcSnHO/ZLNbw6oUFG+4K8eGTnDOOeSMVRdXP38rEXrjs+YE55xmmPGGz5GC
1N+lML7kHML1scxZKSCx9CIJeT5HxEHH9anWdeoeS+hALG12Fz0uETzzspPh
VJq295kXEb8UM4QD8HkGzqD8ldY8H3S43lHc/RfB4emqPEz9rhSPVDSNHO7F
Exye076qb+4XfkSWcaaPZEMJflGR3qksWkkWepBuv6uImeAXKR4W5ptuykO2
FfbSbIEEv+gMT2pC35YC9HZnZiavEcEviroUfjLzThGaDzn1aOouwS8SIz01
El1TjFw1pkLsmgmetvr+GSE3vWJ07sL4+o8OBL/ICeS88w8Xo8bmT1oWbAS/
iMtkXCbSpRDJ/Djk5hRP8It8KXmejoJ5SA40YzM2EvyiHeorqf7t5mdo96sU
ZK4SHJ6bS3HWAU+ioW6hOYqFlIvr9sNS+LanWi7Yu44IzpEIXtafjeJiT06X
wL03Wmz62gS/KPX7E4PrXZVQ/jSKyVWa4Bc9dr4nrP6sFjQol0Nn3hD8okKV
lyRhrka4OVwg7KJA8Ivq+LNvqz5qgj9vBrv55Al+0bSGcOO8UTNwztcGTPoS
/KIjNRu3HK9vhuIFG+3mowS/qCUx+KCEbzOoa5xY6m0YxXUb79xTLzbbCDrX
3cIlHhD8ItdxNFZaUwOzeltvjuwk+EX7gnMCt8p9Auk0L8msWwSHLasqtCW5
thrsm8498XpDcNjMjm6qETveCqGpQ/YbZFpwffJ/Uqr4TDtBNDeTf+oomdhX
tdeMj7zqg+ebPKhP/+nF9WFuFVHlbKWC8pWPdb0rBIctsJxZPFVnANIgUkDN
nuCwFUgJT5Vq0cBK3Z8p1JTgsHkIJzka19PAe5OneWY7wWGz2MRU/uU5Dbae
tJlSDCQ4bG6bZE9UQz/48hqzBVMIDtvS4VKG7uJeuMT89eFX9R6CGzPnnp8g
kgdK0SdZ11iHE78jcIIhcBdHEzR7nNrC9k8Wrk/tlneztdAJQR+doqrMAddn
cuTQef7HVBDNuGNQ51OG6+N97u6H5lEaxDVk5573ryL2z2uFT/3/q3syva/W
ldTg+jwjhWrovBsBf91ZSROeelwf6nZzf7Ffo8BaPWLC9KEB16ft7BeL+0Fj
ULMsMdYn1IjrE1zW9YdHcgzcvRzXKy004PpMsTVIXO0aBhGwWyk/VYfrw6Qo
p1hgRIOf5w402MxU4vq88DjzWjwyuChilFciwe8+/rm71bu0ybs8DyrZ+w5O
sAfg3InuEgrN/smqz5H2Lry4lIxzJ/xmfXaN63fB932JHu85snHuhOFATBJ9
iAqcSm9kq8O+4NyJ7CjXuk236PDS9zJjyZNinDtxIW3YSV9wGH7X686PJ5Tg
3Imd21qTR2RHQcPY1up/v8/1VzeuEnnjd2/G4I2Kn7WAQjnOnTCplIoNlRqH
2hd5v86UluPcCTvRf6x2d4/BC9ujPsb3y3HuRJoQu9r+OyPwgb/LwCa8FOdO
xBxOrirtpkEI5V2jMVsxzp2os7b6HcYbUoQEX/rKd9jicxr93/1DPFszIcjU
77m94EdcN/1xVSvDDbUwOTM6J7K5AtfNcqYl5fdIG1TuPMBdIN2E65ZnbVG+
ktwNAj279e2923HdGHNz1lIOrOrZdk2q+Hsnrlvuz/FPXHoDELXYmx7r0Ivr
ZuWs/UOCgQ7aR7QNWTwpuG5HTi/UnGIfBH5zuvguAyqu2yhqEN70ZhDOndvd
bVpOxXUr0UlhNVQdBOa084ZDXlRcN94xy2w2PRpsLM/hjlhPwXULQ/WsxpkU
yD0n8OqmfCfBOWnhMs2Zjwc9S4namNkcXJ+977jd1kUWQn7f2gh/MYLXyqsf
WuTDXwkar+Y9ZnUJ/nD+bkNWVtV6cApwCDUNJvjD0X8cwso5m6Fc07ruZSvB
H+7z3LPn8b1W2L7lVr/tLYI/HMq372mWWDvcyDEkbVcn+MN1Pa4tptdJkHhN
N9XKn+APuyQrsAb0k2BmTNPw2WGCP/yUgeVj+GsSVBsaOyzUj+D62M+EDWzx
aIOovsst7/wIzjCZR5k0mdgEjqdPN3tpEJxhpnpJ7SwRe3RRX5c+JUTwhI1e
DYi9OOiNEkk2a4rqCN7LUkr4kq5kEPLh5C5o6CB4L1M8vvkzpWFIUUMo+JcY
wXt5GniIvzQ0GrVJRR/xryB4L+EGpgPMX2PRtLxO0KkwgveiOO+1pf16PAq2
1esmZxG8Fw/11zH7biag6uLUZa+dBDf4mpNLwmB/AvISUlg4m0vwXpLk7FDM
mwSUNhZhya1F8F4emr3snc+LQ2Ksgo/uUgjeC+OgRmXVsWhkGh7HSZcgeC9X
Q9N0JGfVzvRI7tnc6k3wXpzaZRusHMlovsh/QXL1XsjB6la/M1wPvLQ6UEhw
YezD3VSkh9VfimYPpq5o0uETb8iXYyzVyAHrA8t1JT0fDh+AgaRk8382V6Jo
rJ+53Cb2s6K7HWlH3T0Y97oScfGzd5Ei5uBWCuVmwloaWp8UXVId3YoEse+p
ZxZ2s3TZjiC3NuG6s6c7UcWfPcrX2jPRlxu9J9pTqEiAaitjJtGMBrDviy1G
a2+eV0hFVpzNrtVBHeiMSbqo6+Ac7C9b4mG+VoxS1W7vyDIbR+Zvjp0zDElD
/WsSU0PVAa6QZ7hZotuRQZSi37GT89Bim3/7BF893CkZ865Y9cMp2NxCJKdL
u+qqD9nEsZi3VmAMCYryTrO5JiD5lhfP/Z2r4N+IpYBvH6jo1t/5gWvvdIxd
SeD57yvdGu5PoI89X6s+r7t69Vw1a70zbrJ6rp7FnkN6Hblxv0cLzF+ziz+Q
XQ8I+/snGoZtLwxTISMyJl7yaDdMYHM+1wq2Xs1/NQhz7MoxSoVU0MH+r3xh
I9Vx7V4o3X5h0LuHBHzYvI2XDkmSMSgACUtXHbqSQQZOTH8kMWwhW5OACh0Y
faVCx6Ea05nhnczGpNkPyMnzaOD1zUTeaqtkopfPuVU9hx72eCkQuaoS1wY7
kVYyKN6C3uCRTDwX02/1Lq6BZRwUcz4K5kWX4/kXKYktwS8ZA5HAhq4A+QtE
jmY96Xf88eIE9L5BUCTTi8jLpClKz7mSBtCViOzD2o6teH52frnp8om1/Sjr
vPKZm37NeL41XStj5qlIHTBE6Gs/ZCfy8n6xF+eknnyDy3S1azaHiDz7bRO1
9Qd8qNC9V/iG6psuPN8Xdi3jqGFHHwxIyQbs2ULG83exWF6GjOVl/uZ9eteY
r2Fzr0e50qls563aiHzZwyjHBjoZKRzlTzhwkuCNTGF5kB9YHuTvcwJFjvt5
vKYgjpbJqZrzBE+gaUrRb/IxCVX1PL215wkF//slsXxEO5aP+PscGSwXoIfl
Av6+Ll20LcRncwsc2epkMHaYyI+L3zKgLfNRwMJZl6LWQHCBsrF5+DhsHv7v
cxzerOM1/ECDiPKCrVK5RO6vsPYwmVm9B+yuaa1ZO09whJLvNvzkliHD3rwO
x5j4QiLHN/FZ4pIFHfrMfDcfP1KNv+9abD48A5sP//u+6l4dRrm3x0DHbsPQ
sT2N+PumHmhkCbYZANGi99JdLRX4+6ph89I62Lz03+ck/7854b+vc7z1iszv
LIeyWZUIvQkin6tw2yGI0acZQiLlOG5cIjghNGw+th+bj/37nNOvEpXSCv6X
kxt8tmmZyNs6pr9xNm5tBIPveYqMVkSuth2b/+zD5j//PqfHibdT3ZCEhDp2
6KvurcJ1qz309taEyQhiT1yvPnGiE9dBMUTug4l5Pjpr+ONONDvBW/hjvElu
ZlsuIjdK9nUxEzyEqUfSSv0iX2EpJ0jaq4vgUXy/aHNdK70Zzp649yxvheAV
eJ9zs3s2Rgf/ix4y+weLcR0mMly2Tg4MQIoNOWVvShH+f5nn2uwX/tAKl6T2
D0XINeJ68kV1ohOOg6DV7ioj8p6K67OFrtmc9Scavf4he1ddhcgLiwgweOaS
ItGjKp+nZdJEnvf/AKgqNaw=
        "], {{
          {RGBColor[0, 0, 1], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNm3ccV9Mfxu8591yVKCqSSkUDmQ0jpJKRBlpGRCWrH6koFJoaSEIyysge
GdlbdmTvGdl77/F73r/n9PL747zO53u+55577jn3nM/zPJ9zWwwd2feYWBTF
4lQUpfIPlPi9tlJTpTWV6ij10J/rJZcPlL297A1kf6ZUKTVQ+kRJxUV9pY8K
t1dP6TulWkrrKX2jVFOpodJXSjWU1lXqp8qb6OLGsg9XB/5S/qdSX5W3Ufn6
sveUvX5ym71l99eN15HdLBRFF+V7KTWX3VX53kq9VKdpct96ym6c3Lc+spsn
33cf2a1lN+Ia2S2T+7mX7A2T+9lf9kDdq4nsn5XWKNzPH5RWL3zto7rvT8pr
K72r+ocp7Sz7PeWHl+7fCuVHlO7fq8oHK3WU/Zryg5W2kf2K8oOUOsh+Xfkh
StvK/kf5ZUpnyX5Z+SCldoyn7rup0o6ymyjvzNgova//j1TqJnuD4L70UXpJ
ZQcobS37ReX7K20l+wXl+yptKftD5f9R2pX2lc9RmiB7pfIRSt2ZX+VHK+0m
+1PlI5V68A4oP0ZpD9mtdd/1lLbjvVLZUUq7yH5T+RDeIdlf80xK42V/r/xc
pYmyxyrfR+PfV/ZExkH2QbJPZXxkHyj7ONl9kue6VXBfBii1DO57f6WNg/uy
r1JH2W2Udpe9UfBz9FOapHaGqp3Bsvcv/Bx7Ko1Teb/kOqfIHiv7gMLzuWPy
nDKfOyXP6dNq81PlGxae/30rj/tJsvdTnYGyT6Q8uZ8TZB+oOvvJHs+8JPfz
BNkDkvs/Wfahsg+WPUZ2r+T3/Hjq69p9ZI+W3TN5fn+QfZ7SJNnTGHOVD2Ut
yV6odAbrUfk5SqfKnql8tOocJnuG7GNlD2dtyj5T6STZZyifpvIjZU9nfmUf
KvsP2QuUTpf9l/JLuEb2j8rnKU2W/bfyS5VmMy7B88+cjuJ9SX5X/1T59ko9
ZU9ljah8iOxvZZ+tdLLs03gnVT5M9lDV7a90nOzfVX6x0izZvym/UGkm86s9
5DDVOYE1q7LzlabKfofxLL1OGur/Wkqb8H4qb6y0ueytdO3xsqfLLnXPKxgv
2Un2lbyjvAPB95mvdGTw/S9QOip4PC5UOjr4uRcoHSv7bOWXKh0TvI4XKo2U
PUf5JUojgufnIt552aOV5sq+gXFObucaniX5Xlcz18l9uKJwv85Tulbl85P7
cB1jktzmYvaQ5Htdz5rS+3Ox7BuZu+T+jAl+1suVblL5ouQ+3yz7CtmXyb5F
9lXJdW5l7aidRbJvk72UMZJ9u+xrZV8t+87S/uVa2XfJvln2dbLvkX2b7Btk
PyD7Ptk3y75P9l2yF8u+V/Ydsm+Ufb/se2TfJPsO2TfIvkb2g7IfkH2L7LWV
P6Pfy2WvJftp2c/IriX7EdmPyV5d9mOyH5ddW/bjsp+QvYbsJ2Q/KXsnvQNT
NRbzZK+p8idV/pTsurKXyX6acdP/lyg9KHupyp7Tf7fJrq98Ob9l15H9lOxl
shvIflb287IPVfu36NpHCvuFr/Gt+n1VcF9eZX6D+/IadQpf94LSlcF9f4W5
Dm77DeY6uF9vMnfB939Xabjudad+v8i8B4/HW0ofFvb3axX2tfh7fD2+DD+H
z/29sK/D541S+TClKbKD+ruo9DuN07+89Hv8RWF/Cya4IXge3i6ME+q76v8w
AL4X3w9OAFOAOdbMfcDP4lvxw+AGcAJ+fjWlfmr4dKUluuA2tb9Y6VmVN0rG
KLS1KHieX1baIBkH0KcmyTiAfrRK9vfco6bq/1Z4H9hPZW313xayN03GJTz/
duzZpfs3oDJuwO83S8Yi9K9FMrbg2fClmyf7U/ztlsk+90DZW8tuX9jPt0v2
9TwX+AZsAxbokIwH/lFayX2UulGW7E/Zw3ZI3seGyd5V9g7MtexOsncqjBG2
SsYJ+Nttk33um3reesHlVZ4b5uX+YJuxwv93TfajYCp8TpfCezg+B1yBP985
eU8HC+xX2QfvRlmynwV7sMfTzxbBvhpfCUbonuyb90r25fx3rPLdk/3vnsl+
guv3r+zn8HH4enwjfcPXTUz2dwtT3isL+3p8Pz53k2C/yr3w7fh4fC4YAF9E
/3sn+1eeE19EHfqwg+y2SoNkbxaMsXrJ3jvZBzMWfZPxCm0dL/vk0tc/mLw3
sS8Nquz78fsHJ+MYMMzhsqewF3M/td1J6ajC2K1z8jgPS8Yo4JPhyZgAPDAw
GSswFt113bbBvntQMp7gmY9M9qn406myT8e/8r6Bl7IPHZOMA8AAs5WP0+8T
ZV+e7DPwF2CBE5PxwFx8suxTmPdk34xfxldPSPbXYMbxybgRrHFKMt54VPYj
sh+VfXWyL8GPXJzsk/BH+E1ysAS+d06yT8KH0hf2GXwo84x/nav/z0r2lexD
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
eB2sDv7sme1p2QaLwtPAx2BjeAI8BB8EB+idy2Np3gJnWb00VgYnz8vtY6/S
ItE50SHQI+DRwyufhVvGvlP53Npb0Xo/ZyTABc+XPmdJrIE4A2cwwCzj2HeT
/dWdyneqzPfulb1zZax6KbpRZf2UmABnLcBHN6ITV+ZX6GrEo9kzGlSOU6Ov
Ef/hXCt4AT5BDA7+QMyKs6PgR2I4nBcFp4BbifGBWcHgxPjAyL0rx/XA+sTB
OKcKTnk5+dwp5wLXST7/8zD7dvLZDOIEx+na9sn7B5oo5y7Yw9CzOUeBnye2
wNkP9qe+qt+4st5EHIMzJOCmt9gzSvuRz5LPexADID7AWRF82jGVzxyu0L1+
Tz5PiKZPzIFzI+AIYiacUQFzjax8TqwsHbPiXArY55vkc4+cI/ms9PlPMMlo
1d0i2df9nHzGA80RfZTzA/gutEbOjbBHooNy3gBfh9bImQf2sy/V3qzS++EX
pc9KEjvgnBRnL9m/d6schwWboq9tEK25EY9Ha5soe2TGqHUL49wh0bgXvgKH
gafAUeBF8COwLPWJa4HNj43mAOT8fqkw/4MHwlWpyz2IgdUvrd2An8HX4Gy4
CWe6DojmSmicnGvFD8Dn4HXwvgeVj4s+A0UshXOt+Myjo7kKZ7jgI/BMOOCH
hWOmH7BXR9u4WPhFn8r8ietGRfMHOMYRuQ3qcg2cijrc4/3CvBo9Be6MttIv
2wuyDWdfszSXg8fBDeAMcDd0pX2yDefcN5rHwKvhwA8V//I9rmXNDMjltysf
Ex2TXa8092aN1C2tF3Df4Xkc7szPMSLPBeP/nzy/o3Kd9/PYHJXHhDNvB0dz
XjQIODZ8Fu6O7gD/Xac0H8Y+O/eNOpzhQBtCF2qq/Jxovo8OsSx5zNAfm0fr
Y/AKtMjJhXVPtGDsb6NjDGOzb0UrPCv7QTRKNMNZuU36gi7VNmZNNVqjpD66
P1ozOjN67brRmi26aINcjj6Jlo1mhVaFhkX/0TXRN1kX6L/oy+jMu2QbnZm4
0drZ3i23idaKTl0/259E69Rciz9F/z07+2t0QPQ6dMHNo/WoP5RPj9ZgW2bs
wXptlLkYbRMn4cwMGJYYLPshOgpxY/YTOD2x1o7JWAyszTkc8BHxEM7YMDbE
kfAX4DLiYJzP4ZnWR0+O1lJWaab3ZNyChoum/Wu0vj8tYxh0efTh09TOrck+
Fl26SWV9FF0UXXtqYW0JHwpHRi9vHa3ngyXQuNGHZ4JTkjEFOu9euT77J+fe
4DWNmedofYn9nLN9xElH6roJleNY8DJiqWBhMDmxU/ZwcDJxN3gYPJS4J5ga
DIZuT7/wu8Rzwctge+KYcESwIjwM3sU4oMGj0e/DGFaOh8E9ifOwn8MXiCs1
y/5ocuW4CBgLHRX8Ap4hXoH2fXzluQOPgyfR23nHwVvo9qwhsBrxXHA6Girn
e8Ev+HDOD+PH0bw5M8wcomdzNpi9hzgD575Yc8QKOA/G/Gxc+fwYz9K+8hlm
eHaVfJabuQZTcN4YXIFOzLll8BG6KeecwUTEYzkjDaarkXz2Cf0SnZvzzGCo
EcrHV9ap+8s+oTLvxdfCScHsxKA4Uw1OBLNwHhvcMkT5iZV5KTjhf2eGCsfo
OfPAmRg0Jc69giXAQtMra8RgoRmV9QX2T7RAcAj+CJ0G/1gva5tgOnDRtMoa
NO/VmpVjQfh44tfj87PUrhxbBV9NrRyHBmuiOYOF4QtoVmhwzbLGiI9tmnVF
9t2NdO0byedpeLfRGNEHwcxo2MxFw6wJX5LXKVooPhN8z7kddCDeQ3AbmI2x
/SeZ/9P+qMrnn8CXnLWAz+2tsrGVz1igDXI+57vsazi3g4YHLyNWAIbpmtcm
/qpTXu+z8rysVlk72Ev5mMpnMtC4OJ+D5kT5BxnLcd/PMu4CMxOrJ/YPzif2
Ab+BdxBDYY+Et3D2DK6JHsU5nV8yHuDsDRoeGjxn0sDa7KXEsOBSxMD5FoP9
G4zEuVNixfSX71noM7E+zsey37eofO6O9Ugcg7OO+AfiUZwnhGeAuzgjSjyQ
GCNn9sDyxJn5TgSfwLkDvikA7xO75iwo8Wt0Dr7NQcOoqfyh0ryJMwKc/+Sc
ADo95+jYL4n58C0DnDJU/kaG/Qdsy1lN8C3xCr5hgacSw+Q8J/7tl9LnOIlP
EYPl3OCAvK45r0ksZrPK30Ew/ug3fFeCFkL8me964N+8RwPyu4SGxLc5HXL7
80v7azQhvsFBOyFOwnc68Gn0Uc7+gYPQxvhGCZ2GuBbfZcBrOevBtxvwNtYZ
39ew1lhbfM/C+iJOyxlI/DM8iHPmxLiJe/BdA3jkreTv4Hg34D18KwH3IfbC
eVq4HWdV+A4IDYY11zKvO86F8W0dugXzwjm6pYX3Mb7fWFT4DB3fu6GVctaG
b3PQeDgjxvdxaM/E3Pj+Amz4X8VNpaM=
              "]], 
             Polygon3DBox[CompressedData["
1:eJw1mnkAF9Mexe/MnUmRrURaKMoWKlpItCdKUUmkKAkvJEuUVi3aFUmLVJZE
yrPvS5GQ7JLl2d+zZ1/K0jufd+774/7mnnvvzG/mzr3f7/ec79QdMKT7hXkI
4V79FDqO0vENlbpZCJ+rLFJ9jMrPmdvalyGcp1IlhnCDcFT9QpWPNOYI4WZq
/1z1DqpX1bG1cK4yXLi18GiVTSoHCm9WaaW+bcIXq95Cx6bC/9axrfCuOv5L
N3W+rv+06n/o/v4UvkD4PeFGGrNReLDwg8LfqP8hHS9TqaT6Dyp76XqdVPqr
bZXG762x56j8KNyH/1BfO5UTcj/PeB2/Vumq+k467qex56r8pvpZmcdurzI5
8znf6f9nlJ435utNHQ9W/1eq11MZIfy8yg70qRyjvr+Eh6h+hI6Zzp2l0kjt
W9S2v673nspa1Wvo/n9WfZD6X9HY6mr7Vvhs4ReFdxHeKnyN8KE6/0fhJjp+
or6jVa+s42HC/9LxcOFCx40qh6jtG/5LpbHq76rtUNW3qRyo672v8pzqNfX/
vUrP/xUaU0v4V/XNLP0eeX9H6/ytqv9D9cOZL/W/q7JGeE+NP1z9H6q9mXAF
Ha9UWa9SRfhdleGqP6MSVd+gMlL1V1VqqP4x603n76gyQ/XurAvVt1MZJ3ws
/6f6ozr+qP96VW1thEuV0ap3yD2vb+d+Vua3g/DOKrNU75l73l7Xce/M81dP
9/6OymrVq+uaDdX/Vu53+RtzJvyk8G/qe53xwo8L/xL8zl5TvQFrOPM1n9a1
pmi+7lL7tcK7R98D/71Y+Bn1t1V/b+FndY3XhHdXeZ26youqT1X/bjrnRo2/
V3iS8AqNnyr8XO574l4qZR7HnDFXjF+i41UqFdP+fEHHA9S/KfP6eST6ejvo
uCL4ujNUuqXrL9ZxHOs07bfn9P8dNL6P8LrgvccefFJ9l+ZeK+zZdZnXzPW5
2+n/WuOPVN8RKrXZmypvqj5N5+zDPGrMOuGOwqezb9T/itqr8T5UX6PyvOrH
qr+v+l8QfkzHYayhzO/gH+rrXHq/s++fTWuEtVFB5Ybca461hr2Ym/s+ud+t
wqtVr6/x64WzzHtxeun3zPvl2vzHHtHv78vce4691oVrJhuG7TpJuI7Of1vl
Kd69rt+z9JwxJ9WEq/OuVR7FFgmfoL652ATsTbqX+3X8IvieamvsWypP8K7V
9k/1zVH5gDo2WuP3jrZ1D6jczbpTeVv9y4X30bmbVJ5WfQ+11dLYY1XO0JgV
arsHW5x8wecqL2GrsSHqq6ayNLeNxDa2Et5XfQ/ntrXsmZdVP4g9n9lenZX8
RUe1PYdNVn9z1fdM9nfP6L7ThJdl3iczVXql/XK9zt2x8Lu+Rm01C68Z1kpV
tW3O7XPwNT3VNi+3zcXW4i9qaOwbKo8JVxG+WX0TmHuVYzOvNf6Da7PmblIZ
i6/J7KPW6tx26j9VbWt1/tGFbT62vo1wa9UvLz1PzM9EHX9S6Yv9xP6q/zNs
KrY5eC7woTwvz92BPh1bqu8olUHCI0rPM/PbWPhTfAL2Vf3Hqf67yvf4H+En
VW+t8Z00/h7hq7l39qH6D9DxLvU3V38r1Zerv5HwJ4Vt72HCq9iPpX3zHcJN
hP+j8gG+XLiZ6l+ofIS/Ej5TY4eoTMG+CHdW3xaVH9TfVfgi1XcsbevPFr5f
+CjhdtwLa1T4SOE2wnfi37BLev69dDxT13hQ/S2ZI+GV6n9Y+OjStnyV8IXC
lYVL4YHCFwvvJLyd8CDhR4WPYb0J3x3sK/GZ2GPs8rmqV1Jbrv7+6j9feIfS
vvEs7Ifw9sJReIDw48KtSvuafwrPEj5AuKHwdfhDHY/Udevkjg8Wqb+h+psJ
L1L/MuEmwkcJ3yx8nXAFlbmqX887V/0b1gixgXAr5lLlS2IN4TtUb6bzj9H5
twsvFW5cOnZYLNxC+GvWCL5Y+JTSz8yzthKepHG/8y7Y+zreqrGHl461lqr/
Pvyp2m5R/VaVlqpvZg1ofGvhY1hrrAHhtsKLVW+k85uzV4TbF44JiAU6CbdT
/ReVb/HPwls0roX+Y7/cMcI89R1cOlZYgH8V/hify1oXbsDaU9kofKjwAtUP
0fgmGr9QeIDqF6lMzX3Ph6j/Q2ysxjdkTlU/SP2N1T9PuHfp+ImYp6Nwc+a2
cGxxpPANqjdQ/2EaPz841iPmO0S4pc5po/6fmGNiB/UPVH079Qf1n6HDlcJV
hWsIjxTuIfw3c6LxPbBZqu9PfIY9E54qvI/wgfhZ1oOOtaNt73vCt+feW03T
Hu6X4k/uZXaw7foe+5jZhjVN81FR/ePVNkPXry98sPpmBfvyquqbn9mnH5r2
b1TblWqbjT1R/WrWispkjQnCl2Ze43eoTFNpm3v8NI3fV+cfhJ3W0CnCdUvb
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
HY9gbOG12D7z2uxTWLtmjaJ3nK222plj0Amqn6e2NpnXNHrOpDT/5JCmqH5J
Ye7D/Y2Kjs86ZY4J2As/qHRL58OHZgtfGJwDGqP5Oql0nbwQ+hAxKbEo/0k8
8mP0XqINfnet8JDga85Q/dvoZx8crBfMEr4AW59Zj5qQ9mPrzGvnp2juwjMQ
b6wurM3cFqynkG9Bq4Afw/3RAFom3nkbtrGwtjQnONYdUnitE/PC35hj5pac
DPrZlPQ+O2aOtQcXnjti7vHqO6fwvfFMzO0Fwu3S/aHHEVNja2hjbw0tfC32
GHP5ffSzMqfoQ3AGuAIcBL6wWaVzZn8G/2TPs9fJWaGnwIHgPocJ9+PdqTRQ
/ajMesxV6X0dw/tiL6qtZZpv+DQ+k2vTBl8dl+afHBl8lXMY2yKzvjo0mrvy
H1fgzwr3HZ+Zi/UsfG9wMnxx/8LXwifD1y+K1nIPyqyPXhzN5Q/JfO3jC9f5
j98K83vGfpf53s4q/CzcI892dmEtmGeEL89I98ucsZa+i+byjEe7wt6gNaGp
XMraLpy7Qa9CHxgWrX02zqxPXBLN3ckBUj9BbQ0zt6FPcA3OpY1zuxd+F1zj
MtZ+4WudGaw9YR/xxWhQaDVoNviKLFr7wr+gHaGBPRMdf85J/o+5g6+2CJ5D
tEHiEbgIGiF6JfuB2BuO81R0/E2u4GnhtdHx8dzMPhT9/pnkj2l7ITpeXqD6
Y8HaOvELfBSNnfzS88KPBo95LjpeJzdMjLguOr6elzmGJB/GGPpoQ5tmf7B+
0ajhH9PVv3tuG4p2yPtlbtEQ4YujmYPcNglt5Nvkv9BIiF3eU2kQHMMMiOb8
cH3a0IpY76wlNKOKpdcL74uc3c6l7R+2kxwgWjn78+xgzZxYjRiQ2K9esDbO
fuddopGjhWNfeddo4nBB7DHaCJyQfB1zwlzAYZ6Mjs9n41sz55qIn8l9kXNC
T3g1OpdMDnB9ND8hV/lEcK6M+JfcGDkzcsnEx+RiySmTiyMnhzbyRO5cNfEx
uXJy1nyvwPcLbYP1MPgG75x3vTBzrhI+QO6MnCS5SuJxct3kAMmHoce+G8y5
XozmX5wLXye/AKeHy8+kLZpvzEz3D7e4p3DulDkh//Fo+v9pmbWAxwrnn9EE
5iY+tmPwnJCPva/wWNYg+RA0A/57euZ86gMqFYLniPwPe4C1z5yjLTxUOF+O
xoDeT8xIrEjOnHt5oPC1uCfyKzwD9845aJ2/pngAzZN8IN+GkDtTc9izdDw1
PjjngXaJvUDbRMPkWwT0TmzJO7lzQ9g7clXkiOAicCa4EvE733Ngn9A++cYE
rZF4D+0RzRF+g/67Jre+gLaO/UHbRGMn14CeRe6BnAPaJ/aId48GilaIPkUu
As1wQNpP2BZsDN9eoGfiCz/I/W0D+Qy0ohtza6vcI/eGxkqemvkgN0oOEr2e
fBtaPhx3dTT/Q3vBPi1L/hhtAY7xUmGODbeG0w4snU8mVw3nX19YA4D7w9l7
pv3C3me//578X5fgHOCGwnwZbRTOjv7Mi8L33xKs1xPTE8sTo5LLQD9DGyGn
Qa4Jva19cM4JfoZ+vy63vlaltH8hViNnS64Df048Ss4DrRf/2CdY80Xb/iH9
Hxo3WjXx0dhgzZp8Pd9L8G3I9ti40vHOuOAcIN/vkE8mN10xWIslHkRrRpNF
KyZeILZEM0bbhe8Qi6Pxou0Tv5JbQOMn/42eTP54U3AuFv6ItkhOllwXeleb
4JwX/JJ8wtrcY8h9oqeiH5ID/XdhPoreSE7888L6ILlRct7kTuG3zB05VHJT
8HPWLjkqcnXop+T6yNmRW0P/bRecYyNXiX7WOjhnSW4QfQ1tlhwh+X708Ff5
P5UfC+unHYK/OeJbJPLTaJELc39v0Uv9b2XWcD8qzMfR5vgGhG8J0N/IpfNN
AbmM/qX5NDkN9kef0noa39Kwv08trRfz7Qz75YtobXl08vdnlI5PydGgHxWF
1yM5GHIrf0XvF3IsfNvyYrJvfLuCNrk0rRc0+UuSvfvapuF/z/dxtH3nmyv8
wcml11O99O54h9gWckLYDmxI3eAcEvEs+fVPc/s4vj3pUdq+7ZPWPnsAbYIc
FnwB/ZpcAZouvndAik8W5NY2B6f1xDcA5C7RM9A3yWHCv9AL0COKaH0Gfg/f
rRSdG0AzWh387UOL0v4D7kvO7eXo71/4Foh3Tu787sJcmxw6uXX8BdoEOXZy
s+gF5J7J0aItw6fJnaIx8z0c34e8H2xvyOXBX9FKyOnVY5IL5w7JoZGLx1+g
PZCT51sC9Aq4O98U8O54h9Wi/SX+B3+FPlI5+tuiR1I8xbdF+D/8J/x0p+QL
8Ans90dy58rRN5YG58xZj+TY8F0VonPh6C3LgnPicB/0lZuDORC5GPgzuXFy
MsQ2xDjkA+bnjt/hE+i/7ye9cbfCc0uuaUO0/rkkxZPk/4lpiGXw2ejFcHC4
N/kb1hJrCm60NPEB+Abx/se5+RR8Ef7yGTY9Wt9dlDmGgJ/BnwZif3J/C4Se
v0vwN0HsF3KScP/bcuei4M/kUslJwf3Rr7kX+Dm5Vfg33JAcK/5hQ4oP0FTx
T+QT0KbRKMkNTk3nkyPk+zO+uaLvHo3pWvp7NOoDc/uvV1VWZp4jtFPW45QU
H+O/1qd4gmdkLPot30pxDt+7PUtckjnm59sc8hl8+8Q3OuQW0LDgk+T0uDfu
8Yvc+SP2K9//kAu4L/f3OnxPiv1hj6JXkF9jLPyed8U7w//empvPw8/Rw27J
nauCg8IPyYmSW4DTw+XJITKWc+D+vOP/AltSOCY=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV0ltMj3Ecx/Gng2TkkEhrM6mLyJBmJUO1WctmlJylA8vMaDMuqLHauOHe
qU0bWbS0xTRMi605x6WcKse0mcnIjeX1XLz3/Xzev+/zPP//8/+nVNWUHIgM
gmAJxqE7OgjyhSLyNKZGBUEW9xnvIoJgnt7DV+ux9iLkenzEIW4KFys3YAhj
XCneyotcO+oepXbWymmed4a/haV2vqLf+XxnD7kce23cBD0vhFvBdXKT9Hys
5jr0XL5APoWJfKbexEfLK5HD9+mpuC2ncvc9q15PsjuHW8b9MFfpd/nJegEK
uTXmBv6GfBMpPvtxO4nc7PCzOv8evjMujcuQl3O/zTi9hv8iZ3ExZgXXKre6
z1U9Sq7iOswO7hoXK9dgCI36S+Q622yvmlssP+aeYBt3mKvgLupvQu+ZRXy5
XOhsBrbo+81se738CxTrG/l7chfSncXola4f1DOdj3lXm7hSOcP5Wb4bB/Wt
fJ/8GmXOjnDbufd6P3ZzZXojXyv/5EbC34nb5xmf5CXOos2jejyfJGdzw+Yj
M45vk6fLd8LvaP5DM/cLx7idrrvENch/uFG06OXh/9SMRIuzPPcawbDvtIB7
bq85fD53Rf6LE/bauUrXxpjj0c59s7OeO2+nDoPukayX4LJ+EnPxwd467pxc
G74bewu5AbyS093vAd9rJnDX5Vnhf9IzdrmuR+6Up5nx2MHVmXu4JrsDSOCK
w+8cfl4kh+9af2avy95MMxF7MYgLzp+G/0Fn/wFdK3mC
              
              "]]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jlPVFEYBuAziKwyWFGxhFiRAKGH+QODoaBA0YTCMAmMyBpgaGhMhIKQ
sBe2SkEJg5HWmcJaFkFFllDRUEIBgeeG4s37nHu+e8+9k6l/N9Q5GAshfJTB
ghAip/WFfi6NhSHc6zqJ23z9JIRmruEUJ6IZfql7zLbyW85wktPcrefNTnEf
f+ZZnuQ1vWH2E69znld4m7/ovNk8b/Gw99rl93rTeo/3ZcH6QP+WRT7UR/JH
lqz/6n9S71nb7jvmb/q/XrZ/ok/lu2sj1mf8QafkF3c8DaGXc/xK//CcLCc5
y185wau6wWwLz3A1v+AMV+k5s/1cytP8hm+d2a6vffcVt/Eln3NT9H26y2wt
38mQeyv1gP5pL84V0W9p/UzfSLnk7E24VhadJ+NcooulSMasvV5wVBhlRwQV
dmKP/4MHR8tBqg==
            "]]}, {}, {}, {
           Line3DBox[{626, 689, 690, 802, 1419, 691, 692, 805, 705, 1394, 706,
             808, 713, 714, 1381, 811, 721, 722, 814, 1423, 729, 730, 817, 
            737, 1401, 738, 820, 745, 1406, 746, 823, 753, 754, 1383, 826, 
            761, 762, 829, 1427, 769, 770, 832, 777, 1413, 778, 835, 785, 786,
             1385, 838, 793, 794, 657}], 
           Line3DBox[{627, 693, 661, 628, 1387, 694, 663, 633, 707, 1395, 665,
             635, 715, 667, 1421, 637, 723, 669, 639, 1389, 731, 671, 641, 
            739, 1402, 673, 643, 747, 1407, 675, 645, 755, 677, 1425, 647, 
            763, 679, 649, 1391, 771, 681, 651, 779, 1414, 683, 653, 787, 685,
             1429, 655, 795, 687, 658}], 
           Line3DBox[{629, 695, 696, 803, 697, 1393, 698, 806, 708, 1396, 709,
             809, 716, 1399, 717, 812, 724, 725, 815, 732, 1400, 733, 818, 
            740, 1403, 741, 821, 748, 1408, 749, 824, 756, 1411, 757, 827, 
            764, 765, 830, 772, 1412, 773, 833, 780, 1415, 781, 836, 788, 
            1418, 789, 839, 796, 797, 659}], 
           Line3DBox[{630, 699, 700, 804, 1420, 701, 702, 807, 710, 1397, 711,
             810, 718, 719, 1382, 813, 726, 727, 816, 1424, 734, 735, 819, 
            742, 1404, 743, 822, 750, 1409, 751, 825, 758, 759, 1384, 828, 
            766, 767, 831, 1428, 774, 775, 834, 782, 1416, 783, 837, 790, 791,
             1386, 840, 798, 799, 801}], 
           Line3DBox[{631, 703, 662, 632, 1388, 704, 664, 634, 712, 1398, 666,
             636, 720, 668, 1422, 638, 728, 670, 640, 1390, 736, 672, 642, 
            744, 1405, 674, 644, 752, 1410, 676, 646, 760, 678, 1426, 648, 
            768, 680, 650, 1392, 776, 682, 652, 784, 1417, 684, 654, 792, 686,
             1430, 656, 800, 688, 660}]}, {
           Line3DBox[{854, 1081, 1080, 853, 976, 852, 1366, 1388, 1245, 1066, 
            851, 1065, 1244, 1064, 850, 1063, 1243, 1420, 1365, 849, 1062, 
            1242, 1061, 848, 1060, 1241, 1059, 1393, 847, 1058, 1240, 1057, 
            846, 1056, 1239, 1055, 845, 1364, 1387, 1238, 1054, 844, 1053, 
            1237, 1052, 843, 1051, 1236, 1419, 1363, 842, 1050, 1235, 1049, 
            841, 1048, 1234, 1047, 1068}], 
           Line3DBox[{856, 1067, 1246, 977, 855, 1069, 1247, 978, 857, 1394, 
            1070, 1248, 979, 858, 1071, 1249, 980, 859, 1072, 1250, 1359, 
            1395, 860, 1073, 1251, 981, 861, 1074, 1252, 982, 862, 1396, 1075,
             1253, 983, 863, 1076, 1254, 984, 864, 1397, 1077, 1255, 985, 
            1090, 1078, 1256, 986, 865, 1079, 1257, 1360, 1398, 866, 987, 867,
             1093, 988, 1258}], 
           Line3DBox[{869, 1082, 1259, 989, 868, 1083, 1260, 990, 870, 1367, 
            1381, 1261, 991, 871, 1084, 1262, 992, 872, 1085, 1263, 1421, 993,
             873, 1086, 1264, 994, 874, 1087, 1265, 995, 875, 1399, 1088, 
            1266, 996, 876, 1089, 1267, 997, 877, 1368, 1382, 1268, 998, 1094,
             1091, 1269, 999, 878, 1092, 1270, 1422, 1000, 879, 1001, 880, 
            1095, 1002, 1271}], 
           Line3DBox[{894, 1142, 1141, 893, 1003, 892, 1372, 1390, 1283, 1115,
             891, 1114, 1282, 1113, 890, 1112, 1281, 1424, 1371, 889, 1111, 
            1280, 1110, 888, 1109, 1279, 1108, 1400, 887, 1107, 1278, 1106, 
            886, 1105, 1277, 1104, 885, 1370, 1389, 1276, 1103, 884, 1102, 
            1275, 1101, 883, 1100, 1274, 1423, 1369, 882, 1099, 1273, 1098, 
            881, 1097, 1272, 1096, 1118}], 
           Line3DBox[{908, 1157, 1156, 907, 1004, 906, 1405, 1140, 1295, 1139,
             905, 1138, 1294, 1137, 904, 1136, 1293, 1135, 1404, 903, 1134, 
            1292, 1133, 902, 1132, 1291, 1131, 1403, 901, 1130, 1290, 1129, 
            900, 1128, 1289, 1127, 899, 1402, 1126, 1288, 1125, 898, 1124, 
            1287, 1123, 897, 1122, 1286, 1121, 1401, 896, 1120, 1285, 1119, 
            895, 1117, 1284, 1116, 1144}], 
           Line3DBox[{910, 1143, 1296, 1005, 909, 1145, 1297, 1006, 911, 1406,
             1146, 1298, 1007, 912, 1147, 1299, 1008, 913, 1148, 1300, 1361, 
            1407, 914, 1149, 1301, 1009, 915, 1150, 1302, 1010, 916, 1408, 
            1151, 1303, 1011, 917, 1152, 1304, 1012, 918, 1409, 1153, 1305, 
            1013, 1166, 1154, 1306, 1014, 919, 1155, 1307, 1362, 1410, 920, 
            1015, 921, 1169, 1016, 1308}], 
           Line3DBox[{923, 1158, 1309, 1017, 922, 1159, 1310, 1018, 924, 1373,
             1383, 1311, 1019, 925, 1160, 1312, 1020, 926, 1161, 1313, 1425, 
            1021, 927, 1162, 1314, 1022, 928, 1163, 1315, 1023, 929, 1411, 
            1164, 1316, 1024, 930, 1165, 1317, 1025, 931, 1374, 1384, 1318, 
            1026, 1170, 1167, 1319, 1027, 932, 1168, 1320, 1426, 1028, 933, 
            1029, 934, 1171, 1030, 1321}], 
           Line3DBox[{948, 1218, 1217, 947, 1031, 946, 1378, 1392, 1333, 1191,
             945, 1190, 1332, 1189, 944, 1188, 1331, 1428, 1377, 943, 1187, 
            1330, 1186, 942, 1185, 1329, 1184, 1412, 941, 1183, 1328, 1182, 
            940, 1181, 1327, 1180, 939, 1376, 1391, 1326, 1179, 938, 1178, 
            1325, 1177, 937, 1176, 1324, 1427, 1375, 936, 1175, 1323, 1174, 
            935, 1173, 1322, 1172, 1194}], 
           Line3DBox[{962, 1231, 1230, 961, 1032, 960, 1417, 1216, 1345, 1215,
             959, 1214, 1344, 1213, 958, 1212, 1343, 1211, 1416, 957, 1210, 
            1342, 1209, 956, 1208, 1341, 1207, 1415, 955, 1206, 1340, 1205, 
            954, 1204, 1339, 1203, 953, 1414, 1202, 1338, 1201, 952, 1200, 
            1337, 1199, 951, 1198, 1336, 1197, 1413, 950, 1196, 1335, 1195, 
            949, 1193, 1334, 1192, 1220}], 
           Line3DBox[{964, 1219, 1346, 1033, 963, 1221, 1347, 1034, 965, 1379,
             1385, 1348, 1035, 966, 1222, 1349, 1036, 967, 1223, 1350, 1429, 
            1037, 968, 1224, 1351, 1038, 969, 1225, 1352, 1039, 970, 1418, 
            1226, 1353, 1040, 971, 1227, 1354, 1041, 972, 1380, 1386, 1355, 
            1042, 1232, 1228, 1356, 1043, 973, 1229, 1357, 1430, 1044, 974, 
            1045, 975, 1233, 1046, 1358}]}}},
        VertexNormals->CompressedData["
1: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
S1n2W4nkvPtmjYMqkecskx353Yh8x5ORgPW8VPjMgASR56o8qthziHzX6bH4
Ocn593fZqcNEnpNhV+8i890B6l6cn4uOmh3zJfLc6vY1xmS++8jx5/3G228u
+leJPKdQ8GOQzHetgncw53UbglXIPKfqyOJO5juVcSvMWXR6t2QZkedY8gyU
y3C++8P5Qv/E6y4HGsD4nU1XfhVBh45Fbbc5DYWHSXLrnRqCBzqrv/tqtUNB
0CU8/rPD6vPaD1SgOw3KzPcs+rdP/6afOM6spkN3qnHlE9ZiWHjjW8vxEQqS
OZsYlnGDAkl3WcRlyjpgV8/FVnI8W4PNSFhyGFo6WL7k8ZTAo+QsET+RIbR8
JRfT5C0Vjvt71ggf6YIhsyV4fN2baZcNj0aAZ2yzWObGUng78cznPecAEmm+
YHFinAaeqlPSmxq6IcDQBI+3hHmYZf1gwgCvT/aH7WXwPrHfNHVHD+KWnTpz
bD0DLjPV+ugavdB6eSUeD/km4JK6bwyQ6PVcV6Fy2HzvQYWxbxuSfDW8soyo
81DDRGB4Yh9EmTwtI8dfJ2pylx0dB8dfgXs3jpVDNrf8xcTNDaje7tiyhLUj
8JO7gvLLrB825WjZkuOdtlyqxYsnIG7pAUv76++hme94WKN+KbqrNaS6pmgE
8tm06j/V9kM3peguOa4qcq/dwnICinMkxfjK34Pp6VNSNh7xiEvFhf6Shwn7
zNfN2806ALvUagXJ8Zr32a7ab8dBT9Y1x1/xPaRcPHYuxroavju7qMloMWFT
jV6GYlIpBPKc03+Q1QfLDi5gnrxCrL/L2dfkn/ZD49AHM3I+Z/e1V0rVTDgX
KjbPdjai0KYu1JCcr/ig5fmLW3TQt9NuWBXWA0qb3p8jx9fqRiXKbCDGLZd4
bPF4Bwq00U6HNCr4PVDWnDc6BBt6xe1WL+oAAeveDnK8ZMWKI+DaD1/98t4b
TmVD3bQd2+L9TLAI1VHjDuiFKesnDYvWZ/3Lwzbt90XUhbvgzeyRlCnjQXh+
3gXrUNLkfaFn5SDQ7m5LWvCo7d9+5GHS773GJd3wrcifepPYR+sv8cV6e6H5
c9UZx1441OES0/6UAurMHVhXXez7l3/i6we39rH1KlVU2KxahfXTmXLrht1w
PwgbrObbMUKDPaFUY1InthoO89iTB4D73PSP5o90aH7Q857UQ//NlRefaw7C
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
NzzHjnbXC6FZXLBxfCDw++ITc2YmsF6g6FPe66fLeRDetcqT8PXkVfvReCIF
XbsSyHe8hkFszcl9hK8PjM56ZMBJxe8RzYs23h+BrjN/5xH+Xa2IOeyTmYaQ
mep9+9Qo6LMj8gmfHmS0ljmqno4/avYHHqGOgvIs5lXCj/s6n5blHUzD9RyN
lA0feOCgMf2Z8NevM+7u19F6gUYZSTLuZ/nnWbn6KeGj7cWL1bVXfoYSSjjX
IHsATs0+KfA1w59vLVsbUw9P/tQXie4bANWg94I5tprqclXt5FS8zhUnaX4a
hurafQ+JfR7lmld6gdfiUebQVotyfj080vxA4CtfXPL7dHU7HWOKdjTOYLRj
/ohV3+3zTFi0nHf6Ej+evR9nrCpa04mt+otUE3/Q4ae50+rXpUwcNKlomOPX
hXW0uCr1jTS4aRihEyvJRqtLKx/p1HXj+p2bVx1ZTAHPr+vmnjDj4LrqyWOT
sr2oa35IyGV3PySt38UJ8eKicdy95/rGfUgqWNAmmtAFTgYz3+adGEItYVrV
PCDhvvLres66LZCyMWTisywPazqZl2PGSRgk9NCT610BpLSK36v5PmFiMK8h
aU8/dkTvOOwVmwolr6hL66qGcO9XVs+GFyTMg/2BpWH1KDccsuBcJhv/LAu8
oHS2B+0ODiZtah3ETzYD6vQBOs6kyrRtCenAbT2vvvkVMbBky/KlWld68bnG
r7F3fF+hI+HtJefBhL89kjTRBSRcT1ukIJRDw4vt0n7FI3R4mt6rcr2wH6l2
rLX7yHQMnf7iM1+FBlFpUbLRboMYZa8Q0SHFxJADfivN5lGg/Wown+/JaDVf
LaRDg4VyL1pz9XT6IeLHDf0yYwqekws7ZMn3xT2S6veY4V1w34+3RoRKQXo8
p4G3lIODwey4u2otcOEIQ+r1AX5d3/qZd62Ag4Wh3uQ1ThWgen1+yKc7VAx0
OPZAU5KL33kdYvmhqRDeIPbrjSIVzcc/51v5clA4X7jO3Lceo8WHV+r8R8bh
dT2ke0lMfL9A5ZhPySAWKHr8zd7Vh3MaRtaQVtOw5dRGs+psBuZ8klWqnNGK
C/WLxbmmPZhtsURwf3fFZ3V8xNc8/H6RvK7rPhOXGd2seX+OCZywLe7aNwrw
Xa/u9oMjLJQqKzMtnKDDG7cNzudWFeGYvXeYsy0H310fKTXRpMEmD0O/szXF
+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
uiIavg==
         "]], GraphicsComplex3DBox[CompressedData["
1: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
25Q6bfL5Z9SU55//A+1xDig=
        "], {{
          {RGBColor[1, 0, 0], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmgn4llMTxp9zLJGQqLTQLkmbhE+WRIn0VbZISFlKkWxJiooWKpQlhGQJ
oSyJSCVRZIlskSJJRfbts/Tdv+Z+r1xX05n3POc5Z86cOTP3zPOv1aPf8Rfm
oigmbFUU+lcsTkXRUfSF+MqiMqLtRFeqb6CorPj/phhbQbSbaGvRNqIf1N8o
x7OfxDfO0f9GirG1RG+KXyI6ULS/ftcV1RPtoN9f0opeF3+8aI34g9R+rXat
aLD4q0Q7ia8k2tby/aK+JjnkbOH59hLtK6ou2kNUR7Sr5R2u8SeL1ntcJe+V
9yr69yI9f030H9H/RAfkmGM/UW3P96P6m+XY28/i98sxfxNRDVFNUVO37P0P
jWmRg/8THeRYv6voWFF70fGi1qIjRZ1ErURHiP5Glhzz7Sz+W3QjOkzU2GuO
Uv+pom/E76R2g9oGfr+ZZb9e/aNZW/wmtS1z6Kyq2pNFd4mvovYk0R3i/9GY
g3O8i0zNizi3o9zybktRQ+v7V41vnkOfh7ivkeg69V8r2tv7bOnnWWMPyyFj
B9Gh3lNS36Giw7E398GfYDlYfyue5+BPFR1jPY7VOt1EG/37YK93o/rGidqK
L6/2O7VHi8aLP1P0vddo4nO7Rn1Xi6qI31HtOvQk6iY6zvL28Jkh11mizv5d
RnIdmaO/rNq2ojPF76J5flB7MvarvtY5zplnHX3mt2jMBNFJ4u9Re7foEvG9
RKd4r73dYjvba442otPF366xPUQ/ih8sukB0Ibavvl/UXoptaOyxOfqvEV0k
6i+apDHniH4Wv0LP3xZdLv4ttWtFF4v/XO2qHPNcrPZx0U/iK6RozxE9Krqz
CFu6Q/0TRWdjtxrbPsdaO6o9RtRX/CBRnyL4K0Xn+/cOen50Dh1fLepnWT9W
30Y/u09z9xL9iq5E4zhn0RjRVdYBfUM8x4gi9jRANFo00GuOdN8VoluxV4+9
0e+hp4e0Th/R70XouoNtcxvsNwe/q9qOOcbfr7FTRMPE76b2N7XDRdd7Tfb9
sPqnim7GNvRehxz9t3l95Kqovs453quMTeWQC/3e4L3ejd17r5X0/Pgc/RU1
9x/YuGiiaJT3PU39F+Lbirjnoy3XA9ifdfCgW2SZim15jofd8l4F9p1Dz795
n6zFHeIule4yvquV+BdFj4keFz2LTj33M16bNatpbJcc5/m497aZ19yPiSaL
f4E9eK7nRY/Y7paK5oteFu2pObrm6J+t9wYkhFE8UN+pOfYxy+vDV9KzP9Xe
J5ohvr/oL/FPc5aWb5HoOa/5lJ4/KZou/psUc73qtZ/yezPVf6noH/G1teYZ
Od7dXX2b1M5FBvHPil4SX0PPT8ux78rq+xtZRK+zB+/7Dbfosg5+JQf/P8cg
YuoOjp/4K+L27mq3L8I/Eyv5PUf8i6Ik+li/F3udF1Ls433Rh6LXvO96eu+s
HM/qq+2ZQ5bWGr+6CMwwl32I3hR/qNo2ojKiqmAG0VvqX6D2ZdHWooWiV1Kc
G2Orefxe3Psc6y6wLrGR5ZaRdcEpYJFdxJ+rsZNyYAiwQ2fmKiIug0OI62AF
4lIJO9DS/6NxC/gAfAFm2LGI38R54j0YZzf3DUmBRcAk4BhiffkicA1Yp2YR
sR5swLuHpNjDu6KDU9j9QlEtfHYOu0EO8Adn1wvbzxFviD/1izivHY1ZiOnI
SGwl7oJlThLtUwReoR/MgxzEMe4isfeAIub6x3imudcjjjf3+i38e5PxCe/8
bdwChqjh+RpbL+AC+s/HF+fAHGCQU8Arlo/YSwwm1oMlWlv2Q/yMufATxH7u
86Qi7jwyEetbF1swB7+J++CWNkVgGVrk7Ku+B3Jgo50d/4nvYIHTRO0sB5gA
rLCTsdJB3gMYpJVlau9xyIVfx9eXN0YgdhOridlnFIEpTixCjm2NZzp7rk6l
sRpzhqhLEfGaeHGG5yWWdLM97uVz+NM4qr5lJdafYpm6+vdxfu806wjc0dl6
7ODn6OsEPwPoT82Bey7CL+bAImCNnkXsYRdjh3OKLTgD3AGmOEt0bhFxGWzT
0zLx/DyvDQbqXkRMBL+x97LGOd0tRw+PW6a+b4xdPuDcjJPKGNchT0P7mU+K
iLvEF2IocauiYw3x/zzRtUVgBOI18b6CcQ78GnyD6LIi4izYA3wA1iAWgwN2
NY5gfjDX0CIwDzGWWAumuVTvzciBpao4LtO/q7EN74BRrrEc4JhBXgMsRpxk
XTAI8R2cAUa4qYh3L9ccT+eIpZWNJXhW0djgBs9FrB5tfaCX8f5NTC7FeVpi
NrhmpNcb6HE8B8ucD9a0HMT6WzzuNv+uaizBnazluEn8I27jx2YWERfxzfho
8AexmvsLvrgADFRETAe33Cv+CrXP5sAlYB/6biq2YI4H/D4x8DHvYarXLOEP
fhPHyVMe8dkQ5+GJ++Qy4INJnmOa7QW7Ib5Xdkye6z2zJjG+hrHHE15jlvfJ
vMRt9l7JuGCG32HfxHvwwkVggiJwCnOwt9rGIcTvq4jVOeL6lWCBHJgD+Yjp
sy3vi/5dx3hgThFYg5Z5x1pHk2xPY2ynQ3wGY21/N/o3chNLieX1HHfg9zIm
IfaDBYj9y4otOINYC7ZZaD0Qv17xuc/2c94FcxHD3yki3sGDg8A1S4qQ+zDx
2XijvnELzxoYV3xQBEa7XPS2ZQV/0N9Jfa1SYIynPPd8rw12+ciyLPfvazTf
yzkwB3gE/8Fa+xhXML6qMciKIvDIfNFn4o8kPhrT/Kb2nBx1j+op8AWYaqFx
yqoi8MtK7533trecDX038SfgvcL456sisBm1ji7gB8f1miniJ/GovfgjjDH2
TIEFiPsnpnhGTaSG4xf9p4uv45hXyy3zkAuAz7EHcOglonm22QXWY9cU7zBX
7RTxk7i5h+Viv0M0x9wcmLWc5aIO0118PcfFnpyr40c9t8RK+sgpiSknpJiX
/VPnQRflsMMUsYgxn2idL3Lkk6vVfiVqAL5J4XfRZwP7avLQ3il0ze99U/hO
/GEdy8Ve6qaIe8iD38EX4Af6qm3kc7oB3yZqrN9NU9xL7ng/8U3sO5r47vNu
Fdsy94VzA0+gc2ykbIrzbeT3kGe/FPcen9Pc9gB/sdpmnvcKtS387ChRS6/R
zP5qhucH31ct2ZHXapuiXlbOdr2tbZu7MFT0qfjD1bedbXeszx2c9o3tBvm3
9fvchRbmsdttUtwn5sQewaPY3mLbvJbYLHO2jyjjtbgjr6bIB+jbP4UdMedl
KXTB3tZ7zqrFlhoW82NH4BLO7gfz2Ak2VcE8eq1sfZbwH+fO+Zc3/5155tno
MeyXc8ano1tsCByAXf3lfs76F/cPt31SB2HMJt9t9nKd+h7KcYeGq52c4+6u
911lL+iyqsdvZR59tktxNtV8/2paNvRc3To5OoUPrWL72N37HaZ17s4xjhog
a5ELXKu++3PMNdz3jpzoH+tqhu1nD8+PDe9pOcHn5BLU7kp+H5+PPcITD6ib
ccfaWZ91rOcRxOQcd+52+4cuPru61j9nUftfZ1TP/SP13mM5/AH1KHwHmHMD
uFU03dhrb5/RT/Yd2AC1IPwCGG+0xj2Vw2dgP/U9Bt+wj88Rm2lqPVyvsTNz
+A/qPPgT8CS+4A/f92n2FRPsQxg73vbT2HZS8hHw1BDgp9iWmnmtmb7P4ISx
WvOlHL5hk30EZzpGfS/kkA+bbGiZf7dPGe9zbO7x4zR2fo67RdwiDhGDjknB
YzLET/LV8ra9/W2Hx9pv7FxEbs6dJ/4W5hlD3se7NW0LLX3H55jHHohX2Ay5
J7EFHEB8Kef5iRn4APrJhWf77s8rIvc/1P3Ie6RlruZ7UcZ2j/3jDzu4//Mi
8vEjvC61iFbe43Ee/14R3x3op1awyOP3tD0f5b1k88n3sI3lWe15y3tPyLnU
+mxtPbPO0V6Lvba1PpGxneWcl+O8OeNPHdfOTZG/9PY5f652VQpcfiPnn6OW
sZva43Lg9JX6/VmKnKe338dWH9bzC8gXUozp5buwIkVdl3u0GnlT4HJkWOOc
iBwZDLHRd5G4zp3dXc875cDIm+dI4XeRs4/X7Wt+gm2zr/k+5rHZBzVHH/KX
FLbc2+9WJ8/LgaNvUXtUjjzzVrXtRGeLv90yoJObsPEc9Y4JalvlyKtvVntQ
jrrDeLWH5Mj5J3p+9nubdYjewJMdbQ+/p9AzNZWl4t9JofNp6usnulX81p6T
XPzDFPoibk5RX2/RCO6M5yQOPqn/LiHf0e8n1PYX3Wkb7OR1O5rHfj5OUSPA
l1LHAnMS5xfkuNv7+0zO9LnQjvd4MBI1ec5lfY48F719lqOGT24ONuthG3hP
fYty1NtXqn0nRw7/iccw/2fuJ3d8V+2rOXJZvklQLyA355w+9Zz7smYOHLxB
fetT4GnuCfgYbNzT7/ItgDgI5gZj0OJ33rY8S3PU4Td4DP0tPGZry8h+8Ovg
Sep9xLWP9N6bOb4vfKh2SY5cfE4Of9rUZzHS8QWdf5TCfjjrEY5Zs3NgQXz6
MzliCTFjVo44gd/fzrZ3is96VI6YhJ1f65hbx3eqnc+L8yPWlbOdcy7vq309
x7eYFdbn2V73MtEDKb7FfO/7wB0HZxA7Oa/lKc7h3hw4AAyATYI/iOX1rSvO
aKXPYpXa71LUTivY3xInwHBgwK627an2J8Rqvp3dnOL8qSMR3/mNr+EZ39RK
9Th47jnfGvnOSC3zvBxYhrvzQYq7SU3yOo8Z53mY/0T/Psl+aazlaet+1nk/
RZ1xH695vdelBggGG5OiFojPAU/xfIzH1PKc+LpTvV/wJt8mkYmaG5gIzAR2
O9l8NftP6hr4N1pyg801BfsBMBR7Gul99fP4Kdy7FHMxDxiti+X/K4VPo1ba
xWPop6YKfhvpvi6WB5lHecwBlpm1+F45LMU+qCGDP/k9wnqmv7CfpA56oHV3
gOUZZT2g22UpfCl3izsGThyaYg2+h15tnjnB8OSWxPG15sE21KwHevxSz0Wu
x98SDHI/z680z30Z7zvCfScX4u6X9bjtfS4nWIfU/MG9g3zPuvmu4Yffsn0T
l8EB2XcEO2Qfd3B3c9RriNdgIHJqiPwarAJGgAcn3KWx3XPUJohN5Xx/iYkr
fGfvVF+3HDk2uTHfEviOAAYAr5ALVXc/WKW+9bi39fZVinepI5ETghmb2Maw
nzVqv0wh896WB7+6DtlTyFbXMswv4hw4mxJOvMxnVNN7p45ysdd70vP391rs
fYj10NV3jTtYOnvOdrDHsJfS32ew7wE+OwBcM++F+ekb4DNdZ36e9THY83BH
3k0R39H9idY/+SM1l6Wef533+0oOXaCHi6xD1iL+bPBa1LS+TfHdiudrPYZa
LjnC5BQ1LsaAY7/171etw7U+F2ygrnVL7XpxjpouPppvvcOKwFzkIWAqaoB8
s5xuOyGfwQ9f4vNi7197L/DsZ71lph7+Ro56NjVI5CEPw8Zq+uywhTU+L7AR
uA6/hG2Dq8BUF9hmGMPfEFDXpqYNNgPDld5bnbb4NHjee9k6JI6DwcCg4E9w
VPkcNez+lgHdUz/cmELfM4x/yNVWeS3wHthrlflXfKarisCzK623XuYZy7d+
/v4AmadYz3wrv8m/4amL8i2W76cQNUfqjYx90GOe8FlMFr88x98zTPTZ8P4T
7v86h56ow5MP8j64jb9jONv3kbyOu0n9lhxtego7mWm7amaee0etd1COXJNa
78Ac+eLTlnm6dTjDZ7TZXtxfqvmyJ+rkD1t+/uYCPEnui0zsA2z1tDEDOe4j
Hs/e+TsN8ua7UuAB7BCs2MC2St4BpiJXB/tRmx+QI8cdZj0Ptc085LPjb1Ru
s074jgROJr+v53nAZvdabmRGr+usWzA5eQU5xc0ew3mCDW/xnHyfog7AGg29
LnnErR4DNqCWTu78jO/uRt/fobZzZAe7vpbjGxnfpKkFUwf+xDw1sWTbpY6H
PwHHYvPgZHAv39hm++ywI96b63eX2b/wrZxckny4NN8cy0M+Ujjmgn3AQPhS
MBD4k5hFbKQeSnwEh1FT+6IIfIif4VvhRs/LnB09hqmJ0x94Tvw8eTW+l7s8
zfcabAwePquIuvjVOWoA5LL4VvzqQvPk2uTx/P0b9Z8P7Yu6FxEXFv3rOTz+
eZZtBrvj+w511EdT5LyD+Z2ifgxPnWOO7wX3YIHlmZfibyGeT3FW1JypafB7
nnX+pvXAeaP3Ad4v/pN4D64ltyJegWPQDZiaGI3vJX8k3yMOU1OizgxuR5/g
BuYg/hCHwBhvuR89d/Yz+t/wWuBncjrqC9RHvnc/zzlTcA/vkcsvzIEHsM17
bJ/3mudecF8f9X2hb7LHLLFPY+/veE7s5Dnrq+TzZnnMMu8dfFjTstYqQrYl
1g95A/kD9528m3yGXIZcaHnakmOSI9HXw+PJNYjNyzz/Rx6DDXezbWPX5Obk
zOTLB3pdZCFPB++W/m7hPc+H/yVe4vcmm8d/NLINg7GXWM/Iz3cD7ssanzvn
xN+dfucz2MXjv/dZ4Gufsa7+DwBJRTo=
              "]], 
             Polygon3DBox[CompressedData["
1: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
              "]], 
             Polygon3DBox[{{715, 726, 582, 522, 96}, {738, 747, 687, 626, 
              243}, {713, 724, 581, 521, 94}, {718, 729, 583, 523, 99}, {719, 
              733, 584, 661, 103}}]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0Lsug2EAx+G3H9Wqlq4iIR0dr6CdJHWqRUzEYmNgZTRxBVwBV8AVqNga
5/OhIhGrNI3V88bw9Pd/v/RNvra0urmwkQohrDBjxD3p41OLDDFBhRrLnCch
rOs2exxwxAl1EvdrXNtT2s+Nfcuwu3d6z4j9oI88Mer8rC/s2Gn3Xu0ufdMx
z961SdazeT7saR3gyj7lmEP22WWLS3fXdIk5yozH3+LeoC7qt85qn1Y1T69d
4Mz9i/jM/qKHnPMvObubtp3VTHxnWs5p7eTH7tCGJvH7qf//+w/FaSqq
            
            "]]}, {}, {}, {
           Line3DBox[{497, 557, 498, 561, 505, 565, 509, 569, 513, 573, 517, 
            577, 521, 581, 748, 525, 585, 529, 589, 533, 593, 537, 597, 541, 
            601, 545, 605, 549, 609, 553}], 
           Line3DBox[{499, 558, 500, 562, 506, 566, 510, 570, 514, 574, 518, 
            578, 522, 582, 749, 526, 586, 530, 590, 534, 594, 538, 598, 542, 
            602, 546, 606, 550, 610, 554}], 
           Line3DBox[{501, 559, 502, 563, 507, 567, 511, 571, 515, 575, 519, 
            579, 523, 583, 750, 527, 587, 531, 591, 535, 595, 539, 599, 543, 
            603, 547, 607, 551, 611, 555}], Line3DBox[CompressedData["
1:eJwNxmkyAmAAANBPN3El4wTN2FX2CoWyV06QtUREloQK4UD99Nf78WbecDQx
Eh8KIYzyJ2OREMqMc0yOUyY4YZIz8lwwxTnTVNjmkhmqzFJjh2tiXBGnzi63
JLhhjgZ73DPPHQs0GbDPI4s8sMQTB7RY5pkVXjjklSRtUrxRoEOad1bpUuSD
NXqs80mJPhm+yPLNEb9s8MMmW/wDHmcz8A==
            "]], 
           Line3DBox[{556, 612, 708, 552, 608, 667, 548, 604, 666, 544, 600, 
            665, 540, 596, 664, 536, 592, 663, 532, 588, 662, 528, 752, 584, 
            661, 524, 580, 660, 520, 576, 659, 516, 572, 658, 512, 568, 657, 
            508, 564, 656, 504, 560, 655, 709}]}, 
          Line3DBox[{711, 722, 710, 723, 712, 748, 724, 713, 725, 714, 749, 
           726, 715, 727, 716, 728, 717, 750, 729, 718, 743, 730, 744, 745, 
           751, 747, 738, 731, 737, 736, 739, 742, 732, 741, 740, 746, 752, 
           733, 719, 734, 720, 735, 721}]}},
        VertexNormals->CompressedData["
1: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
B8yLSzdhOE//UO5C8gW2WB6cT/IHhPLzxgbPi7NIvkB1Me4lkj9gr/1HWgct
5L+PlxrXiv+p6NuS/AGVvNM0bxQG7xqZXsNCvw3CC0j+ANl+KZo3rubdNyD5
AlsXJ80k+QPCRpyjnFW02h1IvsAn84a/I/njL+fDDnr1pP5h4CFBO1IPYR+f
s8PZ016k/qG5bFXPN49a2Pvld79hOrM0i9Q/lLk0tWaleD1cedhCOUeIus4h
9Q+/DYi2vk9sANPMecEMZ/bB1UJSX7hY+q4iktRDuFY8j8bzTLWAOaT+Yep8
U1lSD0H+oj/NGzMitr0g9Q/Xrl3FchJvBv8rqrQOdkbzgkn9wwvPqk1IPYQ6
l5SVDOcQkWItUv9wGC94BqmHYLHc6DjDuetI6WVS//CwyCFdUg9BqDPxNcN5
7OOi5aT+IfuQtRKphxDnvmcuwzn3QlUqqX/4qEC49EdrPVgZDNF41gjdJkHq
H3o5y/OWb6oGX988Gs/zzqUfJPUPW+omhJJ6CNvGeVHOMKNxIal/KHR45Dcl
z5K/+TnS+cwc0s9hisp+Q9Lf/a2DQsUd406S531J8Uct0t/Bix8rKefVkW+L
SD+HX8NRgPR3kGTxm3NN1OfxrHIuLos5F0T6OxD19KTxfPOe7FLSz6Hyyivd
Brl1cOFsE43nX7XLrUk/h1cHZqwh/R3cv9RH6+CBuZzVpJ/DUR2DcaS/g6Pv
Hr5hOGs19A/bJdaJWjMEZ5L+DpI0d61hOB/jyGWRfg7n6s6LIP0dxLgX036j
Wc0rnvRz+PSFlAjp7+CVxvXHDOftK7t9SD+HecqDIqS/g2N172h+3i52fQbp
5/DGnOtqpL8D18xtmxnOFb210aSfwxIdPVnS34FUTjbl3KtzaJqOaxNajlbv
v7WoFEZs3kk5Z2wW6yb9HL6Tfbyb9Hd/87N945Lm2z/ZqKQzbssY9bK/dXDj
gE5Rx1IOrkp3KBs4VA73Bxwp52Fq49YsOc7FK7fhhn54BdyaLU05+8/TmJuc
wUPu46kfwlmVkPZCg3I+kXwlIleoHUX2vhkMlqiGqTLn2Qzn9bpbwsTVO1Ar
lK19UKsGjqupUs7vzOY1svQ7UVXHPmLWtloIjA+g/Yb6moqfvfO7cO/rn0ab
/quDrcNZagznAcVEI4jrwqUf1kjH3amDbM9NJxnOHi1bbiUVdKFzWefVby/r
4KWDcwbDeWRT3ORXxR04eaGPT1ZZDRjCZBmGs9r1KsWdM3m46ZaLnJF6JSS+
qaLxfM371e6J1mwUnVG8tSWxFMQHllLOou/TbmSasdB75qgWL/8iSK/+zfmF
ufLxQoF6nPlK5Uj4YO5fzr5Pznw+Fd2Kmi0eV01WFP+N57nC1eeGczm4KGLl
5QMKJZDRa085S45kvRdczsNs+dPxl1eUQvH4esp5UuziZD+/NnzFq4621SiD
9gYJmjdq2oQcLzS2Y5DVoWA93XLorxtD+42rcr3n5SU7USPzRXSWdgUMWkTT
/vnWvCiyk1142mvBnpL5lWAjKks573twRWPltG7UCExfZV1ZCS2OD5fT/vmb
nHl/eDca5UZY+ayrgtQLAZ4M50taer0Ob7rRQDvYf+yeKsgPrXnEcP7w1jv+
RlIneu68qayJFXB/9df/GM6y4lrXYpt4aFBVaKT3shSiSy/R/DyTJ68wcUIr
bppx756QexHs69lH83O9Zd+4nk4WsjZGCIdfzoWzObco54abVWkZPfV45Ge1
ddOz7L/5ebNc+ZJ3ihw0ULNg/5yf+zeeL9wI2PvmJBeb341usU3PA84LPcpZ
XOPnltslPDwwMV/yxL4C2Cw2mnI2jxZlqSxtR07sXBNd8SJ4sP9bEMP5drT7
RI1LHXiw/+nQoHkxDBPOp3lj44BDvnU16SslVHdHLyqBfX3HCxjOMavLfxR+
68IpNlKB+awS2GhcSTmPKLmlVtXQTeK/Uaj+SCl82K6rzHBO2CTwQdm6B98f
1C0Xf1sKUXu6aX7+3uGuccO/B9VK4mc9qi4FvUWvUxjOd06NnptztAt/iJw9
GXWhBIbNDqX9s2VjmUzVmTYEzYQfrSqFsPKFGOWcUn/l4y5SjwzbhRVWHsoB
jxlqlHPDQF5co0kzBq05MSbZNgtu2l2jnCXGeYprkve1/dEzfoXov/nLef6b
M4nPwzm4RJHbnouZf/uNwaQCE/1eLnbi2k17P7yFN7m/+43Bx6qSkjptGDBr
TtWLJdnw8dh+ynmP0fwPDYntKHZP+wiceAeh6YY0bwTuet39eWonzmmK+c8o
/T0EiGbTeGZJB4QVHuzCWp8og5beHPCNi6J9nXf0eL9Jgd04dpZThclQLhzY
uYPm59IXa0c/c+7Bet85XVUlebDlg/EGhrOs25KGz2N6UdI4t9NvRz4os8Ca
4YyHDioIyPfipddPu2475sMYv/JLDOcMZVOBdSO6sfMmnit0ywXZQmf6Puj+
ziG1Q6AdH6zYPdRYlg1pd+Uo5+0fN3pKDecg28XryvAlmeCUu5Rynlyj3fkh
pRl5kpXCsxZngMiWU5TznNYUuU06jeg8I/nkspi0v3UwUDJh9pMPHHyg6ap1
zzH1b96ICTkcI6JB8r3LnQ8RIukwU8Kcci62uXS0KrINzf0LD9qnvAS9YH/K
ecy0nbynYh2Yqum/QsEO4X2EEeU8Q/cAq/FkJy7ROHlhV2AGuDaqUs4dPzI2
ehd34dqFe9u3m76GzgubKeccoTW5w392o4DTOBn3yW/g1FQfynnhG//WPl4P
Lhc3uyEV8QbCfs6n74OZkmt3rTvZiz07vgft/vYGooum2jGcVfWPfHwf1ou7
Lb9ZLBifCR8UYmNpHdybt0DBthulB34WW7x6DbzFgbSv29f4xWrZnnZcN6xn
0ODqK9gwwpNy1sxsGVazlYNbB3ylnj59AZkcAZqfLW/ql9372ozdLukv4x8/
g6t3TSjnaTnlbry0RjxzjxMWfP4puPI5D+xYYAqSXGyIc00PPx/zN29I5T4x
dznOw5tfWHuzJR9Dvosl5Zx8/5zKhjrSrxpyvrwviAXBTFXKWfM5z1ZJuwNf
pYx0fe0dDxJhSTRv/Orbt/VocidKKIo/W3vrCXhP8GljOK/NdNP9LtqNeeuH
cvOtE2B72WzKeVS6i+JI1R6c7us09eScp/DMZCP9HKna3//yxwW9WHFZ3vhs
/FMoLyulnCMOn5Q//aoXbRps3n0dnQjzTG+eYTh/e2MWtrW5F3+ZGZyqmZUI
2TqjghnOFifdBr/HdqPTr62iknkJsOX7Zcp5WsAGN/mgdpw7GGuoFRMHI35s
pf3G04C40LGnOXhtwWRlmayH8KNtkHIu8sjPDJVsQef5kywhPRJ+qLpTzumD
l5+cG2pEX8ftcuyrEX8/3zgUGG06R4GLp09qjP5aaqn6tw7OUjbQO8dDFf3A
rkfsw6pNVb8/3zAxvTJSorsNh1SvK6YNHlJ9XupGOe+aPfz25L0dGDcm4/rV
zUdVY6KCaTzPjx/72SC3E4WnBX6yCj6q+m6iK83P023KN1ZJdWNow1L1WcNs
Vfuiamj/rPC1JDF1ew9q9UXxHjofVbWeOpLm53F4Tmqbei8Wem9We1pop1q5
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
/kLiB2q99DpH/IJKV2e6LstlxVtTrrbiDFU3c91xzWDfMIxyE5s37xvhgg88
S1QIJ3ixPbOW0ZFJvSpOuODXq2vPE04QE1rwe11eB0WU8jl4yeaOfXpPI6Sf
V6Q6Rh2vLpH9w0vp/XfJfsKhShmqw4oM/o/sH+65YpxA9hOW9LdTf9Akt8G1
lYuf7WYtDrpWB2vVrDQYnZeyVk9WFbTiUV6QRdePCrgWFE513DJbtsY/5iLO
bpueNlAFCTCN+rPa1/jUUB0PtY/IvuuYUg1nDffS/eozXdobfZlD+poq140l
pbCg4RTVeeo2WeH5GR6i+CrNYV7lEGiYS/0JrvK9aJjQhr2QZZ/lWA5yneJ0
XaBW4blSiYtaX6emmIoXgcXLN1QnzHBY1lSlNtQ3Hlnc/qEYuJIC1J+ISsV7
O/e148DpFs7OZ8Wg0mRD/bnOXlrw/QUXOVfX7n9q/B6mfDxJ92uDnyYUZ7Vh
sfiK/LkXcyFmye91PTO90PbjQztWrHbY9DUtByL1iqk/IYnub1bM5qGMm3S4
jPtr2PLpAo3niSvybMVIv1S1amm57cRMsJq9h+pMsl4S5L67A1fKnVls0/Ya
0sJ/qTE6rcUh9bvMeeiomOIybdIzaDZ0o/48Fn3Uoerajt88JmXUDCaDyPBI
yudjqsNwrbAOjPeLnHbqSyIsW9ZC1zVhb871ZYLNaPkpWC6G9Jm+muzlNu5R
8MFx+TZ1Ync0kLz+mtgNH3bQ99kU6S0DY82b0diob+r8Cx0wN+zl/jlPMjDP
zkzOYUwFTjrTFxSVzoKOefIOsKAdvyi9PIiGZRgsPar3wftGeKB+mb63fjn1
fND0vzKcquAaW728AZItwu4MlXSgalygM+t7C6o3HPrJSWmH68eK5Rh/BNQf
tX1g7OnX4Aexj5aues/44/nWMmX4nhYcU+L2TITVDnMX7j3M+JPWaPb4oB4b
83cmxcTKt8Mb9msrxj4wlxNH4h5LaxYOLM/ngITYiN9xYukdb1bbiid0fM7o
rmmDYrEjisy8j6+EpdsTO9fM7OQ+Yr+UfYFyeO2/aC97bSs2bBD32mzbBjFr
O2wZ/RVLW5/Nluag+SbR6Qse8EChv+4IY1dVV/Ugzy36LBu+kjzHEK+zgvI/
/nD8wlE3uVjf7jKG/ITG8y7zmXm1nL6mTyf2MxdtQ8hPeOFz+g4z731Z2PFe
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

         "]]},
      Axes->False,
      Boxed->False,
      ImageSize->Scaled[1],
      Method->{},
      PlotRange->{{-0.8977596459392547, 
       0.899469979032795}, {-0.8977596333759166, 
       0.8969548893160069}, {-1.732050612422391, 0.9999998048535137}},
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]},
      SphericalRegion->True], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
2hv53kUJJCjgzvY7S3zJt6tJ58/WvCY/0j9Nl84vrLpXq5VzfY+v239WrTl4
ziyGHCrTHPA2LxKv/x4485Oljj8ZX1KlQmYcx7q19k9pLZ137D3fZtItrk/y
dXt0UsOH5RHRpEO5pni5fQrW57ET/sZ5fZNI52sWllSSiXWY4tT+/tQeKaTz
TdsO755dw3o76Ps2Y4z+FfJ75+i0KTqFWFcjP+jXH/JMJ9V15XaZwcVYP8Fn
XzstrJcQq63qbUYolmKdPLaWP1ZglEmuLrh0V/FxKdaDdevc+PDITHLkn9Fx
3pPK8Ln3aIxr99Y+k/SNyDl9oX0ZPt/onIk6Vl8zSGtf3R4NvUvwOdr5r9Lr
FXiZnLgvKn2yuwCfl7txTn+tWO7z6kZtmWyWhc9l4r3DNdcPbRZbakw7w/lo
5D8veO6j+owQomsattQkKR75r+u2SeNMHJHY36KWnmUnkP9+47H97LbbilcU
ZNlJ+yfPf8XlaYsHLp4vWWr+yu5RTiryH37T2lV7+1KJuaN517eB2cj/5eVO
ZQse20m+Td4ktpp1HfkvOSq+HmWzRpKo2zhkhFIx8j+0+Y1Vm5drJZfDlqzT
dyxF/pma/hOz85wlx085JyhVlCH/YP9lUZ2i1kv2XdU265tRjvwLGz6VPW3n
Itl6z2/aysEVyH+Ip0jBu3i9pMXJxXGGL8uR//fDrgstJzpLPhts/TFrchny
L9Iv0YuJd5D8qh34Ttmi6M850hu546XiMsnIA9P0C3VykL+yqd6H8VPWiHeF
LPmXy4vIf7LzaIu3lWaSH2XHJvfZeQb5B3gnSRbo+FPJm68xYkH9L3qZ4GKh
opQxnc1LkH+t79KxKyOiqfUX74ZlgvpPO3KZ5PdNouOzj/YU1v+lHW80THuk
0HeK79IaBPVftXumyTj9K9RopXihsP5HxT48c8QznY7K3vWdCur/Um3Y7MX1
Erq0y+Oi4YL6T1E3Ci80yqTuptvDhfU/0LL47NHITLpUPtheWP//pE5rX2+f
Sb+N/OIorP9b9i8UrL9m0N5vrOPqBfXfNTU7RT3wMh3kn+QqrP+n8zQGaccm
0c6T3hkK698u1Lime6B6xtUQ1j95/g+7D1vxLiOETpm6QUFY/6+C5++wnh5G
XeP7aAn7ptmbyE6rOb84qa/7EGH9i3p3qOT6Iw2qvmfhLuiPT82+nOP6II28
9dujvaAPtgy6GcT1O/o6JHNSpKDf5ddsi+P6Gp193HKHp6Cv5bby2f/zbAGt
rX5aeUTQv74qvDHqWX2DDlPqENNJ0KfsHp67wfUjOmJUfv1LQT9qf6hIs/Fz
MX1m1PPCUEHfGTdN7SfXX6jx/DWTBgv6i+vO8B9cH6FXNN+uMhP0kXlmI1zr
BuZRizy9L8GCfpFJzmZxfYEOddj1cqCgLyiZxh4nnC/cci9ZS1j/IztP6Zpo
FkOf3zDf9kag/5nWiYmcn6G+fvnaOwV+Zplet2TpPCWgbsnaCoH+n7A8Yc75
FtrnVsx+bYFvSZB/4Mv5E7o0cMzxDwJ/Mm1xx0DOh1Bn18evRwh8SLzhChPO
b9AxCpbnpwj8Rq35uzLOV9CLU4+8HSfwFXNpTgXnH+ir8WGRrQX+QcMlXpvz
CXSt68WndwQ+YY7dyQrOD1CjfnJjegr8QBU5KX/LuZw6Lh/Z6lfln75/Llru
G9ffqXb7qovnBP2dhI+8x/VxGrUyOadR0MdXulVe4vo1Nb1XPeaGoF+73e23
QZp/PP6Z1Jgm0H9l2wu6XL+m045E6t8S9GuevyfjT3n+jtb2p6T5fz+Z2qpa
4Bt5/t0ZfyrLfyHjT2X5OzD+VJb/cMafyvJPYPypLP9HjD+V5W/P+FNZ/uMZ
fyrLfxXjT2X592H8qSz/cMafyvI3Zvwpz39HvxNe0py/5d1nz5sC/8PzN2b8
Kc//DeiPC9OfZvx9GH/MrWLQn0CmP8j/GejPCaY/yF8B9OcV0x/kXwD6M4vp
D/LPA/15zPQH+X8H/RnK9Af524P+DGf6g/w7gv7UMf1B/gagP0ZMf5C/G+jP
ZaY/yN8S9Gcu0x/knw36M4TpTzP+6xl/zKe6oD/PmP4g/0Dovxms/yL/laA/
B5n+IP+6v/sv8s/4u/8i/yvQfxtY/0X+j6D/TmT9F/mPgf47kvVf5J8G/XcJ
67/IP/Xv/ov8B0H/XcL6L/JXgv77lfVf5H8P+q8667/Ivyf0X03Wf5H/s7/7
L/LfBPqzjekP8n8M/Xcy67/If/XAiIEC/4n8Z0L/NWb9F/kHZ5fZCvwn8t93
22+DwH8if5fco+UC/4n8f55WKxT4T+Q/bF9bG4H/RP4tkpONBP4T+ZMeQdEC
/4n8SzxGVgj8J/Lv3+DSSuA/kX9Wm38XCfwn8k/SOjFW4D+R/80hjp4C/4n8
VaH/urP++2cOtrztfIH/RP61kL+MWf5C/pMzKl0F/hP5+0H+UmT5C/kfhPzV
heUv5B8N+UuF5S/kvw3yl8KupvyF/HtC/nrK8hfy3w75y4blL+RfCflLwvIX
8p8O+SuE5S/k3xHy1wCWv5C/P+SvTix/If+5kL9OsfyF/B0hf3Vh+Qv5f18/
9bHAfyJ/I8hf+ix/IX9rmNucZ3Mb5O8K+Ws1y1/I3xvmMwPZfAb528EcRp/N
YZD/c5i3vGbzFuT/H8xVZrO5CvL/F+YnOmx+gvxbwpxEmc1JkP9YmId8ZfMQ
5K8Nc4/HbO6B/O/CfKOWzTeQvy7MMVLYHAP534R5RQCbVyD/eTCXeM/mEsj/
hwnLX/tY/kL+rWD+cIzNH/7UP8zTTNk8DfnPgPlDMJs/IP8rMDe7xeZmyL8f
zMcIm48h/wMwBytnczDk3wfmXeFs3oX8HWCudYzNtZD/XZhf3WPzK+S/AOZU
g9icCvm/gnnUdjaPQv57YO60ic2dkH8izJdmsvkS8u8LcyRrNkdC/nNhXqRs
0zQvQv5jYf6wgs0fkL8E5kWZbF6E/OUr2Nyh9XvHAWfiZkp4/i1gbmnM5pZ/
/j4C8yUfNl/C+x8vYbla77bCvLeV1hLZ+x/4mKjB3V/M33/rtzbO0ry95lPN
SWtO//j1tHbJBdJcXTw47C7X5zFfONMJPyRcrnbudDOD6/OYLzon6h+R5ur3
rauvc30e80Xq3Jyh0lz9rIVnJ31O5/jnu+ps1TVprp79K8kvkNM5/vl2Xpyb
KM3VOj/WG9tyOsc/3/fk8TZprs72WNrzBqdz/PO12mZiJs3Vmr/KRhzjdI5/
vj/dlWdIc/Xpbsf2cX0e80Xg0bfrpLl6jcH4eq7PY74wX+EwWZqra0wb3Hpz
Osc/337TQnpJc/WlRXPjuT6P+YLn7B69woLjLOY5D5v0qHIql6sD7oQOfM/p
HL8edlH92kMuV3vPnHaT87nI2bbs/fXNXH72r63oeIjTM57z2q1BnaX5edyv
ca2LOT3jOa89dTzlBJefvyo9KpHqGc/ZovG6tjQ/W51OfS3VM57zgT7j3KT5
2dDkxD3OzyJnuzu9xkvzc+SrsCDOzyLnhz03eUnzs/+RWI1unJ7xnN+/mGIk
zc/fjfI8OT+LnOVTlCq1ufzckPNsXgSnZzznj6uMWkrz89yGRHNXTs94ztkZ
FdHS/Dxh2LkUzs8i53JHP3dpfnb7mKvWyOkZzzl46lItaU5+tUx3AedbkefN
3/WGXlxOnjU5L0OqWzzPMP+MEVpcHj7V1XepVJ94nqfWWPk3cnl4baNjqFSf
eJ773770Gc7l4aQCh3ipPvE8t84MajOZy8NK/0iWSPWJ5+l6wLrjWC4Pmy25
UC3VJ57nxoSxQQpcHj7ufP6xVJ94nkYVQeW3uTwsP26hvlSfeJ7F5HivHlwe
3nwpqVaqTzxPld0e9T+4POxZsqULl8+QZ0JB+pUzXB6eGri57SZOn3ie0zQK
NN5zedhb7k2DVJ94nh279VUv5PLww74v8qT6xPM8dLh1cDmXe9cMD5om1SGe
Z7RqRLfdnO5PXRcSKeTp0ePgi8Gcvs8JTtUX8hwrUUn8yOn7M2XTLUKeWp/v
zR7J6XvQu7OeQp77UrstMuH0/dyq9jpCnra/i0sNOH0PNRiRK+QZd/PHmbac
vit1qswV8rygXP7lLqfvExI+9RDyLGyxbKYap+8DVI/kCHk+mPC0528u3+ol
FjRWCHh+N/mZmMTp+6ALe19tFPA8GhO6/COn726jN2YJeYaERcwq4vT90fWs
GCHPqMOi/yo5HR9+oFRNyLPPsX5+Uh/z5OFSHeF5H/g6s0aaV59bGh0LEJx3
36H2r6R59XtgqmWR4Lyn7ntcIc2rLXqkLxKe92kmdbekefWrqtEK4XnvEnF4
jNSv1GU5EeF5TzH9+o/UrxT2IvU9BOd9pEm3xVK/EqN5ybWr4LzvDnujIfUr
G6vLi94LzvvIT7kXpHn1cemM6OOC8z71SWixNK/2VPVJcBGc9xfFwdOkfkXP
LklHeN517DxspH5l1d7AVe8F591gpkGpNJeSdKuKc4LzblH9qkqaS1U6ed63
EvSpG08tukn9d9kzraAVgj6lnvtlnNR/91aLysoT9Kmj6+Jqpflz2ufv200E
fcra7Yqf1H/bt+2zc6ygT1lXDhkp9d9bZ3S8eVjQp27m/34hzZ9eBTm2iwR9
SnlOz6tS/y1J79+rUNCn3Hyf7pX6b73E60OOCvpU6xdVflL/vXfeN9+3gj5V
b5hfI82fAcGBPRcI+lToxU+RUv/9un/gx16CPtVeZGYj9d8DzBujtQR9qtGk
ja7UZxdYZZ5sEPSjGsiZ+8Z17C72nyPiebafwfJkTPr3bc/HOIh4nmWQJ7vG
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
Pheu8/20L+unqP+FUCcRrE5wn3VQV7dZXeH6f9Df1Vl/x/1Pg33Wy+zTG+qq
An63y6/PgDrpweoE99kB6qqK1RWu+4B/mMj8A+5fHc5pHTunuM/dcK67sHP9
Z//gZ7SYn8H9u8I+H8rs84zM72H59XA4p8HsnOI+R/x9rnH9HPilX8wv4f7N
/9ZJ3Od+0NWpTFdx/fvf/g337wv7vCCzz42gq+vhd6b8+mXQySdMJ3GfT/L/
0lVcr//bH+L+naFPnWJ9CvfZHfpaGutruL4S/Oo85ldx/6Eyv4dFztDXNsPv
N/H8KrE+pcb6FO5zAPQ1NdbXcD0R/PAZ5odx/+/Bt3gx34L7nAQ+x5H5HFxv
BH+ezfw57v807NNRZp+nwZ88gd9F8uvDwT90Y/4B9zkM/MYV5jdw/Q74fyvm
/3H/PcCnqSo1+TTc52LwdVeZr8P1MZBHclgewf2fg33myOyT92NuBV/+ykEL
wC/9Zn4J93kI/FUG81e4rg955wHLO7j/A7FmarahlJxxcQmZuu4c6nwy7Oes
jK87ozZ0kLp2Gflw22urgU8m6vOWvYo7FB6mkCKHbvPOr0nD+yTCc1kt44te
Vg/Jn5iZTzzmfmpcdb0Y73P/9qTEyLERZL/XTauU7n98S8Tf9Yn3GSLX4lLb
D0mkPiq1U0bAH78x8YRayqmxEVQn39FQeB//v88p3ifh7dSn7T8k0agPxW/S
BffxaOlj3uphCn0W5JyULPhc/PsQHsj066gAx1ijzHz6yKnvROHnUhlf7c9x
pktaBadPFnA2B91+LNM3z5evXMlxpmNVVN31BZyPzG7K0XSD++vQd5auIv4+
fP+ygfeN8PeJvN2Ul6nGru2/9rTcLeLvowr7Wcj2Q2X3UyXTRy7Afkaz/WBd
bQc+TxgfvM8W4HNXRs+jgU8144P3sYHnNYI9L7xP+N++Du9zFZ7XSfa8/ug8
1I8/qx+8z96//S3epwvUTwOrH7zPWqjn26ye8T5RUM8uMjrzH9SzD6tnvM9u
OF+l7Hzhfc7C+aqQOe+xcL7a3mk6X3gf/v025w4VmYVX7sL32/Dvw5k9qU24
v+ZUfB8O/94b73Ees0YHH2723hsrA/ero3eHN3vvjeOgs+tX9Yxs9t6bloYH
V7aoiGr23pvXd56OW/36VLP33gz9dfZVuF1ss/feZJ997nF0Ylyz996MrFVL
atwS1+y9N++0t0Zlz4pt9t6bpI6j9L6YRDd7701VV69Crfzjzd57s3C6+arh
EwPwvTdjgedp4PkOeJYCN0/g5g3c9IHbfODWBbgpArc1wM0EuD0HbnLAzQG4
LQdur4Db/v/DbeH/4Sb+P9zuRjJu44Hbe+B2EbjNB27JwC0IuE0Ebo+BWzxw
Ww/clgI3H+Cmq9vY9L3k58t2HPPraGG4GubecnJyW6V12C7IpKkOF0MdTgDO
KcC5HjiPB542wFMJeCoDTyfgOQl4vgae8sDT7v/U4V7gKctNB7gZAp964JMN
fOYCn0Tgcxz4GAKf+8DnLPBZDnysgI+fzPuULFarN/Hh/y7Af29Evja7qmSD
W7PvjYweP3hP+OwDzb430i34uHmLS8HNvjcyqX+n4JsKEc2+N9JxSVJJ2L6T
zb43Mv3ydN3wxuhm3xt5FGqzcXVGTLPvjRQpVIW0fB7b7HsjHb6Whtm7xjX7
3kjnw3LzD/SLa/a9kdJYv5CDbWOafW/kX6u17l+VTjb73kiE2ex3AVtDmn1v
ZOi4l1Y/Rnjj90buwjndDefUE84p3weHwTmygHMke15MQGf4fvpu3bJSYhvU
rJ/y95Htp6c3qXaMmB6H/ZT/e8GTkrFO23+cbPb3grS9qkvWG0Ti3wv+BwP7
mkk=
        "], {{
          {RGBColor[1, 0, 0], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFm3f8T9Ufx+85t71EEqWMyE5KkpEVyiiZEUKaKtqFhERbJColpKmhPVXa
m9ZPO2nvoaGhfu+n18ujP87jvL/3c+65557zPu/36/U691trxOjeJ+aiKO7a
qCjKqFdH4e+KUXZJRVEhSpOwN416t6j3jrJt2E2j3i/KJmHXjbp5lLVRdorS
MMovUapFqR/l7yg7R2kcZbNoXy/qFlG2TrrWOsqWSfftG2VNlC18/09RNo9S
Ncp20aZZ1O2j/Oxr9PVblB2jNIiyTbT5l7HTR9K1lvSRNJZ9onzH+0SpwrvG
9VpR7xFlo7B3jXrPKBeGvSDqJVEuCHt+1HdGuTzsW6J+MMr5YV8X9R1RJoZ9
ZdQ3Rbk07HOizA57ctRXRX1zlFlh3xr1Q1EuCnsh8x5lZtLvD0Qpw65d6D3v
4rlRng77lFico6KcFPZpUR8T5ZSwL4nfF0V9T5Qi7JqF1uaypLHcH2Ve2NOj
3BD2uVFfXegdfmA9ouwQ5bNC618pyklhjIwyOuwxUR8R5cSwR0c9IsoJrFn0
MyDqo1izsPtFPTLKXmEfHPXQKK3C7h/1kVFOjPuGRzk+7BOiPjzKqLAPijbt
ogwKu1HUBxTqt1rSWnXBp5L8gt92TFrPrvhUku90Y83CPijqIVHahj0w6mPw
UXw1Svewf/S74sd7xLWeUQ/Gd8PuFfXhUf7Ch+yv39tH8O+vo1Qu5B+/R9mq
kK9/FWVj//YFPoSfRvkVn7ZffulrrOvnnmN87pNC+4w1axFj6B31cPw17L5R
H4G/ht0n6hFRTo45OzLKGJ6X5KcdojRJmgPe+ezYvP9EvY7nJPl1O94jaY92
ijIl7LmFfHFq2NdGfVuUo8OeGPV01hUfxpdZr7CnRn0FYwp7PP4b5biwz8V/
oxwb9uSoZzDvYU/CB6NMCHt0lGn4UtQXFNonZyb9zv4ZGfbZUV8c5ZSkvvHR
U5OuMdbTk8bCWM9IGuO8KKPCnhL15VHOSnr+fOYq7AsL7b0RYY8r9PeRMT+z
4+9Hwl4U9XOF9nK1uH5wks+MjTmeVervbmwK++2O0aZXXDsu7PZRHxLlsLAb
xvU+npf6bjMWHwq7b9J+aRr2oZ6X3cMe4LneJex+SftrbtgPR5kQdo2o+yft
wSa2WY+avhcfWBj1M4X2ePcYY+n40MjPZU6nJc3T7VHGJc0TcaePx8WYr0+a
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
dp/s2UPivbcr9b7d3H6e9+mpjif72saHu2SdbbB/O2TpMugmrbK4NPuos9fr
Kq/RKLfZK0tnmeI9Av9FDxmRdR75oGMX3BJe2T/GVbPUmeIRvg4Xuz7sJ7M4
VP8sXkqs65PFV/Gx4bYfsG9cZH/oF/3tXMqvBjl+ovUzlkkeD/2gPd3sd8GG
z/fNOndkbPjvDPtwJ/sw2kSf6LtqqXcflsVt77f/Y6NrLQx7WRY3Zu/Dt4kD
HW3TD3HuRMc64t5ox4dOtme7Pb49y3tqjMc5L+ylWddfTTrDA9tz3wTfy76b
vmFfZHF49s5gzxV8/rCs8+Ml3kfwefyWd73Ue7Z0zIFXHu4+OUMZ6vbw/Jey
uDY8nPw1x3lnZRYHgRuMyuLhT4R9Y9jPZPHnw2Ium5Q6CxmbxavhjMfbXkaM
yuL/8Mpjsjg8/P1022j6p2Wdu8DZj3P7x+1Xi+x73Is2xLOOzToros2h8fy6
pfyEe+d6nINtMz9nZJ3foEEMjLb1S/neCVm6wJNh3xD201ncdmSWvoA/n+Qx
wAHhCuBvsHc12+Bt+A14GiwNjoZvgLc/zMLltIE3fOV74THge7B9Fdvc+34W
Rgef7+A+seGj8FL46VFZ2gS6BOeMaBbstTFZZ2zw8dFZZ1Hod6e4DdrFqb6X
s5ZB8ZxGpc69XsniovBQ9hN7jH26OouPMc4B0XbXUthmkNcC3ILfoCOgIawu
pDXAK9FF0ErQVb6yvaEN+kN0sR5novWgjUzO0ug3nOeg068qpBUttY2ega5B
+0/8LDSNDXolWuXg6G+PUu+OPoFOsdLreK/nh49R0IT45uEz90k/Z2XpIMvt
t4/YZ/BtxoDPLw77uaxxoW/R5kP3yZnZM/b/a+1Xw70WxBlizALHmaFuc7dj
Efeisw3J0kPZ44vCfiprH+GraJFPeS9f5/3Lnp7nfT0ua+7Yg8zlU55LfBy9
mDOyo7POPtmDzMEyzwPnXy94vSZlaWdPJD3nDj93nPcL/cBx4cBw1WwbLgwf
XG0b3QJ+DpeBO2LDJYkpH9lmT5EjN3zDA/eGd8PXP/C95E/aoA98lKWP0AYt
4T1ffyuLw9f3eNBoatlnsGsW0ofQg6q6T/IxuXiNba7DvYjLxGT0GDTK2oX0
BPQFtIU3srQn7n0tS/tA90D7ROND34PzrbTd2HuNGLe7YybxqGmpWEpsbWa/
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
+3BE4jjn/vAkOAhncPADtBq+d0Kf+z97TYHT
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtl3mgl0UVhufOJwqKZOIVF0yviiu5hCRRpiIiroiIuQGKKAiKSF7BJLOM
ApRNQEWpTLJIcMslI9cWlFKjRUQJaXHJ0FJTjKzseTrnj/fOOXPm993vmznn
vO+0jbzklPG1lNKhpZTNGG/H+URTygP4E7G/Cw7Ffxj/Cuz+2K8z7oFfGFeA
JeD5Er/pR/xl/B2w3wdH4b+KvxP2JvAb7N+CHVm/Jfgd9nNgnxJzR7P+DX3W
dmD8NtiduQX4p2Ef1sT6jaxdx9wa7BfAQfhtYDH2fqy5ndgo7FvBrvjX4Q/C
/gbYFr8dvy/2t3w3/Kn4A7G/Aw7EX4Y/Dvs2sDf+Ivxh2H2beP/3+F/PMncl
/tfBTsyNZe5I7D9idyX2DpiJvRpsItYZHEt8o88h1sr4KfxfMb5N7Gnmvog/
A+zC3MXMLcC+CRwHLsLvw7iS2GvYT7L+avyZYDfmJjD32Sb2oyH2MvgK/lyw
J3OXER+A/Tf3iNgWjFfhXws+hj2e+A3YC8Hx4FL8YxjfJtaL9V0Yp+BPAztj
jyM+EPtd7D7EuzJ+Gv+XjH8htpq5L+PPBrszN5G5L3kWYFf8S/CPwH4Je0vW
bgCH4/8evyP26+BG/JvBCeDzfjOxpeClEjm5IvN1Jf4asAj/I+4VsV7Y17tX
oDv+m2Awsc5gDPZhzM8FfwKt+K+CZ7GvBZ1KnMkc7PWgM7H1YF2N9z20RM7u
w7P2BSuwfwhuJrYF/tms7YF9A3gffAa/E+NCUIkPbYk9vxH8CxyNvw3jPPBX
0AP/XXAT9ofgBOxujAvAO6A3fmW8hmdd38T/auf/P8U4rUYtmyPfxO5GfArr
j8SeAZ4BbxBbydyfa9Rrf/zeYJa17DthryI+G/vFGv1hDVhb43xcu1eJer4O
bFWiJobwvz7qWbF2APOnYm8HJuMfj3+LedXE2bsXf6hRL4eXqOFXavSLASX2
+BZzg/Xn8/ue2G/VyMdhxE4CpxDrAsaaO8zPB38HPfE/AGea+9YQ9uga+2P9
bMtvG7+ZP58057CfAR/HPqAJ+1GwP3ZPc9p8A2dh72VO8rwLec4Z2G1gHv7I
GvljPXdjbcfMV/vnKuz1oBf2IeDFEs88CPtge1qJHJqT+f5ffnccz5ye9b8J
/yhrpEZ/HFLizM7O/FtMbIL7ku+7BL8d/yTszcDp+AfiD8LeHJyJfzD+idgt
YAj+fvgnY3cC5+H3wZ+V/eDf2AN9H8anwQY5Awwltj34ArETmX+zRn8ZWuIM
T7e32NOIn8X88NzfO/An4X8Ou7s9Bf8M+0YNfvFszYnTiO0IriF+qnWE/Wtr
gNha5r7q3nsmzF3O3M75vDvNfTAVez7Ym/gkz6SJb/Zb/cax2JPsd9gXlOiX
F5pvJeasL9cYswYvwr7CZ2CPKVF7i5qoe2uwQ/aqPWrs8b3ZP/ZnbV9wT9bT
nuYC+EkNfluKvdwcy3y/CnsmWJb7vTl2K3gk+9tU7PngiRr8thj7B+DurN/u
Jf5nk728rUYOuF/jwOgS3+C3Xt5Erp2f++U3+m2DWoIfzgMjSvQo+/cocI7n
m/x3DhiMfYTPwJ7YROxc1lxgLwDHWB8l+GOE/RG7X/KXv3Gta1bV4ES50DMe
aa9oIveHl+BH57T7M/c1c6+Jdx2efDPad5ZrW+LdJzSx1m8Yg93eRGwU/l3Z
D91bz8TfXtZErvuMO2vw99Yl9lS9ogaQ+zdm3J5pr5Tj1SNyoNwnB5vPagK1
gJrp/uzhNXv8vclRcpMc848aGkjtI6c+lv3bs/aMbVpqge41ava9Gpwul6sp
5HJ7rL1VfvlpDf1ibjxhjiTHyC1y3n3ZM+2VcuTPa+gf167KfixHy81quJ/V
0FfmqpxrP1LzqfXUbNa/mk+tp8awX6sZ1YpqCLXSxU1oBzXTAzU4slP27P/U
0Eit2f/M5/9zcEtw0trsAda+GuEXNTSRWkjNIT+rEdWGaoplyXly3YY8bzlN
LpMDH62hB621RXJ4Dc6Va+Xsx2voQ2NLs37VDGoFOfHHNfje3mNNflBDE3XN
fim/qcnUYmrCB2twvlzfO/lXzaPWUTMvr6EP5Ed7wD9raLAu2f+tD/uf3CvH
+Dz1wOASNen7qIHUPmqQrZrQO7OJXV2CW+Zkf7JPlez/V5bQl3LN9Mwv88zz
9k7gXUBN3TH5YUaJ32zdBP/OtXeW4IpZ2W/sO/KpnClX2vO3aYJj5BY1QmsT
HC53yyHyoZwml93nnjWh2dRqagj7mXzmt1ya/VPNr9b3jjAi88teZI8x/9X0
ank1vHyuJlALyJHysZwpVz6U76d+WVjiG30/+e3WEt/o+6hn5Bb3dIcm+GlJ
id9Yv+phe50cbX6qh9tKaA7rVf1v7xma/d47iXcRNc73a+gD32Ut8R5N6A21
yN0l6tM7mXcx7yjqFzlVLl1uj2lC76hV5MDdmtAnalPf8Xs19IZ7uxr/jhr6
x9+uw9+lCb72f/nN8pl6wbNVf8t1kzPf5Tz1rxpI7aMGsZ7VX8fK/dlv1Ndy
Xb8S/UY9Lhe6Znb2Y5/tHWF69nvvPubgzOQPz9o7jncZ+Vqt653Gu8j4JnLX
O4m9zx4oVz1Ug/vlh8klNIBaQf5WC6gZrHf1ue86Or9PTpfrf1TjriKfebfy
zjIj+cS7knc0a0n+9G5lTc1K/vCuYw24n2oktZEa6Nx8X7lvWPK5Gl1t7p3F
elKjqc3GZv2q4dRuY7I/qInVwt4hzD81t1pbjWQ/807rXbY9+cb7hHs/OPWC
d1rvst6JzS81mtpMTWu+qLnUWvOSf7xDe3eekvmlZlOrqanVW2p8tf207Jfe
2b2re6f+H4ti520=
              "]], 
             Polygon3DBox[{{868, 881, 696, 762, 96}, {875, 888, 697, 767, 
              103}, {919, 872, 100, 765, 766}, {918, 870, 98, 763, 764}, {917,
               865, 93, 760, 761}}]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0UsrRGEcB+D3uF8HX2A0H8CUPcqa1FhSwo5CdmzkOkYuZcNOWbiXUmyF
mU8w7nfK55DnZPHr+f3fznnfc0kNT/SORyGEMVksCSHus/xho0QWmtnENFNs
Zyu72cl+ZjhYGsKoPqRPc5I5znGbm9znLi94xgKvmXXmbXwtr8x3+r0cmB/4
KIf6E5/lRY7Mr3yTY/2dH3Kif/JL8vZaNn/r87wxF/VL5nnKc+5wjxvc4kx8
H+OPM8WsdxvQR/Qe9rGDXUyzjUm2MMEkf2XJmQ1cYNF6Qq+XdXMda2VNr2G1
rOpVrJQKWTGXs0xyuscICIXo/3/9AaekNh0=
            "]]}, {}, {}, {
           Line3DBox[{648, 712, 713, 824, 714, 715, 827, 728, 729, 830, 736, 
            737, 833, 744, 745, 836, 752, 753, 839, 760, 761, 920, 842, 768, 
            769, 845, 776, 777, 848, 784, 785, 851, 792, 793, 854, 800, 801, 
            857, 808, 809, 860, 816, 817, 679}], 
           Line3DBox[{649, 716, 684, 650, 717, 686, 655, 730, 688, 657, 738, 
            690, 659, 746, 692, 661, 754, 694, 663, 762, 696, 923, 665, 770, 
            698, 667, 778, 700, 669, 786, 702, 671, 794, 704, 673, 802, 706, 
            675, 810, 708, 677, 818, 710, 680}], 
           Line3DBox[{651, 718, 719, 825, 720, 721, 828, 731, 732, 831, 739, 
            740, 834, 747, 748, 837, 755, 756, 840, 763, 764, 921, 843, 771, 
            772, 846, 779, 780, 849, 787, 788, 852, 795, 796, 855, 803, 804, 
            858, 811, 812, 861, 819, 820, 681}], 
           Line3DBox[{652, 722, 723, 826, 724, 725, 829, 733, 734, 832, 741, 
            742, 835, 749, 750, 838, 757, 758, 841, 765, 766, 922, 844, 773, 
            774, 847, 781, 782, 850, 789, 790, 853, 797, 798, 856, 805, 806, 
            859, 813, 814, 862, 821, 822, 682}], 
           Line3DBox[{653, 726, 685, 654, 727, 687, 656, 735, 689, 658, 743, 
            691, 660, 751, 693, 662, 759, 695, 664, 767, 697, 924, 666, 775, 
            699, 668, 783, 701, 670, 791, 703, 672, 799, 705, 674, 807, 707, 
            676, 815, 709, 678, 823, 711, 683}]}, 
          Line3DBox[{864, 891, 903, 877, 863, 892, 904, 878, 865, 917, 920, 
           905, 879, 866, 893, 906, 880, 867, 894, 907, 923, 881, 868, 895, 
           908, 882, 869, 896, 909, 883, 870, 918, 921, 910, 884, 871, 897, 
           911, 885, 872, 919, 922, 912, 886, 873, 898, 913, 887, 874, 899, 
           914, 924, 888, 875, 900, 915, 889, 876, 901, 916, 890, 902}]}},
        VertexNormals->CompressedData["
1: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
s4Lqau8y34vgV1Tqls6C8y6ncITyc1hHcBn4laE4mWPgX9gawvS8J7mrHwZf
YpV/TBvOu5mHAPWH0Wd0v4Avf6kT4NFE6lTAjSHKz7fxua/Bf8sfaVcmeRRv
5eqneFa2l0WB/15tXG5qTuqUicBT6sNvx7x9Af47MFEtFvx4avMdiqfI7uQs
8N+LfT4+Bj/uflGf6uenS4/iwX8bvntz8gupU2Lp0fS8n/xQ2wL5c6hwrbcF
qVNceeYigKfwwHpt8N8FlzNiwI/L8hZ1AZ7/kqWfgv+W9Jxw9C+pUxJeXuMB
T2FVg0HIn5E7Grw/kjq1bp4TPe88LxcVgv9uky9UCyB1yrjWkOJ51MnyPvjv
+XqtK5VInWrSUKH8/BgR3w750+SGbRX48cSIFx2A5xbfgk3gs+2TLn4F3316
1wg/e5mcWW8/3bpkoiFLi8mbrUyeNI/YofRK0JDV6j6SKyVDR/JkoL+R8WIv
Y9YHj5Fc+YXJk/9yHt+6pmnC6t81kisP+4/kyVUJE4eb64xYiMmV/CYjeXLX
8Bnx7DAjli6TK/uZPJnbc8RBcNseVoPISK58wuTJRz+jn3ziN2EpMbmym8mT
b8zmBQ+eM2b1WIzkymtNI3nSEhuV38g1ZvnWjuTKA6dG8uTqJUJvBhQNWYjJ
lTlMnqyvEnqngI1YTkyunJ4zkie9WzM/dTsYssYzuXJ65EhujODii3WKMmDd
ahqp+1xbed8DP2NWSTwk/ERirTPpeecpUkkBfuZtOGcK/ZKs5Rcpnmrsr9eB
n76nn14i/ETvwx9Tnzw9918C8HOe379ywk/0guFnvkPzC+Dn5reldYSf6AV2
oee9mPvJLeDnNrl9dwk/kSjDz0/+MjXAz8kKA08JP5HUggSKp6KapTrw83rm
zXLCT6RvFzoefNTcO8seAD9nP1OJIPxEyDYoEPD0UL/QA/yMOG/3nPATDS9c
WAZ4Fhn4ZAI/rQx6LQg/kSHDz+fbP4QDP91jnh4m/ERhmoGUnwcaPtUDPzNf
1nNDv+SwvQw97zynkxHwc85TFz7oi4zyU3fle2XQzyJ+2RXQF3T/MVKPnEWX
VoB+3r5q5QH9v0eMfu45/UcH9HPBj+cNRD+R5PyRelQksLgG9PNI/ri10P/b
hCpo7oi97JUC+rmjqnaY6CfqZvRTSX3/VaqfKp5fiH6iYkY/1xV0Xwb9LLQT
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
tJTB50yD7TjAZ4O8/EaCDxJm8PHyFVOXI/iL3d6zE+av7j1J5+vLXBXaSfD/
u3ydA8zvro2vg/nHhVIy4fnufef0D/YTki1M9y865JACz/fNtwof2E9BATdd
P3bp03Dg4QVtbX/CQ9Sth+j8yTt3uwB/xFwsggh/UMgsc7p+jcAIzw/EbPY9
IxnBesDwfJDhua/Oo+nKNyJYvxmexzHv2d5l3rN9y/DZzm+EzzpPI+Ze6I5g
XWH4nMPwmWup9c6JieGszwyfdc4tkjdd1I3nPbXXa48sw3N1Im8dqMlBz5MH
nt0T6MI5NgOR42o/4KxJqf5Z/eVY+skL66K5rTgsfnO3n0szTu65dhPmR4Sf
cnmv34LV5HdPHxf3DYv3RNL5+rIBLE+hCmxXUGxbbNGFe6wu0PmK8sfq3uh8
xguVr4jL67JxzMrldH5nv1fjt69PkOedrNDa0xws6r4qCuYfsltbH9H1GL2T
FzJo296NJ5vb0PmzZtdzPwisR1ke2d2Bhp1YUOVYJMwPb+Tx32Jch3Sski22
G3Xg0M4BP5h/fvMysVliHchsHp9Vd14DFp+teBvmL18uMXPpjHYUM9VvKmd+
AzbWG9n/9bTDkmrqHNTBEXGWLMvCFQIxdP2Tn7K/9U7rRrML57meQVk48EQc
nd90cbYtwRMJps6OaI0sQzvWYjr/1KdD/QRPlJLp/ZOr9gOSfWFO53+1SRxf
PLcVcYZ0NhA8kaBpE8UnZ9LTaSX6LSgoWPUkd9w3NO+TC52vmryt4aJQBXq3
IlaS4In2/p1G5/PdYdtl63xG9/DlvAW6bKQQKkrnFw9afaj9+gQvX/Y8juCJ
3k9QpXgGrFsz63rXY1wRImVF8ETSdoJ0fga/kEtsYD0OXyJvFmTYiSIWudP9
8+0unr7ZuA6/2qJbSvBEth0L6Xw534TQmWIdWLP1swwnrwFpzNlJ92PWVnlH
dUY7FvrqjQmeqPG0CZ3/e012/wp1Dv6yIvvXzLIs9PLpLDpfa9/cHIIn1s70
+OKOslDXJWE63yszJena/W78+2LdyRWXsvCWJzVH/34sQbOscT/XrS78aMly
x0pUhpuklI7B+HPjrqfqEe34/Bm/cSucG7BlyVc67nfwWpvXqxbsoBj9LF24
Gc+4M9kOxl9/SvkJ+4m6nLN3Fnm+nNURlP92lZbe8Lt+D2qtIL8L63D06D5H
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
Pd3I1NPRvxeQ9bf/b38vIOuL//ffC/4fvQYU1w==
         "]],
       Axes->False,
       Background->RGBColor[1, 
         Rational[82, 85], 
         Rational[14, 15]],
       Boxed->False,
       ImageSize->Scaled[1],
       Method->{},
       PlotRange->{{-0.299823326344286, 
        0.2998233263442558}, {-0.299462627196952, 
        0.299462627196952}, {-1.732050612422391, 0.9999998048535137}},
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]},
       SphericalRegion->True], 
      GraphicsBox[{},
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, False}, {False, False}},
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[1], 
       GrayLevel[1], 
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25], 
       Scaled[0.35]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.01]}}, "Rows" -> {{
        Scaled[0.02]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.584451805715579*^9, 3.5844523343290653`*^9, 3.584452575092613*^9, 
   3.5844536254225397`*^9, 3.584453759827512*^9, 3.5844539230530157`*^9, 
   3.5844554208480797`*^9, 3.584455487090138*^9, 3.584470166336063*^9, 
   3.584470338317072*^9, 3.584470586439404*^9, 3.5844708157930593`*^9, {
   3.584473445535655*^9, 3.584473459280303*^9}, 3.584473571100469*^9, 
   3.584476523839967*^9, 3.584476893987838*^9, 3.584477699382539*^9, 
   3.584554756727647*^9, 3.584798597678206*^9, 3.5849049550836573`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ShowOrbifoldGrid", "[", "3", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{
  3.583689434030222*^9, {3.583690038818116*^9, 3.583690064557714*^9}, {
   3.58369221561723*^9, 3.583692295584877*^9}, {3.5836971219493*^9, 
   3.583697128587344*^9}, {3.5836974345230513`*^9, 3.58369746233471*^9}, {
   3.5836974976174173`*^9, 3.583697552388973*^9}, {3.58369763742273*^9, 
   3.583697661283956*^9}, {3.583697697187623*^9, 3.583697697681795*^9}, {
   3.583697921812044*^9, 3.5836979270391903`*^9}, {3.583698022251027*^9, 
   3.583698106174611*^9}, {3.583698152561407*^9, 3.583698152736507*^9}, {
   3.583698209683529*^9, 3.58369823806411*^9}, {3.583699151298019*^9, 
   3.583699185253458*^9}, {3.583699394613495*^9, 3.583699469642783*^9}, {
   3.583950965930999*^9, 3.5839509892351837`*^9}, {3.584136641185576*^9, 
   3.584136642988099*^9}, {3.58418582819775*^9, 3.584186027196117*^9}, {
   3.58418642444545*^9, 3.584186500754262*^9}, {3.5841866582220087`*^9, 
   3.584186766405637*^9}, {3.584186811686653*^9, 3.584186832061205*^9}, 
   3.5841869859448557`*^9, 3.584187040241329*^9, {3.584187077361844*^9, 
   3.584187079656089*^9}, {3.584187139344602*^9, 3.58418718644466*^9}, {
   3.584187237970829*^9, 3.5841873678137493`*^9}, {3.584187400198305*^9, 
   3.584187624951578*^9}, {3.584187726903932*^9, 3.584187789769574*^9}, {
   3.584187821025146*^9, 3.584187897118555*^9}, {3.584193110409483*^9, 
   3.584193138015587*^9}, {3.584193194922391*^9, 3.5841932098646507`*^9}, {
   3.584193249112626*^9, 3.5841932504566317`*^9}, {3.584193296068103*^9, 
   3.5841933106086807`*^9}, {3.584193366005022*^9, 3.584193367795381*^9}, {
   3.584193414660308*^9, 3.584193416458366*^9}, {3.584193458308425*^9, 
   3.584193461031646*^9}, {3.584193542363206*^9, 3.584193570383233*^9}, {
   3.584193631868184*^9, 3.584193654583934*^9}, {3.584207427977562*^9, 
   3.584207501726315*^9}, {3.584207597447155*^9, 3.584207626676507*^9}, {
   3.5842076755108*^9, 3.5842077203567533`*^9}, {3.584207767876896*^9, 
   3.584207853383381*^9}, {3.584207930296794*^9, 3.584207998168458*^9}, {
   3.584208035919663*^9, 3.5842080419817553`*^9}, 3.58420808388694*^9, {
   3.584211608664071*^9, 3.584211644171987*^9}, {3.584212203939707*^9, 
   3.584212208037219*^9}, {3.5842125744924917`*^9, 3.584212640724815*^9}, {
   3.584296319128419*^9, 3.584296395719811*^9}, {3.58429644238603*^9, 
   3.584296669869536*^9}, {3.584296736407246*^9, 3.5842967386965837`*^9}, {
   3.584296779136149*^9, 3.584296854690329*^9}, {3.584296892461269*^9, 
   3.584296996777444*^9}, {3.584297068795958*^9, 3.584297188399145*^9}, {
   3.584297293293878*^9, 3.584297335189075*^9}, {3.584297376168564*^9, 
   3.584297576953013*^9}, 3.584297766513338*^9, {3.584297848833336*^9, 
   3.584297914758376*^9}, {3.584297957218121*^9, 3.584298011394829*^9}, {
   3.584298117096738*^9, 3.584298202007159*^9}, {3.58429957778618*^9, 
   3.58429965971666*^9}, {3.584304202964367*^9, 3.584304214333768*^9}, {
   3.584396442592865*^9, 3.5843964496569*^9}, {3.58439649139237*^9, 
   3.584396495152761*^9}, {3.5843965389924498`*^9, 3.584396572888001*^9}, {
   3.584396611039075*^9, 3.5843966649230213`*^9}, {3.584396710218545*^9, 
   3.5843969957591143`*^9}, {3.584397029373207*^9, 3.584397090514019*^9}, {
   3.584397121962578*^9, 3.58439714435212*^9}, {3.584397187297997*^9, 
   3.5843972107109013`*^9}, {3.5843972488630857`*^9, 
   3.5843973682382812`*^9}, {3.584397569884097*^9, 3.5843975764419823`*^9}, {
   3.584397749685772*^9, 3.584397760578689*^9}, {3.5844008724767637`*^9, 
   3.5844009072115088`*^9}, {3.584400999030896*^9, 3.584401024390173*^9}, {
   3.5844010850803137`*^9, 3.584401190755561*^9}, {3.584401258025412*^9, 
   3.584401306694447*^9}, {3.584401346522201*^9, 3.5844013995527973`*^9}, {
   3.5844017339456053`*^9, 3.584401740639702*^9}, {3.584401777556472*^9, 
   3.5844018401644*^9}, {3.584402050983671*^9, 3.584402060779389*^9}, {
   3.5844020908678503`*^9, 3.5844021511835823`*^9}, {3.5844023156504908`*^9, 
   3.584402358181839*^9}, {3.58440249598498*^9, 3.584402716277945*^9}, {
   3.584402761827291*^9, 3.5844030853223677`*^9}, {3.584403120401732*^9, 
   3.5844032222088747`*^9}, {3.5844032861239033`*^9, 
   3.5844032866950607`*^9}, {3.584445796028324*^9, 3.584445799556925*^9}, {
   3.5844458930441923`*^9, 3.584445920034349*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Universal Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Orbifold\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, False}, {False, False}},
      StripOnInput->False]},
    {
     ItemBox[
      Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyFmVuoVGUYhoekA3nXAYIoMiSK6AAadJEt60LwBNFNJVFQKARtgshAtDI7
QIER0o2VEhUVSQeMrEBbsdBKtkGsDhIbUafUyjTtIkECi1nzzrCed705F3uY
Z7551/e/6/v///vXnnHfQ7cvPaPX683+78+0/95n7Fn80alTf5Z67w1ex4pl
j3y4fsvEYePvTj9/9cTUQeNHX1++bOb8vvGlA52pEF8HXhnvDV8hvgj6xof5
hPi+8eF4jQ/9MT78nHgpX+kzuXwml8/k8rk7vg68Mi6fQ3wR9I3L55C/cfkc
/DEunwMv5R99JtdncvlMLp+74+vAK+PyOcQXQd+4fA75G5fPwR/j8jnwUj7R
Z3L9nlyfyeVzd3wdeGVcPof4Iugbl88hf+PyOfhjXD4HXsoP+kwun8mlS67P
3fF14JVx+Rzii6BvXD6H/I3L5+CPcfkceKlx02fydj3XoZ7rUM+MrwOvjMvn
EF8EfePterb8jbfr2fwx3q5n46XG1+1zFXyugs9V8JnxdeJF0DHe9sfyNN72
pwr+GC97rdcx7HNj3l6Xx7y9jox5u+4ZXydekMufcF3j8ieMy7j8CVz3sYCO
cdTPiKN+Rhz1g/g68SLoGEf9ME/jqJ8RR/2Ql+37ZutY8KcO/tTBH8bXgVfG
dUdDfBH0jWMdCz7beI1jHQs+Gy/b88D2ZfOZHPuy+dwdXwdeGZfPIb4I+sax
L5vPYbzGsS+bz4Grrwv13A/13A/13A/1zPg68Mq4fA7xRdA3jj4z1LON1zj6
zFDPxsv2Om3nJvOZXD6T49xkPnfzyrh8DvFF0DeOc5P5HMZrHOcm8znwsr3v
2XMA85lcPpPjOYD53M0r4/I5xBdB3zieA5jPYbzG8RzAfA68bPcR9lzLfCaX
z+R4rmU+d/PKuHwO8UXQN47nWuZzGK9xPNcyn7uvO1nqvX3dzcb1Wd8jvgjx
kVMH+syzCFx5Wjw5xkUe4qvET+PP+FygOun2uTqNPzzXKE6vY8jPeOiTR/pp
XKEPGfPtVz5xxdSWI6XexTV/yYefixBvHPq2PpBD3zjrX/p83ot4yyfNL173
rzUHH5yYOlrqHbwIXPHUKciVX9Jn/opL+Yfrmj+It/ue8ud1V514f/q6N3fa
fBHvtV4Wb3U7/N7qlly/J7//vL1vbTnycblp68oVE6/sHOWjz/pe/NiyixbN
nP9eEeIjp474UM+uq+uEeONDfXKNy+LJ4cOIK7/Ak45x3C9bJ8lxv1gntk62
76vVj6178Gek886Sd5+duHh7rAd9j/h430N8ui/St/tFjuvaftft5+bkp+3v
qEPjm1YunLZu5tqkY+NK9Tn78Nx5U49+MeLDz9F/fT/iTR7mf/u+27gK09G8
wLgwXq5j1p9AxzjHi/uVfBjrDPML993WN/hDfeOY7/TZOOZ7GfRHfN8n1545
a9bPtr+I8/+Djy+4+e7163davDjjn2647YPijO8317V4ccYrT/5/TfmQ67rk
0ieXfvt58FifXPrk0ieXPv+fIn1y6ZNLn7ydfx3yr0P+dci/DvpViK8svtd6
jePJoV8E/aI7fvy8EeMdcYw36Nemz+dsuF+mT477FfLvh/z7If9+yL9v+nyu
gvli+uSYL6bP5wlYH0yfHPPd9NnHYl0yfXKsM6Z/53MP3Ljjjj9svizYePnu
724Zn4+kf9NHU8v7Vx+1+r/m65cuOH6hr6uvXrbr0lU7Dpn+Czc8s+35D341
/dWD999M/+F7T5x8+6nfTb89z8b69a5Db9xyyS+mv33/a7fedvYB09/y9137
7zl+wPTnD3zYY/rNePea/jkrpl119vJ9pn9y7davLrx3v+k3eX5v+k0+P5j+
ywM/d5v+Y4PvfzL9RmeHxZ81yPNbi587GO8Gi58z4NssflHDrd5WNTpWb+c2
17V6bnS+MZ3Pm/xN58lmvKazofHH5sVnjZ+m/2Pjv+n/09wv02/y32f61zf1
YPqLm/ox/U+bejP9L5v6NP3vm3o2/fZ+MtZ/pJkvpr+mmV+m/2IzH01/YzN/
Tf+6Zr6b/pxmfTD9hc16YvpLmvUn1YPV/7z/52E/mjR9PgdDfOhPXId9pnTY
34KbPuPV/3F9U79Irn6OXH0Yufqn7vg68Mp4b/gK8UXQN67+IORvXPsxufbR
4FuKL3Uf6DO5fCaXz+TyuTu+TrwIOsblT8jTuPwJ403xpeqX/pDLH3L5Qy5/
uuPrxIugY1z+hDyNy58w3hRfch2WP+Tyh1z+kMuf7vg68Mp4b/gK8baPyOeQ
T4jvG5fP5PI5+GZcfSrnr/pLcvVt5Oq3yNUnkasfIlffQ67+hlz9Crn6DHL1
B+Ta18m1H5Orj+e8Vv9Nrr6WXP0oufo2cvVh5OqfyNX3kKtfIVefQa7zCeep
zhXk6tfJ1WeTq48kV/9Hrr6NXP0Wufokcp2vOC90LiLXeYNc5wRy9ffk6uPJ
1TeTq98lVx9Jrv6PXP0f76/6P/qj/q97X5gM+/Jk2Gcnwz41afrq26ijPi/E
Wz7SYbzOsYzXOZbxOsfST533yLcNz1fkuh7XE12PXL9PnPmLM3/9nvHiKT7l
T67fk/8LxV/4uA==
         "], {{
           {RGBColor[0, 1, 0], EdgeForm[None], 
            GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Y8gzzFcrck7OMZ+W1Ldf/Ayb1I9811slz0yceYbbjits87qRc7KGBc6d1LSP
Rp4zOBd85b1uVWXNTI5uo/bXkdrYWu0vIn25ZZX/APDP5mp/HKmZG6j9uX24
hdpvWvvqux5Gm6h133ZsNlT7s0j/J5afjzxTrvLaOpesdz5xvDRzH7SgCzoW
WTu0rfKMQ37lXPNRZPw1rTK2qWNeE5ZG+nUT3V8S6Z+NqqwF8dM11V4cGQtr
qP1hZCyvrfb7jqO11P4yMq7xw2XeV+owai/2nDh/wHpK3mnv/eS/x1clY4n4
+aykfuFnX9sniJsR3svhHrfcY9FstBKdXOoxY+0P7PVCj1lsP2FdP3ltHas8
33FO59yH9h9lXUFzXy6pa6/6Gn3GZmdEnt95frp9epG/Ea18w/ZFkzh/cg7u
VOW5klzzrPu/WbIWhSdbM+jLmbBOODZK1rKst6ljge9v7DhY5W+lY237/G8e
z3dW9vOaGMLvl3u+1c89dqX3CZuhLcTIdNsX29Z2TNXU1Cv9DeF1LnM/4paY
7UkcRe7lO95j9reH7jWN3Ev2/JuSGsrc9b2OvuJ1It+9MToRuX874DeR79hK
3CzSPzZFu6zH24lbRvoCtkGD+J5vwjWV+Fv7Cv5NnHJWw583VHs9P1/i3ID/
d1G7QaRvbi9eN9LPODeRuzs7FqjXG1c5Rx/PQ7xTazSoco4tPM+O4saRGrco
smZBE5pE2g6bvRVZq3R13JEPiN8Oaq8fqX3UMPwbIDbfizwDEr9d1e4U+d9o
a3QjUlt7i9eItDsxyzm0pXWMXN7C+sM5FR3rpXbDyP37IPJM2cRaRw2B/rDO
qf7GzSPXx9o4q+ML1DboDHluLesJdR5at6XaHSM1+o3IM2I9ayz1B9q7aZXn
H7R0TXG/yHqtV5V1HvbZpMoaFw3ErhvZti0i/QPf2LDK/6cr/E3b+rvaRvoc
/tYq0ofwD7SU/zho/neR/ynRVep+tIT/Zs0jfRE/7Fnlfxl8oEeV//vqVLkP
g70X+M429h/2obv3YqfI2CAusMcg2wS/5ZxOrhkYGQ/EAvu5gfe0W6RdsEl/
caNITdy4yn/Hv/jeAN/fqMp/x9QS/G+hhmad7SJjjPj6HaHxxwA=
               "]], 
              Polygon3DBox[CompressedData["
1:eJw1l2UYVkUQhXev3YGgCAaKSBkgdqHYYiuYqKjYgt0BBmJ3YGEBKpgotiJ2
i63Yoghid7/vM+OP8+yZe+937+7szNnztes/cNtDmlLKp2Bm8HstZTXGVcGT
8D/BGvAdGZfjwdbgAeL7wTdc+wOsXuI3T8HnAyuDL4jfA//Ad2XcBbwA/wus
WeKdz8Bn532nwE8GbxMvBjYAU4g/B3Nwf3CJZ97i+t9grRLveBa+AFgVTCWe
DNrA1wPfwT8DreBrg6/hH4MWzhdMg38I7oN/y3g6GA5vx/e+gR8LFoNXsAd8
d/Ay90sTvB94ifjuGrk7E+wP/xfsVmLNz8Nn5fl94HuD14lnIx5Q4tobxCuC
bmA68fvuAff3YuwPXuP6TE3wPcGrxLM08a7+8OXhi4IHS+zJt1xbCfQAM4g/
AoPgNzBeDK6HL8Lz4103+Jq4BfGd8DvAFOKFiO8qce0L4m3MCXxBcCr8cdDe
9TJ24dkfGbsTdwOPwrf0G+4bGAzfGrSBzw2GwH9wzfAVwEPwBXnH7fCx1iDx
06Az/Kyst0MYrzQG18EngmXhwxi7mlvGI809uBy+bc6vJTgNvn2+zzmcAf/F
+oT3ABPgv4JVSlx7Av59jbktDx6G/1zj2T653oGM1xFfAEbADwU3wy8DN8AP
A6NLzPlG+E/uSYkcPWa9NrHWMdYn8STQF35J7ufejANL1MBl8L1qrM2auhS+
cBN7dy+YTrwTWLdETs+G75Hv2wRcBO9dIxez2kPw+0HrrNl7GHuBtjV6zZ45
Gv5IiT0ZDb8XfAXfHtwFX5zvf1miJ9qoBe5HPuOzv9XQjr65P8dYMyVq6hb4
MlzrUqPH7LX2oEONd/ruB+Gdsiftzd1rfHtDcCF8lxrcPTsXflCN2j4NXAPv
Z83C13eP4JvVqN2ZwMnwAeD4Ejm+Ar5rjVypYefBD66xl0PBtfayNV0ix+fD
96vxrU9SLw6sUQuDwdXwnWt82z0/B/5hfu8q64r1tQT3EN8NpnKtFfG4Ete+
It4u69seOj31Yif4zuBN4rma+P6p4L3cnw/szxp74Z6qnV1zr9Un1zIl99v1
bgrfMetDDVPLLrYv1QJ7qIR+j6tRj4PgJ2S+3BPXvkiNvRoKdsiefqTGb/zt
Mozjc38usRdSf8zv5fCR2S/293BrI/tlXzDEvc58vpvxlYzdmN8RNXI3IevJ
+tihRA6sT3VRfRyU/bNsE/qwT/5+TnCUdZ75M5/yY8D79noTPT0y+8vz54gS
73iHeMkmtLUzfGn4npm/A7I/u6Um+Q3nPncTZ8lxzjH72We9r17N10RuTwQf
E8/fBD/JGiPunpozooQ+z9PEu6wpa2ulJjT+xqwn12dtDMnvH15D2x/Nfj6y
hnY8CW6tobGe7da/2nsCeKVEz47N/mkBX6qE/p8E3vRZcIe1VMM3tMj+OhFM
gk9UQ1ID1AL7Ve1Wj1pZHyX0eXrOZ2Tm3rnoDTbNfvS36slG2e/qsHrcK/vL
86UtvEsJfZ+a9XFz5sbzqDVxx+yn48Az8Ldy/pvbYyXmpD6qwdaQ+jsp+9ta
NP/q/bE1cvd6rk99sxZfzXypn+b6JTDGOqjhlfzmbTXOENegPniWbuGelZij
5+UB4OwSPeF5p6fQW9gz6tFW1kCJNXueqv894VuV0Cf1x9zYw+qfemnu7BH1
c4kmvE9H+FJN6Jnexx5VP9VkzwbPCLVaf3Z4iR7Qf42qccbZr/o//c4WJTTy
RXiHJri6qZ7o/3qXeOZ/P6T2qGn6H/2Nc+tTwu/or1zL1iX8lv5Lrqa/kvm3
tsZl/Xp+dyihmRPzm37bd6ht6pMexvrVnxwPXixxxo3JerCWx+f+TMl+uSl7
Tz/m3PpmPWwENqzhbfWcalx78G4J7bPfh5XYs8nWvT1dw9t5xtnf51q72e89
waI1vKpn3p35LtfbL/td7zMs9cMz0vt+07Nz3ibqxbrxfFmHceEaXtczdhP4
xjW8sWe0mqV2f1JCy9aEt6zhFfWg1oRniXpqrawBX6iGV9ZDq1fO3W9+VMP/
dyrhsdQP/z/Ya17z/4B+vSt8OfBcDf9zjbVcwu+Nyh4x/zNq+EHv6bE+J+7c
hL86NPXB/w/2uu/U//t/xFq8tYT/1Q/LbwPfETdNeOdpuZ62TWj9jFy/NWWu
zal+xuc/yH7Rb/u8ufLM9XyYnP1oj/j/QD/mWTGqhJ/WX8tH53o6NrGWgVlP
nZrw44NSn9wz9849Vs/1n0s4txL++Mes3aVL+Ef9q9ppzetX9Zfea596op+4
qUTOptU4m/XmaoT+UL8/An59CX+vH/db7Uqc3/p/7znHL2v4Fc8W36k/+Q9e
Wrwm
               "]], 
              Polygon3DBox[{{507, 394, 340, 43, 455}, {550, 403, 353, 93, 
               460}, {517, 404, 352, 88, 467}, {501, 392, 338, 37, 449}, {504,
                393, 339, 40, 452}, {554, 422, 373, 180, 490}, {552, 420, 371,
                174, 484}, {526, 411, 358, 124, 479}, {551, 409, 359, 129, 
               472}, {553, 421, 372, 177, 487}}]}]}, {}, {}, {}, {}}, {
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0MtNAmEYhtFBFBBvVCCxAK0ACzBCTNwJOxew0wSWAlagFWgFWgHagOJd
vGyJDRhDiLeF50tcHJ55F/PPMEvbu5s7qSRJtphyEdcpPx9aoMi5vaKrlOnb
NW3Q4sXe10OOebNP9YwxWftS0/oT93PFnn2tN9zStu/0ngc69qMOeKJrP8fz
+CRnv+qk/uoFPd7tEz3igKHd1Sb1OMuu6jqluM9e1kVGZOwFndBvnWeODXtW
Z8hTsafjPeI/xnl2Jr5jvBNrdjrO4ev/+/4B1u0rmw==
             "]], 
            Line3DBox[{301, 271, 309, 286, 293, 439, 292, 548, 294, 265, 310, 
             272, 303, 304, 305, 266, 315, 277, 306, 307, 308, 267, 298, 547, 
             280, 442, 297, 268, 320, 282, 319, 283, 321, 269, 323, 284, 322, 
             285, 324, 270, 300, 440, 281, 549, 299, 291, 318, 279, 316, 278, 
             317, 290, 314, 276, 312, 275, 313, 289, 296, 546, 274, 441, 295, 
             288, 328, 327, 302, 273, 311, 287, 326, 325, 301}]}, {
            Line3DBox[{444, 497, 443, 498, 445, 391, 446, 499, 447, 500, 448, 
             555, 501, 449, 502, 450, 503, 451, 556, 504, 452, 505, 453, 506, 
             454, 557, 507, 455, 508, 456, 509, 457}], 
            Line3DBox[{459, 510, 458, 511, 460, 550, 560, 461, 512, 462, 513, 
             463, 539, 542, 548}], 
            Line3DBox[{469, 519, 468, 518, 467, 517, 558, 466, 516, 465, 515, 
             464, 514, 543, 546}], 
            Line3DBox[{471, 520, 470, 521, 472, 551, 561, 473, 522, 474, 523, 
             475, 540, 544, 547}], 
            Line3DBox[{481, 528, 480, 527, 479, 526, 559, 478, 525, 477, 524, 
             476, 541, 545, 549}], 
            Line3DBox[{483, 529, 482, 530, 484, 552, 562, 485, 531, 486, 532, 
             487, 553, 563, 488, 533, 489, 534, 490, 554, 564, 491, 535, 492, 
             536, 493, 423, 494, 537, 495, 538, 496}]}, {
            Line3DBox[{329, 383, 330, 387, 337, 391, 341, 395, 345, 399, 349, 
             560, 403, 353, 405, 355, 407, 357, 561, 409, 359, 412, 363, 416, 
             367, 562, 420, 371, 424, 375, 428, 379}], 
            Line3DBox[{331, 384, 332, 388, 338, 392, 555, 342, 396, 346, 400, 
             350, 432, 436, 439}], 
            Line3DBox[{333, 385, 334, 389, 339, 393, 556, 343, 397, 347, 401, 
             351, 433, 437, 441}], 
            Line3DBox[{335, 386, 336, 390, 340, 394, 557, 344, 398, 348, 402, 
             352, 404, 558, 354, 406, 356, 408, 358, 411, 559, 362, 415, 366, 
             419, 370, 423, 374, 427, 378, 431, 382}], 
            Line3DBox[{380, 429, 376, 425, 372, 421, 563, 368, 417, 364, 413, 
             360, 410, 438, 442}], 
            Line3DBox[{381, 430, 377, 426, 373, 422, 564, 369, 418, 365, 414, 
             361, 434, 435, 440}]}, {}, {}}},
         VertexNormals->CompressedData["
1:eJztyMEJwCAURMGPqcQeck8PKUHwbAsp2RLMSTANBGTeYRcml3bXFBHnO0fM
nvX7xTnnnHPOOeecc84555xzzjnnnP/gnzjnnHPOOeecc84555zv7gMVQOWe

          "]], GraphicsComplex3DBox[CompressedData["
1:eJx12LGqFUcAgOGLvkdIJK+QNicWggmBQEgjBAshtlbpbATTWNhfSFKkD6kM
IsqAIFGwS2HtA4jaCHaRe/yz7DfMhcMyH3tnZ//l7L3MZ9dufP/TuZOTk/cf
Puc/fG598+WPp6fPRseTs583h/vvrry8+vbJ5K//+Pn6518/nvzb3y+8+Pfi
o8kfnM1zb/Lvzs7/c/Ifzvy3yY/H2w/1r47nH/RLx/knv3dcz+SXj+uf/NXx
fif/+9hn8o/jlY+62lmvs15nvc56nfU663XW66zXWa+zXme9znqd9TovfNTP
znpjvc56nfU663XW66zXWa+zXme9znqd9TrrdV74qJOd9X5fb6zXWa+zXme9
znqd9TrrddbrrNdZr7Ne54WPethZr7PevHpjvc56nfU663XW66zXWa+zXme9
znqdFz66bzvrddbrrHc9vbFeZ73Oep31Out11uus11mvs17nhY/uz856nfU6
63XWW4feWK+zXme9znqd9TrrddbrrNd54aP7sLO+f79vvn8fbb7//my+f96b
79e3+X68eZ31Out11uus11mvs17nhY/9erfOep31Out11uus11lv3Xpjvc56
nfU663XW66zXeeFj//y3znqd9TrrddbrrNdZr7Pe/eiN9TrrddbrrNdZr/PC
x/77tHXW66zXWa+zXme9znqd9Trr3afeWK+zXme9znqdFz7276ets15nvc56
nfU663XW66zXWa+z3v3rjfU663XW67zwsX/fb531Out11uus11mvs15nvc56
nfU663XRG+t11uu88LH/+7l11uus11mvs15nvc56nfU663XW66zXWa+X3liv
88LH/v+Rab9u6qyzXzd11tmvmzrrddbZr5s66+zXTZ119uumzjr7df/7r58+
/+Tmk39GR/vrH8eHxfmTM//0fHXmn3y1fvchOX9az6qP1737xS+P7vz1dHTE
DwvvfOc56K1vNb/r77zV+hfXnfpw/vTcV+v3uv8B6K5rWA==
         "], {{
           {RGBColor[0, 0, 1], EdgeForm[None], 
            GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
              
              "]]]}, {}, {}, {}, {}}, 
          {GrayLevel[0], 
           Line3DBox[{246, 1, 242, 227, 16, 31, 46, 61, 76, 91, 106, 121, 136,
             151, 166, 181, 196, 231, 248, 211, 244, 236, 212, 213, 214, 215, 
            216, 217, 218, 219, 220, 221, 222, 223, 224, 233, 249, 225, 245, 
            237, 210, 195, 180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 
            229, 247, 15, 243, 235, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
            2, 234, 246}]}},
         VertexNormals->CompressedData["
1:eJztyLEJACEURMGPVmIl9nAlCBdfC5ZsanZGgtjCLDwWprTveVNEzFWOvX7+
qJxzzjnnnHPOOeecc845v/0H/ZUifQ==
          "]]},
       BoxRatios->{1, 1, 0.4},
       Boxed->False,
       ImageSize->Scaled[1.],
       Method->{"RotationControl" -> "Globe"},
       PlotRange->{{-1, 1}, {-1, 1}, {0., 2.}},
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}],
      StripOnInput->False], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
3eYJX3uN35MTmu6uvG6f9g8c96fQP/Cd0h79Ay9Qa1n+v/wzzMFcfyVJ8Yeq
TyvUsP8e4y92EPa62f4XT3+aP1PpAd74kUJnnyu7n+br3Ld1z9dp755vnG0u
/YMe4AeqtPh7cIsM89zaUmnZ2cgnRNgVHfr1bvEy0xlhvw5M7tPWfz/RGWHX
v9l2b5WzTKdz79VNZ4TdIO3ddEbYxdK/m84IO6hStTZLc/zqKu66VjtwUZfC
CUfTzcRqp6Ozs537qonTn/6y/LJEpR+4qb545ZCVDv3A79ZbvOKPhgeUfpV7
uWcK+rk96Af+ovQP+oG/cXRWnWHbMzlPYjqX7nvnf5USmf8G/D/i60fxgcIH
WhfjsS7GY12Mx7oYj3UxHutipo3ddLTv+X1Ef5yJblN8bvjYBJZn4yHPxkOe
jYc8Gw95NpBn2tfGY18bj31tPPa18djXBvua9JLx0EvGQy8Z6CXSh8ZDHxro
Q/RT5cMmOz/JwR/JPf/drP3wPUT0k3Uk85ccPWzeyo1fHD08SPR2fmofGDX6
ZIDf0Tx6Plz0cx2iE3mFlaebvh98I0X7/8NDbyNvMaf4V/PaNk8n+vPq4QWS
F3mvVL2hTT5x1veyh56snBsPxttJheYk/34pU/nWXuLIW8d+rdxikyPPRSXv
0eb63xezqqWqXMXmxkmxdn3qLw9ue8qR5yseeq9Dbv+bbePFw9Ys3OvI83cS
7xbd3iLqzT8ceX5Qxm2wuEbnFUP2qX47LnFY/lX9Zz57N171wFCJu7dcCj1e
o6mjB/Dzq9JVLoy9uJ/0Ww5fSb8VWOHrH/SDzpsSN9cIjq0VMsfRAyNzx/3a
trxUs2T5GZlK5/ovSz+X5fe96j/QeULi7OrSD+jLlDjbfd8/OPqCh77CT8wL
dPaRuHyr8AF0hubyeZUpdKhnweWvOnq46Jxvy4fcExeAngDfehmsF+j53UNf
xfjkwWwQeQA9+Nm49/g9W3o662tz8znbzJEz5/x++9XRV4/75NNAPjFufw99
9Zwv/2fK7Pw6od4ZR18VkjzBqWtnxw9Z5ugr/Hzyj6PDL/ZP0/4veugryRea
V59f98h7uxx9FSN5izeOlvlpVvO92s8a0Ut1SQ9IHtFUnVL7SErZ3drP5XJp
Uy7m+JUlc+/rRZF+zjKFSf/E11tuP8k6Ytbl5tM2q/yvz37wQsA9fi/sZrFX
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
7L/kf/4Pl5MbHw==
         "], {{
           {RGBColor[0, 0, 1], EdgeForm[None], 
            GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
4/8fSJmTQQ==
               "]], Polygon3DBox[CompressedData["
1:eJwtmwf811MXx7/r3n/SpCg7RIUSZSQqlZQGyV4J2bI9yEyF7JEthEI05Omx
KUVGqIwkJSGbMpLwfN597uvV7XfOvfe77z3ncz7n/JsNGtL/jCLLspvLLKv0
e6OUv/U7I8+ytyW3iFn2keSodnfIsonq20fjvfR7pw4YquMGSF+udonkLdTu
YFzzn9GcsTrmbOmbau5GNVk2Sr9t1b+l+u7V7/Oa315zW0seqbH2ut5y6QdL
/lTy4zr+fM3dQvrGOv5eblJz99fPPZJf1vEdcp/zWum7S19Pej/pYyTnOsdo
6S019q/kw9TXiPNr/GHJ96mt1rk2Ut9Tkt/TvP7Sv9H4R5o/SX2bauxNtVHq
25ZrSL5Ec7aRPFhz2qt/lPRndK8Dpe8ovan0xzX+tvoO1vz6khdq7B6dr17u
e+ReW6lvgeR1uEfJW6u9J/kNHT9CxzaSPll6e55bz3+Gjlkgsbb6pvIt1P8W
966+yRq7Wcccof526v9Bx76v3wM19q36PpY+T/oR0n+UvkD6FWpfSb9Lx/4o
ubnaXJ6XPp1rX81/V/rrmd/XlRr/On3rnySfqd+F0m9T20RyW7Wjde5neD4d
u7PmLON49eW6/6vV9730izJ/7xc0fxfpP6gdJn0M30ljN6n/Nx17uPRdNXZx
5vF1dE8XSt5b44u4X/3eLX2p2nO6xhvMl/w5a0vjn7L+JNfXvM+k7672k863
seYs1tgCzf+Fd63xFRobqL5l0i+UPkP6dB27QvoDar9K/kXz95Y8QXItPc+V
mveD9P/qnB00doZaXY3VU2uksR3Uxmj8II1/JnlC9No/RvOa6/iP9fuT9Ks0
9ovGRur3V+mHa/5SyZfpfmok3yH5aY0frfkrpLfhe+gabdS3hPWu/pWSZ2p+
X+nzNX+m9Fel7ye90Phr0vdU+036Njp+mcYGSV8pfSvpx0o+UPO+zL0nmkje
Xue5X/KB6vtU8v6a00DXPVtjr7DWOZ/G+6brH65zLpJ+tua+nL4f37aJ+kbr
uDPV10O/t6n/Wck7qS3V+HiNz9Gx/dX/hfRV0g+QfLzG22n+COlTNH575eNX
a84gyZ01/qfkfdXWlfyG5uwvOWjsdelv6beDjv1Sx7zIeg/ea1eq/3/Se+t3
kfTemlNKPjR4PbOuX9L4AWrr69jzNfaq5BP1u0bz+2a2b6y/g9hfapdKvk19
jSU/q/au5EMq27P62Fjp96htIfk79c2VfHTwfv5e8vc6fz2d44rM34Q1wn7v
xXpWO7/0e+X93q62meTGpd9NJ81/TfIGaiOld5Y+U/KePKfkn9V3jfQG7GHJ
HdU3XfL6asMxqdJvlbxr6W9xpPRlpfcB++Ee7J3kprrHFzX2J3uetaXzfyB9
F9YP9j/aVj4pfbjGe/MeJVfqu13yzmoPs5elf87+YI9K/lB90zR/rN7DDpJ/
Vt/Hkk8N3l+LNPdnzV2XPSE9y+2zOvFdJE/kmaQXpe3DP/gyyeuoXSr5BbUW
rGedY6HmfyB9O8kD1PeV9LPYw5r7mq75R+Z39rvkc9XXU/oStfNKFkmW/Ye5
alvp2HY6xxTuXf1f8izq+z2961+j/VVvnedfne9kyZuxRyVfiw3Vs12vsb8k
X4/NlfyExs/j+qX9X+dqrdnP1qh1kXxd6fk8816V9+/OhW1CR8kbY085p/Tj
K9tbfOuGrJnkv27LbQOPkBx1zBjJO/ON0vrDPuFTX5H8YGX/jJ8ua7x+sBV7
qO9Vyc00PlLn7aJ2k+TAM2vsGs3pqecr1U5i/eH3dPzX+j1TY8ep73t8SOnx
yerbU/K90fjhPclLJH9Xei7PzLM/q9ZQ8hBsseQbWC+5v+FbkvdSXy2Nt8n9
TW5S346Sv1Z7R/L6+HSurTnrSe6nVh+7xLvQ/f1T+l101Zx/sd18D94ne0Xj
Q6WfgJ+RXiP97dK2Z2hu+/GanreP5HmsvRrjIWxF79zPxP7cUfpe0mewXnle
yc+pb4GO3ai0f+nJ/fLONX635GHqa4ztkj42N944UPow6WdI/5W9res1xEbw
bTS+P3sbHy39N96bxh/QPZ4mfaX0+jXGG/WlL9AzNZM+VfqjhX3o85r73+T/
wQFbaHxGYd9Uo9/fCtuLUzT3CPV9kXzUofqdldl3vaDWI/cz7Sf5BrVDdNwG
6usheWqw7eKdHCB5GpivsM1+Vdd8Rm1ryX+A62psswdLnpvZln+quePVxoE5
8EXqu5Lz67h1NX+DaCyyEhursSXqP0p6I/3WqbG/HayxQ9W3hPOC4dLarKvx
16X3A5toTjPJrwRj2z7SN5K8XPOOlX4ue1TXfVl9t2T+doujfT6+/0r8U2W8
cKzGB+S2aR+q73Dplyf7hn08QfohGl+MPdb4FPyZzn1K8sfH8K74ZglfDJTe
X/pCyW8FX49rbCf5zWDfzZyWkmdpznX4EvX9Lbm2rvmI5J107kZ63jrSx2MP
sFVpP1yQG5M+onvYpLKtYg930NhZ7DHwkvpy1or0g6VfnDDH8uD9wT5pXGM8
dTx4R331wD7Bz4svqK3xG3X9oZpTW2MbSP9X46ewF7m29Kj+S3Nfg2v9zfuW
fpPalhr7SH1HY1sTBvg2WKbvRHwJe0Z6XY1tqPN9E3yvnO8YyTN1neE8K2uO
fa++q/S7seY31fw/pF+Nb1bfu8F4fgL2Xn1NNedn9Y2QvJ7kJpq/Kqx1Gdkb
xFV6ti+lPCZ9ZFqDD0fvH3wt63Uj9Y0C26h9U/o8IxI+Yn+dGx2nXYdd0/wf
eW/SR0jfXAOPRtvjZile4p3wbtphY5L/uhlfr9ZcY125RuY+/Bl2Dft2vfpe
lzwKHJf7mcGDYFyw7jS1PSr719tz27BWldcN6+czHT8e31kaazMH/0scRjyG
DyJ+qq/7nSD5S82px7vA50h/QG07jf9Z2tZh89pIPwT8rPu7VPKmNV63rN8G
fDPerdog/GjuGIhn4FkuSPa8gY5/UvJo9W0cHFcRX7GmWmi8Ld8k95pmbbN+
L0z6i5KPDb7Xx0vHV6xP3uVU9X0QvK5YXyen9cN6Y62z5hexd0pjlem5/fkr
hd8nGGeF5Br1XQRuzIzhiT/5bMR4xHqtgvETtuGL6H3CfsEmgM/BC9OTvwRb
rCP9irT+2RsD1F7HV4LxwGvB+B5b8rnOV0vzL9P4oer7UH27SZ+a2wbtIvkY
zWmT8MR41oL0x6TvLv1l6deAv/Gz2BTJ56ivYWEfSMzwVLStB5vib/+jvsbY
a7ULK2MwsNh20q+SflZl/8waYC0MqzzWqfAewB4R+zaRfLHke0vHqptLH1p5
nbBe+KY7Sj4dv8D+yIy/z9c9NtfvZZxX93Nw9PrbnnddY1/TEh5E7Qr1/a3f
7dXa5sZoJ2v+HtJv0FgbzT9F+jDps9P+5H1xPa7bWvpp+q0FrtX1VxXGZLxL
3uk1Gju1sm8lBry6tI3F1sJBEN8/qbGumTHedZp7dHT8TBy9g86/Wv1DNL47
e1jjNxIjpXseXhmjgdV2IKaqHE+2Bu9Iv0XykWrdCus3S75W5+1YOEYjHjss
ev10xRel5+VbbKe+1XqXLxdeay2kP4PNj14/rKOixvfLtRtozkOV8eqtmTEC
zzOZ87L2NOdtsITaNpLb8Q4kj6scP70PBpN+lForyR3BIJKPjP5efDewwiS+
K3tTfW9Jf0q/3cF+YPvKeBH8DoYESz4VzDcQq86Oft5tJbdnTcHFBPM/v+u4
N6PXA3i9de73yzpiPdXNzJ+dHv0+ea9ziBUqxzcfqe8d6fsHY5kTdL4PeB79
vi096Hw9NXeh5o1Re0DtfbBZadvaHJtTet2x/gbntv9vqvXAV6jvw2g8CR7p
npuzOF76+9JrSX9C+h6a8wv+IN3fGWrdC2Ou4yQPUduH9c49Su6q+50u+T78
X3Q8vm9ak8T0rBnWDmuK+A3eB/7naLU/JX9emV+AZ9hK6+GgaC6D2DXUmHPZ
tDSfBBczIjpeJdaAvwGHg8fBMGAZOI4t9XtnZu4DjmPz0vEx3AccwLal41e4
gSXB+Lhh+n7zg9/dqWq1gjmjiWmNwCW9r75jNNafbwA3pN8phd8x7/qr0s+G
T8e3f6exZwtzbkfgK9TOzR0PPR08H/x5Wub3AS4Hn8OPvERMERxf4pvBO69X
fverU/yxsDK2w/duLn20fnsW3qPs1bul71c45oQf/Z/O10XzlxSOV9oHx1rE
XMRmxA3ED8RUxFaPBMdLr6ntKnlFafwFxgBrfB2MHR9VGxBsz57PfQ93VI4r
iC82yMx/fKI5Q3JjjLEa/zD4Xa/LGpL+XPDa5B6bSn4u7dFuYIZozuZp6ftm
5nK2DObTwLpLNXYBuFXj/TJzNPgAfAExM/E07wcuqVa6PzA0WPqSwpzsgdH+
Bwy+lc5dVfbvazkhyb3U5kuel/bj4sr8FDzVlrpIH/0OAr/m5uDQ4ePw6fh2
9jPH7qP2Zmn/0kz9e3JPkmfhowu/Q/wBnNhAzZuTmSuD32F/wCnCLe4dzT/B
Q22r639WOX5pWBlvfls6ftH0tfgRDq6pfm/MzM29E8y9cMyOwRzXSdxjZu7r
keh4hrgGvAvndV5lewkXBud3XGX+DS4QzgHu4ajKfCbXH5TiA2L9EypzEdgI
+Dr8t/5l2+f27z8wB6yeOX7qofNx83AlLXS++8u1VE+2if6bWNpGYUvhh7Bd
cyrvVXIRbTX/Yf2+mJkjWg9sX5rfhtP/X+F8Bfw1+5N9ellp7g4OD37rG53z
PfW/LH1v9iI4S/J+mfk2OB54BfiFxyV/oevVybyn2FtwFsT5xPszpHeLtk1w
At0l76t2V+Zn7BmNucBexHPfwZWofafho/B3kidUjuWxWfDVrHnWPvHeJMnL
ozE2/FYnYim1b8B22G/J1xL/4Us1v1n0nmPv5aX5c47h2E3UNgALanxaZg6t
tvTapWME+K4O0vfBr/Iu1O5gHQdznXD2cPfMYe766f1/X9k342tW63p9gv0f
PN986b+m78eeZ++P0vgAfKPud8vo++H9duI7Sj8++N38XDj/sHUwNw+HDpe+
jfQHM3P6cPvw+sjgb/j7fyvHesuSf4FzJW+wNDMXC9+3OLO9we5cUJp7hYMl
v0H+hLXEmhpEbKs2OzOnBz6ZVlnH5sOvE098Kn2vzPgTTgxfsFnu/MqXlWWO
4VxfYdcTPu/Fu5X+Dv5RrVtwH2NgMPDIP5XXLs/As3SvzG+zn0/U/d4R7YvJ
FYAv/qj8LOSO/oqOIYgl4Bsekrx9cOwLhwmX2Vb645l9FtxJk+DcARgALLAM
/Fv6G7ULzmPwLY5TW1nYh+HLiJGIlVqrPZo5RiIeGhfNxZ5aGm8fGcy1wokf
LHlV5b23MNmnPytz9YuSPSO/xbdanPztk9JnZOa0Wc98U77tgHS+r8GPud9p
b4yOrn+17nM37Iv0g8AexFzSn6qMoeCXiG/w9+Tw8Bv4jzbBOcLJCQ+QO/wz
2meA3+6KzrFNK7xmWDvsOXJXzyT/B0c0R/rgwtwR+21fteeTvwTfEAcSD14X
bQOxhXAO5Ddnqe/55L/mVsY78B5wHtdH77HjNO+9zHuP/QXXSAxObvTJ0rnP
Y3WOCaUxRcfKfNjC5OPwdeD/ttE53M0q411yuzRkONc8mHOAe9g5d+6Whkz+
I0ger7aT9HrSq2CfBccBf4gvu059D5XmPOE+ifGJ4dg/46M5G2Js1ugOwRgS
LAk/8bv0rWvM6eNfHgzmsOAkDtfz3ST9HuZo7CMdPzKY04TbJB98fTDmB/uD
x66KjsfIb52Yme8khrhLv5tnji3g+OH6ya+cGex/sH3d8TPROUxymU+rb/dg
PhR8PxBbVeOcGbgB/EAuDRvXrbQNxvbhbw6qzF+Ta9gl4bc6yT7jr/qWzjk9
WjkfMsnLem1+gHvoVdoncm/s9zqV+chWaf92TJzEzsE5UGwmNrV5MJ4l78Ge
ZG92q1wLAD45pnTOkj3/o/QzNH4wmFxyK+6fdx7tW8jV/B4dwxDLEJO9RLwA
Ps+ce/ojms9lDmPwCbdIbpE5d7RK8rdqt4AJdA+PVI5BiEU4x9XR/vGiynwC
WBGOBh4IPgjuhhw3ue51pQ8L9iHksqlfwLfAwcLLws/CzcKh4385/zyd85fC
eT4wA3winAExH/USG+vYS4NtNTaGeonz1JqCr3Pny14K5vaJeeGPsclr87iZ
Y0HsI76KmgFqBz6o7OvhaOCfuSfuDQwMXiUHADeyd+78GXif3MUNmfE08Qr8
DHw6+BmOFa4VDDg2eo+z1x/OzBd/UtkXjM3MF5PjJm4Eo++l+c+yBnKvYfh8
chxbl+aLyH3UVTs9955/QvL0YNt1YmE89FjlvUXMszDYnlAbMlzja6TP0zUe
KowRplfGoGBRTDVcLHwqXCsx2XvBMRmxGZzL6oR34OLghP8J5qPIRcKp/hls
P9qV5uTg5ojnr9L4WdgfyY0rc8Dwd78G56ThXuFgfwn2hydl5oh/DOaA4YLJ
OZB7+Knyt+hCDBCcP8P28U4+CuY84D7O1PyPg3MwPUrbQ3IzxKTEptzT5PQ+
qX1on47H/4HlwRSHBcfExMbk46h1wD+TWwRPgEVGSx9YeA2yFtcNrr0gRttP
x56odk5mDH5SNOdyd2GOBS4GjoKcdbPM3AX+EdwH/usenKOEB4MPa5/wMLmQ
SQkPrK92eWYOrHf0+92tNKbg/a0M5sKfUzs3mNMhh078CNdDDoYcIPaM3Aw5
m/UrfwPwCJw53Dn5at7/Z8mXjMsc35BzJMbgnoh38YdjEz8xGqwebaewVy/o
2A2jYzdiuHOCa2ampPgTrPGJ9FY63334b8mzg+sNLtacFsl/1Cn9zHBJk4Kx
BTVBjYLt1YalvxH4CTzRvjQmYr//rGt0zuyj8FXYaGw1OR1yO3AI4MdzpH8R
jL/hmojZH5U8LvhbnJ/87cPBscp5yd+Swy1Lr0nWJj4SX3l28t934J8z5+ju
DK6ZqimNycEL8BGsbWqe4INWVvYF1ABsy7sM9pXk0McE4/t3M+cT4VPuDeYG
F6u1jvafw0vjRfDmxMrfYmZaX5tEcxFwanC1i7AZmTk49iv5QXKp1IjAV4EX
wb6f8AwYDT1vSziXwrVU5B+prWqc+/nIQZKLJAc6Ij0/Y4dq/o2Sbw223XBW
cFfUMD1Rek9R2wTHDddNTRf1DkvVmuv8e6bv87aO2SMz59Yv+P20ys0hwCUM
kd5Scl3i4WCOtE3pdwR3CicGN0aOdHLC57wrapLOSv66demYaEE6H1gEzHJf
MMcO1049SL8ULxEbEiMODsarT5eOObaJxrxgX2o2Ogf7XHwv9RtDg3OEa0pz
QOQOyekR0JMjIVdCzRu1b9RcYY/I2ZK7PRfuL30/bO0c/IPmztU5HizM+b4i
fZbaeRqbnzkfPL+ybyEnQXwMRgArUK9ycTAGAAsQk3YMxtPkXvGx90RjDrAH
JMJF+KZgrFIHewq+CF4bE6WfEhw/8i6JwU8O9vdw2ujE5uCdYaXfIfEm+K5z
6T1I/Mv3Z2+SMyd3TsxL7Avfenkw5gB7wEEQny+vvDeo8SJfTnwK9wnnQD7y
H/BS6ZwK/guMAlah5g1+YI3Gryhd08fzENMR21EfeGXw/gabUxsBNoYfJS9L
znNUdE6C3AT1SLtG2+s6hTlw7Bc5HvITdZL9nlqZi6LmhHqxljWuc6PerW+0
D8OX1S7sX/A3yGD+x4Lzp9hqOK9e6fqHVs5/kCshh08ufzed40X1/yfaF+GD
8EUXRGNvfBS+ako0P47NwHZQf0CtHPVIt0bzj8RS1AA1DD4ndh5enWtRswl+
IsfE/oCfJDaDg4UPhq/JC9cAzJJ+eHQuiBwD+YbLomM/fAS+gvoeYj9yFuQu
qNegtokcFLnLNZW5tO6ZuStyKKNL5xjINYAn965c74O9I6dTlc6ZkDv5qzLX
SQ0e/BuYi/3xT25+Cb4JmRpA+HA4lUGlbTC2GCBFLdIBmeNF+DZqG/LER/WJ
/pZ8Y741HNxJlecwFz6RGjRi8mui+UNq5eAU7oyOQfg+cGjEJsSTcNXki5uk
+4c77KY571R+PnJXYJx6urdvK2NVMCu5xW8qrwVqUqhNOTv4XPhofPWOpetM
qfGg1gP/Qq3H1GQ/2d/U+pDjxf5vFI3VqXG+IJgTgxuD4yZ/2yU6VwnH2jWa
g4KLgiOnPqdhdC6BGiJqicAsYBds+pjkL8jtUSNHrRycBtwGnC/cL/XC2GJy
KuRWqG+kFo+cC7kX+FdqDcjd7Z74YPIqXXXO26Lri8F6V2TGEy9In1S4Jns2
tjM6FgRDgaX+rvytyQmcnfBeh8I5I3KX84L5QPrAf+Qw/yqMCU9O/p1vRc3l
mel8vdL13k3+Giw4v/BehIO9M805S/pSyetkzkGeGp0TJW9LzpDc4dOV80Xk
yE6LtsHY4qdy12exX6j1pgYT/pmYjtgOzh7ufkLw3q5Vuv4JvhduFxtLnAcf
Njt3jvDO0jYRX/xV4r+wmfiCu0vbUupLqJe9N3M9wNz0/n4ozLXgg/BF25Xm
bqnzgtslB7FV6RiHWGduaS74/cQFkwNvVjofzt6FE0an/rxv4RoLai3IZ/Cs
cMSc7+PEDZ+kvk+IRQtjBXwY/No50diD2hPqS/AxcD2LC/sefPYssFCKn3+v
XM8It0luBf7n9Mz3QP07PoZYiToUfM856muSmz+hnuO3yt+eHBm5stlpfy4t
vBaJ/1tmxhDwaO+m+cs1Pj3ZZnwd9oh6UfiEN3LbP+wg+Rdq6ajRuKg0JiH/
AqcGVulXer3h8+EBwADE2wcm/gAfD3bZL/ENR5TmS8E3U0rXB4D1+BsA/hZg
SGms+BD2qTQfPlz6eqW5depN4S/wIfByewRjjV6J39ktmNuBs4G7of4U/gcf
As9HfS3cwavgmdL81kF61h74XM3vEpxr4FngNuDXN83M13CNC6PfJzEKscqA
6NoGaiyp1+yiOY0y80XcA/nULQrXz8zEz0djK2LqeWm/UAtETg5/eFE0FwMG
A4vhH+AS2V/9o7mV6ZnjUfiP01mTmfcU/DI12SMyYwCwwMjoep+e6f2Rr6Y2
hzXEWqIeDW5hp9L1XdS3wXU8mLm+hPo6uJHBlfNbxJDEknBUcFXk0MilrcrN
ob2VdNYQfBQ1Qzw77+Bk/Gblb4v9xQ5TjwyfNEOtfxqHfyam5vsTr2Fb65au
l+TvVciPX57570vIn5PP4B2cVtofYKuIAckvf5fwPjWM05I9vCvZMPz9sIS/
fyrMRVHDSP7/49x//4Edwh4NylwPxP4Fe7MG9gmO56m9JqdO/PFD5WN55ppo
+wb2Y48TbzBOrpG/MeFvTcgvUMswP+F94hly9OSjbw/mx8FO/M0Pf/tzYXAt
NWsMfL2scn0stYDUi5Lzo06denVygeS7iX34GwP+1qBDNHfAOyRf91g0f8he
B/sQj1JbDCdRJ5jP3bCyDyXeWq12ZOEaf2r9V1T+9nzz54P/HuOP3JzUsyl+
otaE9bRtcH4ZLow58FfwLeSoyVntFXx/5BLhm6YkG4othWNalfA3tlC3kF0d
jDeoqeJ7E/s3TjXA5CQejI6PqEnrJP2B6Pzp+QmzTYzO4VPDQAxNLI1N/G9h
H4OtJF5aVTqmJbbFp5GjZ8+yd7HvxBKssb7BfAh1hHAoK4LrJ6jZJyd0reQf
4Sxyx1RfBfNT3Bs199TeE4MTi1MjRn0s8+HaqZGnVp74n5o9/t6pgcb7B8dm
nJP6eeJraujwl5sF7xlqGuA82EvkD/avzAkQ7/L3COSW4G+or4c/xIfi7zYJ
5sDhwomJiV9ZY6w16k+pVWaNs9ap0SJ/jv0nFmRPkx+DUx+Y1kinaO6d3CSY
aA6+U32P5/bx1IfACcMN00f9IePUjlCTSG0iNQ7UOvQpnC+Ag4eLh2+hVoKa
QGoDx+X++5M1aQ9Tz3dacPx+SWV7hG1mPTOXGklqbclPjCu9xtGpryA3QU0j
8TU2dUhljDglPd+xleulyCWA16gBov6zCK4JojaIb0w9JPmT1pXrJ4k/Zib7
iM2Bb6a+hdotQmT4VGwutQXUOGOLwf/k4okZ9omu7+dvw/ibAf52oNL4izp4
qPrqB/PLDTT/ssK1veQ3qd3ib8r42zJqUKgxhaOGq74/mnuEo4Org+8h9qEm
i/qTXaJj0y0y84H4DGoeqWnGl8B3wWXxNzbtk/8n1seHdk7HwyXyN2e7RfMF
2LI+yd9Sz0BdIpj/yeh80NjSHA7x+/8BZ3wXeA==
               "]], 
              Polygon3DBox[CompressedData["
1:eJwt1XmQz3UYB/Df+h0YR6ppSAdJo4komlqpXGEmrCwiRyPFUG5hKTe5kqty
dKHGLRZJjsWu2Q4xZJ1djlKLclQ0E1uvz3z3j/d+nvf7eT/Pfn+fz/fzfO/q
MSCzf4lYLDYIkjDRn3Jpsdgu4qR4LDYQH5+KxS7iOVDI05PWhNYrEYu9CP/y
N8U30gvk+6gbRc+m9aN1oW1XO4HeHz9OPyTOUNdJ7k18NXRTMwea8m6wFkBb
nqO898Uj35/qr6rZzXOz/GV8Ff0ZcUeoy7+c9jGU59vL14G+kmcQ7TKtPP6Q
fvfjh8TP0kZYR8I6vqr0mvKl8Db6fYHvFT/J94p1KKzlO2f9Uf+D4lxxHkwW
36S2LeziX03LVd9KnwO0avAGzwdhT8UXoAzfQZ7WtLvFubQB6jLwdDivdire
CR4J+56MziGcR23ee/BRMI22Ht8AC/iu8P/CsxIayH2D9+E7J/6Upw7UwP+m
n+RZCulyX+HHobu4jLUsLNHvZ+sxntesVaztaUfVDxQn9doOa/CLcCPPKbyz
Z78U9j2cq35reJ8XN1RbkT6Zlsf3D5zEt0JzNXvw7vAW3yQoJ94Jj8p9x5MT
9kvtr/rto7/L8wkM1HtQOCO+fOso2imeZbAcDuN71S5T+7C6Cjwf0SrDWtoM
WhPabfgqvnr6vI4n6OXxfvS5+Ht6VePvi7cK74f4OZ5OMDf0oqWrzcFTcAM+
lH5A3UKowr9Un9G03/B1kA1H8AXW+dBG3Q6+/eLGqeie9VTzAqzBh+t5Pdwf
vgZQDy8NaeLHITv8Rnwh7xb8Univ9ErRxtL+EG+DrZCPr0hE+7uDryxMpCVK
Rs9fKfRKi873BFyhdeG/QKsf3lvYJ97Jt0TuHL5Zfg/eBa8IU8JvpeXTmuux
Rbw1EdW2sC7mqSy3SrwLdsKrqeiOfWbtGGaH/AC+W2Fq2AM4LL8YasqtC/eZ
73txmjgW+vJkwRGeJVCLnE0fFuYQvgg+hPV4B7VH5fvp3xvm05ZBLf6X4tF8
y+TZgeeEmSH3g9pNqWhPfw9xeF44hk+AUmF+8c6zPyXwTLhFPovWG5qHvYem
4va8u/2P0clob8IejZA7zr/ROgS+FE+Hr/WrGuYm70k1w9XeAdNoT0HpcK5Q
UY8rPPnJaJ4d5qkOt+Nz5eeE9yvMDT32hXeTPtJaMhHN6ff1Oks7Kz8mzAyY
EbRE9Nu/TUVnFc6sbiq683n0p/EH8U1qG9Ouq7sGi2iDoWW4CzwLwp3FC/lO
+x9ZPFVgeiq6H4XF+xn2NRc/k4zudx11tWE5bR70VDMOv5dvt7Uk33/iy/Re
/AXJ6MwLiu9XuGd78Ku8Z8R949HZh3egDj2DPoX2F20IbXAyik/QHpOrxFNk
Pa92WDw6g3AWhYnovPbLbxNvL/42hG9Ea/n9fBnW2bBS3cgwNz1fhVT03OH5
x4Z7Tn+Hdp2vOl5EbwdFeFbx3Z+JN+Krj48JZ4JvhswwN9QspT+g9yxaC74n
8HF8F0pE3+Twbe5Be5nWCJ+p5k64RluRjL6ns+nxMBPwrnzj5eeHd5reLRXN
2NPF8yvMsW14A95mPDOhKHxf8VnhzPFMyAvfAn3S6Q3j0QwLvyf8rvP0n4r3
IOxFZ3WzoR1P13g0U8JsmRNmQjyau2H+fk6rEe60Z24p7kF/G/8fHwM4jg==

               "]], 
              Polygon3DBox[{{1387, 896, 699, 700, 897, 1388}, {1345, 845, 658,
                659, 846, 1346}}]}]}, {}, {}, {}, {}}, {
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVHEch/G/phO5SRcaFVmCgq5EoWhZL0AtK29l3jLvMzWalo7mJXUU
RROqjZWlJN1eQ+u2LVuFm5a5EAQF8XMI5jfP9/me3zlnznCK2hO18YwQwnfz
MzOEGVNrbpqof3cihBo5Lt/ADZ7ODkEMfb4SeIAvzKHeJwzIg3iImYo5zOG3
8MiMyDF9Qs6Tb+NJ183VjfPH/Bx+0N2R8/UzfFAuwU39sq6Op3k9VuKKrkFe
ljsxFQvhD17nw7iGP+w8lP+aKv4U3+C63V+u28Xr+ShetPtW/q3v5i1yClfs
Vuo2eQ/vxH92n8tX9Nu8V+7FLbsFWSFMR+ebajOg/2avTf4qt0bkr1yjn0/x
L3hVNynv6Xv4hPwJL+vLo/+KPzD3TYXuo2Ol+jHeYZpNmb5Qt+7YM95uPuvu
4nn9a/2IfM9s61d1TfJLfSNew12/v0pekp/ge890YLeCL/J5POO8IXlfX8wX
5Gmcs3tal+RneTp6cXQpyNY/4rnyfPRs+kvuNczj/BTu8Fn5AiZ5vyyGodj/
9/UYuXRPOQ==
             "]]}, {
            Line3DBox[{1250, 1643, 1532, 1818, 1443, 1281, 1441, 1828, 486, 
             1442, 398, 536, 1147, 397, 448, 355, 1805, 1490, 568, 569, 1701, 
             1817, 1531}], Line3DBox[CompressedData["
1:eJwVz7kuRGEYBuCPzEatRSYxwhjXYYkoZibWmcYFcAW2ho5CYWt0qDEjERFx
G0rGMraWynOKJ+/7/f93Ts7JL62Ulzsios5PKuI4HbFNlRe6MxE92YgT2TB/
2xnVm3qFLn2WXjtnsuXsy05JH6FsPpVF9zMyR5ZPO0U5zKada1mjziILfNj5
kxvup3kwt2k6u5fvNPQ7+dgZcaXf6m9c6jfylXXPXpj3mEr+y9mQfqSvca6X
fN+87GfSWcvOoP7LIavO+uRc8q+Mm5/tFJJ7fYK0niFFlSf3ee8d0Lfcj7HD
Afvs8g8h6jHE
             "]], 
            Line3DBox[{1282, 1839, 1641, 1639, 1640, 1491, 1694, 1806, 1283, 
             1333, 1251, 1332, 1764, 1331, 1399, 1562, 1563, 1835, 1398, 1564,
              1335, 1445, 1588, 1765, 1706, 1444, 1284, 1448, 1707, 1756, 
             1589, 1447, 1285, 1450, 1819, 1702}], 
            Line3DBox[{1286, 1690, 1058, 1533, 1534, 1418, 1569, 1493, 1535, 
             1820, 1287, 1492, 1288, 1494, 1181, 1757, 1289, 1334, 1290, 1182,
              1766, 1336, 1400, 1337, 1781, 1183, 1341, 1446, 1342, 1807, 
             1184, 1611, 1291, 1449, 1292, 1795, 1185, 1495, 1293, 1451, 1294,
              1837, 1630, 1186, 1496, 1453, 1796, 1295, 1455, 1536}], 
            Line3DBox[{1296, 1791, 1537, 1419, 1570, 1497, 1538, 1667, 1808, 
             1452, 1297, 1498, 1187, 778, 1338, 1298, 1188, 1767, 1339, 1401, 
             1340, 1189, 1770, 1345, 1346, 1769, 1190, 1653, 1736, 1191, 1590,
              1592, 1591, 1838, 1631, 1192, 1612, 1299, 1454, 1737, 1668, 
             1193, 1499, 1669, 1809, 1456, 1300, 1632, 1194, 1500, 1758, 
             1670}], Line3DBox[{1301, 1539, 1420, 1771, 1571, 1195, 1501, 
             1502, 1457, 1738, 1504, 1593, 1503, 1196, 1671, 1768, 1343, 1302,
              1197, 1680, 1782, 1402, 1344, 1198, 853, 1349, 1199, 1714, 1654,
              1739, 1200, 1655, 1740, 1201, 1656, 1741, 1202, 1594, 1595, 
             1742, 1645, 1644, 1203, 1708, 1829, 1596, 1634, 1633, 1204, 1613,
              1614, 1833, 1458, 1636, 1646, 1635, 1205, 1810, 1505, 1303}], 
            Line3DBox[{1307, 1552, 1425, 1773, 1377, 1550, 1551, 1549, 1473, 
             1732, 1675, 1513, 1375, 1279, 1376, 1731, 1674, 1373, 1278, 1772,
              1374, 1366, 1372, 747, 1371, 1233, 1752, 1663, 1232, 1751, 1662,
              1730, 1231, 1277, 1650, 1649, 1841, 1230, 1276, 1617, 1729, 
             1711, 1229, 1275, 1616, 1728, 1709, 1601, 1603, 1602, 1831, 1472,
              1306, 1470, 1691, 1759, 1471}], 
            Line3DBox[{1310, 1792, 1556, 1426, 1386, 1554, 1555, 1553, 1480, 
             1735, 1677, 1514, 1383, 753, 1384, 1309, 1380, 1775, 1666, 1381, 
             1379, 1411, 1774, 1665, 1378, 1235, 1753, 1664, 1734, 1234, 1280,
              1618, 1606, 1832, 1607, 1609, 1608, 1478, 1308, 1801, 1476, 
             1605, 1604, 1477, 1733, 1676, 1474, 1475, 1760, 1692}], 
            Line3DBox[{1311, 1693, 1754, 1678, 1236, 1515, 1761, 1312, 1479, 
             1313, 1237, 1712, 1762, 1314, 1619, 1315, 1238, 1776, 1387, 1388,
              1788, 1239, 1389, 1390, 1777, 1240, 1316, 1382, 1317, 1778, 
             1241, 1318, 1385, 1319, 1794, 1557, 1436, 1582, 1516, 1558, 816, 
             1481, 1320}], 
            Line3DBox[{1327, 1755, 1484, 1326, 1245, 1517, 1815, 1325, 1393, 
             1324, 1244, 1780, 1392, 1412, 1391, 1437, 1584, 1779, 1583, 1395,
              1559, 1394, 1560, 1823, 1243, 1323, 1483, 1322, 1763, 1698, 
             1242, 1321, 1482, 1814, 1679}], 
            Line3DBox[{1416, 1790, 1529, 1417, 1330, 1413, 1568, 1651, 1789, 
             1528, 1488, 1489, 1440, 1530, 1642, 1840, 1652}], 
            Line3DBox[{1421, 1824, 1206, 1506, 1507, 1459, 1509, 1597, 1508, 
             1207, 1304, 1347, 1743, 1672, 1208, 1681, 1783, 1403, 1348, 1209,
              1682, 1784, 1404, 1350, 1210, 1657, 1744, 1212, 731, 1745, 1214,
              1658, 1746, 1216, 1659, 1747, 1218, 1357, 1748, 1686, 1220, 
             1687, 1749, 1360, 1221, 1621, 1797, 1713, 1460, 1361, 1222, 1710,
              1798, 1615, 1461, 1638, 1647, 1637, 1223, 1811, 1695}], 
            Line3DBox[{1424, 1822, 1548, 1274, 1600, 1547, 1469, 1512, 1813, 
             1697, 1369, 1273, 1370, 1727, 1673, 1367, 1272, 1368, 1726, 1688,
              1365, 1271, 1787, 1410, 1359, 1228, 1270, 1725, 1227, 740, 1226,
              1750, 1661, 1724, 1225, 1269, 1723, 1224, 1268, 1722, 1685, 
             1575, 1267, 1648, 1721, 1684, 1467, 1266, 1599, 1830, 1468, 1355,
              1465, 1265, 1800, 1598, 1466, 1305, 1464, 1799, 1660}], 
            Line3DBox[{1429, 1793, 1587, 1430, 1397, 1428, 1561, 1427, 1249, 
             1827, 1526, 1610, 1527, 1487, 1525, 1803, 1700}], 
            Line3DBox[{1519, 1802, 1699, 1485, 1328, 1246, 1816, 1520, 1521, 
             1486, 1586, 1585, 1826, 1247, 1438, 1439, 1396, 1523, 1522, 1804,
              1248, 1329, 1518, 1045, 1524}]}, {
            Line3DBox[{713, 1840, 652, 1155, 1156, 950, 1108, 1828, 715, 654, 
             830, 951, 1765, 1109, 717, 656, 839, 1807, 1011, 719, 660, 1736, 
             721, 666, 1740, 726, 673, 1746, 733, 1718, 681, 740, 690, 1752, 
             746, 696, 891, 921, 1774, 751, 701, 899, 1777, 900, 755, 705, 
             901, 1780, 905, 1085, 758, 708, 1043, 1804, 1044, 997, 998, 761, 
             711, 1793, 939}], 
            Line3DBox[{736, 1799, 968, 967, 1023, 1022, 677, 1825, 729, 1148, 
             924, 857, 932, 1096, 1824, 931}], 
            Line3DBox[{743, 974, 1759, 973, 794, 684, 1800, 503, 969, 465, 
             466, 1573, 286, 858, 372, 1597, 501, 408, 410, 930, 1771, 1095, 
             929}], Line3DBox[{762, 1165, 1051, 1817, 1000, 764, 1005, 1806, 
             1008, 1007, 829, 769, 1757, 834, 770, 911, 837, 1767, 842, 838, 
             663, 853, 916, 854, 670, 1744, 730, 1716, 678, 737, 1723, 687, 
             1176, 1841, 1177, 1178, 1179, 1180, 1129, 1832, 1128, 1144, 1145,
              1146, 1762, 987, 813, 990, 1035, 1036, 1763, 991, 819, 993, 
             1802, 1040, 822}], 
            Line3DBox[{766, 1060, 1058, 954, 1009, 953, 1012, 1808, 776, 1066,
              777, 1064, 841, 1768, 786, 849, 787, 915, 1783, 851, 860, 852, 
             1091, 1836, 918, 1092, 863, 971, 864, 1721, 1172, 1173, 1122, 
             1125, 1123, 1728, 1138, 1139, 801, 977, 802, 1733, 980, 1031, 
             981, 1754, 810, 984, 986}], 
            Line3DBox[{773, 957, 1796, 774, 958, 1013, 1809, 781, 960, 782, 
             1119, 1829, 1117, 1170, 1118, 676, 1749, 869, 1153, 870, 1720, 
             1154, 920, 1093, 871, 877, 872, 1726, 880, 796, 887, 797, 1731, 
             889, 806, 895, 807, 1735, 1029, 983, 1033, 816, 1081, 817}], 
            Line3DBox[{783, 1758, 961, 784, 962, 1135, 1833, 788, 1134, 789, 
             964, 1797, 1149, 873, 1067, 874, 1068, 1834, 875, 1069, 792, 879,
              793, 1727, 882, 798, 888, 799, 1732, 1026, 975, 1030, 808, 1077,
              1792, 809}], 
            Line3DBox[{818, 1814, 1034, 988, 812, 985, 1761, 811, 1032, 982, 
             804, 1801, 979, 803, 1143, 1142, 1729, 1141, 1140, 686, 1722, 
             866, 1099, 865, 919, 1715, 856, 862, 855, 1784, 917, 844, 850, 
             843, 1782, 913, 779, 840, 778, 835, 1059, 768, 1061, 1820, 767, 
             1010, 1006, 1055, 1166, 1839, 763}], 
            Line3DBox[{824, 1045, 709, 759, 1037, 1815, 820, 1038, 706, 756, 
             902, 1778, 814, 702, 752, 1775, 893, 892, 697, 747, 885, 884, 
             691, 1725, 741, 682, 1719, 734, 1747, 674, 727, 1741, 667, 722, 
             1133, 1838, 1112, 1161, 661, 1160, 1159, 955, 1795, 771, 657, 
             1111, 1110, 1756, 952, 765, 1157, 1167, 1054, 1818, 1053}], 
            Line3DBox[CompressedData["
1:eJwVzrEug2EUBuBTpC4BiUU7ugKd6GBTbd1BV8IFGBqbaJpKJARBR0OVThaD
RCINIjqoNLF16mIgTQwkHsOT9/3O+fL9/0xpo7ieiIgCp6MRl5wxxzFTYxG/
yYj2SESFK7NFs5bMMK1v8mBXZV5foGqXlbPjEWX5ZFf735sPvbcrn533yOkD
sxf9kEf9Vdbp6O/ynK7ely3e9IG8pqd/yBu2vPXjfCQ/nW9Z8v1lvsxzcttu
VQ7t7sjrKf9ZlAV27PflAWt8u3PPhJ52b0VOUnHvhCYXNPgDfEQyRA==
             "]], 
            Line3DBox[{937, 1076, 1773, 938, 890, 1028, 1100, 1027, 972, 1813,
              1024, 1025, 881, 1073, 1072, 1150, 1821, 1070, 1071, 1017, 1137,
              1136, 1798, 965, 790, 963, 1016, 1810, 1015}], 
            Line3DBox[{978, 1760, 976, 800, 693, 1127, 1831, 1126, 1124, 795, 
             1164, 685, 1121, 1830, 1120, 970, 861, 1097, 1098, 1785, 947, 
             946, 859, 791, 1743, 669, 723, 848, 785, 1738, 1014, 1115, 1063, 
             1062, 1065, 1791, 775}], 
            Line3DBox[{1018, 1811, 1019, 966, 1021, 1020, 1812, 1074, 933, 
             948, 934, 883, 936, 1075, 1822, 935}], 
            Line3DBox[{1046, 1803, 996, 823, 995, 1042, 1816, 1041, 994, 903, 
             992, 1084, 1823, 1083, 1082, 898, 989, 1776, 896, 699, 1734, 749,
              694, 1730, 744, 688, 1724, 738, 679, 1717, 731, 671, 1714, 724, 
             664, 847, 914, 1770, 845, 658, 833, 836, 1766, 831, 910, 827, 
             1764, 828, 1087, 1086, 908, 1003, 1805, 1004, 999, 1002, 1001, 
             1050, 1790, 928}], 
            Line3DBox[{1056, 1819, 1057, 1168, 1158, 772, 1837, 956, 1113, 
             1114, 662, 1737, 780, 959, 1162, 1163, 668, 1171, 1742, 1116, 
             1169, 728, 675, 1748, 867, 1152, 735, 1786, 683, 868, 876, 742, 
             1787, 692, 878, 886, 748, 1772, 698, 805, 894, 753, 703, 949, 
             815, 1794, 1080, 1078, 1079, 1130, 1039, 1755, 821}]}, {}, {}}},
         VertexNormals->CompressedData["
1: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
+Mx+SXIP2IV3B1M5zE4dfILylEqBkygnpv4t1A48ZM0jaOeCffVrtLOoY71T
uD4bnKPadIXGWUQ3mJflurQUTtT2HdUL6iW1Cvr5/MUMkrp5zifntgII7Iuo
bnZkkvJnCVHPlLuJzR6GqKwHxUNwsRLq7SS7R6q3lIhSHhW6/2qzZw9MdUgb
pvrwTNjCH/VjmmX5UT9P5npkmTYbZKdOO+4yQONEQbvX8exb+KnEnxFsxybe
8y3uv97IJtbnSt1mGhbABqe3S/VOMUlJVsfuGVldRCZico2vWBc4tbteHVrZ
RYLtjG2vuTQRe6GVV56V9YCPr+Amqg97jB7poL6xqlk+6ke1JL7/LcSEj9vW
b7uzvZcIHuHJeCD85l854cjhX7nJ3XoR/K7lzKmXqB2QmT32x45Kzpp79Luw
WGPkAf0uKOtGn8bvJkXNlsfvfo18dwr1Lz43TEJ9zr6Asy/4d18cPxCOH+Bf
P4R4ziLoZxMN7jLqN6hLn/PHb1sKyy5SP0OY2ZHT1M9QxNxqhX6eL7q8Bf28
PDY5E/VVNx76LkP1OecInHOEf8+Rc+6Ec+7w77mzD5yLxnjrPpH3hcYJSHNv
yMY4kWw0c8F4c+ie3EHjCuIUD57CuLp80e8Bxpvk6NwqlFtNKDyA8qenPIow
3tysuBlox9i5Ox7tcOIcOHEO/8Y5Jy8IJy/g37y4Y/ryLuaj52aP/TSP4Mga
fsM/+TivSAjz0Vxifj3NO1DRu1qCeVf+64wR5iOXwpRClH9MuZuJ8qIc2xeY
j8n9W3XQjhhXrQra4eAAcHAA/sUBDm4QDm7Av7jhEVZrg/hzTG8Tb94BBnRb
uGcizqwP3hCC+OMgNjxA8QeyRSyf/k/86eTYWcixw8E9wsE9+Bf3vgYUfsum
+GmS+ViG4ico+QanIk7aZfyKRvwcFO2agvInTRIP/wN+/n92OLgNHNyGf3F7
63XL5fM3BKqpVkkMvy8ZIMNRXHprsjrg9KUqnheV3eRR/JxDP63ZRJB/4z2h
mia4z5O90XDSJbWo3lO2mzRZZLXkiRqRfoonDK6zqjyVZG6hxZPnEZ3kc/jM
pPSF/SDJVdGvTftJzciStvayLlI0p6jSX5UNR4cZ61a4dBLl+eFhC6CLbM4p
kl2ynQVLrVa2UzvAz/chCO1IjR+NQjviKU/Sj5oVkNPeFtV9KY0k21pywEpk
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
9zD2oRULpmzB+BHx5vvxILWbTKzlGcL3weWplscwbvWKslYhP7+7QtgJ73sb
dCcWIz8v7pi/Bd/3jbkOxuG7qpr0/XOYLzZt2zvxHcduKLgF3yWVSBwXvuO8
mT2x+KdFJ5HQHvNeLNkKs/1O5Cc+6gHXW1tq8Z0oZVOSK74PPud6k4J5fSOo
8oagfxsJfiWmOurRBjov+R/e3NALnZbNNXifUBXCfonnYrjtRyqeSw1zjaA8
xb29cd69FPdIK1vPHnGvSOTeq3nZLHLRWHVpTROTWLruvKDxoA4c+e+ekeVn
kee25r9suhkkZJt69EPKx1xCb6auo/1X7JuWaI94Jvm5lqd+pVQ9tHRUiCyj
fQFDTEtmnPJ3GZPNYyVRLfBtj53vlSwW0Zr4Sngt7TNUUlmFMpMaYP+L2zcM
pFhkivFWw3gTBrEVqr3T6NoK896ov4ibSvsgpWOXAhndZDQozxHv23nZZ7Ro
/sKJCPvbNH/JmPc2E8zfec56srRugkn+Mn6smyNfT9Zi3bQrIvto/YXvwty7
sf6KBgWcwvo7+dn9Z8/XV4PQoJdkWHEXzDw1esLhdy+YRB1dQ+Wk0CRgDpWT
9/JzrqFc3MXaEuvLm1r57bS+kBeni/KwvlRWnuehdZA4O9r0Yx38IOyXgnWQ
74PjbVpPyUXdHQZYT9P28mlhPZVVlfuA7+9esQ8P4+8Q/H5/48Y6/uHkoQ7k
Pz+qOkrwXaPo1twIrONdElr7aB2H9Kn3/LCOT69q4sU6PnWdShDem5VvcxbG
e6098vaL8V5LJ9nO8/t5il+2396tEGeRK8oZAr8SKd+uqbmLPHxfXqYQ3iOZ
VGiPIA93bOeqpvEDGi3c49882ojOd4MHGD/Lx99Ak0MTqO7Pvn/2WyMxTyhS
feTdDz9rX/P/pv1CStZFA7wvSjEMUMJ+ocFdgUXjFjwc3uyicUtED5fmYNzm
DOw6hO8gN09KamHfGuQzpQjz4uEOxp4lpTS/eSaF//zdQQ6+qRNdfYAJMy9K
2WO/80a8dTTgDpMYx+2qwn7HIkJHFfsphajHunhfdG1RqyL2U3tq5lS4UN7l
4ym1/K5lB+zLEmUtc2OCi53W52i/FsLlaGUeLNQIFdP3X9ut3g9rEr+c5pVg
Ed4tclOX6bLItu7la7l318MCIb2y3cvZxFDvdqj9CIvkOW19bpz/DtJhwiSx
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
cv7uvokPihnkd+DM43h/Rb+rj9/d8tdcdvoiE773cnVksqcC3/O0duJvq9OI
92aPWqqh6kQLMXD5LYn37RW9ThV4L0frhcp/mssWOiB2rSeojWiYn+zGe2/m
/tkyeE8o9vGCQ6F6Mbk+RTKlXKuayBhrSihOGwYRzlz2jb/msstPht2jcU4+
JG9xpXFOHry404dxPrTl/xX23nE9f+//eLbMrDSMklDRMDLCRUQDkVRGr4Ss
hKySslKhlBAKlb0bdomjPWiXttbz+SxNUWbley4u79vr83y//X7/XrdzO8/z
PI9zrus692vcTRUqY9+ySpnzzke909hy9dpsxEWPUf31caq/Hk/111L2qpE1
qzLZ/PWtRxAfbls/aB7iw+J11luozjouXCqLrxMW3OycztcJ6xvTB+E6+f+d
8r/qqTtKaI75t7/USP6S4EnNnoI7QnZ+Va/Z2ycKWKPTrV3XNPOhi8TqX98r
gr6XNH0v+DpSdWuyNJP/EpEpv6WRDdny8KaRdhJ0lQj+5Y/NovmraP77GYo+
Uqeq2OWh+u9FWkL29d56H3OPaFigYz3olYOIZT0u6lhhKGKTB+W62ZfEQKvL
fIdOjiLWGrF75g4unxoYvSCkLAbKDy+vLpsvZBZhVgV+plUs4/g715FP42B9
bnerPtoi9mR62JJ7a4Ss+9euUqYKmSA757ppDffLB43xuOYpqIB98snpU5JL
wLn1kzP/vxAxSmUZ/7+gH5Mrj/+3t7+tjcsuEbjKZEuFzBLBQZktk0S5sWBj
o7Cezw9qhqOW8vlh7+QPlUv5/Jr2Tk8wnj6+3+mnGE+PmLBh5TS+fqOtUYf5
+iF1/YHxfP0wOvC0Ka4/0Paij/6pKthbc3/1bS0hzHPvJ2PA98HqnCLuJ9B+
gjzt53KV1DSs4/7g+ruO2yXqdx13Z4mTv+RRVN/t1/IfuSPWcQdSHbcE1XF3
kHjl+O++we8Iv8Vz8m8/eTz5yc4vsg6g3S+cP90Z7VfUNeFXtF+3z9w98lS7
jLkEt8Ssrt7B6vIM1h86WwsuY7saFVsLIWG8+dkxJyrh+67054vViqAhysd7
xtRKqI+wH1b9uhxKLy8V3ltdwd9JT6d+0KuEvPYBMk/PCpn5sWqv08ZF8Gr3
wUbUJ35RCxPRD887HbAQ9UlfH3jlZSuAMwr3dVKXCtj1mXaXfuQV/afu+CvV
HS+kuuNdbb/lwR1+y6uu/5bHuU/NRr2XM117H/rVmxzVBqPe8+tTfO/HCQEo
z/ZXu7O3kp2+rLPIPqMECnpOmHXHWARxfo83Pe8rYld7HxrSqpT8n3rkzVSP
nE/1yDvTguXRLmS+6PzTh/vJ6iFSfdAuiOMVToRXvJQ48zifn6sDD8rD1zwV
MncDQ8GtR2lgEvpafvcBIWw17Hbp4VABG+YzWgHjJq4519y6DxDBxREHjnXR
E7K2wOuX71pmwdCACUfQXp/xXnwX43S2p9ra0F4Pm9CkqDVWCFenSx4L061k
/vNsfsWV6jzX+15fJwTXY3GiCGsh660SNGyyMAe+7IxYyOUs6U1XtUj+PWVs
1wxB+f5ndrr2/P1uaWUnNF4uhGJLxR1mXbPgsKuhMvqZ3X06mKP/sDBCJRH9
h+S3AfPRz1xltF4W/ZCX4anb0A+RIj8wlPxAdfIDX+7p3BnXWb5f8BTjX3a1
6a9wna8D3ljw/8t2ftd+xv8vPKzPDsb/G39qw9eCeSJmdNPaV1pfBPIe3/az
fxJg84uAL7v4vj010cjAeJO3zJCvo/m+RVSvD+T7zGo/X0nm+wyvi15V4j7/
wRkEhDOMJpyhXLvBzA37nu2yWtsyRgTjUn5IpD1LBMkr1q2e/B0k2KAIaPfn
p2lJ4fddSfXIQVSPfJ7qkev9fstV5vyWd7z9W/4o5WcgvuOen9WSXDWpHEzr
WpTwHSdepzyM6pQVJcfhOWTb7j7HcwjDvx78dQ7/UfW35eeWbSx12MbPLYQt
eLcYz612/Mj3YXx8UZrSgBw+/uE1j1+43/u37w/iu9Ig9F0Q2n2ZLjJyeP67
PK9KbywTsgVZI21m6Qthhd7HYSumZsPrwVvs8F059KD7NPQrrJYsyUW/oqZN
2QjfxYsHXGjG+JSB7eF3+C7ea1loy+8pU5AM8eb3FAz8Ll3Be3olRMEF39eO
gnu16Cd4yHQxwXtdNv2r+vASIdv7rEjnwEshdJk4edA5+UywObWzP/oDrzt8
VsB41nvnJlP0B2ZtHRzTqFfJvndffoDrDWjp3ec86g0lT4HldiMh2ypp/dnX
VQRHLd7fUKhJhxPvavuhnumnE2iE43UGz1+B4z+X1x35uEsAtiPvDvAIFIJ6
lteMdYfywFy58j3O3y81Dcczp0OhKTi+n+qdebjOoud6w/k6mXJv23G4zmmW
Fz+63BIxc8Vls7u3C5iSbWqid0QGjJHSs+bzsxEzhw/i87PJoUsf4fymF8yL
r7SVsUULnt3D+NecsJFuGP/q2PnBpl6PK5jN8nEx+/oLWbv6q58i03eQI/HK
C/ezQ8kNK9R7A0zsX+N+ekdd36hkKWQ7J+psWdnM9Zz09dibB7P+WqdcT/J8
kruS/C7pzy+kPw1If+baLz26J1zIXO8KD+Y1CNjevtoXnzrkwjQTyWfoZ+a8
juyDOMM2hS45eB7+zPOZ5llK84j3bSgiPak73l3y/gQh+37lWMuw45Wsb+Kk
tLGxRWDUPlGndL4IlLXndtObL2KrO5kZeKxMgFE7TMd6cXnJh+vW67icOQ88
hPfdPGm3Eb5f3svtVcV3bqjyvATUPxMuf1aw2FkFt8zGhIq6Cll+6qDxnS8k
gMyM91uS+4mgh3BGe7OFkJ2zmL94GddjxlZPOnvJ10DXpqS3jr3vshWbDvbA
ONos0LuOfkL30J1D0C+6MrtAH/2Ee9ukNblfwaw+ur5EvyJhwY4W9Csqd/ov
Qj9KOSd6L/oVwd+vzcfxf6tTbiV5AcklCn/L8z7p9uP7A6l1s7oNP14JU/o9
PIL7k0J1yh+oTnkf1Sn/rX7ZivSJHukTBdInK++8bp4ZK4Sg3sHqGpcFoLIu
/luB+dv/0mOnSI/1O1i0jdtxxrKi1dGOf7l+vQXt+N/6KqjnL++wTF7Etoc1
rX70QgimhV1fDL6Z/te6Zk2Snya58p9659rlQWj3sxc82oz6JPSw/y48/+J4
ox7hjdNG1ul6egmga3xQ0MeFVdDl2LPSbZfT4NPC5XekVomY3LHbjjdWiMBu
9bS5A6K4XzfZLQXvY8hy2VR+H2Hm6J478D5KTZlhgPdxufT5Rn4fIcLnYibe
R4nyJZIYv778tikUx6t+vWSO42eorTnFx8Own+GxOP6L3uhzOH7cq2ev+O/C
fnuDNfi7yzeP/fW7zb6zvw9XFbGobtaqLZYiWFz4dOqw5ATupyn8istbUJzr
JsW5OkpkvPtf/aw6SGg+xPomic2/669HUf31gtPH19curmJdHtwLONlbyFZP
2js6wyoJhsz7eWnTtvdM7dTjPpvqKtjqC4YTqjdFcz8w+BdeelOsn6SubV/n
b98roKXEz3vBuvdMo0fV59fbomGWw8vWGi6/nHZXczqXL844Gqi3IxoMvBJT
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
7/zCAZJWtfB7ATWVo3P4vQArS/9DeC/+9EM+T/2QlakfckfVTe38/IOuxNxc
fv7hhMSteXj+562Mceb3FPTX3tdHP2qr28MqvKeH7kYuR3xGqBYWcDq8AG6d
MXNGfEZ3os23NItceLdb422I7lv4tCx7RLcedf/FR/nHXmwJW1SKeE7r46Dr
cl3K4Yirw3jEc84kjOtz5noZ2HncbOL6BD7XVdiiPkkS46/8Y0cOb35iM7i3
CDp3zZ+gPlMIY0/pa7r6Z0HgX/i8zpH8gZjclHi+dorxfK34C//XgrR1Q1B/
XtSSD+L6E9ZlO1ig/vxSW3Wd622wd3Hcy/U2FLduNkS9/eOKSgDXz2D3fIAB
18+Q6DXIHfXzE7dHI0XLslh5Z6sjQ1aUweqTP2dIcf9WY6SCwdhFiWyp2fzb
OL/oQtZqnH8g9VseRP2Wx1O/5YK3PRK5HYEV5/o/43YEgreevz+a25Fvfn1i
TJU3z1wqWZKXtqiUNR9aKyWqroUNN7u82mGZxuINmZ63fBm7+o98x0Nna2Co
mJ7/o/81FOem8e/LZBXLX/Dvy7YlFWng9903OXQCP5+ssKKoPz+fbF3yek88
nx1C3Yv5PWIDZWx28XvE/J5O0MZ79EDt7oUjrTnszKyjkzOupbAFjRu/FjjX
8/P3mz9rBfFnxRJ/1lGKt+4Q4886S/xZJcSfdZj4s6KIP2sS8WcZE3+WL+H8
eWLxWYuPl5/x9UDPjXrb+XrAYl3vD7ie9vdDii7+eAPJn+ZeVLqeDWvkJOYg
nqnxweDITss0UC7svoTvG+jY6tYf5PsmmfnkRlbXctaUFNKn0LSKzfJttT3m
VQTuYnq+P+n5cNJjDaTHfEmPObwKN3Y9VcUcXed8XKslZJ+jW9TOe0TDjG3R
O7unClihmkWAS4SI+dlqbzxpnAkfiQ/0OvGB+hMfqM7WMNt4ELGA4HabwCtC
NjrZffcr7XRoo3zvdsr3HkH53gPXJics1ReyeusPKZp8/d3ndFpa/iQOjtH6
NWj9PWj99M5l51TL8J0L5+idW6d6Vgrzuu+lnzxzf5YIEm031DXnxv4nTzuN
8rTlKU97uXvTDr5OeN6ssZ6vE8YPuKWA6yx44xeYYpkOmYFGe30k38OW7WHL
eplUwPXyF/2zu5ZD55S4xgLTKgj553ryUb7Pb270tnp+qgp66NaajdISQs9+
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
          "]], 
        GraphicsComplex3DBox[CompressedData["
1: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
lOC0r/UepfscLcQelvwV+FlF9PpJkU/15+RfB9IPfN+Qznesx/lOvnMo0dvR
nO/tlDRpXFBuvDlX4k2KZy3iWcjPJLpXSHbWws6ifTzdKwSOeqQyhBf30EtS
d2EvSZ0GcJzPHpb1xb5rJ/V1q7vcKf3eNCefcGJi48B/7y8U+WfrhmPTSqmc
1AzedjU5l8+Xzo/bueabDbRfDtocuWdH+9FiP9I5lPU4h1L9hvao8+wYO6D7
gOAMPhcwOBcAfoVwyInkXc0VsjtNRQ+MFT1A58V6vkbny4bPl7G/HitVscHQ
cll87q/37IB3EnyH4NDjmEdTeQcP+UTgx+S9MuwH4O53XCMMtwd93D/2OfDh
8i4f8q1Y/0pJTT/47SHnnXbgMauKJb4xynlfF3j/+7pdPdLEiT+AR45YkHgx
wnn3EPjmin23fljLeceQ+wedTM9jn4/9rGGu3geeMWd6UqG4aM0fgd9T5N0S
yKXme1Kf7fHFaed9CeBTmx3pNyrW+Z4R8CGH3vmyflHnvXjgvwVELe/wnHM/
DDjuO2C+3B7zBZ7y8RL/Rred7xndm54Mw/TXvFI2+d+6c+BfS/72qK++XP3l
j/PeaQlT/gD/anHlqa9P1/ejFJ9XvdkrP6U678MDf2jq8IEXejpyC/zJv0xS
8Zv8fbHgaP6+GNrjfgRwtOfvjqG9+54I/jl11OCzR/+G+wf/Peg3TD/W5d58
yDDMN+RVmc+VOn1bOCMoW/Gxn/Z/sPhTK5VvsDONXfREKL7Jda/Ezw84+IP5
cnvMi/vH+kKvr93ds2uhjY78A4d8gh7gLP/Anyf55/boB/oeegD9AIfeAJ2w
G+PoHVHgLUh/Av+Z9Cdw1p/cHny7d/+O/9IlsfHKou2d98GBn42s+MeMGvp9
EHNvPM549QM/6JHB4/+YedY5twbewfVuQ4Txao+8AvIMrXz5X8PvMOHeBfyF
0T0WXHzrhb0W91KwLwpI3gz3T4DXk7gP90yAl5a4EvdJgKMe45KH3rjsoR/O
e+zr3z32L/KzPC7q74Ej/kU9PXDcA0J9PHDc61njOld27rHhHg72XVLLWhdS
uyVr/g74jaZ7PwsMSrO4VwN86fh9E7s9kgl/XfF5SzudbHQgy+J+C3Dcm0Be
W+sXNla5MLf0AYt7C8BrPlsvu/ucTJxDKP7klKhlmyql4x0SxU/Hl3t29Xsp
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
zA==
         "], {{
           {RGBColor[0, 0, 1], EdgeForm[None], 
            GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
4/8fSJmTQQ==
               "]], Polygon3DBox[CompressedData["
1:eJwtmwf811MXx7/r3n/SpCg7RIUSZSQqlZQGyV4J2bI9yEyF7JEthEI05Omx
KUVGqIwkJSGbMpLwfN597uvV7XfOvfe77z3ncz7n/JsNGtL/jCLLspvLLKv0
e6OUv/U7I8+ytyW3iFn2keSodnfIsonq20fjvfR7pw4YquMGSF+udonkLdTu
YFzzn9GcsTrmbOmbau5GNVk2Sr9t1b+l+u7V7/Oa315zW0seqbH2ut5y6QdL
/lTy4zr+fM3dQvrGOv5eblJz99fPPZJf1vEdcp/zWum7S19Pej/pYyTnOsdo
6S019q/kw9TXiPNr/GHJ96mt1rk2Ut9Tkt/TvP7Sv9H4R5o/SX2bauxNtVHq
25ZrSL5Ec7aRPFhz2qt/lPRndK8Dpe8ovan0xzX+tvoO1vz6khdq7B6dr17u
e+ReW6lvgeR1uEfJW6u9J/kNHT9CxzaSPll6e55bz3+Gjlkgsbb6pvIt1P8W
966+yRq7Wcccof526v9Bx76v3wM19q36PpY+T/oR0n+UvkD6FWpfSb9Lx/4o
ubnaXJ6XPp1rX81/V/rrmd/XlRr/On3rnySfqd+F0m9T20RyW7Wjde5neD4d
u7PmLON49eW6/6vV9730izJ/7xc0fxfpP6gdJn0M30ljN6n/Nx17uPRdNXZx
5vF1dE8XSt5b44u4X/3eLX2p2nO6xhvMl/w5a0vjn7L+JNfXvM+k7672k863
seYs1tgCzf+Fd63xFRobqL5l0i+UPkP6dB27QvoDar9K/kXz95Y8QXItPc+V
mveD9P/qnB00doZaXY3VU2uksR3Uxmj8II1/JnlC9No/RvOa6/iP9fuT9Ks0
9ovGRur3V+mHa/5SyZfpfmok3yH5aY0frfkrpLfhe+gabdS3hPWu/pWSZ2p+
X+nzNX+m9Fel7ye90Phr0vdU+036Njp+mcYGSV8pfSvpx0o+UPO+zL0nmkje
Xue5X/KB6vtU8v6a00DXPVtjr7DWOZ/G+6brH65zLpJ+tua+nL4f37aJ+kbr
uDPV10O/t6n/Wck7qS3V+HiNz9Gx/dX/hfRV0g+QfLzG22n+COlTNH575eNX
a84gyZ01/qfkfdXWlfyG5uwvOWjsdelv6beDjv1Sx7zIeg/ea1eq/3/Se+t3
kfTemlNKPjR4PbOuX9L4AWrr69jzNfaq5BP1u0bz+2a2b6y/g9hfapdKvk19
jSU/q/au5EMq27P62Fjp96htIfk79c2VfHTwfv5e8vc6fz2d44rM34Q1wn7v
xXpWO7/0e+X93q62meTGpd9NJ81/TfIGaiOld5Y+U/KePKfkn9V3jfQG7GHJ
HdU3XfL6asMxqdJvlbxr6W9xpPRlpfcB++Ee7J3kprrHFzX2J3uetaXzfyB9
F9YP9j/aVj4pfbjGe/MeJVfqu13yzmoPs5elf87+YI9K/lB90zR/rN7DDpJ/
Vt/Hkk8N3l+LNPdnzV2XPSE9y+2zOvFdJE/kmaQXpe3DP/gyyeuoXSr5BbUW
rGedY6HmfyB9O8kD1PeV9LPYw5r7mq75R+Z39rvkc9XXU/oStfNKFkmW/Ye5
alvp2HY6xxTuXf1f8izq+z2961+j/VVvnedfne9kyZuxRyVfiw3Vs12vsb8k
X4/NlfyExs/j+qX9X+dqrdnP1qh1kXxd6fk8816V9+/OhW1CR8kbY085p/Tj
K9tbfOuGrJnkv27LbQOPkBx1zBjJO/ON0vrDPuFTX5H8YGX/jJ8ua7x+sBV7
qO9Vyc00PlLn7aJ2k+TAM2vsGs3pqecr1U5i/eH3dPzX+j1TY8ep73t8SOnx
yerbU/K90fjhPclLJH9Xei7PzLM/q9ZQ8hBsseQbWC+5v+FbkvdSXy2Nt8n9
TW5S346Sv1Z7R/L6+HSurTnrSe6nVh+7xLvQ/f1T+l101Zx/sd18D94ne0Xj
Q6WfgJ+RXiP97dK2Z2hu+/GanreP5HmsvRrjIWxF79zPxP7cUfpe0mewXnle
yc+pb4GO3ai0f+nJ/fLONX635GHqa4ztkj42N944UPow6WdI/5W9res1xEbw
bTS+P3sbHy39N96bxh/QPZ4mfaX0+jXGG/WlL9AzNZM+VfqjhX3o85r73+T/
wQFbaHxGYd9Uo9/fCtuLUzT3CPV9kXzUofqdldl3vaDWI/cz7Sf5BrVDdNwG
6usheWqw7eKdHCB5GpivsM1+Vdd8Rm1ryX+A62psswdLnpvZln+quePVxoE5
8EXqu5Lz67h1NX+DaCyyEhursSXqP0p6I/3WqbG/HayxQ9W3hPOC4dLarKvx
16X3A5toTjPJrwRj2z7SN5K8XPOOlX4ue1TXfVl9t2T+doujfT6+/0r8U2W8
cKzGB+S2aR+q73Dplyf7hn08QfohGl+MPdb4FPyZzn1K8sfH8K74ZglfDJTe
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
2LI+yd9Sz0BdIpj/yeh80NjSHA7x+/8BZ3wXeA==
               "]], 
              Polygon3DBox[CompressedData["
1:eJwt1XmQz3UYB/Df+h0YR6ppSAdJo4komlqpXGEmrCwiRyPFUG5hKTe5kqty
dKHGLRZJjsWu2Q4xZJ1djlKLclQ0E1uvz3z3j/d+nvf7eT/Pfn+fz/fzfO/q
MSCzf4lYLDYIkjDRn3Jpsdgu4qR4LDYQH5+KxS7iOVDI05PWhNYrEYu9CP/y
N8U30gvk+6gbRc+m9aN1oW1XO4HeHz9OPyTOUNdJ7k18NXRTMwea8m6wFkBb
nqO898Uj35/qr6rZzXOz/GV8Ff0ZcUeoy7+c9jGU59vL14G+kmcQ7TKtPP6Q
fvfjh8TP0kZYR8I6vqr0mvKl8Db6fYHvFT/J94p1KKzlO2f9Uf+D4lxxHkwW
36S2LeziX03LVd9KnwO0avAGzwdhT8UXoAzfQZ7WtLvFubQB6jLwdDivdire
CR4J+56MziGcR23ee/BRMI22Ht8AC/iu8P/CsxIayH2D9+E7J/6Upw7UwP+m
n+RZCulyX+HHobu4jLUsLNHvZ+sxntesVaztaUfVDxQn9doOa/CLcCPPKbyz
Z78U9j2cq35reJ8XN1RbkT6Zlsf3D5zEt0JzNXvw7vAW3yQoJ94Jj8p9x5MT
9kvtr/rto7/L8wkM1HtQOCO+fOso2imeZbAcDuN71S5T+7C6Cjwf0SrDWtoM
WhPabfgqvnr6vI4n6OXxfvS5+Ht6VePvi7cK74f4OZ5OMDf0oqWrzcFTcAM+
lH5A3UKowr9Un9G03/B1kA1H8AXW+dBG3Q6+/eLGqeie9VTzAqzBh+t5Pdwf
vgZQDy8NaeLHITv8Rnwh7xb8Univ9ErRxtL+EG+DrZCPr0hE+7uDryxMpCVK
Rs9fKfRKi873BFyhdeG/QKsf3lvYJ97Jt0TuHL5Zfg/eBa8IU8JvpeXTmuux
Rbw1EdW2sC7mqSy3SrwLdsKrqeiOfWbtGGaH/AC+W2Fq2AM4LL8YasqtC/eZ
73txmjgW+vJkwRGeJVCLnE0fFuYQvgg+hPV4B7VH5fvp3xvm05ZBLf6X4tF8
y+TZgeeEmSH3g9pNqWhPfw9xeF44hk+AUmF+8c6zPyXwTLhFPovWG5qHvYem
4va8u/2P0clob8IejZA7zr/ROgS+FE+Hr/WrGuYm70k1w9XeAdNoT0HpcK5Q
UY8rPPnJaJ4d5qkOt+Nz5eeE9yvMDT32hXeTPtJaMhHN6ff1Oks7Kz8mzAyY
EbRE9Nu/TUVnFc6sbiq683n0p/EH8U1qG9Ouq7sGi2iDoWW4CzwLwp3FC/lO
+x9ZPFVgeiq6H4XF+xn2NRc/k4zudx11tWE5bR70VDMOv5dvt7Uk33/iy/Re
/AXJ6MwLiu9XuGd78Ku8Z8R949HZh3egDj2DPoX2F20IbXAyik/QHpOrxFNk
Pa92WDw6g3AWhYnovPbLbxNvL/42hG9Ea/n9fBnW2bBS3cgwNz1fhVT03OH5
x4Z7Tn+Hdp2vOl5EbwdFeFbx3Z+JN+Krj48JZ4JvhswwN9QspT+g9yxaC74n
8HF8F0pE3+Twbe5Be5nWCJ+p5k64RluRjL6ns+nxMBPwrnzj5eeHd5reLRXN
2NPF8yvMsW14A95mPDOhKHxf8VnhzPFMyAvfAn3S6Q3j0QwLvyf8rvP0n4r3
IOxFZ3WzoR1P13g0U8JsmRNmQjyau2H+fk6rEe60Z24p7kF/G/8fHwM4jg==

               "]], 
              Polygon3DBox[{{1387, 896, 699, 700, 897, 1388}, {1345, 845, 658,
                659, 846, 1346}}]}]}, {}, {}, {}, {}}, {
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVHEch/G/phO5SRcaFVmCgq5EoWhZL0AtK29l3jLvMzWalo7mJXUU
RROqjZWlJN1eQ+u2LVuFm5a5EAQF8XMI5jfP9/me3zlnznCK2hO18YwQwnfz
MzOEGVNrbpqof3cihBo5Lt/ADZ7ODkEMfb4SeIAvzKHeJwzIg3iImYo5zOG3
8MiMyDF9Qs6Tb+NJ183VjfPH/Bx+0N2R8/UzfFAuwU39sq6Op3k9VuKKrkFe
ljsxFQvhD17nw7iGP+w8lP+aKv4U3+C63V+u28Xr+ShetPtW/q3v5i1yClfs
Vuo2eQ/vxH92n8tX9Nu8V+7FLbsFWSFMR+ebajOg/2avTf4qt0bkr1yjn0/x
L3hVNynv6Xv4hPwJL+vLo/+KPzD3TYXuo2Ol+jHeYZpNmb5Qt+7YM95uPuvu
4nn9a/2IfM9s61d1TfJLfSNew12/v0pekp/ge890YLeCL/J5POO8IXlfX8wX
5Gmcs3tal+RneTp6cXQpyNY/4rnyfPRs+kvuNczj/BTu8Fn5AiZ5vyyGodj/
9/UYuXRPOQ==
             "]]}, {
            Line3DBox[{1250, 1643, 1532, 1818, 1443, 1281, 1441, 1828, 486, 
             1442, 398, 536, 1147, 397, 448, 355, 1805, 1490, 568, 569, 1701, 
             1817, 1531}], Line3DBox[CompressedData["
1:eJwVz7kuRGEYBuCPzEatRSYxwhjXYYkoZibWmcYFcAW2ho5CYWt0qDEjERFx
G0rGMraWynOKJ+/7/f93Ts7JL62Ulzsios5PKuI4HbFNlRe6MxE92YgT2TB/
2xnVm3qFLn2WXjtnsuXsy05JH6FsPpVF9zMyR5ZPO0U5zKada1mjziILfNj5
kxvup3kwt2k6u5fvNPQ7+dgZcaXf6m9c6jfylXXPXpj3mEr+y9mQfqSvca6X
fN+87GfSWcvOoP7LIavO+uRc8q+Mm5/tFJJ7fYK0niFFlSf3ee8d0Lfcj7HD
Afvs8g8h6jHE
             "]], 
            Line3DBox[{1282, 1839, 1641, 1639, 1640, 1491, 1694, 1806, 1283, 
             1333, 1251, 1332, 1764, 1331, 1399, 1562, 1563, 1835, 1398, 1564,
              1335, 1445, 1588, 1765, 1706, 1444, 1284, 1448, 1707, 1756, 
             1589, 1447, 1285, 1450, 1819, 1702}], 
            Line3DBox[{1286, 1690, 1058, 1533, 1534, 1418, 1569, 1493, 1535, 
             1820, 1287, 1492, 1288, 1494, 1181, 1757, 1289, 1334, 1290, 1182,
              1766, 1336, 1400, 1337, 1781, 1183, 1341, 1446, 1342, 1807, 
             1184, 1611, 1291, 1449, 1292, 1795, 1185, 1495, 1293, 1451, 1294,
              1837, 1630, 1186, 1496, 1453, 1796, 1295, 1455, 1536}], 
            Line3DBox[{1296, 1791, 1537, 1419, 1570, 1497, 1538, 1667, 1808, 
             1452, 1297, 1498, 1187, 778, 1338, 1298, 1188, 1767, 1339, 1401, 
             1340, 1189, 1770, 1345, 1346, 1769, 1190, 1653, 1736, 1191, 1590,
              1592, 1591, 1838, 1631, 1192, 1612, 1299, 1454, 1737, 1668, 
             1193, 1499, 1669, 1809, 1456, 1300, 1632, 1194, 1500, 1758, 
             1670}], Line3DBox[{1301, 1539, 1420, 1771, 1571, 1195, 1501, 
             1502, 1457, 1738, 1504, 1593, 1503, 1196, 1671, 1768, 1343, 1302,
              1197, 1680, 1782, 1402, 1344, 1198, 853, 1349, 1199, 1714, 1654,
              1739, 1200, 1655, 1740, 1201, 1656, 1741, 1202, 1594, 1595, 
             1742, 1645, 1644, 1203, 1708, 1829, 1596, 1634, 1633, 1204, 1613,
              1614, 1833, 1458, 1636, 1646, 1635, 1205, 1810, 1505, 1303}], 
            Line3DBox[{1307, 1552, 1425, 1773, 1377, 1550, 1551, 1549, 1473, 
             1732, 1675, 1513, 1375, 1279, 1376, 1731, 1674, 1373, 1278, 1772,
              1374, 1366, 1372, 747, 1371, 1233, 1752, 1663, 1232, 1751, 1662,
              1730, 1231, 1277, 1650, 1649, 1841, 1230, 1276, 1617, 1729, 
             1711, 1229, 1275, 1616, 1728, 1709, 1601, 1603, 1602, 1831, 1472,
              1306, 1470, 1691, 1759, 1471}], 
            Line3DBox[{1310, 1792, 1556, 1426, 1386, 1554, 1555, 1553, 1480, 
             1735, 1677, 1514, 1383, 753, 1384, 1309, 1380, 1775, 1666, 1381, 
             1379, 1411, 1774, 1665, 1378, 1235, 1753, 1664, 1734, 1234, 1280,
              1618, 1606, 1832, 1607, 1609, 1608, 1478, 1308, 1801, 1476, 
             1605, 1604, 1477, 1733, 1676, 1474, 1475, 1760, 1692}], 
            Line3DBox[{1311, 1693, 1754, 1678, 1236, 1515, 1761, 1312, 1479, 
             1313, 1237, 1712, 1762, 1314, 1619, 1315, 1238, 1776, 1387, 1388,
              1788, 1239, 1389, 1390, 1777, 1240, 1316, 1382, 1317, 1778, 
             1241, 1318, 1385, 1319, 1794, 1557, 1436, 1582, 1516, 1558, 816, 
             1481, 1320}], 
            Line3DBox[{1327, 1755, 1484, 1326, 1245, 1517, 1815, 1325, 1393, 
             1324, 1244, 1780, 1392, 1412, 1391, 1437, 1584, 1779, 1583, 1395,
              1559, 1394, 1560, 1823, 1243, 1323, 1483, 1322, 1763, 1698, 
             1242, 1321, 1482, 1814, 1679}], 
            Line3DBox[{1416, 1790, 1529, 1417, 1330, 1413, 1568, 1651, 1789, 
             1528, 1488, 1489, 1440, 1530, 1642, 1840, 1652}], 
            Line3DBox[{1421, 1824, 1206, 1506, 1507, 1459, 1509, 1597, 1508, 
             1207, 1304, 1347, 1743, 1672, 1208, 1681, 1783, 1403, 1348, 1209,
              1682, 1784, 1404, 1350, 1210, 1657, 1744, 1212, 731, 1745, 1214,
              1658, 1746, 1216, 1659, 1747, 1218, 1357, 1748, 1686, 1220, 
             1687, 1749, 1360, 1221, 1621, 1797, 1713, 1460, 1361, 1222, 1710,
              1798, 1615, 1461, 1638, 1647, 1637, 1223, 1811, 1695}], 
            Line3DBox[{1424, 1822, 1548, 1274, 1600, 1547, 1469, 1512, 1813, 
             1697, 1369, 1273, 1370, 1727, 1673, 1367, 1272, 1368, 1726, 1688,
              1365, 1271, 1787, 1410, 1359, 1228, 1270, 1725, 1227, 740, 1226,
              1750, 1661, 1724, 1225, 1269, 1723, 1224, 1268, 1722, 1685, 
             1575, 1267, 1648, 1721, 1684, 1467, 1266, 1599, 1830, 1468, 1355,
              1465, 1265, 1800, 1598, 1466, 1305, 1464, 1799, 1660}], 
            Line3DBox[{1429, 1793, 1587, 1430, 1397, 1428, 1561, 1427, 1249, 
             1827, 1526, 1610, 1527, 1487, 1525, 1803, 1700}], 
            Line3DBox[{1519, 1802, 1699, 1485, 1328, 1246, 1816, 1520, 1521, 
             1486, 1586, 1585, 1826, 1247, 1438, 1439, 1396, 1523, 1522, 1804,
              1248, 1329, 1518, 1045, 1524}]}, {
            Line3DBox[{713, 1840, 652, 1155, 1156, 950, 1108, 1828, 715, 654, 
             830, 951, 1765, 1109, 717, 656, 839, 1807, 1011, 719, 660, 1736, 
             721, 666, 1740, 726, 673, 1746, 733, 1718, 681, 740, 690, 1752, 
             746, 696, 891, 921, 1774, 751, 701, 899, 1777, 900, 755, 705, 
             901, 1780, 905, 1085, 758, 708, 1043, 1804, 1044, 997, 998, 761, 
             711, 1793, 939}], 
            Line3DBox[{736, 1799, 968, 967, 1023, 1022, 677, 1825, 729, 1148, 
             924, 857, 932, 1096, 1824, 931}], 
            Line3DBox[{743, 974, 1759, 973, 794, 684, 1800, 503, 969, 465, 
             466, 1573, 286, 858, 372, 1597, 501, 408, 410, 930, 1771, 1095, 
             929}], Line3DBox[{762, 1165, 1051, 1817, 1000, 764, 1005, 1806, 
             1008, 1007, 829, 769, 1757, 834, 770, 911, 837, 1767, 842, 838, 
             663, 853, 916, 854, 670, 1744, 730, 1716, 678, 737, 1723, 687, 
             1176, 1841, 1177, 1178, 1179, 1180, 1129, 1832, 1128, 1144, 1145,
              1146, 1762, 987, 813, 990, 1035, 1036, 1763, 991, 819, 993, 
             1802, 1040, 822}], 
            Line3DBox[{766, 1060, 1058, 954, 1009, 953, 1012, 1808, 776, 1066,
              777, 1064, 841, 1768, 786, 849, 787, 915, 1783, 851, 860, 852, 
             1091, 1836, 918, 1092, 863, 971, 864, 1721, 1172, 1173, 1122, 
             1125, 1123, 1728, 1138, 1139, 801, 977, 802, 1733, 980, 1031, 
             981, 1754, 810, 984, 986}], 
            Line3DBox[{773, 957, 1796, 774, 958, 1013, 1809, 781, 960, 782, 
             1119, 1829, 1117, 1170, 1118, 676, 1749, 869, 1153, 870, 1720, 
             1154, 920, 1093, 871, 877, 872, 1726, 880, 796, 887, 797, 1731, 
             889, 806, 895, 807, 1735, 1029, 983, 1033, 816, 1081, 817}], 
            Line3DBox[{783, 1758, 961, 784, 962, 1135, 1833, 788, 1134, 789, 
             964, 1797, 1149, 873, 1067, 874, 1068, 1834, 875, 1069, 792, 879,
              793, 1727, 882, 798, 888, 799, 1732, 1026, 975, 1030, 808, 1077,
              1792, 809}], 
            Line3DBox[{818, 1814, 1034, 988, 812, 985, 1761, 811, 1032, 982, 
             804, 1801, 979, 803, 1143, 1142, 1729, 1141, 1140, 686, 1722, 
             866, 1099, 865, 919, 1715, 856, 862, 855, 1784, 917, 844, 850, 
             843, 1782, 913, 779, 840, 778, 835, 1059, 768, 1061, 1820, 767, 
             1010, 1006, 1055, 1166, 1839, 763}], 
            Line3DBox[{824, 1045, 709, 759, 1037, 1815, 820, 1038, 706, 756, 
             902, 1778, 814, 702, 752, 1775, 893, 892, 697, 747, 885, 884, 
             691, 1725, 741, 682, 1719, 734, 1747, 674, 727, 1741, 667, 722, 
             1133, 1838, 1112, 1161, 661, 1160, 1159, 955, 1795, 771, 657, 
             1111, 1110, 1756, 952, 765, 1157, 1167, 1054, 1818, 1053}], 
            Line3DBox[CompressedData["
1:eJwVzrEug2EUBuBTpC4BiUU7ugKd6GBTbd1BV8IFGBqbaJpKJARBR0OVThaD
RCINIjqoNLF16mIgTQwkHsOT9/3O+fL9/0xpo7ieiIgCp6MRl5wxxzFTYxG/
yYj2SESFK7NFs5bMMK1v8mBXZV5foGqXlbPjEWX5ZFf735sPvbcrn533yOkD
sxf9kEf9Vdbp6O/ynK7ely3e9IG8pqd/yBu2vPXjfCQ/nW9Z8v1lvsxzcttu
VQ7t7sjrKf9ZlAV27PflAWt8u3PPhJ52b0VOUnHvhCYXNPgDfEQyRA==
             "]], 
            Line3DBox[{937, 1076, 1773, 938, 890, 1028, 1100, 1027, 972, 1813,
              1024, 1025, 881, 1073, 1072, 1150, 1821, 1070, 1071, 1017, 1137,
              1136, 1798, 965, 790, 963, 1016, 1810, 1015}], 
            Line3DBox[{978, 1760, 976, 800, 693, 1127, 1831, 1126, 1124, 795, 
             1164, 685, 1121, 1830, 1120, 970, 861, 1097, 1098, 1785, 947, 
             946, 859, 791, 1743, 669, 723, 848, 785, 1738, 1014, 1115, 1063, 
             1062, 1065, 1791, 775}], 
            Line3DBox[{1018, 1811, 1019, 966, 1021, 1020, 1812, 1074, 933, 
             948, 934, 883, 936, 1075, 1822, 935}], 
            Line3DBox[{1046, 1803, 996, 823, 995, 1042, 1816, 1041, 994, 903, 
             992, 1084, 1823, 1083, 1082, 898, 989, 1776, 896, 699, 1734, 749,
              694, 1730, 744, 688, 1724, 738, 679, 1717, 731, 671, 1714, 724, 
             664, 847, 914, 1770, 845, 658, 833, 836, 1766, 831, 910, 827, 
             1764, 828, 1087, 1086, 908, 1003, 1805, 1004, 999, 1002, 1001, 
             1050, 1790, 928}], 
            Line3DBox[{1056, 1819, 1057, 1168, 1158, 772, 1837, 956, 1113, 
             1114, 662, 1737, 780, 959, 1162, 1163, 668, 1171, 1742, 1116, 
             1169, 728, 675, 1748, 867, 1152, 735, 1786, 683, 868, 876, 742, 
             1787, 692, 878, 886, 748, 1772, 698, 805, 894, 753, 703, 949, 
             815, 1794, 1080, 1078, 1079, 1130, 1039, 1755, 821}]}, {}, {}}},
         VertexNormals->CompressedData["
1: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
3zd28nVXWdy3CSUzD+O+bdTxCOH7zJasnTUV9/mrUeE13Oebl4dEv/tezQLf
buyQ9q0KflxW3zRozmtwcr+ZrJSSCfPivFUaRiSwKNijGrylEa51+Hgy5O5L
KHOSic21f8b0E3QGnT/WBNvSBs/H/TluMXcd3x+Wo1V9EfdH7WlMHh/PJgVK
v8TxOvG9B+D4ApNJtXx+NrWn/iicPyDlmzLO/zbt55OvPmWgdWKOjs32Qma2
7LnfjrgamJx15xE/n2BnqBLFzyc7uNJNC89nOOz7iOd/ksGPg/w8M1W3rF/n
eeKzMSV4/n1dEnfw88+GlW6/guff9ofLPDz/a++/dsHxV6/O3oDjpQ68uzl1
Wxo0l9lc43qArXjs2oJ6YG1z97eoN5KvHP/E9QbT+VHminrDT6yP6NC/9BGN
oj6iT6hfaLNYv9BU6oM9WCxuK97XPZL6ukdR//b11L99PfVv196zPavvOCEU
2Z+vN7sqYDpRZ+0XOxSA3waZFENhMQyY1et7on4F02w5qOQmWQ2jJn0ZaSQs
ZupX3etR/mVMfj+UXy3t2VVqnJCtOCUbj/M03FCai/Oklxk3Z3M9Vzqu92YD
/q6Pf7TKzcS1FOSoP09/ejedonfTmNT9k3OWVTGP8esAxytOPrIAx6+c1fV0
wm2vF3q1T8dXjnzH+in4FEm/qoK1poWjzH5UsqFeTYf7Iu7UNXlOr20xIFCT
yDN34X7qiM/yj25VwrZMTatmnSpoJ15Cb+IlNCNewkjiJUwhXsLuxEtoT7yE
WcRLaES8hFnES3iceAnHEi/hP6Q3LMX0hhTph5di+kGd7vV1sXu9h+5vV7H7
G0D8g3OJf/AG8Q/uIf5BQeNv/sGXxD/4lvgHhxH/4DTiH7Qg/sFexD9YQfyD
ESealshuaWJhN6s63lOSh/P1/k4HtJPhkJJklM1OASyRdGnv1VDBom5szdhc
Wg5lestTvgypgB+u+Q5KSkVs/e4rBz/frYYL3WN3KqoXwYMOJdD3bBa7+Nxj
uFxBHWwy7PK184MseNhQf9vCNJHlp6+Y+mhGI2yQe1RdZhILnZrO7G3Kj2YZ
T2qu1u5pgihrPVPvbxksI7G3+0DHeCa1qP7bKt9GeCDb5Yq6QQG7dmfKLou6
DHbpqNnG1MP1sPhM+tL1M8rZEROZd7FSBWzzhubeAzK4nz/hi1/Rqyrm+mPk
3i6Z5WxhekTr4fBK2NcSnH94ioh1HVh4dcgWISutcN3eVpUJ/Xo8CKt8WQ4h
dr2TfO2L2UT/lOyRvtXgbrv4zoH3+dA0+PHw0F05bMqFtDMnJOvBwd/xyL3o
VEjsJ3fkc9MrpmkZajz5UCNIzrJJtZlQyhYkD/IJOJzPIk5MSnJsegenv66/
ub2ykh1K0NTWGV3Ophkp3pFREcCkynELJu7MgcTKUYvee+axmxM+NUa710Pd
zStPp5oK2O7IZWqD9wlh+uxRl1S3F8CVpQMlrPNFMK7u/qD+H4Vg9LHSvVU9
FjoHJx+ImF4Fip4qNbCwCpy/GcZoJ5bDicjADhYuFey896uueC9CXFSN8F7k
BE/yuiUQss+yQvVc7m+MWxZjWHAuC8a+OB+FeOkJiHGagHjpKYNr0l9iwZx4
1qKIZ60D8az9jX8tmPjXDIh/bSjxr50juR7JFUheQrxszcTLFk+8bFUk/0ry
mP8fvjZPkpeT/ADJh1NdQwDVNYyhuobqK7Z3ep2tBtUm1V5WskLoKtPnemR1
LDw0WLPF+R8BKIxM3bHpciX06blmQ4xGOUwf/mRx2Btudx6rfiy/VALbmmHa
w+Rq+Oqv1vNkRRnrF9fjw8rgEniw6tFot4RqCF8RHiulJmT1sUHZeawKFgaO
72c0txhCX955vcRRBP0uRfRbZCiCLhlNd91LY0G3g9MTPIfS/ZP9+TmEnf2X
lOA53FU7uhDr6KuPWRm7Y/zrZke1jVh/FN3tCD/nMFbF3Iafc9jat7usKz/n
Y9ImqYf0EoFqpyGVBwYI2dubRy69Xp4DVhtNun0IFUJLiiii/R8B6yE5U2vv
8XxIjB5ewNfD4mujuvD1sNIf+Q9wPT0pf76J8ueNKH/+ceuZXXwfWK5Dfd+K
SyVMQ9ZQGfdhqHVRKN9PJjwn7ML3k51UOXkL93PC/OqrGHfWV0rfldNXxJYt
v82M/z/4wrxJ7kXy9SQP/AuP2BmSryL5DJK/Jn6xds3f/GKfiF8s4y+8Y4nE
O/aQeMeGEO9YMskfk1ye5JmZWR1VbtWw2mg92eA3VezS9Bd9ij/Hgp7SCmd+
v2DgnhszcrGfZ53mArxfLvorbPGe2th07DVrYRXbeWVvKN7TLZVb49F+qWgN
mc7vKZvl0M8Y76n0dskPXM4+B34YhfJHI3vqoFxB5ekZPg+7/2nNJ37fWb/W
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
          "]]},
       AxesLabel->{
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]},
       BoxRatios->{1, 1, 0.4},
       Boxed->False,
       ImageSize->Scaled[1],
       Method->{"RotationControl" -> "Globe"},
       PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}, {-0.5, 0.5}},
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}], 
      GraphicsBox[
       GeometricTransformationBox[GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Good\"\>",
           StripOnInput->False,
           LineColor->RGBColor[0, 
             Rational[2, 3], 0],
           FrontFaceColor->RGBColor[0, 
             Rational[2, 3], 0],
           BackFaceColor->RGBColor[0, 
             Rational[2, 3], 0],
           GraphicsColor->RGBColor[0, 
             Rational[2, 3], 0],
           FontFamily->"Helvetica",
           FontSize->Scaled[0.3],
           FontWeight->Bold,
           FontColor->RGBColor[0, 
             Rational[2, 3], 0]], {0, 0}], {{{
          0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
          0.766044443118978}}, Center}], {1., 0}],
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, False}, {False, False}},
      StripOnInput->False]},
    {
     Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
ud7/twWC8YkmYPXZjUosknK938Jw0MhEtxVMPEwDDcIjyE35wqiXi2g7eKCz
37Zszxhyu5vNGndSvwNMOhans10fR25s2l/ho9kO8Lw5eqp4hHK9T3Ug+hLp
Uweo80sxY/ChXNe3ni/TprZpA1F+1ZtP3RhFbm5MHDdbTZtAwN6PPkZHhpFb
q3Pa9KZ1DwKduLHii0XK72pSLl7/s8ZnD1ZaTN4I81LuUymlcn4su+wPxDW9
63jKKPejqH6pJGdi+cLg1OE7v2oo96Ms489vzauNAmZftr8+JUi5H7XIuHZt
jvkbUClIN1PKo9yP8mYz8739JAFULntPpvpQ7kedLgstnl38DkZUghetYyn3
o2w8i//01iaByOyW9750U8htmD5gU7dgMqCVBcU0cZT7USkhPPxXF5LAQT5V
UXplyn0nhR3hNzKWE8EmjYSjJq2U+053m/nE7xjEgvL60OoOQcp9J2ZOh4U3
Bs8IZ/0uhGwrpfzuS0D07i3D/FB4ds+2x2qclPuoc+aujiU06fD7W/t7wlsp
brSJ3+4pmhbAnTR+/k0RlPulPi73vi+/LIX6LeB2jzHlfmkANDz2L7USDhPC
+3+3EJEbu1Zxler2Writ8FcXnzvlfukeTeOgaZd62Hb7uIrzW8r9UqW+lAsz
vg1Qacc10U09E8jtXMGNHq/ZBnivVd/nyzPK/dLi62zSTdkN8GfKSPbXfZT7
otfkp8fPeNTB/R9j3qsXjiE3/82f+4t2VEK5mhONj1Qp90W96jM9b+2/nz/E
LrKYaUz5XSKThTDXZavv0N1/S9bZ7FTkdmA6QKH7dBkUHC1/3dVXjdzcPU7t
rriLXb/1Bt3orG5FbnlGh6RP57XBE/qH+fydepBbGNs7VjnBbnj+rKzWle2U
+/lS3q5h/Zl98FV4B7W9POV+vvyjdTP3uAFYXH/b7fookZJHzFYNzVwH4Y7q
sqmGZRJy49TOyw+bGoS67/cJLTwfQW6VV1YnPicNwrvSJiyZJyn37adtKqiW
eAagm9EE6x45yn17+eSU8/r2XbCS9ki68ccB5JZVOq79ic41/waPboJG+3vk
dlxFJoJcN1yE5Pwci9wsjWRUhPvroNMLIYbxpkLK93FnZF7+ONIBRQ4/OUQa
qEZuCSP8p2L9++Hik86T8meakNuLLsshocEheNNgQXe4ppVynjZnf7BQx64n
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
ItGjKp+nZdJEnvf/AKgqNaw=
        "], {{
          {RGBColor[0, 0, 1], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNm3ccV9Mfxu8591yVKCqSSkUDmQ0jpJKRBlpGRCWrH6koFJoaSEIyysge
GdlbdmTvGdl77/F73r/n9PL747zO53u+55577jn3nM/zPJ9zWwwd2feYWBTF
4lQUpfIPlPi9tlJTpTWV6ij10J/rJZcPlL297A1kf6ZUKTVQ+kRJxUV9pY8K
t1dP6TulWkrrKX2jVFOpodJXSjWU1lXqp8qb6OLGsg9XB/5S/qdSX5W3Ufn6
sveUvX5ym71l99eN15HdLBRFF+V7KTWX3VX53kq9VKdpct96ym6c3Lc+spsn
33cf2a1lN+Ia2S2T+7mX7A2T+9lf9kDdq4nsn5XWKNzPH5RWL3zto7rvT8pr
K72r+ocp7Sz7PeWHl+7fCuVHlO7fq8oHK3WU/Zryg5W2kf2K8oOUOsh+Xfkh
StvK/kf5ZUpnyX5Z+SCldoyn7rup0o6ymyjvzNgova//j1TqJnuD4L70UXpJ
ZQcobS37ReX7K20l+wXl+yptKftD5f9R2pX2lc9RmiB7pfIRSt2ZX+VHK+0m
+1PlI5V68A4oP0ZpD9mtdd/1lLbjvVLZUUq7yH5T+RDeIdlf80xK42V/r/xc
pYmyxyrfR+PfV/ZExkH2QbJPZXxkHyj7ONl9kue6VXBfBii1DO57f6WNg/uy
r1JH2W2Udpe9UfBz9FOapHaGqp3Bsvcv/Bx7Ko1Teb/kOqfIHiv7gMLzuWPy
nDKfOyXP6dNq81PlGxae/30rj/tJsvdTnYGyT6Q8uZ8TZB+oOvvJHs+8JPfz
BNkDkvs/Wfahsg+WPUZ2r+T3/Hjq69p9ZI+W3TN5fn+QfZ7SJNnTGHOVD2Ut
yV6odAbrUfk5SqfKnql8tOocJnuG7GNlD2dtyj5T6STZZyifpvIjZU9nfmUf
KvsP2QuUTpf9l/JLuEb2j8rnKU2W/bfyS5VmMy7B88+cjuJ9SX5X/1T59ko9
ZU9ljah8iOxvZZ+tdLLs03gnVT5M9lDV7a90nOzfVX6x0izZvym/UGkm86s9
5DDVOYE1q7LzlabKfofxLL1OGur/Wkqb8H4qb6y0ueytdO3xsqfLLnXPKxgv
2Un2lbyjvAPB95mvdGTw/S9QOip4PC5UOjr4uRcoHSv7bOWXKh0TvI4XKo2U
PUf5JUojgufnIt552aOV5sq+gXFObucaniX5Xlcz18l9uKJwv85Tulbl85P7
cB1jktzmYvaQ5Htdz5rS+3Ox7BuZu+T+jAl+1suVblL5ouQ+3yz7CtmXyb5F
9lXJdW5l7aidRbJvk72UMZJ9u+xrZV8t+87S/uVa2XfJvln2dbLvkX2b7Btk
PyD7Ptk3y75P9l2yF8u+V/Ydsm+Ufb/se2TfJPsO2TfIvkb2g7IfkH2L7LWV
P6Pfy2WvJftp2c/IriX7EdmPyV5d9mOyH5ddW/bjsp+QvYbsJ2Q/KXsnvQNT
NRbzZK+p8idV/pTsurKXyX6acdP/lyg9KHupyp7Tf7fJrq98Ob9l15H9lOxl
shvIflb287IPVfu36NpHCvuFr/Gt+n1VcF9eZX6D+/IadQpf94LSlcF9f4W5
Dm77DeY6uF9vMnfB939Xabjudad+v8i8B4/HW0ofFvb3axX2tfh7fD2+DD+H
z/29sK/D541S+TClKbKD+ruo9DuN07+89Hv8RWF/Cya4IXge3i6ME+q76v8w
AL4X3w9OAFOAOdbMfcDP4lvxw+AGcAJ+fjWlfmr4dKUluuA2tb9Y6VmVN0rG
KLS1KHieX1baIBkH0KcmyTiAfrRK9vfco6bq/1Z4H9hPZW313xayN03GJTz/
duzZpfs3oDJuwO83S8Yi9K9FMrbg2fClmyf7U/ztlsk+90DZW8tuX9jPt0v2
9TwX+AZsAxbokIwH/lFayX2UulGW7E/Zw3ZI3seGyd5V9g7MtexOsncqjBG2
SsYJ+Nttk33um3reesHlVZ4b5uX+YJuxwv93TfajYCp8TpfCezg+B1yBP985
eU8HC+xX2QfvRlmynwV7sMfTzxbBvhpfCUbonuyb90r25fx3rPLdk/3vnsl+
guv3r+zn8HH4enwjfcPXTUz2dwtT3isL+3p8Pz53k2C/yr3w7fh4fC4YAF9E
/3sn+1eeE19EHfqwg+y2SoNkbxaMsXrJ3jvZBzMWfZPxCm0dL/vk0tc/mLw3
sS8Nquz78fsHJ+MYMMzhsqewF3M/td1J6ajC2K1z8jgPS8Yo4JPhyZgAPDAw
GSswFt113bbBvntQMp7gmY9M9qn406myT8e/8r6Bl7IPHZOMA8AAs5WP0+8T
ZV+e7DPwF2CBE5PxwFx8suxTmPdk34xfxldPSPbXYMbxybgRrHFKMt54VPYj
sh+VfXWyL8GPXJzsk/BH+E1ysAS+d06yT8KH0hf2GXwo84x/nav/z0r2lexD
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
eB2sDv7sme1p2QaLwtPAx2BjeAI8BB8EB+idy2Np3gJnWb00VgYnz8vtY6/S
ItE50SHQI+DRwyufhVvGvlP53Npb0Xo/ZyTABc+XPmdJrIE4A2cwwCzj2HeT
/dWdyneqzPfulb1zZax6KbpRZf2UmABnLcBHN6ITV+ZX6GrEo9kzGlSOU6Ov
Ef/hXCt4AT5BDA7+QMyKs6PgR2I4nBcFp4BbifGBWcHgxPjAyL0rx/XA+sTB
OKcKTnk5+dwp5wLXST7/8zD7dvLZDOIEx+na9sn7B5oo5y7Yw9CzOUeBnye2
wNkP9qe+qt+4st5EHIMzJOCmt9gzSvuRz5LPexADID7AWRF82jGVzxyu0L1+
Tz5PiKZPzIFzI+AIYiacUQFzjax8TqwsHbPiXArY55vkc4+cI/ms9PlPMMlo
1d0i2df9nHzGA80RfZTzA/gutEbOjbBHooNy3gBfh9bImQf2sy/V3qzS++EX
pc9KEjvgnBRnL9m/d6schwWboq9tEK25EY9Ha5soe2TGqHUL49wh0bgXvgKH
gafAUeBF8COwLPWJa4HNj43mAOT8fqkw/4MHwlWpyz2IgdUvrd2An8HX4Gy4
CWe6DojmSmicnGvFD8Dn4HXwvgeVj4s+A0UshXOt+Myjo7kKZ7jgI/BMOOCH
hWOmH7BXR9u4WPhFn8r8ietGRfMHOMYRuQ3qcg2cijrc4/3CvBo9Be6MttIv
2wuyDWdfszSXg8fBDeAMcDd0pX2yDefcN5rHwKvhwA8V//I9rmXNDMjltysf
Ex2TXa8092aN1C2tF3Df4Xkc7szPMSLPBeP/nzy/o3Kd9/PYHJXHhDNvB0dz
XjQIODZ8Fu6O7gD/Xac0H8Y+O/eNOpzhQBtCF2qq/Jxovo8OsSx5zNAfm0fr
Y/AKtMjJhXVPtGDsb6NjDGOzb0UrPCv7QTRKNMNZuU36gi7VNmZNNVqjpD66
P1ozOjN67brRmi26aINcjj6Jlo1mhVaFhkX/0TXRN1kX6L/oy+jMu2QbnZm4
0drZ3i23idaKTl0/259E69Rciz9F/z07+2t0QPQ6dMHNo/WoP5RPj9ZgW2bs
wXptlLkYbRMn4cwMGJYYLPshOgpxY/YTOD2x1o7JWAyszTkc8BHxEM7YMDbE
kfAX4DLiYJzP4ZnWR0+O1lJWaab3ZNyChoum/Wu0vj8tYxh0efTh09TOrck+
Fl26SWV9FF0UXXtqYW0JHwpHRi9vHa3ngyXQuNGHZ4JTkjEFOu9euT77J+fe
4DWNmedofYn9nLN9xElH6roJleNY8DJiqWBhMDmxU/ZwcDJxN3gYPJS4J5ga
DIZuT7/wu8Rzwctge+KYcESwIjwM3sU4oMGj0e/DGFaOh8E9ifOwn8MXiCs1
y/5ocuW4CBgLHRX8Ap4hXoH2fXzluQOPgyfR23nHwVvo9qwhsBrxXHA6Girn
e8Ev+HDOD+PH0bw5M8wcomdzNpi9hzgD575Yc8QKOA/G/Gxc+fwYz9K+8hlm
eHaVfJabuQZTcN4YXIFOzLll8BG6KeecwUTEYzkjDaarkXz2Cf0SnZvzzGCo
EcrHV9ap+8s+oTLvxdfCScHsxKA4Uw1OBLNwHhvcMkT5iZV5KTjhf2eGCsfo
OfPAmRg0Jc69giXAQtMra8RgoRmV9QX2T7RAcAj+CJ0G/1gva5tgOnDRtMoa
NO/VmpVjQfh44tfj87PUrhxbBV9NrRyHBmuiOYOF4QtoVmhwzbLGiI9tmnVF
9t2NdO0byedpeLfRGNEHwcxo2MxFw6wJX5LXKVooPhN8z7kddCDeQ3AbmI2x
/SeZ/9P+qMrnn8CXnLWAz+2tsrGVz1igDXI+57vsazi3g4YHLyNWAIbpmtcm
/qpTXu+z8rysVlk72Ev5mMpnMtC4OJ+D5kT5BxnLcd/PMu4CMxOrJ/YPzif2
Ab+BdxBDYY+Et3D2DK6JHsU5nV8yHuDsDRoeGjxn0sDa7KXEsOBSxMD5FoP9
G4zEuVNixfSX71noM7E+zsey37eofO6O9Ugcg7OO+AfiUZwnhGeAuzgjSjyQ
GCNn9sDyxJn5TgSfwLkDvikA7xO75iwo8Wt0Dr7NQcOoqfyh0ryJMwKc/+Sc
ADo95+jYL4n58C0DnDJU/kaG/Qdsy1lN8C3xCr5hgacSw+Q8J/7tl9LnOIlP
EYPl3OCAvK45r0ksZrPK30Ew/ug3fFeCFkL8me964N+8RwPyu4SGxLc5HXL7
80v7azQhvsFBOyFOwnc68Gn0Uc7+gYPQxvhGCZ2GuBbfZcBrOevBtxvwNtYZ
39ew1lhbfM/C+iJOyxlI/DM8iHPmxLiJe/BdA3jkreTv4Hg34D18KwH3IfbC
eVq4HWdV+A4IDYY11zKvO86F8W0dugXzwjm6pYX3Mb7fWFT4DB3fu6GVctaG
b3PQeDgjxvdxaM/E3Pj+Amz4X8VNpaM=
              "]], 
             Polygon3DBox[CompressedData["
1:eJw1mnkAF9Mexe/MnUmRrURaKMoWKlpItCdKUUmkKAkvJEuUVi3aFUmLVJZE
yrPvS5GQ7JLl2d+zZ1/K0jufd+774/7mnnvvzG/mzr3f7/ec79QdMKT7hXkI
4V79FDqO0vENlbpZCJ+rLFJ9jMrPmdvalyGcp1IlhnCDcFT9QpWPNOYI4WZq
/1z1DqpX1bG1cK4yXLi18GiVTSoHCm9WaaW+bcIXq95Cx6bC/9axrfCuOv5L
N3W+rv+06n/o/v4UvkD4PeFGGrNReLDwg8LfqP8hHS9TqaT6Dyp76XqdVPqr
bZXG762x56j8KNyH/1BfO5UTcj/PeB2/Vumq+k467qex56r8pvpZmcdurzI5
8znf6f9nlJ435utNHQ9W/1eq11MZIfy8yg70qRyjvr+Eh6h+hI6Zzp2l0kjt
W9S2v673nspa1Wvo/n9WfZD6X9HY6mr7Vvhs4ReFdxHeKnyN8KE6/0fhJjp+
or6jVa+s42HC/9LxcOFCx40qh6jtG/5LpbHq76rtUNW3qRyo672v8pzqNfX/
vUrP/xUaU0v4V/XNLP0eeX9H6/ytqv9D9cOZL/W/q7JGeE+NP1z9H6q9mXAF
Ha9UWa9SRfhdleGqP6MSVd+gMlL1V1VqqP4x603n76gyQ/XurAvVt1MZJ3ws
/6f6ozr+qP96VW1thEuV0ap3yD2vb+d+Vua3g/DOKrNU75l73l7Xce/M81dP
9/6OymrVq+uaDdX/Vu53+RtzJvyk8G/qe53xwo8L/xL8zl5TvQFrOPM1n9a1
pmi+7lL7tcK7R98D/71Y+Bn1t1V/b+FndY3XhHdXeZ26youqT1X/bjrnRo2/
V3iS8AqNnyr8XO574l4qZR7HnDFXjF+i41UqFdP+fEHHA9S/KfP6eST6ejvo
uCL4ujNUuqXrL9ZxHOs07bfn9P8dNL6P8LrgvccefFJ9l+ZeK+zZdZnXzPW5
2+n/WuOPVN8RKrXZmypvqj5N5+zDPGrMOuGOwqezb9T/itqr8T5UX6PyvOrH
qr+v+l8QfkzHYayhzO/gH+rrXHq/s++fTWuEtVFB5Ybca461hr2Ym/s+ud+t
wqtVr6/x64WzzHtxeun3zPvl2vzHHtHv78vce4691oVrJhuG7TpJuI7Of1vl
Kd69rt+z9JwxJ9WEq/OuVR7FFgmfoL652ATsTbqX+3X8IvieamvsWypP8K7V
9k/1zVH5gDo2WuP3jrZ1D6jczbpTeVv9y4X30bmbVJ5WfQ+11dLYY1XO0JgV
arsHW5x8wecqL2GrsSHqq6ayNLeNxDa2Et5XfQ/ntrXsmZdVP4g9n9lenZX8
RUe1PYdNVn9z1fdM9nfP6L7ThJdl3iczVXql/XK9zt2x8Lu+Rm01C68Z1kpV
tW3O7XPwNT3VNi+3zcXW4i9qaOwbKo8JVxG+WX0TmHuVYzOvNf6Da7PmblIZ
i6/J7KPW6tx26j9VbWt1/tGFbT62vo1wa9UvLz1PzM9EHX9S6Yv9xP6q/zNs
KrY5eC7woTwvz92BPh1bqu8olUHCI0rPM/PbWPhTfAL2Vf3Hqf67yvf4H+En
VW+t8Z00/h7hq7l39qH6D9DxLvU3V38r1Zerv5HwJ4Vt72HCq9iPpX3zHcJN
hP+j8gG+XLiZ6l+ofIS/Ej5TY4eoTMG+CHdW3xaVH9TfVfgi1XcsbevPFr5f
+CjhdtwLa1T4SOE2wnfi37BLev69dDxT13hQ/S2ZI+GV6n9Y+OjStnyV8IXC
lYVL4YHCFwvvJLyd8CDhR4WPYb0J3x3sK/GZ2GPs8rmqV1Jbrv7+6j9feIfS
vvEs7Ifw9sJReIDw48KtSvuafwrPEj5AuKHwdfhDHY/Udevkjg8Wqb+h+psJ
L1L/MuEmwkcJ3yx8nXAFlbmqX887V/0b1gixgXAr5lLlS2IN4TtUb6bzj9H5
twsvFW5cOnZYLNxC+GvWCL5Y+JTSz8yzthKepHG/8y7Y+zreqrGHl461lqr/
Pvyp2m5R/VaVlqpvZg1ofGvhY1hrrAHhtsKLVW+k85uzV4TbF44JiAU6CbdT
/ReVb/HPwls0roX+Y7/cMcI89R1cOlZYgH8V/hify1oXbsDaU9kofKjwAtUP
0fgmGr9QeIDqF6lMzX3Ph6j/Q2ysxjdkTlU/SP2N1T9PuHfp+ImYp6Nwc+a2
cGxxpPANqjdQ/2EaPz841iPmO0S4pc5po/6fmGNiB/UPVH079Qf1n6HDlcJV
hWsIjxTuIfw3c6LxPbBZqu9PfIY9E54qvI/wgfhZ1oOOtaNt73vCt+feW03T
Hu6X4k/uZXaw7foe+5jZhjVN81FR/ePVNkPXry98sPpmBfvyquqbn9mnH5r2
b1TblWqbjT1R/WrWispkjQnCl2Ze43eoTFNpm3v8NI3fV+cfhJ3W0CnCdUvb
munCTYUvKx2XEI9MFq4jvD/XwT4J7yVcn+cU/jvNM/MNB+ib4nPWzFT1H6rx
F5f2y/hj1s51peNO1tDh6r+0tJ/Hv/+p41Hqa5A7xmavXlv6uXieScQe+HPV
J+v644Vrlt4bE4KfZXZpO8ozXaX+GsJ18XvBvqm6rr80s49iL80pzWPYU8tz
r82WueewS+EYndiyG/xK9WoaX0v9o4W7Cv/BGlP/idhX1Uv1/81cCB8r/JWu
3Vn141VGC++u/to6f4zwaaX5EBztJOGT1P8Xe5B4WfhS1UeV9nv4uxHCo0vH
LcQrI4V3K+2rRmn8ycLbCse6PbEnBALq/134ZPZTYc5CLN2L/Yg9K80d+gn3
FS6E/xI+XXi2rlsj2rdvFL5c/bsQP6l9uPBw4V2Fq+O3/+/jo2MV/DFxUJ3o
2IZ4iL0MJ4K/sKfHqT6udByA/x8jPLZ0HEb8NVa4uvDewuN0/dNL81V8fG/h
6eofX9oP4X9OE86Ft6p+SvBahDPul+zYnaxzleNy77dbNP4w9R8pvIT4QmMI
nrgW//d0dPy/i473sv/hXiqXqz4MfwNfI35J8QH8r7twxcwc43LVryjN4QYk
+3xOtK3cVWOGqe/E0vwSntkfPgdHFT5IY4ao/mX02jkO/wk/J/5K9g++Av/B
d7dK9pFrcC7XPDk6Xq/M3sP+EQvCyZK97YiviI719lO5Jnp9fYW9UP9I4a/x
u8xl8m88M8+6m8afr/pn0bET8cZg1T+N7msqPBE7VVoTGCp8AdxKZXf1Nw+2
z1yDc2nDX50XHSsxp/gnnplnhVNerfrI0hrFJSm+aauyR+Y5+6pwPFZT9U8y
970TbcsYg3/qLbyT6n8Hx4PnRsdScNph2D+VU9mbKk+ob3Jpzvmk8GPY2tKc
9vFgW4xNbprs/oNqn1haY3hI/a/oWi+r3EcsxTvk3THnqtdROZh7x/+rvk3l
3uTPGc96g19wDmMZszR6vf+i/7omOD4+Xm11g6/Js3wUvbZ4JvYKGg/xMHtm
bvR++w7bqP5Bwh+o7Kz+RsFr88Nobtk4vU/i4w0a3z7FO6wh1g7ndFa9FjZO
eJ9gftNFbfsGtxHvM4Y+ONCc6P39ra43Vnil8ITSnJ94EX0Dvo+twt9P1PkT
Cq+/84L1Gfg8vpn7mafzfov2fROD498zhPdXfbvMekiPtB+2qKwRvp/9RPwH
B9B/P1U49sYm8L7WqP8U4r3Mvu/PaN+IDyT236Ewd4YDwD3gIPjnlcLHq76r
+jfgC4Q7sXaE1wv3y81Fti/MpeAkcOGdhF8M5sRw88qFuTMc/Thsj/BLwRzv
cpWncnPdysHaQ6XC3AYNootwVeFXsO25fSc+lPhxWe5YJhaOfYlp4G/Y97eC
74lYbX7h2I6YjVj4xsJcgZj4hcLPxLNwz8Rqc9R2Q3DMBveFA+NfV+Xm21XY
A8GcHq7zROFYHM5D7Da3cKxHDEfs/0hhrgAHYC3tVZjrs6bgHw+r7RHVp2Tm
Pw/BYYM1PfSfE9P7R1Pqyt5Q2/eq1w/m87RR36wyVP+3b+Gx6FDY+4qFtYrV
wXrYSWo7QPWfQ1pLhbkpa4r/ql+4j/88QXjvwteuF+wLDii89vAJY4WHl9b4
zmcNCL+Oz8m8h7EdKws/CzYEvt+N+Dv4GYiXT0n2gHMu0fhupfU3dLg+6ntT
Jc88X8Tnp6X9Rxv8sU/an5zTl3evUmSeE/jq6dH3ThvnvhEdu3GNM1XfFL23
mBPu5bVoW8o9wZf7pvktM+/Ft6NjO+ann+obo/t4JuLHbcn3Eh8T/6Gvwk2w
b/Drs6J9V83Ez+6K5qIjM/OxZWn/X5aZP9wezbWGCa+IXr+MRR+D/6xMtmaU
2p4VXq4ykXMz87UH1P9gcNs9XKtwrICNOLA0/+O/GuUeu0L46sznwNcfTLaf
Nu71psL/9T/+LHyb8FX42szx7EL8q+q9M9vnn1W6Z/Zv8I3F0bFmv8zx43XC
F7H2UrxzZTR3bi68hHcRPZb4Ev51ZzRXH5GZv90RrRWg6VNnv9NH252F9zNz
Nykz/7lWZajqAzPPLfv1isxzDP9aHq1N0MZ/LSzMNfjPK4R7CTfJzM/h08wp
c8kcwIdXRe93NF/4xYLoWPI04ZnCv0THhgMy6xOThXtkzlHcFG2fT88c/94a
bd+41wnBfIqYjliuP/Eea7lwHf+HP92mckZmf0S8eb3wxcHvgGfPC2sDzAF8
gnviXk7OzI8WRXNH7oFnuVltYzI/E/yKe+Te0JSu0vrpXpr/wQPhb/Oj48lB
KR69O1r74Br4xiWF5wYfWas032Psvrn1DJ6ZZ8XGM3dbotcSczgt2n+ekvk/
4Es3qO2y4Hug/mv0s9B2o+pbo+ee+I94f6bwqcLHZX7WP6K1P54ZfjE8Wsvh
HY9gbOG12D7z2uxTWLtmjaJ3nK222plj0Amqn6e2NpnXNHrOpDT/5JCmqH5J
Ye7D/Y2Kjs86ZY4J2As/qHRL58OHZgtfGJwDGqP5Oql0nbwQ+hAxKbEo/0k8
8mP0XqINfnet8JDga85Q/dvoZx8crBfMEr4AW59Zj5qQ9mPrzGvnp2juwjMQ
b6wurM3cFqynkG9Bq4Afw/3RAFom3nkbtrGwtjQnONYdUnitE/PC35hj5pac
DPrZlPQ+O2aOtQcXnjti7vHqO6fwvfFMzO0Fwu3S/aHHEVNja2hjbw0tfC32
GHP5ffSzMqfoQ3AGuAIcBL6wWaVzZn8G/2TPs9fJWaGnwIHgPocJ9+PdqTRQ
/ajMesxV6X0dw/tiL6qtZZpv+DQ+k2vTBl8dl+afHBl8lXMY2yKzvjo0mrvy
H1fgzwr3HZ+Zi/UsfG9wMnxx/8LXwifD1y+K1nIPyqyPXhzN5Q/JfO3jC9f5
j98K83vGfpf53s4q/CzcI892dmEtmGeEL89I98ucsZa+i+byjEe7wt6gNaGp
XMraLpy7Qa9CHxgWrX02zqxPXBLN3ckBUj9BbQ0zt6FPcA3OpY1zuxd+F1zj
MtZ+4WudGaw9YR/xxWhQaDVoNviKLFr7wr+gHaGBPRMdf85J/o+5g6+2CJ5D
tEHiEbgIGiF6JfuB2BuO81R0/E2u4GnhtdHx8dzMPhT9/pnkj2l7ITpeXqD6
Y8HaOvELfBSNnfzS88KPBo95LjpeJzdMjLguOr6elzmGJB/GGPpoQ5tmf7B+
0ajhH9PVv3tuG4p2yPtlbtEQ4YujmYPcNglt5Nvkv9BIiF3eU2kQHMMMiOb8
cH3a0IpY76wlNKOKpdcL74uc3c6l7R+2kxwgWjn78+xgzZxYjRiQ2K9esDbO
fuddopGjhWNfeddo4nBB7DHaCJyQfB1zwlzAYZ6Mjs9n41sz55qIn8l9kXNC
T3g1OpdMDnB9ND8hV/lEcK6M+JfcGDkzcsnEx+RiySmTiyMnhzbyRO5cNfEx
uXJy1nyvwPcLbYP1MPgG75x3vTBzrhI+QO6MnCS5SuJxct3kAMmHoce+G8y5
XozmX5wLXye/AKeHy8+kLZpvzEz3D7e4p3DulDkh//Fo+v9pmbWAxwrnn9EE
5iY+tmPwnJCPva/wWNYg+RA0A/57euZ86gMqFYLniPwPe4C1z5yjLTxUOF+O
xoDeT8xIrEjOnHt5oPC1uCfyKzwD9845aJ2/pngAzZN8IN+GkDtTc9izdDw1
PjjngXaJvUDbRMPkWwT0TmzJO7lzQ9g7clXkiOAicCa4EvE733Ngn9A++cYE
rZF4D+0RzRF+g/67Jre+gLaO/UHbRGMn14CeRe6BnAPaJ/aId48GilaIPkUu
As1wQNpP2BZsDN9eoGfiCz/I/W0D+Qy0ohtza6vcI/eGxkqemvkgN0oOEr2e
fBtaPhx3dTT/Q3vBPi1L/hhtAY7xUmGODbeG0w4snU8mVw3nX19YA4D7w9l7
pv3C3me//578X5fgHOCGwnwZbRTOjv7Mi8L33xKs1xPTE8sTo5LLQD9DGyGn
Qa4Jva19cM4JfoZ+vy63vlaltH8hViNnS64Df048Ss4DrRf/2CdY80Xb/iH9
Hxo3WjXx0dhgzZp8Pd9L8G3I9ti40vHOuOAcIN/vkE8mN10xWIslHkRrRpNF
KyZeILZEM0bbhe8Qi6Pxou0Tv5JbQOMn/42eTP54U3AuFv6ItkhOllwXeleb
4JwX/JJ8wtrcY8h9oqeiH5ID/XdhPoreSE7888L6ILlRct7kTuG3zB05VHJT
8HPWLjkqcnXop+T6yNmRW0P/bRecYyNXiX7WOjhnSW4QfQ1tlhwh+X708Ff5
P5UfC+unHYK/OeJbJPLTaJELc39v0Uv9b2XWcD8qzMfR5vgGhG8J0N/IpfNN
AbmM/qX5NDkN9kef0noa39Kwv08trRfz7Qz75YtobXl08vdnlI5PydGgHxWF
1yM5GHIrf0XvF3IsfNvyYrJvfLuCNrk0rRc0+UuSvfvapuF/z/dxtH3nmyv8
wcml11O99O54h9gWckLYDmxI3eAcEvEs+fVPc/s4vj3pUdq+7ZPWPnsAbYIc
FnwB/ZpcAZouvndAik8W5NY2B6f1xDcA5C7RM9A3yWHCv9AL0COKaH0Gfg/f
rRSdG0AzWh387UOL0v4D7kvO7eXo71/4Foh3Tu787sJcmxw6uXX8BdoEOXZy
s+gF5J7J0aItw6fJnaIx8z0c34e8H2xvyOXBX9FKyOnVY5IL5w7JoZGLx1+g
PZCT51sC9Aq4O98U8O54h9Wi/SX+B3+FPlI5+tuiR1I8xbdF+D/8J/x0p+QL
8Ans90dy58rRN5YG58xZj+TY8F0VonPh6C3LgnPicB/0lZuDORC5GPgzuXFy
MsQ2xDjkA+bnjt/hE+i/7ye9cbfCc0uuaUO0/rkkxZPk/4lpiGXw2ejFcHC4
N/kb1hJrCm60NPEB+Abx/se5+RR8Ef7yGTY9Wt9dlDmGgJ/BnwZif3J/C4Se
v0vwN0HsF3KScP/bcuei4M/kUslJwf3Rr7kX+Dm5Vfg33JAcK/5hQ4oP0FTx
T+QT0KbRKMkNTk3nkyPk+zO+uaLvHo3pWvp7NOoDc/uvV1VWZp4jtFPW45QU
H+O/1qd4gmdkLPot30pxDt+7PUtckjnm59sc8hl8+8Q3OuQW0LDgk+T0uDfu
8Yvc+SP2K9//kAu4L/f3OnxPiv1hj6JXkF9jLPyed8U7w//empvPw8/Rw27J
nauCg8IPyYmSW4DTw+XJITKWc+D+vOP/AltSOCY=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV0ltMj3Ecx/Gng2TkkEhrM6mLyJBmJUO1WctmlJylA8vMaDMuqLHauOHe
qU0bWbS0xTRMi605x6WcKse0mcnIjeX1XLz3/Xzev+/zPP//8/+nVNWUHIgM
gmAJxqE7OgjyhSLyNKZGBUEW9xnvIoJgnt7DV+ux9iLkenzEIW4KFys3YAhj
XCneyotcO+oepXbWymmed4a/haV2vqLf+XxnD7kce23cBD0vhFvBdXKT9Hys
5jr0XL5APoWJfKbexEfLK5HD9+mpuC2ncvc9q15PsjuHW8b9MFfpd/nJegEK
uTXmBv6GfBMpPvtxO4nc7PCzOv8evjMujcuQl3O/zTi9hv8iZ3ExZgXXKre6
z1U9Sq7iOswO7hoXK9dgCI36S+Q622yvmlssP+aeYBt3mKvgLupvQu+ZRXy5
XOhsBrbo+81se738CxTrG/l7chfSncXola4f1DOdj3lXm7hSOcP5Wb4bB/Wt
fJ/8GmXOjnDbufd6P3ZzZXojXyv/5EbC34nb5xmf5CXOos2jejyfJGdzw+Yj
M45vk6fLd8LvaP5DM/cLx7idrrvENch/uFG06OXh/9SMRIuzPPcawbDvtIB7
bq85fD53Rf6LE/bauUrXxpjj0c59s7OeO2+nDoPukayX4LJ+EnPxwd467pxc
G74bewu5AbyS093vAd9rJnDX5Vnhf9IzdrmuR+6Up5nx2MHVmXu4JrsDSOCK
w+8cfl4kh+9af2avy95MMxF7MYgLzp+G/0Fn/wFdK3mC
              
              "]]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jlPVFEYBuAziKwyWFGxhFiRAKGH+QODoaBA0YTCMAmMyBpgaGhMhIKQ
sBe2SkEJg5HWmcJaFkFFllDRUEIBgeeG4s37nHu+e8+9k6l/N9Q5GAshfJTB
ghAip/WFfi6NhSHc6zqJ23z9JIRmruEUJ6IZfql7zLbyW85wktPcrefNTnEf
f+ZZnuQ1vWH2E69znld4m7/ovNk8b/Gw99rl93rTeo/3ZcH6QP+WRT7UR/JH
lqz/6n9S71nb7jvmb/q/XrZ/ok/lu2sj1mf8QafkF3c8DaGXc/xK//CcLCc5
y185wau6wWwLz3A1v+AMV+k5s/1cytP8hm+d2a6vffcVt/Eln3NT9H26y2wt
38mQeyv1gP5pL84V0W9p/UzfSLnk7E24VhadJ+NcooulSMasvV5wVBhlRwQV
dmKP/4MHR8tBqg==
            "]]}, {}, {}, {
           Line3DBox[{626, 689, 690, 802, 1419, 691, 692, 805, 705, 1394, 706,
             808, 713, 714, 1381, 811, 721, 722, 814, 1423, 729, 730, 817, 
            737, 1401, 738, 820, 745, 1406, 746, 823, 753, 754, 1383, 826, 
            761, 762, 829, 1427, 769, 770, 832, 777, 1413, 778, 835, 785, 786,
             1385, 838, 793, 794, 657}], 
           Line3DBox[{627, 693, 661, 628, 1387, 694, 663, 633, 707, 1395, 665,
             635, 715, 667, 1421, 637, 723, 669, 639, 1389, 731, 671, 641, 
            739, 1402, 673, 643, 747, 1407, 675, 645, 755, 677, 1425, 647, 
            763, 679, 649, 1391, 771, 681, 651, 779, 1414, 683, 653, 787, 685,
             1429, 655, 795, 687, 658}], 
           Line3DBox[{629, 695, 696, 803, 697, 1393, 698, 806, 708, 1396, 709,
             809, 716, 1399, 717, 812, 724, 725, 815, 732, 1400, 733, 818, 
            740, 1403, 741, 821, 748, 1408, 749, 824, 756, 1411, 757, 827, 
            764, 765, 830, 772, 1412, 773, 833, 780, 1415, 781, 836, 788, 
            1418, 789, 839, 796, 797, 659}], 
           Line3DBox[{630, 699, 700, 804, 1420, 701, 702, 807, 710, 1397, 711,
             810, 718, 719, 1382, 813, 726, 727, 816, 1424, 734, 735, 819, 
            742, 1404, 743, 822, 750, 1409, 751, 825, 758, 759, 1384, 828, 
            766, 767, 831, 1428, 774, 775, 834, 782, 1416, 783, 837, 790, 791,
             1386, 840, 798, 799, 801}], 
           Line3DBox[{631, 703, 662, 632, 1388, 704, 664, 634, 712, 1398, 666,
             636, 720, 668, 1422, 638, 728, 670, 640, 1390, 736, 672, 642, 
            744, 1405, 674, 644, 752, 1410, 676, 646, 760, 678, 1426, 648, 
            768, 680, 650, 1392, 776, 682, 652, 784, 1417, 684, 654, 792, 686,
             1430, 656, 800, 688, 660}]}, {
           Line3DBox[{854, 1081, 1080, 853, 976, 852, 1366, 1388, 1245, 1066, 
            851, 1065, 1244, 1064, 850, 1063, 1243, 1420, 1365, 849, 1062, 
            1242, 1061, 848, 1060, 1241, 1059, 1393, 847, 1058, 1240, 1057, 
            846, 1056, 1239, 1055, 845, 1364, 1387, 1238, 1054, 844, 1053, 
            1237, 1052, 843, 1051, 1236, 1419, 1363, 842, 1050, 1235, 1049, 
            841, 1048, 1234, 1047, 1068}], 
           Line3DBox[{856, 1067, 1246, 977, 855, 1069, 1247, 978, 857, 1394, 
            1070, 1248, 979, 858, 1071, 1249, 980, 859, 1072, 1250, 1359, 
            1395, 860, 1073, 1251, 981, 861, 1074, 1252, 982, 862, 1396, 1075,
             1253, 983, 863, 1076, 1254, 984, 864, 1397, 1077, 1255, 985, 
            1090, 1078, 1256, 986, 865, 1079, 1257, 1360, 1398, 866, 987, 867,
             1093, 988, 1258}], 
           Line3DBox[{869, 1082, 1259, 989, 868, 1083, 1260, 990, 870, 1367, 
            1381, 1261, 991, 871, 1084, 1262, 992, 872, 1085, 1263, 1421, 993,
             873, 1086, 1264, 994, 874, 1087, 1265, 995, 875, 1399, 1088, 
            1266, 996, 876, 1089, 1267, 997, 877, 1368, 1382, 1268, 998, 1094,
             1091, 1269, 999, 878, 1092, 1270, 1422, 1000, 879, 1001, 880, 
            1095, 1002, 1271}], 
           Line3DBox[{894, 1142, 1141, 893, 1003, 892, 1372, 1390, 1283, 1115,
             891, 1114, 1282, 1113, 890, 1112, 1281, 1424, 1371, 889, 1111, 
            1280, 1110, 888, 1109, 1279, 1108, 1400, 887, 1107, 1278, 1106, 
            886, 1105, 1277, 1104, 885, 1370, 1389, 1276, 1103, 884, 1102, 
            1275, 1101, 883, 1100, 1274, 1423, 1369, 882, 1099, 1273, 1098, 
            881, 1097, 1272, 1096, 1118}], 
           Line3DBox[{908, 1157, 1156, 907, 1004, 906, 1405, 1140, 1295, 1139,
             905, 1138, 1294, 1137, 904, 1136, 1293, 1135, 1404, 903, 1134, 
            1292, 1133, 902, 1132, 1291, 1131, 1403, 901, 1130, 1290, 1129, 
            900, 1128, 1289, 1127, 899, 1402, 1126, 1288, 1125, 898, 1124, 
            1287, 1123, 897, 1122, 1286, 1121, 1401, 896, 1120, 1285, 1119, 
            895, 1117, 1284, 1116, 1144}], 
           Line3DBox[{910, 1143, 1296, 1005, 909, 1145, 1297, 1006, 911, 1406,
             1146, 1298, 1007, 912, 1147, 1299, 1008, 913, 1148, 1300, 1361, 
            1407, 914, 1149, 1301, 1009, 915, 1150, 1302, 1010, 916, 1408, 
            1151, 1303, 1011, 917, 1152, 1304, 1012, 918, 1409, 1153, 1305, 
            1013, 1166, 1154, 1306, 1014, 919, 1155, 1307, 1362, 1410, 920, 
            1015, 921, 1169, 1016, 1308}], 
           Line3DBox[{923, 1158, 1309, 1017, 922, 1159, 1310, 1018, 924, 1373,
             1383, 1311, 1019, 925, 1160, 1312, 1020, 926, 1161, 1313, 1425, 
            1021, 927, 1162, 1314, 1022, 928, 1163, 1315, 1023, 929, 1411, 
            1164, 1316, 1024, 930, 1165, 1317, 1025, 931, 1374, 1384, 1318, 
            1026, 1170, 1167, 1319, 1027, 932, 1168, 1320, 1426, 1028, 933, 
            1029, 934, 1171, 1030, 1321}], 
           Line3DBox[{948, 1218, 1217, 947, 1031, 946, 1378, 1392, 1333, 1191,
             945, 1190, 1332, 1189, 944, 1188, 1331, 1428, 1377, 943, 1187, 
            1330, 1186, 942, 1185, 1329, 1184, 1412, 941, 1183, 1328, 1182, 
            940, 1181, 1327, 1180, 939, 1376, 1391, 1326, 1179, 938, 1178, 
            1325, 1177, 937, 1176, 1324, 1427, 1375, 936, 1175, 1323, 1174, 
            935, 1173, 1322, 1172, 1194}], 
           Line3DBox[{962, 1231, 1230, 961, 1032, 960, 1417, 1216, 1345, 1215,
             959, 1214, 1344, 1213, 958, 1212, 1343, 1211, 1416, 957, 1210, 
            1342, 1209, 956, 1208, 1341, 1207, 1415, 955, 1206, 1340, 1205, 
            954, 1204, 1339, 1203, 953, 1414, 1202, 1338, 1201, 952, 1200, 
            1337, 1199, 951, 1198, 1336, 1197, 1413, 950, 1196, 1335, 1195, 
            949, 1193, 1334, 1192, 1220}], 
           Line3DBox[{964, 1219, 1346, 1033, 963, 1221, 1347, 1034, 965, 1379,
             1385, 1348, 1035, 966, 1222, 1349, 1036, 967, 1223, 1350, 1429, 
            1037, 968, 1224, 1351, 1038, 969, 1225, 1352, 1039, 970, 1418, 
            1226, 1353, 1040, 971, 1227, 1354, 1041, 972, 1380, 1386, 1355, 
            1042, 1232, 1228, 1356, 1043, 973, 1229, 1357, 1430, 1044, 974, 
            1045, 975, 1233, 1046, 1358}]}}},
        VertexNormals->CompressedData["
1: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
S1n2W4nkvPtmjYMqkecskx353Yh8x5ORgPW8VPjMgASR56o8qthziHzX6bH4
Ocn593fZqcNEnpNhV+8i890B6l6cn4uOmh3zJfLc6vY1xmS++8jx5/3G228u
+leJPKdQ8GOQzHetgncw53UbglXIPKfqyOJO5juVcSvMWXR6t2QZkedY8gyU
y3C++8P5Qv/E6y4HGsD4nU1XfhVBh45Fbbc5DYWHSXLrnRqCBzqrv/tqtUNB
0CU8/rPD6vPaD1SgOw3KzPcs+rdP/6afOM6spkN3qnHlE9ZiWHjjW8vxEQqS
OZsYlnGDAkl3WcRlyjpgV8/FVnI8W4PNSFhyGFo6WL7k8ZTAo+QsET+RIbR8
JRfT5C0Vjvt71ggf6YIhsyV4fN2baZcNj0aAZ2yzWObGUng78cznPecAEmm+
YHFinAaeqlPSmxq6IcDQBI+3hHmYZf1gwgCvT/aH7WXwPrHfNHVHD+KWnTpz
bD0DLjPV+ugavdB6eSUeD/km4JK6bwyQ6PVcV6Fy2HzvQYWxbxuSfDW8soyo
81DDRGB4Yh9EmTwtI8dfJ2pylx0dB8dfgXs3jpVDNrf8xcTNDaje7tiyhLUj
8JO7gvLLrB825WjZkuOdtlyqxYsnIG7pAUv76++hme94WKN+KbqrNaS6pmgE
8tm06j/V9kM3peguOa4qcq/dwnICinMkxfjK34Pp6VNSNh7xiEvFhf6Shwn7
zNfN2806ALvUagXJ8Zr32a7ab8dBT9Y1x1/xPaRcPHYuxroavju7qMloMWFT
jV6GYlIpBPKc03+Q1QfLDi5gnrxCrL/L2dfkn/ZD49AHM3I+Z/e1V0rVTDgX
KjbPdjai0KYu1JCcr/ig5fmLW3TQt9NuWBXWA0qb3p8jx9fqRiXKbCDGLZd4
bPF4Bwq00U6HNCr4PVDWnDc6BBt6xe1WL+oAAeveDnK8ZMWKI+DaD1/98t4b
TmVD3bQd2+L9TLAI1VHjDuiFKesnDYvWZ/3Lwzbt90XUhbvgzeyRlCnjQXh+
3gXrUNLkfaFn5SDQ7m5LWvCo7d9+5GHS773GJd3wrcifepPYR+sv8cV6e6H5
c9UZx1441OES0/6UAurMHVhXXez7l3/i6we39rH1KlVU2KxahfXTmXLrht1w
PwgbrObbMUKDPaFUY1InthoO89iTB4D73PSP5o90aH7Q857UQ//NlRefaw7C
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
NzzHjnbXC6FZXLBxfCDw++ITc2YmsF6g6FPe66fLeRDetcqT8PXkVfvReCIF
XbsSyHe8hkFszcl9hK8PjM56ZMBJxe8RzYs23h+BrjN/5xH+Xa2IOeyTmYaQ
mep9+9Qo6LMj8gmfHmS0ljmqno4/avYHHqGOgvIs5lXCj/s6n5blHUzD9RyN
lA0feOCgMf2Z8NevM+7u19F6gUYZSTLuZ/nnWbn6KeGj7cWL1bVXfoYSSjjX
IHsATs0+KfA1w59vLVsbUw9P/tQXie4bANWg94I5tprqclXt5FS8zhUnaX4a
hurafQ+JfR7lmld6gdfiUebQVotyfj080vxA4CtfXPL7dHU7HWOKdjTOYLRj
/ohV3+3zTFi0nHf6Ej+evR9nrCpa04mt+otUE3/Q4ae50+rXpUwcNKlomOPX
hXW0uCr1jTS4aRihEyvJRqtLKx/p1HXj+p2bVx1ZTAHPr+vmnjDj4LrqyWOT
sr2oa35IyGV3PySt38UJ8eKicdy95/rGfUgqWNAmmtAFTgYz3+adGEItYVrV
PCDhvvLres66LZCyMWTisywPazqZl2PGSRgk9NCT610BpLSK36v5PmFiMK8h
aU8/dkTvOOwVmwolr6hL66qGcO9XVs+GFyTMg/2BpWH1KDccsuBcJhv/LAu8
oHS2B+0ODiZtah3ETzYD6vQBOs6kyrRtCenAbT2vvvkVMbBky/KlWld68bnG
r7F3fF+hI+HtJefBhL89kjTRBSRcT1ukIJRDw4vt0n7FI3R4mt6rcr2wH6l2
rLX7yHQMnf7iM1+FBlFpUbLRboMYZa8Q0SHFxJADfivN5lGg/Wown+/JaDVf
LaRDg4VyL1pz9XT6IeLHDf0yYwqekws7ZMn3xT2S6veY4V1w34+3RoRKQXo8
p4G3lIODwey4u2otcOEIQ+r1AX5d3/qZd62Ag4Wh3uQ1ThWgen1+yKc7VAx0
OPZAU5KL33kdYvmhqRDeIPbrjSIVzcc/51v5clA4X7jO3Lceo8WHV+r8R8bh
dT2ke0lMfL9A5ZhPySAWKHr8zd7Vh3MaRtaQVtOw5dRGs+psBuZ8klWqnNGK
C/WLxbmmPZhtsURwf3fFZ3V8xNc8/H6RvK7rPhOXGd2seX+OCZywLe7aNwrw
Xa/u9oMjLJQqKzMtnKDDG7cNzudWFeGYvXeYsy0H310fKTXRpMEmD0O/szXF
+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
uiIavg==
         "]], GraphicsComplex3DBox[CompressedData["
1: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
25Q6bfL5Z9SU55//A+1xDig=
        "], {{
          {RGBColor[1, 0, 0], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmgn4llMTxp9zLJGQqLTQLkmbhE+WRIn0VbZISFlKkWxJiooWKpQlhGQJ
oSyJSCVRZIlskSJJRfbts/Tdv+Z+r1xX05n3POc5Z86cOTP3zPOv1aPf8Rfm
oigmbFUU+lcsTkXRUfSF+MqiMqLtRFeqb6CorPj/phhbQbSbaGvRNqIf1N8o
x7OfxDfO0f9GirG1RG+KXyI6ULS/ftcV1RPtoN9f0opeF3+8aI34g9R+rXat
aLD4q0Q7ia8k2tby/aK+JjnkbOH59hLtK6ou2kNUR7Sr5R2u8SeL1ntcJe+V
9yr69yI9f030H9H/RAfkmGM/UW3P96P6m+XY28/i98sxfxNRDVFNUVO37P0P
jWmRg/8THeRYv6voWFF70fGi1qIjRZ1ErURHiP5Glhzz7Sz+W3QjOkzU2GuO
Uv+pom/E76R2g9oGfr+ZZb9e/aNZW/wmtS1z6Kyq2pNFd4mvovYk0R3i/9GY
g3O8i0zNizi3o9zybktRQ+v7V41vnkOfh7ivkeg69V8r2tv7bOnnWWMPyyFj
B9Gh3lNS36Giw7E398GfYDlYfyue5+BPFR1jPY7VOt1EG/37YK93o/rGidqK
L6/2O7VHi8aLP1P0vddo4nO7Rn1Xi6qI31HtOvQk6iY6zvL28Jkh11mizv5d
RnIdmaO/rNq2ojPF76J5flB7MvarvtY5zplnHX3mt2jMBNFJ4u9Re7foEvG9
RKd4r73dYjvba442otPF366xPUQ/ih8sukB0Ibavvl/UXoptaOyxOfqvEV0k
6i+apDHniH4Wv0LP3xZdLv4ttWtFF4v/XO2qHPNcrPZx0U/iK6RozxE9Krqz
CFu6Q/0TRWdjtxrbPsdaO6o9RtRX/CBRnyL4K0Xn+/cOen50Dh1fLepnWT9W
30Y/u09z9xL9iq5E4zhn0RjRVdYBfUM8x4gi9jRANFo00GuOdN8VoluxV4+9
0e+hp4e0Th/R70XouoNtcxvsNwe/q9qOOcbfr7FTRMPE76b2N7XDRdd7Tfb9
sPqnim7GNvRehxz9t3l95Kqovs453quMTeWQC/3e4L3ejd17r5X0/Pgc/RU1
9x/YuGiiaJT3PU39F+Lbirjnoy3XA9ifdfCgW2SZim15jofd8l4F9p1Dz795
n6zFHeIule4yvquV+BdFj4keFz2LTj33M16bNatpbJcc5/m497aZ19yPiSaL
f4E9eK7nRY/Y7paK5oteFu2pObrm6J+t9wYkhFE8UN+pOfYxy+vDV9KzP9Xe
J5ohvr/oL/FPc5aWb5HoOa/5lJ4/KZou/psUc73qtZ/yezPVf6noH/G1teYZ
Od7dXX2b1M5FBvHPil4SX0PPT8ux78rq+xtZRK+zB+/7Dbfosg5+JQf/P8cg
YuoOjp/4K+L27mq3L8I/Eyv5PUf8i6Ik+li/F3udF1Ls433Rh6LXvO96eu+s
HM/qq+2ZQ5bWGr+6CMwwl32I3hR/qNo2ojKiqmAG0VvqX6D2ZdHWooWiV1Kc
G2Orefxe3Psc6y6wLrGR5ZaRdcEpYJFdxJ+rsZNyYAiwQ2fmKiIug0OI62AF
4lIJO9DS/6NxC/gAfAFm2LGI38R54j0YZzf3DUmBRcAk4BhiffkicA1Yp2YR
sR5swLuHpNjDu6KDU9j9QlEtfHYOu0EO8Adn1wvbzxFviD/1izivHY1ZiOnI
SGwl7oJlThLtUwReoR/MgxzEMe4isfeAIub6x3imudcjjjf3+i38e5PxCe/8
bdwChqjh+RpbL+AC+s/HF+fAHGCQU8Arlo/YSwwm1oMlWlv2Q/yMufATxH7u
86Qi7jwyEetbF1swB7+J++CWNkVgGVrk7Ku+B3Jgo50d/4nvYIHTRO0sB5gA
rLCTsdJB3gMYpJVlau9xyIVfx9eXN0YgdhOridlnFIEpTixCjm2NZzp7rk6l
sRpzhqhLEfGaeHGG5yWWdLM97uVz+NM4qr5lJdafYpm6+vdxfu806wjc0dl6
7ODn6OsEPwPoT82Bey7CL+bAImCNnkXsYRdjh3OKLTgD3AGmOEt0bhFxGWzT
0zLx/DyvDQbqXkRMBL+x97LGOd0tRw+PW6a+b4xdPuDcjJPKGNchT0P7mU+K
iLvEF2IocauiYw3x/zzRtUVgBOI18b6CcQ78GnyD6LIi4izYA3wA1iAWgwN2
NY5gfjDX0CIwDzGWWAumuVTvzciBpao4LtO/q7EN74BRrrEc4JhBXgMsRpxk
XTAI8R2cAUa4qYh3L9ccT+eIpZWNJXhW0djgBs9FrB5tfaCX8f5NTC7FeVpi
NrhmpNcb6HE8B8ucD9a0HMT6WzzuNv+uaizBnazluEn8I27jx2YWERfxzfho
8AexmvsLvrgADFRETAe33Cv+CrXP5sAlYB/6biq2YI4H/D4x8DHvYarXLOEP
fhPHyVMe8dkQ5+GJ++Qy4INJnmOa7QW7Ib5Xdkye6z2zJjG+hrHHE15jlvfJ
vMRt9l7JuGCG32HfxHvwwkVggiJwCnOwt9rGIcTvq4jVOeL6lWCBHJgD+Yjp
sy3vi/5dx3hgThFYg5Z5x1pHk2xPY2ynQ3wGY21/N/o3chNLieX1HHfg9zIm
IfaDBYj9y4otOINYC7ZZaD0Qv17xuc/2c94FcxHD3yki3sGDg8A1S4qQ+zDx
2XijvnELzxoYV3xQBEa7XPS2ZQV/0N9Jfa1SYIynPPd8rw12+ciyLPfvazTf
yzkwB3gE/8Fa+xhXML6qMciKIvDIfNFn4o8kPhrT/Kb2nBx1j+op8AWYaqFx
yqoi8MtK7533trecDX038SfgvcL456sisBm1ji7gB8f1miniJ/GovfgjjDH2
TIEFiPsnpnhGTaSG4xf9p4uv45hXyy3zkAuAz7EHcOglonm22QXWY9cU7zBX
7RTxk7i5h+Viv0M0x9wcmLWc5aIO0118PcfFnpyr40c9t8RK+sgpiSknpJiX
/VPnQRflsMMUsYgxn2idL3Lkk6vVfiVqAL5J4XfRZwP7avLQ3il0ze99U/hO
/GEdy8Ve6qaIe8iD38EX4Af6qm3kc7oB3yZqrN9NU9xL7ng/8U3sO5r47vNu
Fdsy94VzA0+gc2ykbIrzbeT3kGe/FPcen9Pc9gB/sdpmnvcKtS387ChRS6/R
zP5qhucH31ct2ZHXapuiXlbOdr2tbZu7MFT0qfjD1bedbXeszx2c9o3tBvm3
9fvchRbmsdttUtwn5sQewaPY3mLbvJbYLHO2jyjjtbgjr6bIB+jbP4UdMedl
KXTB3tZ7zqrFlhoW82NH4BLO7gfz2Ak2VcE8eq1sfZbwH+fO+Zc3/5155tno
MeyXc8ano1tsCByAXf3lfs76F/cPt31SB2HMJt9t9nKd+h7KcYeGq52c4+6u
911lL+iyqsdvZR59tktxNtV8/2paNvRc3To5OoUPrWL72N37HaZ17s4xjhog
a5ELXKu++3PMNdz3jpzoH+tqhu1nD8+PDe9pOcHn5BLU7kp+H5+PPcITD6ib
ccfaWZ91rOcRxOQcd+52+4cuPru61j9nUftfZ1TP/SP13mM5/AH1KHwHmHMD
uFU03dhrb5/RT/Yd2AC1IPwCGG+0xj2Vw2dgP/U9Bt+wj88Rm2lqPVyvsTNz
+A/qPPgT8CS+4A/f92n2FRPsQxg73vbT2HZS8hHw1BDgp9iWmnmtmb7P4ISx
WvOlHL5hk30EZzpGfS/kkA+bbGiZf7dPGe9zbO7x4zR2fo67RdwiDhGDjknB
YzLET/LV8ra9/W2Hx9pv7FxEbs6dJ/4W5hlD3se7NW0LLX3H55jHHohX2Ay5
J7EFHEB8Kef5iRn4APrJhWf77s8rIvc/1P3Ie6RlruZ7UcZ2j/3jDzu4//Mi
8vEjvC61iFbe43Ee/14R3x3op1awyOP3tD0f5b1k88n3sI3lWe15y3tPyLnU
+mxtPbPO0V6Lvba1PpGxneWcl+O8OeNPHdfOTZG/9PY5f652VQpcfiPnn6OW
sZva43Lg9JX6/VmKnKe338dWH9bzC8gXUozp5buwIkVdl3u0GnlT4HJkWOOc
iBwZDLHRd5G4zp3dXc875cDIm+dI4XeRs4/X7Wt+gm2zr/k+5rHZBzVHH/KX
FLbc2+9WJ8/LgaNvUXtUjjzzVrXtRGeLv90yoJObsPEc9Y4JalvlyKtvVntQ
jrrDeLWH5Mj5J3p+9nubdYjewJMdbQ+/p9AzNZWl4t9JofNp6usnulX81p6T
XPzDFPoibk5RX2/RCO6M5yQOPqn/LiHf0e8n1PYX3Wkb7OR1O5rHfj5OUSPA
l1LHAnMS5xfkuNv7+0zO9LnQjvd4MBI1ec5lfY48F719lqOGT24ONuthG3hP
fYty1NtXqn0nRw7/iccw/2fuJ3d8V+2rOXJZvklQLyA355w+9Zz7smYOHLxB
fetT4GnuCfgYbNzT7/ItgDgI5gZj0OJ33rY8S3PU4Td4DP0tPGZry8h+8Ovg
Sep9xLWP9N6bOb4vfKh2SY5cfE4Of9rUZzHS8QWdf5TCfjjrEY5Zs3NgQXz6
MzliCTFjVo44gd/fzrZ3is96VI6YhJ1f65hbx3eqnc+L8yPWlbOdcy7vq309
x7eYFdbn2V73MtEDKb7FfO/7wB0HZxA7Oa/lKc7h3hw4AAyATYI/iOX1rSvO
aKXPYpXa71LUTivY3xInwHBgwK627an2J8Rqvp3dnOL8qSMR3/mNr+EZ39RK
9Th47jnfGvnOSC3zvBxYhrvzQYq7SU3yOo8Z53mY/0T/Psl+aazlaet+1nk/
RZ1xH695vdelBggGG5OiFojPAU/xfIzH1PKc+LpTvV/wJt8mkYmaG5gIzAR2
O9l8NftP6hr4N1pyg801BfsBMBR7Gul99fP4Kdy7FHMxDxiti+X/K4VPo1ba
xWPop6YKfhvpvi6WB5lHecwBlpm1+F45LMU+qCGDP/k9wnqmv7CfpA56oHV3
gOUZZT2g22UpfCl3izsGThyaYg2+h15tnjnB8OSWxPG15sE21KwHevxSz0Wu
x98SDHI/z680z30Z7zvCfScX4u6X9bjtfS4nWIfU/MG9g3zPuvmu4Yffsn0T
l8EB2XcEO2Qfd3B3c9RriNdgIHJqiPwarAJGgAcn3KWx3XPUJohN5Xx/iYkr
fGfvVF+3HDk2uTHfEviOAAYAr5ALVXc/WKW+9bi39fZVinepI5ETghmb2Maw
nzVqv0wh896WB7+6DtlTyFbXMswv4hw4mxJOvMxnVNN7p45ysdd70vP391rs
fYj10NV3jTtYOnvOdrDHsJfS32ew7wE+OwBcM++F+ekb4DNdZ36e9THY83BH
3k0R39H9idY/+SM1l6Wef533+0oOXaCHi6xD1iL+bPBa1LS+TfHdiudrPYZa
LjnC5BQ1LsaAY7/171etw7U+F2ygrnVL7XpxjpouPppvvcOKwFzkIWAqaoB8
s5xuOyGfwQ9f4vNi7197L/DsZ71lph7+Ro56NjVI5CEPw8Zq+uywhTU+L7AR
uA6/hG2Dq8BUF9hmGMPfEFDXpqYNNgPDld5bnbb4NHjee9k6JI6DwcCg4E9w
VPkcNez+lgHdUz/cmELfM4x/yNVWeS3wHthrlflXfKarisCzK623XuYZy7d+
/v4AmadYz3wrv8m/4amL8i2W76cQNUfqjYx90GOe8FlMFr88x98zTPTZ8P4T
7v86h56ow5MP8j64jb9jONv3kbyOu0n9lhxtego7mWm7amaee0etd1COXJNa
78Ac+eLTlnm6dTjDZ7TZXtxfqvmyJ+rkD1t+/uYCPEnui0zsA2z1tDEDOe4j
Hs/e+TsN8ua7UuAB7BCs2MC2St4BpiJXB/tRmx+QI8cdZj0Ptc085LPjb1Ru
s074jgROJr+v53nAZvdabmRGr+usWzA5eQU5xc0ew3mCDW/xnHyfog7AGg29
LnnErR4DNqCWTu78jO/uRt/fobZzZAe7vpbjGxnfpKkFUwf+xDw1sWTbpY6H
PwHHYvPgZHAv39hm++ywI96b63eX2b/wrZxckny4NN8cy0M+Ujjmgn3AQPhS
MBD4k5hFbKQeSnwEh1FT+6IIfIif4VvhRs/LnB09hqmJ0x94Tvw8eTW+l7s8
zfcabAwePquIuvjVOWoA5LL4VvzqQvPk2uTx/P0b9Z8P7Yu6FxEXFv3rOTz+
eZZtBrvj+w511EdT5LyD+Z2ifgxPnWOO7wX3YIHlmZfibyGeT3FW1JypafB7
nnX+pvXAeaP3Ad4v/pN4D64ltyJegWPQDZiaGI3vJX8k3yMOU1OizgxuR5/g
BuYg/hCHwBhvuR89d/Yz+t/wWuBncjrqC9RHvnc/zzlTcA/vkcsvzIEHsM17
bJ/3mudecF8f9X2hb7LHLLFPY+/veE7s5Dnrq+TzZnnMMu8dfFjTstYqQrYl
1g95A/kD9528m3yGXIZcaHnakmOSI9HXw+PJNYjNyzz/Rx6DDXezbWPX5Obk
zOTLB3pdZCFPB++W/m7hPc+H/yVe4vcmm8d/NLINg7GXWM/Iz3cD7ssanzvn
xN+dfucz2MXjv/dZ4Gufsa7+DwBJRTo=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtl3f8llMYxs85ZGdkk1FIZIay956FiF+aiEhRsld2ZYfs+GVUiDKSvVfI
SpKspMzslfH9fu7zx/V5r/s9zzjnntfTome/A08oKaV5YEEwBONRMDqndBX2
D/BvQGvsS/gdCiaB+7FHpvjvQXAb9gDsKfBPwKnwU8Bx8DvBmqx/h/0WfGaJ
tUHgMvgzYCLrT2FfDn/e/7DfwP4U/gVYD3sgdl/4PaAl9g/YvX03aI49F/tY
+B1gdexvsC+FPwRGYQ/GPtG9g1bYP2NfXO0bsY/E7gcfC9bG/hF7QD2f5/8V
exj8STABexz2RfX6a7E7YZ9c37c+9u/6oPpzA+w/sQ+CrwiuhN8GzqjP24T1
f7C7uBcwHv4smAX/Wp+xfjJ2d/hNJdamgH3gy4JzPRvYBb446Om7wE7wRcER
8P3B9vCFQAfXwA7whUtcuysYDTch9K0+6Ay/ATSm2NN4+MASvvCM+8GXB0M8
i++ArwCGwc8CCX41aODaqWA7eAY7snRA3U8BO8M7gm3g/3FdO/huKa5vUmLv
O5ij8GtAV66ZBvaCNwV9WTsTLAIfDnqwNh0sYWzAkfAZOfzjeQ/m2l5g5+oP
39292ouBbil8dC+8f4lcMGfc3wIlfLUFuAV+NJiVIgdfhr8DjsPuAzaE/8T/
zeALgLbYf2GvBV8OvIT9Ljg+xT1bVf941k1AI7xPiVy2hraA/5NjrQVoh/0v
dtsUz2xf/efeWoHNsP/OwVes8Xb/+lYfTIZPK5E7/cFG8F9y7K1JCv8uUyK2
7nFveLMSsT0BvAL/tsbA9Tf4/R4sVZ/5Or8flHh2P/Aa/DuwZIn7t67xNxc9
w6vw9+uaMd0Y/luOvS8CNsX+M8fZ9eldvrdEb7En7FTzxdzqWp+vfzZLkWN7
13e7l7NrPa4KboVfAQ6Er2KNpcjhjvCVrYEUOd4Jvhq4J8V/D8MHlah1a7wr
vBV4Bfsxaxh+tjGBb876H+BK7E78vpMjPp5vJdbXrfmh/5e3/kA37HXB6/An
UsTf87fUF9ZQiX7i3u0Bh8BXB2NSnKF9jb/Ptqbm29f5rzO/7+XIN/PJZ1mT
j2Of7j0petJE+KkletdG2IfBW4BHU/igAb5Wib3dB46ArwNeSnHNofA1Sqzp
46fgZ5bodW153uHwliV85Z5Hwo8p0cvt4e1qvegLY/iiZ7Ve+W9Kjv5nrp3E
2nlgJfgI+wFrn9vT4S+U6JWf1PgZzxvho2u87VeXwW9OsR/9NxY+yZou0f/6
86xZYGn4daB3jp58SM0X7x1bz2s+2dvvT+Ev88V3Taz5az9YNkUM96v1Ze8a
WuNpP/cszoge8PWsiRQ+tT5/5v6FUuSI9fEr9qIpcqgn9vrWXIoc3L/Wq7nu
GdcsMV8GcM/s6p8NwExz1bqHXw/6wD8F58HPtWfAm+ToZz/m0AqeoRd2GzA9
RY421Hh79idrPpgvnv1lsGuJnmwvtkd3qO+7kLXhKebvGDA8x0x1Xt9nDHLM
aOf/3eaAdZRjPj9g/ebQIOqNUWAIfGiOeeaMdjZfhb1vjZ/aw3eOqv1jWI57
7CcXgt1T/OeznXcjc7zDfnwBaM/6xTn0xu3eA78ohx65VZ/puxzz/xH7RQ5N
5bx/AozPoSFOM/c9Yw5N1avW+2Se/1EKPTEBNObQMMbX/vIqa9PsESX0wCDW
5oDWNd+N5ddg8xL9pjnXtqn9xHo1NpNrflmvxmYqOAv+tPWdQ5Ppa/WAvtPn
xsZ5eF2OGL1dQu8dw73HgqOsBXA6a4vVeeB86ZFCk6gP1X+9U9zj/HE+dE9x
zeASek7frZwiFuo9Y21Mzi+h7/R16xT+U4/am/6u+1dP2lvsucZK/WkuGLOD
S/QHc62x9nf1i7VnT3CeuwfffUaO+a9GVBt6ZnPxJH2eIyfnltDI6mD1r7ng
vDY3zAl9oT7wWfrE/uYZ3PvgHPPT+d8lhUZzPjr/nF3dar2oZzqn8Jm5ZX/0
XnNM/aDeaEjxjHNK6GdnjTWr/ZwxzaGp1W9q4sEpctrctL+PyZGj9ns1/sgU
/zkP1Lxq3XE55p3fCH4b3KkOKTHTnGX2ZHPZ+eG15rTvtn/MSLEH+7+aX63/
UI5ccz4+liPnnJd+A6j9/c9acV54rTWjdtBH+mb3Evk9v84yZ6paRJ/qy934
3bGEJlQLqhnV0vNK9PGZtR/Y8+x19nTnt/PI3m+NqbetKWvJGtu2hAZVezbU
/uXMcdbYM9Xv1qS1aI9VP9tz7bXOEPPPmeIscUZtCVcjq42dydbP79ZODk35
FfabJbTqCP77Ul+aU16b43zq4b1S5IjfS5+BZqz9gj27xPeT/Ojqn/dKaCs1
m1rNGrU29yjxvuk1l52pnlf9vnWKd9iL1DvGvrHG33ncNEWPMT5TS+irJauv
9bn6e0/9BD4q8S3nN5Xv/7DEu5zjs+v5/Nbxm8/vH8/sWX3GnLq/EbX+fP7H
Jfr50vXsPt9vO31gbc6t9Tqucp/hvTdV/6uH7I2e8X/cl+Zb
              "]], 
             Polygon3DBox[{{715, 726, 582, 522, 96}, {738, 747, 687, 626, 
              243}, {713, 724, 581, 521, 94}, {718, 729, 583, 523, 99}, {719, 
              733, 584, 661, 103}}]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0Lsug2EAx+G3H9Wqlq4iIR0dr6CdJHWqRUzEYmNgZTRxBVwBV8AVqNga
5/OhIhGrNI3V88bw9Pd/v/RNvra0urmwkQohrDBjxD3p41OLDDFBhRrLnCch
rOs2exxwxAl1EvdrXNtT2s+Nfcuwu3d6z4j9oI88Mer8rC/s2Gn3Xu0ufdMx
z961SdazeT7saR3gyj7lmEP22WWLS3fXdIk5yozH3+LeoC7qt85qn1Y1T69d
4Mz9i/jM/qKHnPMvObubtp3VTHxnWs5p7eTH7tCGJvH7qf//+w/FaSqq
            
            "]]}, {}, {}, {
           Line3DBox[{497, 557, 498, 561, 505, 565, 509, 569, 513, 573, 517, 
            577, 521, 581, 748, 525, 585, 529, 589, 533, 593, 537, 597, 541, 
            601, 545, 605, 549, 609, 553}], 
           Line3DBox[{499, 558, 500, 562, 506, 566, 510, 570, 514, 574, 518, 
            578, 522, 582, 749, 526, 586, 530, 590, 534, 594, 538, 598, 542, 
            602, 546, 606, 550, 610, 554}], 
           Line3DBox[{501, 559, 502, 563, 507, 567, 511, 571, 515, 575, 519, 
            579, 523, 583, 750, 527, 587, 531, 591, 535, 595, 539, 599, 543, 
            603, 547, 607, 551, 611, 555}], Line3DBox[CompressedData["
1:eJwNxmkyAmAAANBPN3El4wTN2FX2CoWyV06QtUREloQK4UD99Nf78WbecDQx
Eh8KIYzyJ2OREMqMc0yOUyY4YZIz8lwwxTnTVNjmkhmqzFJjh2tiXBGnzi63
JLhhjgZ73DPPHQs0GbDPI4s8sMQTB7RY5pkVXjjklSRtUrxRoEOad1bpUuSD
NXqs80mJPhm+yPLNEb9s8MMmW/wDHmcz8A==
            "]], 
           Line3DBox[{556, 612, 708, 552, 608, 667, 548, 604, 666, 544, 600, 
            665, 540, 596, 664, 536, 592, 663, 532, 588, 662, 528, 752, 584, 
            661, 524, 580, 660, 520, 576, 659, 516, 572, 658, 512, 568, 657, 
            508, 564, 656, 504, 560, 655, 709}]}, 
          Line3DBox[{711, 722, 710, 723, 712, 748, 724, 713, 725, 714, 749, 
           726, 715, 727, 716, 728, 717, 750, 729, 718, 743, 730, 744, 745, 
           751, 747, 738, 731, 737, 736, 739, 742, 732, 741, 740, 746, 752, 
           733, 719, 734, 720, 735, 721}]}},
        VertexNormals->CompressedData["
1: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
B8yLSzdhOE//UO5C8gW2WB6cT/IHhPLzxgbPi7NIvkB1Me4lkj9gr/1HWgct
5L+PlxrXiv+p6NuS/AGVvNM0bxQG7xqZXsNCvw3CC0j+ANl+KZo3rubdNyD5
AlsXJ80k+QPCRpyjnFW02h1IvsAn84a/I/njL+fDDnr1pP5h4CFBO1IPYR+f
s8PZ016k/qG5bFXPN49a2Pvld79hOrM0i9Q/lLk0tWaleD1cedhCOUeIus4h
9Q+/DYi2vk9sANPMecEMZ/bB1UJSX7hY+q4iktRDuFY8j8bzTLWAOaT+Yep8
U1lSD0H+oj/NGzMitr0g9Q/Xrl3FchJvBv8rqrQOdkbzgkn9wwvPqk1IPYQ6
l5SVDOcQkWItUv9wGC94BqmHYLHc6DjDuetI6WVS//CwyCFdUg9BqDPxNcN5
7OOi5aT+IfuQtRKphxDnvmcuwzn3QlUqqX/4qEC49EdrPVgZDNF41gjdJkHq
H3o5y/OWb6oGX988Gs/zzqUfJPUPW+omhJJ6CNvGeVHOMKNxIal/KHR45Dcl
z5K/+TnS+cwc0s9hisp+Q9Lf/a2DQsUd406S531J8Uct0t/Bix8rKefVkW+L
SD+HX8NRgPR3kGTxm3NN1OfxrHIuLos5F0T6OxD19KTxfPOe7FLSz6Hyyivd
Brl1cOFsE43nX7XLrUk/h1cHZqwh/R3cv9RH6+CBuZzVpJ/DUR2DcaS/g6Pv
Hr5hOGs19A/bJdaJWjMEZ5L+DpI0d61hOB/jyGWRfg7n6s6LIP0dxLgX036j
Wc0rnvRz+PSFlAjp7+CVxvXHDOftK7t9SD+HecqDIqS/g2N172h+3i52fQbp
5/DGnOtqpL8D18xtmxnOFb210aSfwxIdPVnS34FUTjbl3KtzaJqOaxNajlbv
v7WoFEZs3kk5Z2wW6yb9HL6Tfbyb9Hd/87N945Lm2z/ZqKQzbssY9bK/dXDj
gE5Rx1IOrkp3KBs4VA73Bxwp52Fq49YsOc7FK7fhhn54BdyaLU05+8/TmJuc
wUPu46kfwlmVkPZCg3I+kXwlIleoHUX2vhkMlqiGqTLn2Qzn9bpbwsTVO1Ar
lK19UKsGjqupUs7vzOY1svQ7UVXHPmLWtloIjA+g/Yb6moqfvfO7cO/rn0ab
/quDrcNZagznAcVEI4jrwqUf1kjH3amDbM9NJxnOHi1bbiUVdKFzWefVby/r
4KWDcwbDeWRT3ORXxR04eaGPT1ZZDRjCZBmGs9r1KsWdM3m46ZaLnJF6JSS+
qaLxfM371e6J1mwUnVG8tSWxFMQHllLOou/TbmSasdB75qgWL/8iSK/+zfmF
ufLxQoF6nPlK5Uj4YO5fzr5Pznw+Fd2Kmi0eV01WFP+N57nC1eeGczm4KGLl
5QMKJZDRa085S45kvRdczsNs+dPxl1eUQvH4esp5UuziZD+/NnzFq4621SiD
9gYJmjdq2oQcLzS2Y5DVoWA93XLorxtD+42rcr3n5SU7USPzRXSWdgUMWkTT
/vnWvCiyk1142mvBnpL5lWAjKks573twRWPltG7UCExfZV1ZCS2OD5fT/vmb
nHl/eDca5UZY+ayrgtQLAZ4M50taer0Ob7rRQDvYf+yeKsgPrXnEcP7w1jv+
RlIneu68qayJFXB/9df/GM6y4lrXYpt4aFBVaKT3shSiSy/R/DyTJ68wcUIr
bppx756QexHs69lH83O9Zd+4nk4WsjZGCIdfzoWzObco54abVWkZPfV45Ge1
ddOz7L/5ebNc+ZJ3ihw0ULNg/5yf+zeeL9wI2PvmJBeb341usU3PA84LPcpZ
XOPnltslPDwwMV/yxL4C2Cw2mnI2jxZlqSxtR07sXBNd8SJ4sP9bEMP5drT7
RI1LHXiw/+nQoHkxDBPOp3lj44BDvnU16SslVHdHLyqBfX3HCxjOMavLfxR+
68IpNlKB+awS2GhcSTmPKLmlVtXQTeK/Uaj+SCl82K6rzHBO2CTwQdm6B98f
1C0Xf1sKUXu6aX7+3uGuccO/B9VK4mc9qi4FvUWvUxjOd06NnptztAt/iJw9
GXWhBIbNDqX9s2VjmUzVmTYEzYQfrSqFsPKFGOWcUn/l4y5SjwzbhRVWHsoB
jxlqlHPDQF5co0kzBq05MSbZNgtu2l2jnCXGeYprkve1/dEzfoXov/nLef6b
M4nPwzm4RJHbnouZf/uNwaQCE/1eLnbi2k17P7yFN7m/+43Bx6qSkjptGDBr
TtWLJdnw8dh+ynmP0fwPDYntKHZP+wiceAeh6YY0bwTuet39eWonzmmK+c8o
/T0EiGbTeGZJB4QVHuzCWp8og5beHPCNi6J9nXf0eL9Jgd04dpZThclQLhzY
uYPm59IXa0c/c+7Bet85XVUlebDlg/EGhrOs25KGz2N6UdI4t9NvRz4os8Ca
4YyHDioIyPfipddPu2475sMYv/JLDOcMZVOBdSO6sfMmnit0ywXZQmf6Puj+
ziG1Q6AdH6zYPdRYlg1pd+Uo5+0fN3pKDecg28XryvAlmeCUu5Rynlyj3fkh
pRl5kpXCsxZngMiWU5TznNYUuU06jeg8I/nkspi0v3UwUDJh9pMPHHyg6ap1
zzH1b96ICTkcI6JB8r3LnQ8RIukwU8Kcci62uXS0KrINzf0LD9qnvAS9YH/K
ecy0nbynYh2Yqum/QsEO4X2EEeU8Q/cAq/FkJy7ROHlhV2AGuDaqUs4dPzI2
ehd34dqFe9u3m76GzgubKeccoTW5w392o4DTOBn3yW/g1FQfynnhG//WPl4P
Lhc3uyEV8QbCfs6n74OZkmt3rTvZiz07vgft/vYGooum2jGcVfWPfHwf1ou7
Lb9ZLBifCR8UYmNpHdybt0DBthulB34WW7x6DbzFgbSv29f4xWrZnnZcN6xn
0ODqK9gwwpNy1sxsGVazlYNbB3ylnj59AZkcAZqfLW/ql9372ozdLukv4x8/
g6t3TSjnaTnlbry0RjxzjxMWfP4puPI5D+xYYAqSXGyIc00PPx/zN29I5T4x
dznOw5tfWHuzJR9Dvosl5Zx8/5zKhjrSrxpyvrwviAXBTFXKWfM5z1ZJuwNf
pYx0fe0dDxJhSTRv/Orbt/VocidKKIo/W3vrCXhP8GljOK/NdNP9LtqNeeuH
cvOtE2B72WzKeVS6i+JI1R6c7us09eScp/DMZCP9HKna3//yxwW9WHFZ3vhs
/FMoLyulnCMOn5Q//aoXbRps3n0dnQjzTG+eYTh/e2MWtrW5F3+ZGZyqmZUI
2TqjghnOFifdBr/HdqPTr62iknkJsOX7Zcp5WsAGN/mgdpw7GGuoFRMHI35s
pf3G04C40LGnOXhtwWRlmayH8KNtkHIu8sjPDJVsQef5kywhPRJ+qLpTzumD
l5+cG2pEX8ftcuyrEX8/3zgUGG06R4GLp09qjP5aaqn6tw7OUjbQO8dDFf3A
rkfsw6pNVb8/3zAxvTJSorsNh1SvK6YNHlJ9XupGOe+aPfz25L0dGDcm4/rV
zUdVY6KCaTzPjx/72SC3E4WnBX6yCj6q+m6iK83P023KN1ZJdWNow1L1WcNs
Vfuiamj/rPC1JDF1ew9q9UXxHjofVbWeOpLm53F4Tmqbei8Wem9We1pop1q5
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
/kLiB2q99DpH/IJKV2e6LstlxVtTrrbiDFU3c91xzWDfMIxyE5s37xvhgg88
S1QIJ3ixPbOW0ZFJvSpOuODXq2vPE04QE1rwe11eB0WU8jl4yeaOfXpPI6Sf
V6Q6Rh2vLpH9w0vp/XfJfsKhShmqw4oM/o/sH+65YpxA9hOW9LdTf9Akt8G1
lYuf7WYtDrpWB2vVrDQYnZeyVk9WFbTiUV6QRdePCrgWFE513DJbtsY/5iLO
bpueNlAFCTCN+rPa1/jUUB0PtY/IvuuYUg1nDffS/eozXdobfZlD+poq140l
pbCg4RTVeeo2WeH5GR6i+CrNYV7lEGiYS/0JrvK9aJjQhr2QZZ/lWA5yneJ0
XaBW4blSiYtaX6emmIoXgcXLN1QnzHBY1lSlNtQ3Hlnc/qEYuJIC1J+ISsV7
O/e148DpFs7OZ8Wg0mRD/bnOXlrw/QUXOVfX7n9q/B6mfDxJ92uDnyYUZ7Vh
sfiK/LkXcyFmye91PTO90PbjQztWrHbY9DUtByL1iqk/IYnub1bM5qGMm3S4
jPtr2PLpAo3niSvybMVIv1S1amm57cRMsJq9h+pMsl4S5L67A1fKnVls0/Ya
0sJ/qTE6rcUh9bvMeeiomOIybdIzaDZ0o/48Fn3Uoerajt88JmXUDCaDyPBI
yudjqsNwrbAOjPeLnHbqSyIsW9ZC1zVhb871ZYLNaPkpWC6G9Jm+muzlNu5R
8MFx+TZ1Ync0kLz+mtgNH3bQ99kU6S0DY82b0diob+r8Cx0wN+zl/jlPMjDP
zkzOYUwFTjrTFxSVzoKOefIOsKAdvyi9PIiGZRgsPar3wftGeKB+mb63fjn1
fND0vzKcquAaW728AZItwu4MlXSgalygM+t7C6o3HPrJSWmH68eK5Rh/BNQf
tX1g7OnX4Aexj5aues/44/nWMmX4nhYcU+L2TITVDnMX7j3M+JPWaPb4oB4b
83cmxcTKt8Mb9msrxj4wlxNH4h5LaxYOLM/ngITYiN9xYukdb1bbiid0fM7o
rmmDYrEjisy8j6+EpdsTO9fM7OQ+Yr+UfYFyeO2/aC97bSs2bBD32mzbBjFr
O2wZ/RVLW5/Nluag+SbR6Qse8EChv+4IY1dVV/Ugzy36LBu+kjzHEK+zgvI/
/nD8wlE3uVjf7jKG/ITG8y7zmXm1nL6mTyf2MxdtQ8hPeOFz+g4z731Z2PFe
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

         "]]},
      Axes->False,
      Boxed->False,
      ImageSize->Scaled[1],
      Method->{},
      PlotRange->{{-0.8977596459392547, 
       0.899469979032795}, {-0.8977596333759166, 
       0.8969548893160069}, {-1.732050612422391, 0.9999998048535137}},
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]},
      SphericalRegion->True], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
2hv53kUJJCjgzvY7S3zJt6tJ58/WvCY/0j9Nl84vrLpXq5VzfY+v239WrTl4
ziyGHCrTHPA2LxKv/x4485Oljj8ZX1KlQmYcx7q19k9pLZ137D3fZtItrk/y
dXt0UsOH5RHRpEO5pni5fQrW57ET/sZ5fZNI52sWllSSiXWY4tT+/tQeKaTz
TdsO755dw3o76Ps2Y4z+FfJ75+i0KTqFWFcjP+jXH/JMJ9V15XaZwcVYP8Fn
XzstrJcQq63qbUYolmKdPLaWP1ZglEmuLrh0V/FxKdaDdevc+PDITHLkn9Fx
3pPK8Ln3aIxr99Y+k/SNyDl9oX0ZPt/onIk6Vl8zSGtf3R4NvUvwOdr5r9Lr
FXiZnLgvKn2yuwCfl7txTn+tWO7z6kZtmWyWhc9l4r3DNdcPbRZbakw7w/lo
5D8veO6j+owQomsattQkKR75r+u2SeNMHJHY36KWnmUnkP9+47H97LbbilcU
ZNlJ+yfPf8XlaYsHLp4vWWr+yu5RTiryH37T2lV7+1KJuaN517eB2cj/5eVO
ZQse20m+Td4ktpp1HfkvOSq+HmWzRpKo2zhkhFIx8j+0+Y1Vm5drJZfDlqzT
dyxF/pma/hOz85wlx085JyhVlCH/YP9lUZ2i1kv2XdU265tRjvwLGz6VPW3n
Itl6z2/aysEVyH+Ip0jBu3i9pMXJxXGGL8uR//fDrgstJzpLPhts/TFrchny
L9Iv0YuJd5D8qh34Ttmi6M850hu546XiMsnIA9P0C3VykL+yqd6H8VPWiHeF
LPmXy4vIf7LzaIu3lWaSH2XHJvfZeQb5B3gnSRbo+FPJm68xYkH9L3qZ4GKh
opQxnc1LkH+t79KxKyOiqfUX74ZlgvpPO3KZ5PdNouOzj/YU1v+lHW80THuk
0HeK79IaBPVftXumyTj9K9RopXihsP5HxT48c8QznY7K3vWdCur/Um3Y7MX1
Erq0y+Oi4YL6T1E3Ci80yqTuptvDhfU/0LL47NHITLpUPtheWP//pE5rX2+f
Sb+N/OIorP9b9i8UrL9m0N5vrOPqBfXfNTU7RT3wMh3kn+QqrP+n8zQGaccm
0c6T3hkK698u1Lime6B6xtUQ1j95/g+7D1vxLiOETpm6QUFY/6+C5++wnh5G
XeP7aAn7ptmbyE6rOb84qa/7EGH9i3p3qOT6Iw2qvmfhLuiPT82+nOP6II28
9dujvaAPtgy6GcT1O/o6JHNSpKDf5ddsi+P6Gp193HKHp6Cv5bby2f/zbAGt
rX5aeUTQv74qvDHqWX2DDlPqENNJ0KfsHp67wfUjOmJUfv1LQT9qf6hIs/Fz
MX1m1PPCUEHfGTdN7SfXX6jx/DWTBgv6i+vO8B9cH6FXNN+uMhP0kXlmI1zr
BuZRizy9L8GCfpFJzmZxfYEOddj1cqCgLyiZxh4nnC/cci9ZS1j/IztP6Zpo
FkOf3zDf9kag/5nWiYmcn6G+fvnaOwV+Zplet2TpPCWgbsnaCoH+n7A8Yc75
FtrnVsx+bYFvSZB/4Mv5E7o0cMzxDwJ/Mm1xx0DOh1Bn18evRwh8SLzhChPO
b9AxCpbnpwj8Rq35uzLOV9CLU4+8HSfwFXNpTgXnH+ir8WGRrQX+QcMlXpvz
CXSt68WndwQ+YY7dyQrOD1CjfnJjegr8QBU5KX/LuZw6Lh/Z6lfln75/Llru
G9ffqXb7qovnBP2dhI+8x/VxGrUyOadR0MdXulVe4vo1Nb1XPeaGoF+73e23
QZp/PP6Z1Jgm0H9l2wu6XL+m045E6t8S9GuevyfjT3n+jtb2p6T5fz+Z2qpa
4Bt5/t0ZfyrLfyHjT2X5OzD+VJb/cMafyvJPYPypLP9HjD+V5W/P+FNZ/uMZ
fyrLfxXjT2X592H8qSz/cMafyvI3Zvwpz39HvxNe0py/5d1nz5sC/8PzN2b8
Kc//DeiPC9OfZvx9GH/MrWLQn0CmP8j/GejPCaY/yF8B9OcV0x/kXwD6M4vp
D/LPA/15zPQH+X8H/RnK9Af524P+DGf6g/w7gv7UMf1B/gagP0ZMf5C/G+jP
ZaY/yN8S9Gcu0x/knw36M4TpTzP+6xl/zKe6oD/PmP4g/0Dovxms/yL/laA/
B5n+IP+6v/sv8s/4u/8i/yvQfxtY/0X+j6D/TmT9F/mPgf47kvVf5J8G/XcJ
67/IP/Xv/ov8B0H/XcL6L/JXgv77lfVf5H8P+q8667/Ivyf0X03Wf5H/s7/7
L/LfBPqzjekP8n8M/Xcy67/If/XAiIEC/4n8Z0L/NWb9F/kHZ5fZCvwn8t93
22+DwH8if5fco+UC/4n8f55WKxT4T+Q/bF9bG4H/RP4tkpONBP4T+ZMeQdEC
/4n8SzxGVgj8J/Lv3+DSSuA/kX9Wm38XCfwn8k/SOjFW4D+R/80hjp4C/4n8
VaH/urP++2cOtrztfIH/RP61kL+MWf5C/pMzKl0F/hP5+0H+UmT5C/kfhPzV
heUv5B8N+UuF5S/kvw3yl8KupvyF/HtC/nrK8hfy3w75y4blL+RfCflLwvIX
8p8O+SuE5S/k3xHy1wCWv5C/P+SvTix/If+5kL9OsfyF/B0hf3Vh+Qv5f18/
9bHAfyJ/I8hf+ix/IX9rmNucZ3Mb5O8K+Ws1y1/I3xvmMwPZfAb528EcRp/N
YZD/c5i3vGbzFuT/H8xVZrO5CvL/F+YnOmx+gvxbwpxEmc1JkP9YmId8ZfMQ
5K8Nc4/HbO6B/O/CfKOWzTeQvy7MMVLYHAP534R5RQCbVyD/eTCXeM/mEsj/
hwnLX/tY/kL+rWD+cIzNH/7UP8zTTNk8DfnPgPlDMJs/IP8rMDe7xeZmyL8f
zMcIm48h/wMwBytnczDk3wfmXeFs3oX8HWCudYzNtZD/XZhf3WPzK+S/AOZU
g9icCvm/gnnUdjaPQv57YO60ic2dkH8izJdmsvkS8u8LcyRrNkdC/nNhXqRs
0zQvQv5jYf6wgs0fkL8E5kWZbF6E/OUr2Nyh9XvHAWfiZkp4/i1gbmnM5pZ/
/j4C8yUfNl/C+x8vYbla77bCvLeV1hLZ+x/4mKjB3V/M33/rtzbO0ry95lPN
SWtO//j1tHbJBdJcXTw47C7X5zFfONMJPyRcrnbudDOD6/OYLzon6h+R5ur3
rauvc30e80Xq3Jyh0lz9rIVnJ31O5/jnu+ps1TVprp79K8kvkNM5/vl2Xpyb
KM3VOj/WG9tyOsc/3/fk8TZprs72WNrzBqdz/PO12mZiJs3Vmr/KRhzjdI5/
vj/dlWdIc/Xpbsf2cX0e80Xg0bfrpLl6jcH4eq7PY74wX+EwWZqra0wb3Hpz
Osc/337TQnpJc/WlRXPjuT6P+YLn7B69woLjLOY5D5v0qHIql6sD7oQOfM/p
HL8edlH92kMuV3vPnHaT87nI2bbs/fXNXH72r63oeIjTM57z2q1BnaX5edyv
ca2LOT3jOa89dTzlBJefvyo9KpHqGc/ZovG6tjQ/W51OfS3VM57zgT7j3KT5
2dDkxD3OzyJnuzu9xkvzc+SrsCDOzyLnhz03eUnzs/+RWI1unJ7xnN+/mGIk
zc/fjfI8OT+LnOVTlCq1ufzckPNsXgSnZzznj6uMWkrz89yGRHNXTs94ztkZ
FdHS/Dxh2LkUzs8i53JHP3dpfnb7mKvWyOkZzzl46lItaU5+tUx3AedbkefN
3/WGXlxOnjU5L0OqWzzPMP+MEVpcHj7V1XepVJ94nqfWWPk3cnl4baNjqFSf
eJ773770Gc7l4aQCh3ipPvE8t84MajOZy8NK/0iWSPWJ5+l6wLrjWC4Pmy25
UC3VJ57nxoSxQQpcHj7ufP6xVJ94nkYVQeW3uTwsP26hvlSfeJ7F5HivHlwe
3nwpqVaqTzxPld0e9T+4POxZsqULl8+QZ0JB+pUzXB6eGri57SZOn3ie0zQK
NN5zedhb7k2DVJ94nh279VUv5PLww74v8qT6xPM8dLh1cDmXe9cMD5om1SGe
Z7RqRLfdnO5PXRcSKeTp0ePgi8Gcvs8JTtUX8hwrUUn8yOn7M2XTLUKeWp/v
zR7J6XvQu7OeQp77UrstMuH0/dyq9jpCnra/i0sNOH0PNRiRK+QZd/PHmbac
vit1qswV8rygXP7lLqfvExI+9RDyLGyxbKYap+8DVI/kCHk+mPC0528u3+ol
FjRWCHh+N/mZmMTp+6ALe19tFPA8GhO6/COn726jN2YJeYaERcwq4vT90fWs
GCHPqMOi/yo5HR9+oFRNyLPPsX5+Uh/z5OFSHeF5H/g6s0aaV59bGh0LEJx3
36H2r6R59XtgqmWR4Lyn7ntcIc2rLXqkLxKe92kmdbekefWrqtEK4XnvEnF4
jNSv1GU5EeF5TzH9+o/UrxT2IvU9BOd9pEm3xVK/EqN5ybWr4LzvDnujIfUr
G6vLi94LzvvIT7kXpHn1cemM6OOC8z71SWixNK/2VPVJcBGc9xfFwdOkfkXP
LklHeN517DxspH5l1d7AVe8F591gpkGpNJeSdKuKc4LzblH9qkqaS1U6ed63
EvSpG08tukn9d9kzraAVgj6lnvtlnNR/91aLysoT9Kmj6+Jqpflz2ufv200E
fcra7Yqf1H/bt+2zc6ygT1lXDhkp9d9bZ3S8eVjQp27m/34hzZ9eBTm2iwR9
SnlOz6tS/y1J79+rUNCn3Hyf7pX6b73E60OOCvpU6xdVflL/vXfeN9+3gj5V
b5hfI82fAcGBPRcI+lToxU+RUv/9un/gx16CPtVeZGYj9d8DzBujtQR9qtGk
ja7UZxdYZZ5sEPSjGsiZ+8Z17C72nyPiebafwfJkTPr3bc/HOIh4nmWQJ7vG
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
Pheu8/20L+unqP+FUCcRrE5wn3VQV7dZXeH6f9Df1Vl/x/1Pg33Wy+zTG+qq
An63y6/PgDrpweoE99kB6qqK1RWu+4B/mMj8A+5fHc5pHTunuM/dcK67sHP9
Z//gZ7SYn8H9u8I+H8rs84zM72H59XA4p8HsnOI+R/x9rnH9HPilX8wv4f7N
/9ZJ3Od+0NWpTFdx/fvf/g337wv7vCCzz42gq+vhd6b8+mXQySdMJ3GfT/L/
0lVcr//bH+L+naFPnWJ9CvfZHfpaGutruL4S/Oo85ldx/6Eyv4dFztDXNsPv
N/H8KrE+pcb6FO5zAPQ1NdbXcD0R/PAZ5odx/+/Bt3gx34L7nAQ+x5H5HFxv
BH+ezfw57v807NNRZp+nwZ88gd9F8uvDwT90Y/4B9zkM/MYV5jdw/Q74fyvm
/3H/PcCnqSo1+TTc52LwdVeZr8P1MZBHclgewf2fg33myOyT92NuBV/+ykEL
wC/9Zn4J93kI/FUG81e4rg955wHLO7j/A7FmarahlJxxcQmZuu4c6nwy7Oes
jK87ozZ0kLp2Gflw22urgU8m6vOWvYo7FB6mkCKHbvPOr0nD+yTCc1kt44te
Vg/Jn5iZTzzmfmpcdb0Y73P/9qTEyLERZL/XTauU7n98S8Tf9Yn3GSLX4lLb
D0mkPiq1U0bAH78x8YRayqmxEVQn39FQeB//v88p3ifh7dSn7T8k0agPxW/S
BffxaOlj3uphCn0W5JyULPhc/PsQHsj066gAx1ijzHz6yKnvROHnUhlf7c9x
pktaBadPFnA2B91+LNM3z5evXMlxpmNVVN31BZyPzG7K0XSD++vQd5auIv4+
fP+ygfeN8PeJvN2Ul6nGru2/9rTcLeLvowr7Wcj2Q2X3UyXTRy7Afkaz/WBd
bQc+TxgfvM8W4HNXRs+jgU8144P3sYHnNYI9L7xP+N++Du9zFZ7XSfa8/ug8
1I8/qx+8z96//S3epwvUTwOrH7zPWqjn26ye8T5RUM8uMjrzH9SzD6tnvM9u
OF+l7Hzhfc7C+aqQOe+xcL7a3mk6X3gf/v025w4VmYVX7sL32/Dvw5k9qU24
v+ZUfB8O/94b73Ees0YHH2723hsrA/ero3eHN3vvjeOgs+tX9Yxs9t6bloYH
V7aoiGr23pvXd56OW/36VLP33gz9dfZVuF1ss/feZJ997nF0Ylyz996MrFVL
atwS1+y9N++0t0Zlz4pt9t6bpI6j9L6YRDd7701VV69Crfzjzd57s3C6+arh
EwPwvTdjgedp4PkOeJYCN0/g5g3c9IHbfODWBbgpArc1wM0EuD0HbnLAzQG4
LQdur4Db/v/DbeH/4Sb+P9zuRjJu44Hbe+B2EbjNB27JwC0IuE0Ebo+BWzxw
Ww/clgI3H+Cmq9vY9L3k58t2HPPraGG4GubecnJyW6V12C7IpKkOF0MdTgDO
KcC5HjiPB542wFMJeCoDTyfgOQl4vgae8sDT7v/U4V7gKctNB7gZAp964JMN
fOYCn0Tgcxz4GAKf+8DnLPBZDnysgI+fzPuULFarN/Hh/y7Af29Evja7qmSD
W7PvjYweP3hP+OwDzb430i34uHmLS8HNvjcyqX+n4JsKEc2+N9JxSVJJ2L6T
zb43Mv3ydN3wxuhm3xt5FGqzcXVGTLPvjRQpVIW0fB7b7HsjHb6Whtm7xjX7
3kjnw3LzD/SLa/a9kdJYv5CDbWOafW/kX6u17l+VTjb73kiE2ex3AVtDmn1v
ZOi4l1Y/Rnjj90buwjndDefUE84p3weHwTmygHMke15MQGf4fvpu3bJSYhvU
rJ/y95Htp6c3qXaMmB6H/ZT/e8GTkrFO23+cbPb3grS9qkvWG0Ti3wv+BwP7
mkk=
        "], {{
          {RGBColor[1, 0, 0], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFm3f8T9Ufx+85t71EEqWMyE5KkpEVyiiZEUKaKtqFhERbJColpKmhPVXa
m9ZPO2nvoaGhfu+n18ujP87jvL/3c+65557zPu/36/U691trxOjeJ+aiKO7a
qCjKqFdH4e+KUXZJRVEhSpOwN416t6j3jrJt2E2j3i/KJmHXjbp5lLVRdorS
MMovUapFqR/l7yg7R2kcZbNoXy/qFlG2TrrWOsqWSfftG2VNlC18/09RNo9S
Ncp20aZZ1O2j/Oxr9PVblB2jNIiyTbT5l7HTR9K1lvSRNJZ9onzH+0SpwrvG
9VpR7xFlo7B3jXrPKBeGvSDqJVEuCHt+1HdGuTzsW6J+MMr5YV8X9R1RJoZ9
ZdQ3Rbk07HOizA57ctRXRX1zlFlh3xr1Q1EuCnsh8x5lZtLvD0Qpw65d6D3v
4rlRng77lFico6KcFPZpUR8T5ZSwL4nfF0V9T5Qi7JqF1uaypLHcH2Ve2NOj
3BD2uVFfXegdfmA9ouwQ5bNC618pyklhjIwyOuwxUR8R5cSwR0c9IsoJrFn0
MyDqo1izsPtFPTLKXmEfHPXQKK3C7h/1kVFOjPuGRzk+7BOiPjzKqLAPijbt
ogwKu1HUBxTqt1rSWnXBp5L8gt92TFrPrvhUku90Y83CPijqIVHahj0w6mPw
UXw1Svewf/S74sd7xLWeUQ/Gd8PuFfXhUf7Ch+yv39tH8O+vo1Qu5B+/R9mq
kK9/FWVj//YFPoSfRvkVn7ZffulrrOvnnmN87pNC+4w1axFj6B31cPw17L5R
H4G/ht0n6hFRTo45OzLKGJ6X5KcdojRJmgPe+ezYvP9EvY7nJPl1O94jaY92
ijIl7LmFfHFq2NdGfVuUo8OeGPV01hUfxpdZr7CnRn0FYwp7PP4b5biwz8V/
oxwb9uSoZzDvYU/CB6NMCHt0lGn4UtQXFNonZyb9zv4ZGfbZUV8c5ZSkvvHR
U5OuMdbTk8bCWM9IGuO8KKPCnhL15VHOSnr+fOYq7AsL7b0RYY8r9PeRMT+z
4+9Hwl4U9XOF9nK1uH5wks+MjTmeVervbmwK++2O0aZXXDsu7PZRHxLlsLAb
xvU+npf6bjMWHwq7b9J+aRr2oZ6X3cMe4LneJex+SftrbtgPR5kQdo2o+yft
wSa2WY+avhcfWBj1M4X2ePcYY+n40MjPZU6nJc3T7VHGJc0TcaePx8WYr0+a
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
dp/s2UPivbcr9b7d3H6e9+mpjif72saHu2SdbbB/O2TpMugmrbK4NPuos9fr
Kq/RKLfZK0tnmeI9Av9FDxmRdR75oGMX3BJe2T/GVbPUmeIRvg4Xuz7sJ7M4
VP8sXkqs65PFV/Gx4bYfsG9cZH/oF/3tXMqvBjl+ovUzlkkeD/2gPd3sd8GG
z/fNOndkbPjvDPtwJ/sw2kSf6LtqqXcflsVt77f/Y6NrLQx7WRY3Zu/Dt4kD
HW3TD3HuRMc64t5ox4dOtme7Pb49y3tqjMc5L+ylWddfTTrDA9tz3wTfy76b
vmFfZHF49s5gzxV8/rCs8+Ml3kfwefyWd73Ue7Z0zIFXHu4+OUMZ6vbw/Jey
uDY8nPw1x3lnZRYHgRuMyuLhT4R9Y9jPZPHnw2Ium5Q6CxmbxavhjMfbXkaM
yuL/8Mpjsjg8/P1022j6p2Wdu8DZj3P7x+1Xi+x73Is2xLOOzToros2h8fy6
pfyEe+d6nINtMz9nZJ3foEEMjLb1S/neCVm6wJNh3xD201ncdmSWvoA/n+Qx
wAHhCuBvsHc12+Bt+A14GiwNjoZvgLc/zMLltIE3fOV74THge7B9Fdvc+34W
Rgef7+A+seGj8FL46VFZ2gS6BOeMaBbstTFZZ2zw8dFZZ1Hod6e4DdrFqb6X
s5ZB8ZxGpc69XsniovBQ9hN7jH26OouPMc4B0XbXUthmkNcC3ILfoCOgIawu
pDXAK9FF0ErQVb6yvaEN+kN0sR5novWgjUzO0ug3nOeg068qpBUttY2ega5B
+0/8LDSNDXolWuXg6G+PUu+OPoFOsdLreK/nh49R0IT45uEz90k/Z2XpIMvt
t4/YZ/BtxoDPLw77uaxxoW/R5kP3yZnZM/b/a+1Xw70WxBlizALHmaFuc7dj
Efeisw3J0kPZ44vCfiprH+GraJFPeS9f5/3Lnp7nfT0ua+7Yg8zlU55LfBy9
mDOyo7POPtmDzMEyzwPnXy94vSZlaWdPJD3nDj93nPcL/cBx4cBw1WwbLgwf
XG0b3QJ+DpeBO2LDJYkpH9lmT5EjN3zDA/eGd8PXP/C95E/aoA98lKWP0AYt
4T1ffyuLw9f3eNBoatlnsGsW0ofQg6q6T/IxuXiNba7DvYjLxGT0GDTK2oX0
BPQFtIU3srQn7n0tS/tA90D7ROND34PzrbTd2HuNGLe7YybxqGmpWEpsbWa/
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
+3BE4jjn/vAkOAhncPADtBq+d0Kf+z97TYHT
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtl3mgl0UVhufOJwqKZOIVF0yviiu5hCRRpiIiroiIuQGKKAiKSF7BJLOM
ApRNQEWpTLJIcMslI9cWlFKjRUQJaXHJ0FJTjKzseTrnj/fOOXPm993vmznn
vO+0jbzklPG1lNKhpZTNGG/H+URTygP4E7G/Cw7Ffxj/Cuz+2K8z7oFfGFeA
JeD5Er/pR/xl/B2w3wdH4b+KvxP2JvAb7N+CHVm/Jfgd9nNgnxJzR7P+DX3W
dmD8NtiduQX4p2Ef1sT6jaxdx9wa7BfAQfhtYDH2fqy5ndgo7FvBrvjX4Q/C
/gbYFr8dvy/2t3w3/Kn4A7G/Aw7EX4Y/Dvs2sDf+Ivxh2H2beP/3+F/PMncl
/tfBTsyNZe5I7D9idyX2DpiJvRpsItYZHEt8o88h1sr4KfxfMb5N7Gnmvog/
A+zC3MXMLcC+CRwHLsLvw7iS2GvYT7L+avyZYDfmJjD32Sb2oyH2MvgK/lyw
J3OXER+A/Tf3iNgWjFfhXws+hj2e+A3YC8Hx4FL8YxjfJtaL9V0Yp+BPAztj
jyM+EPtd7D7EuzJ+Gv+XjH8htpq5L+PPBrszN5G5L3kWYFf8S/CPwH4Je0vW
bgCH4/8evyP26+BG/JvBCeDzfjOxpeClEjm5IvN1Jf4asAj/I+4VsV7Y17tX
oDv+m2Awsc5gDPZhzM8FfwKt+K+CZ7GvBZ1KnMkc7PWgM7H1YF2N9z20RM7u
w7P2BSuwfwhuJrYF/tms7YF9A3gffAa/E+NCUIkPbYk9vxH8CxyNvw3jPPBX
0AP/XXAT9ofgBOxujAvAO6A3fmW8hmdd38T/auf/P8U4rUYtmyPfxO5GfArr
j8SeAZ4BbxBbydyfa9Rrf/zeYJa17DthryI+G/vFGv1hDVhb43xcu1eJer4O
bFWiJobwvz7qWbF2APOnYm8HJuMfj3+LedXE2bsXf6hRL4eXqOFXavSLASX2
+BZzg/Xn8/ue2G/VyMdhxE4CpxDrAsaaO8zPB38HPfE/AGea+9YQ9uga+2P9
bMtvG7+ZP58057CfAR/HPqAJ+1GwP3ZPc9p8A2dh72VO8rwLec4Z2G1gHv7I
GvljPXdjbcfMV/vnKuz1oBf2IeDFEs88CPtge1qJHJqT+f5ffnccz5ye9b8J
/yhrpEZ/HFLizM7O/FtMbIL7ku+7BL8d/yTszcDp+AfiD8LeHJyJfzD+idgt
YAj+fvgnY3cC5+H3wZ+V/eDf2AN9H8anwQY5Awwltj34ArETmX+zRn8ZWuIM
T7e32NOIn8X88NzfO/An4X8Ou7s9Bf8M+0YNfvFszYnTiO0IriF+qnWE/Wtr
gNha5r7q3nsmzF3O3M75vDvNfTAVez7Ym/gkz6SJb/Zb/cax2JPsd9gXlOiX
F5pvJeasL9cYswYvwr7CZ2CPKVF7i5qoe2uwQ/aqPWrs8b3ZP/ZnbV9wT9bT
nuYC+EkNfluKvdwcy3y/CnsmWJb7vTl2K3gk+9tU7PngiRr8thj7B+DurN/u
Jf5nk728rUYOuF/jwOgS3+C3Xt5Erp2f++U3+m2DWoIfzgMjSvQo+/cocI7n
m/x3DhiMfYTPwJ7YROxc1lxgLwDHWB8l+GOE/RG7X/KXv3Gta1bV4ES50DMe
aa9oIveHl+BH57T7M/c1c6+Jdx2efDPad5ZrW+LdJzSx1m8Yg93eRGwU/l3Z
D91bz8TfXtZErvuMO2vw99Yl9lS9ogaQ+zdm3J5pr5Tj1SNyoNwnB5vPagK1
gJrp/uzhNXv8vclRcpMc848aGkjtI6c+lv3bs/aMbVpqge41ava9Gpwul6sp
5HJ7rL1VfvlpDf1ibjxhjiTHyC1y3n3ZM+2VcuTPa+gf167KfixHy81quJ/V
0FfmqpxrP1LzqfXUbNa/mk+tp8awX6sZ1YpqCLXSxU1oBzXTAzU4slP27P/U
0Eit2f/M5/9zcEtw0trsAda+GuEXNTSRWkjNIT+rEdWGaoplyXly3YY8bzlN
LpMDH62hB621RXJ4Dc6Va+Xsx2voQ2NLs37VDGoFOfHHNfje3mNNflBDE3XN
fim/qcnUYmrCB2twvlzfO/lXzaPWUTMvr6EP5Ed7wD9raLAu2f+tD/uf3CvH
+Dz1wOASNen7qIHUPmqQrZrQO7OJXV2CW+Zkf7JPlez/V5bQl3LN9Mwv88zz
9k7gXUBN3TH5YUaJ32zdBP/OtXeW4IpZ2W/sO/KpnClX2vO3aYJj5BY1QmsT
HC53yyHyoZwml93nnjWh2dRqagj7mXzmt1ya/VPNr9b3jjAi88teZI8x/9X0
ank1vHyuJlALyJHysZwpVz6U76d+WVjiG30/+e3WEt/o+6hn5Bb3dIcm+GlJ
id9Yv+phe50cbX6qh9tKaA7rVf1v7xma/d47iXcRNc73a+gD32Ut8R5N6A21
yN0l6tM7mXcx7yjqFzlVLl1uj2lC76hV5MDdmtAnalPf8Xs19IZ7uxr/jhr6
x9+uw9+lCb72f/nN8pl6wbNVf8t1kzPf5Tz1rxpI7aMGsZ7VX8fK/dlv1Ndy
Xb8S/UY9Lhe6Znb2Y5/tHWF69nvvPubgzOQPz9o7jncZ+Vqt653Gu8j4JnLX
O4m9zx4oVz1Ug/vlh8klNIBaQf5WC6gZrHf1ue86Or9PTpfrf1TjriKfebfy
zjIj+cS7knc0a0n+9G5lTc1K/vCuYw24n2oktZEa6Nx8X7lvWPK5Gl1t7p3F
elKjqc3GZv2q4dRuY7I/qInVwt4hzD81t1pbjWQ/807rXbY9+cb7hHs/OPWC
d1rvst6JzS81mtpMTWu+qLnUWvOSf7xDe3eekvmlZlOrqanVW2p8tf207Jfe
2b2re6f+H4ti520=
              "]], 
             Polygon3DBox[{{868, 881, 696, 762, 96}, {875, 888, 697, 767, 
              103}, {919, 872, 100, 765, 766}, {918, 870, 98, 763, 764}, {917,
               865, 93, 760, 761}}]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0UsrRGEcB+D3uF8HX2A0H8CUPcqa1FhSwo5CdmzkOkYuZcNOWbiXUmyF
mU8w7nfK55DnZPHr+f3fznnfc0kNT/SORyGEMVksCSHus/xho0QWmtnENFNs
Zyu72cl+ZjhYGsKoPqRPc5I5znGbm9znLi94xgKvmXXmbXwtr8x3+r0cmB/4
KIf6E5/lRY7Mr3yTY/2dH3Kif/JL8vZaNn/r87wxF/VL5nnKc+5wjxvc4kx8
H+OPM8WsdxvQR/Qe9rGDXUyzjUm2MMEkf2XJmQ1cYNF6Qq+XdXMda2VNr2G1
rOpVrJQKWTGXs0xyuscICIXo/3/9AaekNh0=
            "]]}, {}, {}, {
           Line3DBox[{648, 712, 713, 824, 714, 715, 827, 728, 729, 830, 736, 
            737, 833, 744, 745, 836, 752, 753, 839, 760, 761, 920, 842, 768, 
            769, 845, 776, 777, 848, 784, 785, 851, 792, 793, 854, 800, 801, 
            857, 808, 809, 860, 816, 817, 679}], 
           Line3DBox[{649, 716, 684, 650, 717, 686, 655, 730, 688, 657, 738, 
            690, 659, 746, 692, 661, 754, 694, 663, 762, 696, 923, 665, 770, 
            698, 667, 778, 700, 669, 786, 702, 671, 794, 704, 673, 802, 706, 
            675, 810, 708, 677, 818, 710, 680}], 
           Line3DBox[{651, 718, 719, 825, 720, 721, 828, 731, 732, 831, 739, 
            740, 834, 747, 748, 837, 755, 756, 840, 763, 764, 921, 843, 771, 
            772, 846, 779, 780, 849, 787, 788, 852, 795, 796, 855, 803, 804, 
            858, 811, 812, 861, 819, 820, 681}], 
           Line3DBox[{652, 722, 723, 826, 724, 725, 829, 733, 734, 832, 741, 
            742, 835, 749, 750, 838, 757, 758, 841, 765, 766, 922, 844, 773, 
            774, 847, 781, 782, 850, 789, 790, 853, 797, 798, 856, 805, 806, 
            859, 813, 814, 862, 821, 822, 682}], 
           Line3DBox[{653, 726, 685, 654, 727, 687, 656, 735, 689, 658, 743, 
            691, 660, 751, 693, 662, 759, 695, 664, 767, 697, 924, 666, 775, 
            699, 668, 783, 701, 670, 791, 703, 672, 799, 705, 674, 807, 707, 
            676, 815, 709, 678, 823, 711, 683}]}, 
          Line3DBox[{864, 891, 903, 877, 863, 892, 904, 878, 865, 917, 920, 
           905, 879, 866, 893, 906, 880, 867, 894, 907, 923, 881, 868, 895, 
           908, 882, 869, 896, 909, 883, 870, 918, 921, 910, 884, 871, 897, 
           911, 885, 872, 919, 922, 912, 886, 873, 898, 913, 887, 874, 899, 
           914, 924, 888, 875, 900, 915, 889, 876, 901, 916, 890, 902}]}},
        VertexNormals->CompressedData["
1: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
s4Lqau8y34vgV1Tqls6C8y6ncITyc1hHcBn4laE4mWPgX9gawvS8J7mrHwZf
YpV/TBvOu5mHAPWH0Wd0v4Avf6kT4NFE6lTAjSHKz7fxua/Bf8sfaVcmeRRv
5eqneFa2l0WB/15tXG5qTuqUicBT6sNvx7x9Af47MFEtFvx4avMdiqfI7uQs
8N+LfT4+Bj/uflGf6uenS4/iwX8bvntz8gupU2Lp0fS8n/xQ2wL5c6hwrbcF
qVNceeYigKfwwHpt8N8FlzNiwI/L8hZ1AZ7/kqWfgv+W9Jxw9C+pUxJeXuMB
T2FVg0HIn5E7Grw/kjq1bp4TPe88LxcVgv9uky9UCyB1yrjWkOJ51MnyPvjv
+XqtK5VInWrSUKH8/BgR3w750+SGbRX48cSIFx2A5xbfgk3gs+2TLn4F3316
1wg/e5mcWW8/3bpkoiFLi8mbrUyeNI/YofRK0JDV6j6SKyVDR/JkoL+R8WIv
Y9YHj5Fc+YXJk/9yHt+6pmnC6t81kisP+4/kyVUJE4eb64xYiMmV/CYjeXLX
8Bnx7DAjli6TK/uZPJnbc8RBcNseVoPISK58wuTJRz+jn3ziN2EpMbmym8mT
b8zmBQ+eM2b1WIzkymtNI3nSEhuV38g1ZvnWjuTKA6dG8uTqJUJvBhQNWYjJ
lTlMnqyvEnqngI1YTkyunJ4zkie9WzM/dTsYssYzuXJ65EhujODii3WKMmDd
ahqp+1xbed8DP2NWSTwk/ERirTPpeecpUkkBfuZtOGcK/ZKs5Rcpnmrsr9eB
n76nn14i/ETvwx9Tnzw9918C8HOe379ywk/0guFnvkPzC+Dn5reldYSf6AV2
oee9mPvJLeDnNrl9dwk/kSjDz0/+MjXAz8kKA08JP5HUggSKp6KapTrw83rm
zXLCT6RvFzoefNTcO8seAD9nP1OJIPxEyDYoEPD0UL/QA/yMOG/3nPATDS9c
WAZ4Fhn4ZAI/rQx6LQg/kSHDz+fbP4QDP91jnh4m/ERhmoGUnwcaPtUDPzNf
1nNDv+SwvQw97zynkxHwc85TFz7oi4zyU3fle2XQzyJ+2RXQF3T/MVKPnEWX
VoB+3r5q5QH9v0eMfu45/UcH9HPBj+cNRD+R5PyRelQksLgG9PNI/ri10P/b
hCpo7oi97JUC+rmjqnaY6CfqZvRTSX3/VaqfKp5fiH6iYkY/1xV0Xwb9LLQT
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
tJTB50yD7TjAZ4O8/EaCDxJm8PHyFVOXI/iL3d6zE+av7j1J5+vLXBXaSfD/
u3ydA8zvro2vg/nHhVIy4fnufef0D/YTki1M9y865JACz/fNtwof2E9BATdd
P3bp03Dg4QVtbX/CQ9Sth+j8yTt3uwB/xFwsggh/UMgsc7p+jcAIzw/EbPY9
IxnBesDwfJDhua/Oo+nKNyJYvxmexzHv2d5l3rN9y/DZzm+EzzpPI+Ze6I5g
XWH4nMPwmWup9c6JieGszwyfdc4tkjdd1I3nPbXXa48sw3N1Im8dqMlBz5MH
nt0T6MI5NgOR42o/4KxJqf5Z/eVY+skL66K5rTgsfnO3n0szTu65dhPmR4Sf
cnmv34LV5HdPHxf3DYv3RNL5+rIBLE+hCmxXUGxbbNGFe6wu0PmK8sfq3uh8
xguVr4jL67JxzMrldH5nv1fjt69PkOedrNDa0xws6r4qCuYfsltbH9H1GL2T
FzJo296NJ5vb0PmzZtdzPwisR1ke2d2Bhp1YUOVYJMwPb+Tx32Jch3Sski22
G3Xg0M4BP5h/fvMysVliHchsHp9Vd14DFp+teBvmL18uMXPpjHYUM9VvKmd+
AzbWG9n/9bTDkmrqHNTBEXGWLMvCFQIxdP2Tn7K/9U7rRrML57meQVk48EQc
nd90cbYtwRMJps6OaI0sQzvWYjr/1KdD/QRPlJLp/ZOr9gOSfWFO53+1SRxf
PLcVcYZ0NhA8kaBpE8UnZ9LTaSX6LSgoWPUkd9w3NO+TC52vmryt4aJQBXq3
IlaS4In2/p1G5/PdYdtl63xG9/DlvAW6bKQQKkrnFw9afaj9+gQvX/Y8juCJ
3k9QpXgGrFsz63rXY1wRImVF8ETSdoJ0fga/kEtsYD0OXyJvFmTYiSIWudP9
8+0unr7ZuA6/2qJbSvBEth0L6Xw534TQmWIdWLP1swwnrwFpzNlJ92PWVnlH
dUY7FvrqjQmeqPG0CZ3/e012/wp1Dv6yIvvXzLIs9PLpLDpfa9/cHIIn1s70
+OKOslDXJWE63yszJena/W78+2LdyRWXsvCWJzVH/34sQbOscT/XrS78aMly
x0pUhpuklI7B+HPjrqfqEe34/Bm/cSucG7BlyVc67nfwWpvXqxbsoBj9LF24
Gc+4M9kOxl9/SvkJ+4m6nLN3Fnm+nNURlP92lZbe8Lt+D2qtIL8L63D06D5H
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
Pd3I1NPRvxeQ9bf/b38vIOuL//ffC/4fvQYU1w==
         "]],
       Axes->False,
       Background->RGBColor[1, 
         Rational[82, 85], 
         Rational[14, 15]],
       Boxed->False,
       ImageSize->Scaled[1],
       Method->{},
       PlotRange->{{-0.299823326344286, 
        0.2998233263442558}, {-0.299462627196952, 
        0.299462627196952}, {-1.732050612422391, 0.9999998048535137}},
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]},
       SphericalRegion->True], 
      GraphicsBox[{},
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, False}, {False, False}},
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[1], 
       GrayLevel[1], 
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25], 
       Scaled[0.35]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.01]}}, "Rows" -> {{
        Scaled[0.02]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.584445800272291*^9, {3.5844458830927877`*^9, 3.5844459206261044`*^9}, 
   3.584448063949201*^9, 3.584451816735817*^9, 3.584452334527363*^9, 
   3.584452576436322*^9, 3.584453625558269*^9, 3.5844537600806293`*^9, 
   3.5844539231951017`*^9, 3.5844554223837423`*^9, 3.584455488587061*^9, 
   3.584470631459076*^9, 3.584470837792778*^9, 3.5844708959631033`*^9, 
   3.584473469906714*^9, {3.584473546885791*^9, 3.584473576255117*^9}, 
   3.584476524004116*^9, 3.5844768964143887`*^9, 3.584477701906418*^9, 
   3.584554765656076*^9, 3.58479859781042*^9, 3.584904955236394*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.584470904324169*^9, 3.5844709052470837`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ShowOrbifoldGrid", "[", "4", "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{
  3.583689434030222*^9, {3.583690038818116*^9, 3.583690064557714*^9}, {
   3.58369221561723*^9, 3.583692295584877*^9}, {3.5836971219493*^9, 
   3.583697128587344*^9}, {3.5836974345230513`*^9, 3.58369746233471*^9}, {
   3.5836974976174173`*^9, 3.583697552388973*^9}, {3.58369763742273*^9, 
   3.583697661283956*^9}, {3.583697697187623*^9, 3.583697697681795*^9}, {
   3.583697921812044*^9, 3.5836979270391903`*^9}, {3.583698022251027*^9, 
   3.583698106174611*^9}, {3.583698152561407*^9, 3.583698152736507*^9}, {
   3.583698209683529*^9, 3.58369823806411*^9}, {3.583699151298019*^9, 
   3.583699185253458*^9}, {3.583699394613495*^9, 3.583699469642783*^9}, {
   3.583950965930999*^9, 3.5839509892351837`*^9}, {3.584136641185576*^9, 
   3.584136642988099*^9}, {3.58418582819775*^9, 3.584186027196117*^9}, {
   3.58418642444545*^9, 3.584186500754262*^9}, {3.5841866582220087`*^9, 
   3.584186766405637*^9}, {3.584186811686653*^9, 3.584186832061205*^9}, 
   3.5841869859448557`*^9, 3.584187040241329*^9, {3.584187077361844*^9, 
   3.584187079656089*^9}, {3.584187139344602*^9, 3.58418718644466*^9}, {
   3.584187237970829*^9, 3.5841873678137493`*^9}, {3.584187400198305*^9, 
   3.584187624951578*^9}, {3.584187726903932*^9, 3.584187789769574*^9}, {
   3.584187821025146*^9, 3.584187897118555*^9}, {3.584193110409483*^9, 
   3.584193138015587*^9}, {3.584193194922391*^9, 3.5841932098646507`*^9}, {
   3.584193249112626*^9, 3.5841932504566317`*^9}, {3.584193296068103*^9, 
   3.5841933106086807`*^9}, {3.584193366005022*^9, 3.584193367795381*^9}, {
   3.584193414660308*^9, 3.584193416458366*^9}, {3.584193458308425*^9, 
   3.584193461031646*^9}, {3.584193542363206*^9, 3.584193570383233*^9}, {
   3.584193631868184*^9, 3.584193654583934*^9}, {3.584207427977562*^9, 
   3.584207501726315*^9}, {3.584207597447155*^9, 3.584207626676507*^9}, {
   3.5842076755108*^9, 3.5842077203567533`*^9}, {3.584207767876896*^9, 
   3.584207853383381*^9}, {3.584207930296794*^9, 3.584207998168458*^9}, {
   3.584208035919663*^9, 3.5842080419817553`*^9}, 3.58420808388694*^9, {
   3.584211608664071*^9, 3.584211644171987*^9}, {3.584212203939707*^9, 
   3.584212208037219*^9}, {3.5842125744924917`*^9, 3.584212640724815*^9}, {
   3.584296319128419*^9, 3.584296395719811*^9}, {3.58429644238603*^9, 
   3.584296669869536*^9}, {3.584296736407246*^9, 3.5842967386965837`*^9}, {
   3.584296779136149*^9, 3.584296854690329*^9}, {3.584296892461269*^9, 
   3.584296996777444*^9}, {3.584297068795958*^9, 3.584297188399145*^9}, {
   3.584297293293878*^9, 3.584297335189075*^9}, {3.584297376168564*^9, 
   3.584297576953013*^9}, 3.584297766513338*^9, {3.584297848833336*^9, 
   3.584297914758376*^9}, {3.584297957218121*^9, 3.584298011394829*^9}, {
   3.584298117096738*^9, 3.584298202007159*^9}, {3.58429957778618*^9, 
   3.58429965971666*^9}, {3.584304202964367*^9, 3.584304214333768*^9}, {
   3.584396442592865*^9, 3.5843964496569*^9}, {3.58439649139237*^9, 
   3.584396495152761*^9}, {3.5843965389924498`*^9, 3.584396572888001*^9}, {
   3.584396611039075*^9, 3.5843966649230213`*^9}, {3.584396710218545*^9, 
   3.5843969957591143`*^9}, {3.584397029373207*^9, 3.584397090514019*^9}, {
   3.584397121962578*^9, 3.58439714435212*^9}, {3.584397187297997*^9, 
   3.5843972107109013`*^9}, {3.5843972488630857`*^9, 
   3.5843973682382812`*^9}, {3.584397569884097*^9, 3.5843975764419823`*^9}, {
   3.584400929801692*^9, 3.584400941805945*^9}, {3.5844014288085117`*^9, 
   3.584401462399087*^9}, {3.584403298502183*^9, 3.584403304088366*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Universal Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Orbifold\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, False}, {False, False}},
      StripOnInput->False]},
    {
     ItemBox[
      Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1:eJyFmVuoVGUYhoekA3nXAYIoMiSK6AAadJEt60LwBNFNJVFQKARtgshAtDI7
QIER0o2VEhUVSQeMrEBbsdBKtkGsDhIbUafUyjTtIkECi1nzzrCed705F3uY
Z7551/e/6/v///vXnnHfQ7cvPaPX683+78+0/95n7Fn80alTf5Z67w1ex4pl
j3y4fsvEYePvTj9/9cTUQeNHX1++bOb8vvGlA52pEF8HXhnvDV8hvgj6xof5
hPi+8eF4jQ/9MT78nHgpX+kzuXwml8/k8rk7vg68Mi6fQ3wR9I3L55C/cfkc
/DEunwMv5R99JtdncvlMLp+74+vAK+PyOcQXQd+4fA75G5fPwR/j8jnwUj7R
Z3L9nlyfyeVzd3wdeGVcPof4Iugbl88hf+PyOfhjXD4HXsoP+kwun8mlS67P
3fF14JVx+Rzii6BvXD6H/I3L5+CPcfkceKlx02fydj3XoZ7rUM+MrwOvjMvn
EF8EfePterb8jbfr2fwx3q5n46XG1+1zFXyugs9V8JnxdeJF0DHe9sfyNN72
pwr+GC97rdcx7HNj3l6Xx7y9jox5u+4ZXydekMufcF3j8ieMy7j8CVz3sYCO
cdTPiKN+Rhz1g/g68SLoGEf9ME/jqJ8RR/2Ql+37ZutY8KcO/tTBH8bXgVfG
dUdDfBH0jWMdCz7beI1jHQs+Gy/b88D2ZfOZHPuy+dwdXwdeGZfPIb4I+sax
L5vPYbzGsS+bz4Grrwv13A/13A/13A/1zPg68Mq4fA7xRdA3jj4z1LON1zj6
zFDPxsv2Om3nJvOZXD6T49xkPnfzyrh8DvFF0DeOc5P5HMZrHOcm8znwsr3v
2XMA85lcPpPjOYD53M0r4/I5xBdB3zieA5jPYbzG8RzAfA68bPcR9lzLfCaX
z+R4rmU+d/PKuHwO8UXQN47nWuZzGK9xPNcyn7uvO1nqvX3dzcb1Wd8jvgjx
kVMH+syzCFx5Wjw5xkUe4qvET+PP+FygOun2uTqNPzzXKE6vY8jPeOiTR/pp
XKEPGfPtVz5xxdSWI6XexTV/yYefixBvHPq2PpBD3zjrX/p83ot4yyfNL173
rzUHH5yYOlrqHbwIXPHUKciVX9Jn/opL+Yfrmj+It/ue8ud1V514f/q6N3fa
fBHvtV4Wb3U7/N7qlly/J7//vL1vbTnycblp68oVE6/sHOWjz/pe/NiyixbN
nP9eEeIjp474UM+uq+uEeONDfXKNy+LJ4cOIK7/Ak45x3C9bJ8lxv1gntk62
76vVj6178Gek886Sd5+duHh7rAd9j/h430N8ui/St/tFjuvaftft5+bkp+3v
qEPjm1YunLZu5tqkY+NK9Tn78Nx5U49+MeLDz9F/fT/iTR7mf/u+27gK09G8
wLgwXq5j1p9AxzjHi/uVfBjrDPML993WN/hDfeOY7/TZOOZ7GfRHfN8n1545
a9bPtr+I8/+Djy+4+e7163davDjjn2647YPijO8317V4ccYrT/5/TfmQ67rk
0ieXfvt58FifXPrk0ieXPv+fIn1y6ZNLn7ydfx3yr0P+dci/DvpViK8svtd6
jePJoV8E/aI7fvy8EeMdcYw36Nemz+dsuF+mT477FfLvh/z7If9+yL9v+nyu
gvli+uSYL6bP5wlYH0yfHPPd9NnHYl0yfXKsM6Z/53MP3Ljjjj9svizYePnu
724Zn4+kf9NHU8v7Vx+1+r/m65cuOH6hr6uvXrbr0lU7Dpn+Czc8s+35D341
/dWD999M/+F7T5x8+6nfTb89z8b69a5Db9xyyS+mv33/a7fedvYB09/y9137
7zl+wPTnD3zYY/rNePea/jkrpl119vJ9pn9y7davLrx3v+k3eX5v+k0+P5j+
ywM/d5v+Y4PvfzL9RmeHxZ81yPNbi587GO8Gi58z4NssflHDrd5WNTpWb+c2
17V6bnS+MZ3Pm/xN58lmvKazofHH5sVnjZ+m/2Pjv+n/09wv02/y32f61zf1
YPqLm/ox/U+bejP9L5v6NP3vm3o2/fZ+MtZ/pJkvpr+mmV+m/2IzH01/YzN/
Tf+6Zr6b/pxmfTD9hc16YvpLmvUn1YPV/7z/52E/mjR9PgdDfOhPXId9pnTY
34KbPuPV/3F9U79Irn6OXH0Yufqn7vg68Mp4b/gK8UXQN67+IORvXPsxufbR
4FuKL3Uf6DO5fCaXz+TyuTu+TrwIOsblT8jTuPwJ403xpeqX/pDLH3L5Qy5/
uuPrxIugY1z+hDyNy58w3hRfch2WP+Tyh1z+kMuf7vg68Mp4b/gK8baPyOeQ
T4jvG5fP5PI5+GZcfSrnr/pLcvVt5Oq3yNUnkasfIlffQ67+hlz9Crn6DHL1
B+Ta18m1H5Orj+e8Vv9Nrr6WXP0oufo2cvVh5OqfyNX3kKtfIVefQa7zCeep
zhXk6tfJ1WeTq48kV/9Hrr6NXP0Wufokcp2vOC90LiLXeYNc5wRy9ffk6uPJ
1TeTq98lVx9Jrv6PXP0f76/6P/qj/q97X5gM+/Jk2Gcnwz41afrq26ijPi/E
Wz7SYbzOsYzXOZbxOsfST533yLcNz1fkuh7XE12PXL9PnPmLM3/9nvHiKT7l
T67fk/8LxV/4uA==
         "], {{
           {RGBColor[0, 1, 0], EdgeForm[None], 
            GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
Y8gzzFcrck7OMZ+W1Ldf/Ayb1I9811slz0yceYbbjits87qRc7KGBc6d1LSP
Rp4zOBd85b1uVWXNTI5uo/bXkdrYWu0vIn25ZZX/APDP5mp/HKmZG6j9uX24
hdpvWvvqux5Gm6h133ZsNlT7s0j/J5afjzxTrvLaOpesdz5xvDRzH7SgCzoW
WTu0rfKMQ37lXPNRZPw1rTK2qWNeE5ZG+nUT3V8S6Z+NqqwF8dM11V4cGQtr
qP1hZCyvrfb7jqO11P4yMq7xw2XeV+owai/2nDh/wHpK3mnv/eS/x1clY4n4
+aykfuFnX9sniJsR3svhHrfcY9FstBKdXOoxY+0P7PVCj1lsP2FdP3ltHas8
33FO59yH9h9lXUFzXy6pa6/6Gn3GZmdEnt95frp9epG/Ea18w/ZFkzh/cg7u
VOW5klzzrPu/WbIWhSdbM+jLmbBOODZK1rKst6ljge9v7DhY5W+lY237/G8e
z3dW9vOaGMLvl3u+1c89dqX3CZuhLcTIdNsX29Z2TNXU1Cv9DeF1LnM/4paY
7UkcRe7lO95j9reH7jWN3Ev2/JuSGsrc9b2OvuJ1It+9MToRuX874DeR79hK
3CzSPzZFu6zH24lbRvoCtkGD+J5vwjWV+Fv7Cv5NnHJWw583VHs9P1/i3ID/
d1G7QaRvbi9eN9LPODeRuzs7FqjXG1c5Rx/PQ7xTazSoco4tPM+O4saRGrco
smZBE5pE2g6bvRVZq3R13JEPiN8Oaq8fqX3UMPwbIDbfizwDEr9d1e4U+d9o
a3QjUlt7i9eItDsxyzm0pXWMXN7C+sM5FR3rpXbDyP37IPJM2cRaRw2B/rDO
qf7GzSPXx9o4q+ML1DboDHluLesJdR5at6XaHSM1+o3IM2I9ayz1B9q7aZXn
H7R0TXG/yHqtV5V1HvbZpMoaFw3ErhvZti0i/QPf2LDK/6cr/E3b+rvaRvoc
/tYq0ofwD7SU/zho/neR/ynRVep+tIT/Zs0jfRE/7Fnlfxl8oEeV//vqVLkP
g70X+M429h/2obv3YqfI2CAusMcg2wS/5ZxOrhkYGQ/EAvu5gfe0W6RdsEl/
caNITdy4yn/Hv/jeAN/fqMp/x9QS/G+hhmad7SJjjPj6HaHxxwA=
               "]], 
              Polygon3DBox[CompressedData["
1:eJw1l2UYVkUQhXev3YGgCAaKSBkgdqHYYiuYqKjYgt0BBmJ3YGEBKpgotiJ2
i63Yoghid7/vM+OP8+yZe+937+7szNnztes/cNtDmlLKp2Bm8HstZTXGVcGT
8D/BGvAdGZfjwdbgAeL7wTdc+wOsXuI3T8HnAyuDL4jfA//Ad2XcBbwA/wus
WeKdz8Bn532nwE8GbxMvBjYAU4g/B3Nwf3CJZ97i+t9grRLveBa+AFgVTCWe
DNrA1wPfwT8DreBrg6/hH4MWzhdMg38I7oN/y3g6GA5vx/e+gR8LFoNXsAd8
d/Ay90sTvB94ifjuGrk7E+wP/xfsVmLNz8Nn5fl94HuD14lnIx5Q4tobxCuC
bmA68fvuAff3YuwPXuP6TE3wPcGrxLM08a7+8OXhi4IHS+zJt1xbCfQAM4g/
AoPgNzBeDK6HL8Lz4103+Jq4BfGd8DvAFOKFiO8qce0L4m3MCXxBcCr8cdDe
9TJ24dkfGbsTdwOPwrf0G+4bGAzfGrSBzw2GwH9wzfAVwEPwBXnH7fCx1iDx
06Az/Kyst0MYrzQG18EngmXhwxi7mlvGI809uBy+bc6vJTgNvn2+zzmcAf/F
+oT3ABPgv4JVSlx7Av59jbktDx6G/1zj2T653oGM1xFfAEbADwU3wy8DN8AP
A6NLzPlG+E/uSYkcPWa9NrHWMdYn8STQF35J7ufejANL1MBl8L1qrM2auhS+
cBN7dy+YTrwTWLdETs+G75Hv2wRcBO9dIxez2kPw+0HrrNl7GHuBtjV6zZ45
Gv5IiT0ZDb8XfAXfHtwFX5zvf1miJ9qoBe5HPuOzv9XQjr65P8dYMyVq6hb4
MlzrUqPH7LX2oEONd/ruB+Gdsiftzd1rfHtDcCF8lxrcPTsXflCN2j4NXAPv
Z83C13eP4JvVqN2ZwMnwAeD4Ejm+Ar5rjVypYefBD66xl0PBtfayNV0ix+fD
96vxrU9SLw6sUQuDwdXwnWt82z0/B/5hfu8q64r1tQT3EN8NpnKtFfG4Ete+
It4u69seOj31Yif4zuBN4rma+P6p4L3cnw/szxp74Z6qnV1zr9Un1zIl99v1
bgrfMetDDVPLLrYv1QJ7qIR+j6tRj4PgJ2S+3BPXvkiNvRoKdsiefqTGb/zt
Mozjc38usRdSf8zv5fCR2S/293BrI/tlXzDEvc58vpvxlYzdmN8RNXI3IevJ
+tihRA6sT3VRfRyU/bNsE/qwT/5+TnCUdZ75M5/yY8D79noTPT0y+8vz54gS
73iHeMkmtLUzfGn4npm/A7I/u6Um+Q3nPncTZ8lxzjH72We9r17N10RuTwQf
E8/fBD/JGiPunpozooQ+z9PEu6wpa2ulJjT+xqwn12dtDMnvH15D2x/Nfj6y
hnY8CW6tobGe7da/2nsCeKVEz47N/mkBX6qE/p8E3vRZcIe1VMM3tMj+OhFM
gk9UQ1ID1AL7Ve1Wj1pZHyX0eXrOZ2Tm3rnoDTbNfvS36slG2e/qsHrcK/vL
86UtvEsJfZ+a9XFz5sbzqDVxx+yn48Az8Ldy/pvbYyXmpD6qwdaQ+jsp+9ta
NP/q/bE1cvd6rk99sxZfzXypn+b6JTDGOqjhlfzmbTXOENegPniWbuGelZij
5+UB4OwSPeF5p6fQW9gz6tFW1kCJNXueqv894VuV0Cf1x9zYw+qfemnu7BH1
c4kmvE9H+FJN6Jnexx5VP9VkzwbPCLVaf3Z4iR7Qf42qccbZr/o//c4WJTTy
RXiHJri6qZ7o/3qXeOZ/P6T2qGn6H/2Nc+tTwu/or1zL1iX8lv5Lrqa/kvm3
tsZl/Xp+dyihmRPzm37bd6ht6pMexvrVnxwPXixxxo3JerCWx+f+TMl+uSl7
Tz/m3PpmPWwENqzhbfWcalx78G4J7bPfh5XYs8nWvT1dw9t5xtnf51q72e89
waI1vKpn3p35LtfbL/td7zMs9cMz0vt+07Nz3ibqxbrxfFmHceEaXtczdhP4
xjW8sWe0mqV2f1JCy9aEt6zhFfWg1oRniXpqrawBX6iGV9ZDq1fO3W9+VMP/
dyrhsdQP/z/Ya17z/4B+vSt8OfBcDf9zjbVcwu+Nyh4x/zNq+EHv6bE+J+7c
hL86NPXB/w/2uu/U//t/xFq8tYT/1Q/LbwPfETdNeOdpuZ62TWj9jFy/NWWu
zal+xuc/yH7Rb/u8ufLM9XyYnP1oj/j/QD/mWTGqhJ/WX8tH53o6NrGWgVlP
nZrw44NSn9wz9849Vs/1n0s4txL++Mes3aVL+Ef9q9ppzetX9Zfea596op+4
qUTOptU4m/XmaoT+UL8/An59CX+vH/db7Uqc3/p/7znHL2v4Fc8W36k/+Q9e
Wrwm
               "]], 
              Polygon3DBox[{{507, 394, 340, 43, 455}, {550, 403, 353, 93, 
               460}, {517, 404, 352, 88, 467}, {501, 392, 338, 37, 449}, {504,
                393, 339, 40, 452}, {554, 422, 373, 180, 490}, {552, 420, 371,
                174, 484}, {526, 411, 358, 124, 479}, {551, 409, 359, 129, 
               472}, {553, 421, 372, 177, 487}}]}]}, {}, {}, {}, {}}, {
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwt0MtNAmEYhtFBFBBvVCCxAK0ACzBCTNwJOxew0wSWAlagFWgFWgHagOJd
vGyJDRhDiLeF50tcHJ55F/PPMEvbu5s7qSRJtphyEdcpPx9aoMi5vaKrlOnb
NW3Q4sXe10OOebNP9YwxWftS0/oT93PFnn2tN9zStu/0ngc69qMOeKJrP8fz
+CRnv+qk/uoFPd7tEz3igKHd1Sb1OMuu6jqluM9e1kVGZOwFndBvnWeODXtW
Z8hTsafjPeI/xnl2Jr5jvBNrdjrO4ev/+/4B1u0rmw==
             "]], 
            Line3DBox[{301, 271, 309, 286, 293, 439, 292, 548, 294, 265, 310, 
             272, 303, 304, 305, 266, 315, 277, 306, 307, 308, 267, 298, 547, 
             280, 442, 297, 268, 320, 282, 319, 283, 321, 269, 323, 284, 322, 
             285, 324, 270, 300, 440, 281, 549, 299, 291, 318, 279, 316, 278, 
             317, 290, 314, 276, 312, 275, 313, 289, 296, 546, 274, 441, 295, 
             288, 328, 327, 302, 273, 311, 287, 326, 325, 301}]}, {
            Line3DBox[{444, 497, 443, 498, 445, 391, 446, 499, 447, 500, 448, 
             555, 501, 449, 502, 450, 503, 451, 556, 504, 452, 505, 453, 506, 
             454, 557, 507, 455, 508, 456, 509, 457}], 
            Line3DBox[{459, 510, 458, 511, 460, 550, 560, 461, 512, 462, 513, 
             463, 539, 542, 548}], 
            Line3DBox[{469, 519, 468, 518, 467, 517, 558, 466, 516, 465, 515, 
             464, 514, 543, 546}], 
            Line3DBox[{471, 520, 470, 521, 472, 551, 561, 473, 522, 474, 523, 
             475, 540, 544, 547}], 
            Line3DBox[{481, 528, 480, 527, 479, 526, 559, 478, 525, 477, 524, 
             476, 541, 545, 549}], 
            Line3DBox[{483, 529, 482, 530, 484, 552, 562, 485, 531, 486, 532, 
             487, 553, 563, 488, 533, 489, 534, 490, 554, 564, 491, 535, 492, 
             536, 493, 423, 494, 537, 495, 538, 496}]}, {
            Line3DBox[{329, 383, 330, 387, 337, 391, 341, 395, 345, 399, 349, 
             560, 403, 353, 405, 355, 407, 357, 561, 409, 359, 412, 363, 416, 
             367, 562, 420, 371, 424, 375, 428, 379}], 
            Line3DBox[{331, 384, 332, 388, 338, 392, 555, 342, 396, 346, 400, 
             350, 432, 436, 439}], 
            Line3DBox[{333, 385, 334, 389, 339, 393, 556, 343, 397, 347, 401, 
             351, 433, 437, 441}], 
            Line3DBox[{335, 386, 336, 390, 340, 394, 557, 344, 398, 348, 402, 
             352, 404, 558, 354, 406, 356, 408, 358, 411, 559, 362, 415, 366, 
             419, 370, 423, 374, 427, 378, 431, 382}], 
            Line3DBox[{380, 429, 376, 425, 372, 421, 563, 368, 417, 364, 413, 
             360, 410, 438, 442}], 
            Line3DBox[{381, 430, 377, 426, 373, 422, 564, 369, 418, 365, 414, 
             361, 434, 435, 440}]}, {}, {}}},
         VertexNormals->CompressedData["
1:eJztyMEJwCAURMGPqcQeck8PKUHwbAsp2RLMSTANBGTeYRcml3bXFBHnO0fM
nvX7xTnnnHPOOeecc84555xzzjnnnP/gnzjnnHPOOeecc84555zv7gMVQOWe

          "]], GraphicsComplex3DBox[CompressedData["
1:eJx12LGqFUcAgOGLvkdIJK+QNicWggmBQEgjBAshtlbpbATTWNhfSFKkD6kM
IsqAIFGwS2HtA4jaCHaRe/yz7DfMhcMyH3tnZ//l7L3MZ9dufP/TuZOTk/cf
Puc/fG598+WPp6fPRseTs583h/vvrry8+vbJ5K//+Pn6518/nvzb3y+8+Pfi
o8kfnM1zb/Lvzs7/c/Ifzvy3yY/H2w/1r47nH/RLx/knv3dcz+SXj+uf/NXx
fif/+9hn8o/jlY+62lmvs15nvc56nfU663XW66zXWa+zXme9znqd9TovfNTP
znpjvc56nfU663XW66zXWa+zXme9znqd9TrrdV74qJOd9X5fb6zXWa+zXme9
znqd9TrrddbrrNdZr7Ne54WPethZr7PevHpjvc56nfU663XW66zXWa+zXme9
znqdFz66bzvrddbrrHc9vbFeZ73Oep31Out11uus11mvs17nhY/uz856nfU6
63XWW4feWK+zXme9znqd9TrrddbrrNd54aP7sLO+f79vvn8fbb7//my+f96b
79e3+X68eZ31Out11uus11mvs17nhY/9erfOep31Out11uus11lv3Xpjvc56
nfU663XW66zXeeFj//y3znqd9TrrddbrrNdZr7Pe/eiN9TrrddbrrNdZr/PC
x/77tHXW66zXWa+zXme9znqd9Trr3afeWK+zXme9znqdFz7276ets15nvc56
nfU663XW66zXWa+z3v3rjfU663XW67zwsX/fb531Out11uus11mvs15nvc56
nfU663XRG+t11uu88LH/+7l11uus11mvs15nvc56nfU663XW66zXWa+X3liv
88LH/v+Rab9u6qyzXzd11tmvmzrrddbZr5s66+zXTZ119uumzjr7df/7r58+
/+Tmk39GR/vrH8eHxfmTM//0fHXmn3y1fvchOX9az6qP1737xS+P7vz1dHTE
DwvvfOc56K1vNb/r77zV+hfXnfpw/vTcV+v3uv8B6K5rWA==
         "], {{
           {RGBColor[0, 0, 1], EdgeForm[None], 
            GraphicsGroup3DBox[Polygon3DBox[CompressedData["
1:eJwBCQX2+iFib1JiAgAAAKgBAAADAAAA4gIRFQUGEgIDEwMEFgYHFwcIGgoL
HAwNGAgJGQkKFAQFKhobGwsMKRkaIxMUIBARIRESJBQVJRUWKBgZ7+XkJhYX
JxcYHQ0OKxscLBwdPy8wRzc4MSEiLR0eMiIjNCQlNycoMyMkNSUmNiYnLx8g
MCAhOCgpOSkqQDAxPCwtPi4vQTEyIhITQjIzRDQ1OiorOyssQzM0RTU2gHBx
RjY3f29wTj4/Sjo7Szs8Tz9AUEBBU0NEVUVGUUFCUkJDTT0+Y1NUVERFYlJT
XExNWEhJWUlKXU1OXk5PYVFSV0dIX09QYFBRVkZHZFRVZVVWd2doSTk6aVla
ZlZXa1tcbV1ecGBhbFxdbl5fb19gZ1dYaFhZcWFicmJjeGhpdWVmdmZnempr
SDg5e2tsfW1uc2NkdGRlfGxtfm5vWkpLgXFyzb2+hnZ3g3N0hHR1nIyNh3d4
inp7i3t8jHx9jX1+hXV2iXl6jn5/kICBlYWGkoKDk4OEloaHmIiJm4uMkYGC
mYmKmoqLj3+A8PjnnY2On4+Qo5OUoJCRoZGSno6PpJSVp5eYqJiZqZmaqpqb
opKTq5ucrJydrZ2er5+gsKChsaGisqKjlISFs6OkuKiprp6ftqant6eotKSl
gnJzuamqu6uswLCxva2uvq6vwbGywrKzxra3yLi5w7O0xbW2v6+w1sbHx7e4
1cXGzr6/y7u8zLy9z7/A0MDB5sXUyrq70cHC0sLDybm618fI2MjJCBgXvKyt
3MzN2cnK3c3O38/Q4+IQ3s7P4NDR7ejS2srL28vMAhIRAxMSCRkYBhYVBxcW
ChoZuqqrCxsaDR0cBBQTBRUUDBwb5B0OECAfESEgEiIhFCQjFSUkFiYlFycm
GCgnGSkoGiopGysqHCwrHS0sHy8uIDAvITEwIjIxIzMyJDQzJTU0JjY1Jzc2
KDg3KTk4Kjo5Kzs6LDw7Lj49Lz8+M0NCMEA/MUFASVlYNERDNkZFN0dGOEhH
OUlIMkJBOkpJO0tKPU1MP09OQFBPQVFQQlJRSFhXQ1NSR1dWPk5NRVVURlZV
RFRTNUVESlpZbn59TV1cTl5dT19eUGBfUWFgUmJhU2NiVGRjVWVkVmZlV2dm
WGhnWWloW2tqXGxrXW1sXm5tX29uYHBvYXFwYnJxY3NyZHRzZXV0ZnZ1Z3d2
bHx7aHh3anp5TFxbbX18b39+cIB/cYGAcoKBa3t6c4OCdISDdYWEd4eGeYmI
eoqJe4uKgZGQfIyLgJCPdoaFfo6Nf4+OfY2MEyMigpKRhJSTiZmYhZWUhpaV
ipqZi5uajp6dkKCfjJybjZ2ciJiXnq6tj5+ena2sl6emk6OilKSjmKinmamo
nKyrkqKhmqqpm6uqkaGgn6+uoLCvssLBu8vKpLSzobGwpra1qLi3q7u6p7e2
qbm4qrq5orKxo7OyrLy7rb28s8PCsMC/scHAtcXElaWktsbFuMjHrr69r7++
t8fGucnIusrJvMzLg5OSwdHQvs7Nv8/OwtLR8Ofmx9fWydnYxdXUxtbVwNDP
yNjXytrZ6+QOzNzbzd3czt7dz9/eHeQe0ODf8u7jy9va7uriEOIR6ODRpZWW
5OUe+fHhvc3M8eno7ObU6Ong8+/r9u4B4uoC9PDs9fHt5ufE0ujR4+7i9+8P
7vIB7PDm7fHo7/MPxebE8PTT7vbq6+/k+PDT8fXh7/fl8fnpl2heKQ==
              
              "]]]}, {}, {}, {}, {}}, 
          {GrayLevel[0], 
           Line3DBox[{246, 1, 242, 227, 16, 31, 46, 61, 76, 91, 106, 121, 136,
             151, 166, 181, 196, 231, 248, 211, 244, 236, 212, 213, 214, 215, 
            216, 217, 218, 219, 220, 221, 222, 223, 224, 233, 249, 225, 245, 
            237, 210, 195, 180, 165, 150, 135, 120, 105, 90, 75, 60, 45, 30, 
            229, 247, 15, 243, 235, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 
            2, 234, 246}]}},
         VertexNormals->CompressedData["
1:eJztyLEJACEURMGPVmIl9nAlCBdfC5ZsanZGgtjCLDwWprTveVNEzFWOvX7+
qJxzzjnnnHPOOeecc845v/0H/ZUifQ==
          "]]},
       BoxRatios->{1, 1, 0.4},
       Boxed->False,
       ImageSize->Scaled[1.],
       Method->{"RotationControl" -> "Globe"},
       PlotRange->{{-1, 1}, {-1, 1}, {0., 2.}},
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}],
      StripOnInput->False], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
3eYJX3uN35MTmu6uvG6f9g8c96fQP/Cd0h79Ay9Qa1n+v/wzzMFcfyVJ8Yeq
TyvUsP8e4y92EPa62f4XT3+aP1PpAd74kUJnnyu7n+br3Ld1z9dp755vnG0u
/YMe4AeqtPh7cIsM89zaUmnZ2cgnRNgVHfr1bvEy0xlhvw5M7tPWfz/RGWHX
v9l2b5WzTKdz79VNZ4TdIO3ddEbYxdK/m84IO6hStTZLc/zqKu66VjtwUZfC
CUfTzcRqp6Ozs537qonTn/6y/LJEpR+4qb545ZCVDv3A79ZbvOKPhgeUfpV7
uWcK+rk96Af+ovQP+oG/cXRWnWHbMzlPYjqX7nvnf5USmf8G/D/i60fxgcIH
WhfjsS7GY12Mx7oYj3UxHutipo3ddLTv+X1Ef5yJblN8bvjYBJZn4yHPxkOe
jYc8Gw95NpBn2tfGY18bj31tPPa18djXBvua9JLx0EvGQy8Z6CXSh8ZDHxro
Q/RT5cMmOz/JwR/JPf/drP3wPUT0k3Uk85ccPWzeyo1fHD08SPR2fmofGDX6
ZIDf0Tx6Plz0cx2iE3mFlaebvh98I0X7/8NDbyNvMaf4V/PaNk8n+vPq4QWS
F3mvVL2hTT5x1veyh56snBsPxttJheYk/34pU/nWXuLIW8d+rdxikyPPRSXv
0eb63xezqqWqXMXmxkmxdn3qLw9ue8qR5yseeq9Dbv+bbePFw9Ys3OvI83cS
7xbd3iLqzT8ceX5Qxm2wuEbnFUP2qX47LnFY/lX9Zz57N171wFCJu7dcCj1e
o6mjB/Dzq9JVLoy9uJ/0Ww5fSb8VWOHrH/SDzpsSN9cIjq0VMsfRAyNzx/3a
trxUs2T5GZlK5/ovSz+X5fe96j/QeULi7OrSD+jLlDjbfd8/OPqCh77CT8wL
dPaRuHyr8AF0hubyeZUpdKhnweWvOnq46Jxvy4fcExeAngDfehmsF+j53UNf
xfjkwWwQeQA9+Nm49/g9W3o662tz8znbzJEz5/x++9XRV4/75NNAPjFufw99
9Zwv/2fK7Pw6od4ZR18VkjzBqWtnxw9Z5ugr/Hzyj6PDL/ZP0/4veugryRea
V59f98h7uxx9FSN5izeOlvlpVvO92s8a0Ut1SQ9IHtFUnVL7SErZ3drP5XJp
Uy7m+JUlc+/rRZF+zjKFSf/E11tuP8k6Ytbl5tM2q/yvz37wQsA9fi/sZrFX
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
7L/kf/4Pl5MbHw==
         "], {{
           {RGBColor[0, 0, 1], EdgeForm[None], 
            GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
4/8fSJmTQQ==
               "]], Polygon3DBox[CompressedData["
1:eJwtmwf811MXx7/r3n/SpCg7RIUSZSQqlZQGyV4J2bI9yEyF7JEthEI05Omx
KUVGqIwkJSGbMpLwfN597uvV7XfOvfe77z3ncz7n/JsNGtL/jCLLspvLLKv0
e6OUv/U7I8+ytyW3iFn2keSodnfIsonq20fjvfR7pw4YquMGSF+udonkLdTu
YFzzn9GcsTrmbOmbau5GNVk2Sr9t1b+l+u7V7/Oa315zW0seqbH2ut5y6QdL
/lTy4zr+fM3dQvrGOv5eblJz99fPPZJf1vEdcp/zWum7S19Pej/pYyTnOsdo
6S019q/kw9TXiPNr/GHJ96mt1rk2Ut9Tkt/TvP7Sv9H4R5o/SX2bauxNtVHq
25ZrSL5Ec7aRPFhz2qt/lPRndK8Dpe8ovan0xzX+tvoO1vz6khdq7B6dr17u
e+ReW6lvgeR1uEfJW6u9J/kNHT9CxzaSPll6e55bz3+Gjlkgsbb6pvIt1P8W
966+yRq7Wcccof526v9Bx76v3wM19q36PpY+T/oR0n+UvkD6FWpfSb9Lx/4o
ubnaXJ6XPp1rX81/V/rrmd/XlRr/On3rnySfqd+F0m9T20RyW7Wjde5neD4d
u7PmLON49eW6/6vV9730izJ/7xc0fxfpP6gdJn0M30ljN6n/Nx17uPRdNXZx
5vF1dE8XSt5b44u4X/3eLX2p2nO6xhvMl/w5a0vjn7L+JNfXvM+k7672k863
seYs1tgCzf+Fd63xFRobqL5l0i+UPkP6dB27QvoDar9K/kXz95Y8QXItPc+V
mveD9P/qnB00doZaXY3VU2uksR3Uxmj8II1/JnlC9No/RvOa6/iP9fuT9Ks0
9ovGRur3V+mHa/5SyZfpfmok3yH5aY0frfkrpLfhe+gabdS3hPWu/pWSZ2p+
X+nzNX+m9Fel7ye90Phr0vdU+036Njp+mcYGSV8pfSvpx0o+UPO+zL0nmkje
Xue5X/KB6vtU8v6a00DXPVtjr7DWOZ/G+6brH65zLpJ+tua+nL4f37aJ+kbr
uDPV10O/t6n/Wck7qS3V+HiNz9Gx/dX/hfRV0g+QfLzG22n+COlTNH575eNX
a84gyZ01/qfkfdXWlfyG5uwvOWjsdelv6beDjv1Sx7zIeg/ea1eq/3/Se+t3
kfTemlNKPjR4PbOuX9L4AWrr69jzNfaq5BP1u0bz+2a2b6y/g9hfapdKvk19
jSU/q/au5EMq27P62Fjp96htIfk79c2VfHTwfv5e8vc6fz2d44rM34Q1wn7v
xXpWO7/0e+X93q62meTGpd9NJ81/TfIGaiOld5Y+U/KePKfkn9V3jfQG7GHJ
HdU3XfL6asMxqdJvlbxr6W9xpPRlpfcB++Ee7J3kprrHFzX2J3uetaXzfyB9
F9YP9j/aVj4pfbjGe/MeJVfqu13yzmoPs5elf87+YI9K/lB90zR/rN7DDpJ/
Vt/Hkk8N3l+LNPdnzV2XPSE9y+2zOvFdJE/kmaQXpe3DP/gyyeuoXSr5BbUW
rGedY6HmfyB9O8kD1PeV9LPYw5r7mq75R+Z39rvkc9XXU/oStfNKFkmW/Ye5
alvp2HY6xxTuXf1f8izq+z2961+j/VVvnedfne9kyZuxRyVfiw3Vs12vsb8k
X4/NlfyExs/j+qX9X+dqrdnP1qh1kXxd6fk8816V9+/OhW1CR8kbY085p/Tj
K9tbfOuGrJnkv27LbQOPkBx1zBjJO/ON0vrDPuFTX5H8YGX/jJ8ua7x+sBV7
qO9Vyc00PlLn7aJ2k+TAM2vsGs3pqecr1U5i/eH3dPzX+j1TY8ep73t8SOnx
yerbU/K90fjhPclLJH9Xei7PzLM/q9ZQ8hBsseQbWC+5v+FbkvdSXy2Nt8n9
TW5S346Sv1Z7R/L6+HSurTnrSe6nVh+7xLvQ/f1T+l101Zx/sd18D94ne0Xj
Q6WfgJ+RXiP97dK2Z2hu+/GanreP5HmsvRrjIWxF79zPxP7cUfpe0mewXnle
yc+pb4GO3ai0f+nJ/fLONX635GHqa4ztkj42N944UPow6WdI/5W9res1xEbw
bTS+P3sbHy39N96bxh/QPZ4mfaX0+jXGG/WlL9AzNZM+VfqjhX3o85r73+T/
wQFbaHxGYd9Uo9/fCtuLUzT3CPV9kXzUofqdldl3vaDWI/cz7Sf5BrVDdNwG
6usheWqw7eKdHCB5GpivsM1+Vdd8Rm1ryX+A62psswdLnpvZln+quePVxoE5
8EXqu5Lz67h1NX+DaCyyEhursSXqP0p6I/3WqbG/HayxQ9W3hPOC4dLarKvx
16X3A5toTjPJrwRj2z7SN5K8XPOOlX4ue1TXfVl9t2T+doujfT6+/0r8U2W8
cKzGB+S2aR+q73Dplyf7hn08QfohGl+MPdb4FPyZzn1K8sfH8K74ZglfDJTe
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
2LI+yd9Sz0BdIpj/yeh80NjSHA7x+/8BZ3wXeA==
               "]], 
              Polygon3DBox[CompressedData["
1:eJwt1XmQz3UYB/Df+h0YR6ppSAdJo4komlqpXGEmrCwiRyPFUG5hKTe5kqty
dKHGLRZJjsWu2Q4xZJ1djlKLclQ0E1uvz3z3j/d+nvf7eT/Pfn+fz/fzfO/q
MSCzf4lYLDYIkjDRn3Jpsdgu4qR4LDYQH5+KxS7iOVDI05PWhNYrEYu9CP/y
N8U30gvk+6gbRc+m9aN1oW1XO4HeHz9OPyTOUNdJ7k18NXRTMwea8m6wFkBb
nqO898Uj35/qr6rZzXOz/GV8Ff0ZcUeoy7+c9jGU59vL14G+kmcQ7TKtPP6Q
fvfjh8TP0kZYR8I6vqr0mvKl8Db6fYHvFT/J94p1KKzlO2f9Uf+D4lxxHkwW
36S2LeziX03LVd9KnwO0avAGzwdhT8UXoAzfQZ7WtLvFubQB6jLwdDivdire
CR4J+56MziGcR23ee/BRMI22Ht8AC/iu8P/CsxIayH2D9+E7J/6Upw7UwP+m
n+RZCulyX+HHobu4jLUsLNHvZ+sxntesVaztaUfVDxQn9doOa/CLcCPPKbyz
Z78U9j2cq35reJ8XN1RbkT6Zlsf3D5zEt0JzNXvw7vAW3yQoJ94Jj8p9x5MT
9kvtr/rto7/L8wkM1HtQOCO+fOso2imeZbAcDuN71S5T+7C6Cjwf0SrDWtoM
WhPabfgqvnr6vI4n6OXxfvS5+Ht6VePvi7cK74f4OZ5OMDf0oqWrzcFTcAM+
lH5A3UKowr9Un9G03/B1kA1H8AXW+dBG3Q6+/eLGqeie9VTzAqzBh+t5Pdwf
vgZQDy8NaeLHITv8Rnwh7xb8Univ9ErRxtL+EG+DrZCPr0hE+7uDryxMpCVK
Rs9fKfRKi873BFyhdeG/QKsf3lvYJ97Jt0TuHL5Zfg/eBa8IU8JvpeXTmuux
Rbw1EdW2sC7mqSy3SrwLdsKrqeiOfWbtGGaH/AC+W2Fq2AM4LL8YasqtC/eZ
73txmjgW+vJkwRGeJVCLnE0fFuYQvgg+hPV4B7VH5fvp3xvm05ZBLf6X4tF8
y+TZgeeEmSH3g9pNqWhPfw9xeF44hk+AUmF+8c6zPyXwTLhFPovWG5qHvYem
4va8u/2P0clob8IejZA7zr/ROgS+FE+Hr/WrGuYm70k1w9XeAdNoT0HpcK5Q
UY8rPPnJaJ4d5qkOt+Nz5eeE9yvMDT32hXeTPtJaMhHN6ff1Oks7Kz8mzAyY
EbRE9Nu/TUVnFc6sbiq683n0p/EH8U1qG9Ouq7sGi2iDoWW4CzwLwp3FC/lO
+x9ZPFVgeiq6H4XF+xn2NRc/k4zudx11tWE5bR70VDMOv5dvt7Uk33/iy/Re
/AXJ6MwLiu9XuGd78Ku8Z8R949HZh3egDj2DPoX2F20IbXAyik/QHpOrxFNk
Pa92WDw6g3AWhYnovPbLbxNvL/42hG9Ea/n9fBnW2bBS3cgwNz1fhVT03OH5
x4Z7Tn+Hdp2vOl5EbwdFeFbx3Z+JN+Krj48JZ4JvhswwN9QspT+g9yxaC74n
8HF8F0pE3+Twbe5Be5nWCJ+p5k64RluRjL6ns+nxMBPwrnzj5eeHd5reLRXN
2NPF8yvMsW14A95mPDOhKHxf8VnhzPFMyAvfAn3S6Q3j0QwLvyf8rvP0n4r3
IOxFZ3WzoR1P13g0U8JsmRNmQjyau2H+fk6rEe60Z24p7kF/G/8fHwM4jg==

               "]], 
              Polygon3DBox[{{1387, 896, 699, 700, 897, 1388}, {1345, 845, 658,
                659, 846, 1346}}]}]}, {}, {}, {}, {}}, {
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVHEch/G/phO5SRcaFVmCgq5EoWhZL0AtK29l3jLvMzWalo7mJXUU
RROqjZWlJN1eQ+u2LVuFm5a5EAQF8XMI5jfP9/me3zlnznCK2hO18YwQwnfz
MzOEGVNrbpqof3cihBo5Lt/ADZ7ODkEMfb4SeIAvzKHeJwzIg3iImYo5zOG3
8MiMyDF9Qs6Tb+NJ183VjfPH/Bx+0N2R8/UzfFAuwU39sq6Op3k9VuKKrkFe
ljsxFQvhD17nw7iGP+w8lP+aKv4U3+C63V+u28Xr+ShetPtW/q3v5i1yClfs
Vuo2eQ/vxH92n8tX9Nu8V+7FLbsFWSFMR+ebajOg/2avTf4qt0bkr1yjn0/x
L3hVNynv6Xv4hPwJL+vLo/+KPzD3TYXuo2Ol+jHeYZpNmb5Qt+7YM95uPuvu
4nn9a/2IfM9s61d1TfJLfSNew12/v0pekp/ge890YLeCL/J5POO8IXlfX8wX
5Gmcs3tal+RneTp6cXQpyNY/4rnyfPRs+kvuNczj/BTu8Fn5AiZ5vyyGodj/
9/UYuXRPOQ==
             "]]}, {
            Line3DBox[{1250, 1643, 1532, 1818, 1443, 1281, 1441, 1828, 486, 
             1442, 398, 536, 1147, 397, 448, 355, 1805, 1490, 568, 569, 1701, 
             1817, 1531}], Line3DBox[CompressedData["
1:eJwVz7kuRGEYBuCPzEatRSYxwhjXYYkoZibWmcYFcAW2ho5CYWt0qDEjERFx
G0rGMraWynOKJ+/7/f93Ts7JL62Ulzsios5PKuI4HbFNlRe6MxE92YgT2TB/
2xnVm3qFLn2WXjtnsuXsy05JH6FsPpVF9zMyR5ZPO0U5zKada1mjziILfNj5
kxvup3kwt2k6u5fvNPQ7+dgZcaXf6m9c6jfylXXPXpj3mEr+y9mQfqSvca6X
fN+87GfSWcvOoP7LIavO+uRc8q+Mm5/tFJJ7fYK0niFFlSf3ee8d0Lfcj7HD
Afvs8g8h6jHE
             "]], 
            Line3DBox[{1282, 1839, 1641, 1639, 1640, 1491, 1694, 1806, 1283, 
             1333, 1251, 1332, 1764, 1331, 1399, 1562, 1563, 1835, 1398, 1564,
              1335, 1445, 1588, 1765, 1706, 1444, 1284, 1448, 1707, 1756, 
             1589, 1447, 1285, 1450, 1819, 1702}], 
            Line3DBox[{1286, 1690, 1058, 1533, 1534, 1418, 1569, 1493, 1535, 
             1820, 1287, 1492, 1288, 1494, 1181, 1757, 1289, 1334, 1290, 1182,
              1766, 1336, 1400, 1337, 1781, 1183, 1341, 1446, 1342, 1807, 
             1184, 1611, 1291, 1449, 1292, 1795, 1185, 1495, 1293, 1451, 1294,
              1837, 1630, 1186, 1496, 1453, 1796, 1295, 1455, 1536}], 
            Line3DBox[{1296, 1791, 1537, 1419, 1570, 1497, 1538, 1667, 1808, 
             1452, 1297, 1498, 1187, 778, 1338, 1298, 1188, 1767, 1339, 1401, 
             1340, 1189, 1770, 1345, 1346, 1769, 1190, 1653, 1736, 1191, 1590,
              1592, 1591, 1838, 1631, 1192, 1612, 1299, 1454, 1737, 1668, 
             1193, 1499, 1669, 1809, 1456, 1300, 1632, 1194, 1500, 1758, 
             1670}], Line3DBox[{1301, 1539, 1420, 1771, 1571, 1195, 1501, 
             1502, 1457, 1738, 1504, 1593, 1503, 1196, 1671, 1768, 1343, 1302,
              1197, 1680, 1782, 1402, 1344, 1198, 853, 1349, 1199, 1714, 1654,
              1739, 1200, 1655, 1740, 1201, 1656, 1741, 1202, 1594, 1595, 
             1742, 1645, 1644, 1203, 1708, 1829, 1596, 1634, 1633, 1204, 1613,
              1614, 1833, 1458, 1636, 1646, 1635, 1205, 1810, 1505, 1303}], 
            Line3DBox[{1307, 1552, 1425, 1773, 1377, 1550, 1551, 1549, 1473, 
             1732, 1675, 1513, 1375, 1279, 1376, 1731, 1674, 1373, 1278, 1772,
              1374, 1366, 1372, 747, 1371, 1233, 1752, 1663, 1232, 1751, 1662,
              1730, 1231, 1277, 1650, 1649, 1841, 1230, 1276, 1617, 1729, 
             1711, 1229, 1275, 1616, 1728, 1709, 1601, 1603, 1602, 1831, 1472,
              1306, 1470, 1691, 1759, 1471}], 
            Line3DBox[{1310, 1792, 1556, 1426, 1386, 1554, 1555, 1553, 1480, 
             1735, 1677, 1514, 1383, 753, 1384, 1309, 1380, 1775, 1666, 1381, 
             1379, 1411, 1774, 1665, 1378, 1235, 1753, 1664, 1734, 1234, 1280,
              1618, 1606, 1832, 1607, 1609, 1608, 1478, 1308, 1801, 1476, 
             1605, 1604, 1477, 1733, 1676, 1474, 1475, 1760, 1692}], 
            Line3DBox[{1311, 1693, 1754, 1678, 1236, 1515, 1761, 1312, 1479, 
             1313, 1237, 1712, 1762, 1314, 1619, 1315, 1238, 1776, 1387, 1388,
              1788, 1239, 1389, 1390, 1777, 1240, 1316, 1382, 1317, 1778, 
             1241, 1318, 1385, 1319, 1794, 1557, 1436, 1582, 1516, 1558, 816, 
             1481, 1320}], 
            Line3DBox[{1327, 1755, 1484, 1326, 1245, 1517, 1815, 1325, 1393, 
             1324, 1244, 1780, 1392, 1412, 1391, 1437, 1584, 1779, 1583, 1395,
              1559, 1394, 1560, 1823, 1243, 1323, 1483, 1322, 1763, 1698, 
             1242, 1321, 1482, 1814, 1679}], 
            Line3DBox[{1416, 1790, 1529, 1417, 1330, 1413, 1568, 1651, 1789, 
             1528, 1488, 1489, 1440, 1530, 1642, 1840, 1652}], 
            Line3DBox[{1421, 1824, 1206, 1506, 1507, 1459, 1509, 1597, 1508, 
             1207, 1304, 1347, 1743, 1672, 1208, 1681, 1783, 1403, 1348, 1209,
              1682, 1784, 1404, 1350, 1210, 1657, 1744, 1212, 731, 1745, 1214,
              1658, 1746, 1216, 1659, 1747, 1218, 1357, 1748, 1686, 1220, 
             1687, 1749, 1360, 1221, 1621, 1797, 1713, 1460, 1361, 1222, 1710,
              1798, 1615, 1461, 1638, 1647, 1637, 1223, 1811, 1695}], 
            Line3DBox[{1424, 1822, 1548, 1274, 1600, 1547, 1469, 1512, 1813, 
             1697, 1369, 1273, 1370, 1727, 1673, 1367, 1272, 1368, 1726, 1688,
              1365, 1271, 1787, 1410, 1359, 1228, 1270, 1725, 1227, 740, 1226,
              1750, 1661, 1724, 1225, 1269, 1723, 1224, 1268, 1722, 1685, 
             1575, 1267, 1648, 1721, 1684, 1467, 1266, 1599, 1830, 1468, 1355,
              1465, 1265, 1800, 1598, 1466, 1305, 1464, 1799, 1660}], 
            Line3DBox[{1429, 1793, 1587, 1430, 1397, 1428, 1561, 1427, 1249, 
             1827, 1526, 1610, 1527, 1487, 1525, 1803, 1700}], 
            Line3DBox[{1519, 1802, 1699, 1485, 1328, 1246, 1816, 1520, 1521, 
             1486, 1586, 1585, 1826, 1247, 1438, 1439, 1396, 1523, 1522, 1804,
              1248, 1329, 1518, 1045, 1524}]}, {
            Line3DBox[{713, 1840, 652, 1155, 1156, 950, 1108, 1828, 715, 654, 
             830, 951, 1765, 1109, 717, 656, 839, 1807, 1011, 719, 660, 1736, 
             721, 666, 1740, 726, 673, 1746, 733, 1718, 681, 740, 690, 1752, 
             746, 696, 891, 921, 1774, 751, 701, 899, 1777, 900, 755, 705, 
             901, 1780, 905, 1085, 758, 708, 1043, 1804, 1044, 997, 998, 761, 
             711, 1793, 939}], 
            Line3DBox[{736, 1799, 968, 967, 1023, 1022, 677, 1825, 729, 1148, 
             924, 857, 932, 1096, 1824, 931}], 
            Line3DBox[{743, 974, 1759, 973, 794, 684, 1800, 503, 969, 465, 
             466, 1573, 286, 858, 372, 1597, 501, 408, 410, 930, 1771, 1095, 
             929}], Line3DBox[{762, 1165, 1051, 1817, 1000, 764, 1005, 1806, 
             1008, 1007, 829, 769, 1757, 834, 770, 911, 837, 1767, 842, 838, 
             663, 853, 916, 854, 670, 1744, 730, 1716, 678, 737, 1723, 687, 
             1176, 1841, 1177, 1178, 1179, 1180, 1129, 1832, 1128, 1144, 1145,
              1146, 1762, 987, 813, 990, 1035, 1036, 1763, 991, 819, 993, 
             1802, 1040, 822}], 
            Line3DBox[{766, 1060, 1058, 954, 1009, 953, 1012, 1808, 776, 1066,
              777, 1064, 841, 1768, 786, 849, 787, 915, 1783, 851, 860, 852, 
             1091, 1836, 918, 1092, 863, 971, 864, 1721, 1172, 1173, 1122, 
             1125, 1123, 1728, 1138, 1139, 801, 977, 802, 1733, 980, 1031, 
             981, 1754, 810, 984, 986}], 
            Line3DBox[{773, 957, 1796, 774, 958, 1013, 1809, 781, 960, 782, 
             1119, 1829, 1117, 1170, 1118, 676, 1749, 869, 1153, 870, 1720, 
             1154, 920, 1093, 871, 877, 872, 1726, 880, 796, 887, 797, 1731, 
             889, 806, 895, 807, 1735, 1029, 983, 1033, 816, 1081, 817}], 
            Line3DBox[{783, 1758, 961, 784, 962, 1135, 1833, 788, 1134, 789, 
             964, 1797, 1149, 873, 1067, 874, 1068, 1834, 875, 1069, 792, 879,
              793, 1727, 882, 798, 888, 799, 1732, 1026, 975, 1030, 808, 1077,
              1792, 809}], 
            Line3DBox[{818, 1814, 1034, 988, 812, 985, 1761, 811, 1032, 982, 
             804, 1801, 979, 803, 1143, 1142, 1729, 1141, 1140, 686, 1722, 
             866, 1099, 865, 919, 1715, 856, 862, 855, 1784, 917, 844, 850, 
             843, 1782, 913, 779, 840, 778, 835, 1059, 768, 1061, 1820, 767, 
             1010, 1006, 1055, 1166, 1839, 763}], 
            Line3DBox[{824, 1045, 709, 759, 1037, 1815, 820, 1038, 706, 756, 
             902, 1778, 814, 702, 752, 1775, 893, 892, 697, 747, 885, 884, 
             691, 1725, 741, 682, 1719, 734, 1747, 674, 727, 1741, 667, 722, 
             1133, 1838, 1112, 1161, 661, 1160, 1159, 955, 1795, 771, 657, 
             1111, 1110, 1756, 952, 765, 1157, 1167, 1054, 1818, 1053}], 
            Line3DBox[CompressedData["
1:eJwVzrEug2EUBuBTpC4BiUU7ugKd6GBTbd1BV8IFGBqbaJpKJARBR0OVThaD
RCINIjqoNLF16mIgTQwkHsOT9/3O+fL9/0xpo7ieiIgCp6MRl5wxxzFTYxG/
yYj2SESFK7NFs5bMMK1v8mBXZV5foGqXlbPjEWX5ZFf735sPvbcrn533yOkD
sxf9kEf9Vdbp6O/ynK7ely3e9IG8pqd/yBu2vPXjfCQ/nW9Z8v1lvsxzcttu
VQ7t7sjrKf9ZlAV27PflAWt8u3PPhJ52b0VOUnHvhCYXNPgDfEQyRA==
             "]], 
            Line3DBox[{937, 1076, 1773, 938, 890, 1028, 1100, 1027, 972, 1813,
              1024, 1025, 881, 1073, 1072, 1150, 1821, 1070, 1071, 1017, 1137,
              1136, 1798, 965, 790, 963, 1016, 1810, 1015}], 
            Line3DBox[{978, 1760, 976, 800, 693, 1127, 1831, 1126, 1124, 795, 
             1164, 685, 1121, 1830, 1120, 970, 861, 1097, 1098, 1785, 947, 
             946, 859, 791, 1743, 669, 723, 848, 785, 1738, 1014, 1115, 1063, 
             1062, 1065, 1791, 775}], 
            Line3DBox[{1018, 1811, 1019, 966, 1021, 1020, 1812, 1074, 933, 
             948, 934, 883, 936, 1075, 1822, 935}], 
            Line3DBox[{1046, 1803, 996, 823, 995, 1042, 1816, 1041, 994, 903, 
             992, 1084, 1823, 1083, 1082, 898, 989, 1776, 896, 699, 1734, 749,
              694, 1730, 744, 688, 1724, 738, 679, 1717, 731, 671, 1714, 724, 
             664, 847, 914, 1770, 845, 658, 833, 836, 1766, 831, 910, 827, 
             1764, 828, 1087, 1086, 908, 1003, 1805, 1004, 999, 1002, 1001, 
             1050, 1790, 928}], 
            Line3DBox[{1056, 1819, 1057, 1168, 1158, 772, 1837, 956, 1113, 
             1114, 662, 1737, 780, 959, 1162, 1163, 668, 1171, 1742, 1116, 
             1169, 728, 675, 1748, 867, 1152, 735, 1786, 683, 868, 876, 742, 
             1787, 692, 878, 886, 748, 1772, 698, 805, 894, 753, 703, 949, 
             815, 1794, 1080, 1078, 1079, 1130, 1039, 1755, 821}]}, {}, {}}},
         VertexNormals->CompressedData["
1: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
+Mx+SXIP2IV3B1M5zE4dfILylEqBkygnpv4t1A48ZM0jaOeCffVrtLOoY71T
uD4bnKPadIXGWUQ3mJflurQUTtT2HdUL6iW1Cvr5/MUMkrp5zifntgII7Iuo
bnZkkvJnCVHPlLuJzR6GqKwHxUNwsRLq7SS7R6q3lIhSHhW6/2qzZw9MdUgb
pvrwTNjCH/VjmmX5UT9P5npkmTYbZKdOO+4yQONEQbvX8exb+KnEnxFsxybe
8y3uv97IJtbnSt1mGhbABqe3S/VOMUlJVsfuGVldRCZico2vWBc4tbteHVrZ
RYLtjG2vuTQRe6GVV56V9YCPr+Amqg97jB7poL6xqlk+6ke1JL7/LcSEj9vW
b7uzvZcIHuHJeCD85l854cjhX7nJ3XoR/K7lzKmXqB2QmT32x45Kzpp79Luw
WGPkAf0uKOtGn8bvJkXNlsfvfo18dwr1Lz43TEJ9zr6Asy/4d18cPxCOH+Bf
P4R4ziLoZxMN7jLqN6hLn/PHb1sKyy5SP0OY2ZHT1M9QxNxqhX6eL7q8Bf28
PDY5E/VVNx76LkP1OecInHOEf8+Rc+6Ec+7w77mzD5yLxnjrPpH3hcYJSHNv
yMY4kWw0c8F4c+ie3EHjCuIUD57CuLp80e8Bxpvk6NwqlFtNKDyA8qenPIow
3tysuBlox9i5Ox7tcOIcOHEO/8Y5Jy8IJy/g37y4Y/ryLuaj52aP/TSP4Mga
fsM/+TivSAjz0Vxifj3NO1DRu1qCeVf+64wR5iOXwpRClH9MuZuJ8qIc2xeY
j8n9W3XQjhhXrQra4eAAcHAA/sUBDm4QDm7Av7jhEVZrg/hzTG8Tb94BBnRb
uGcizqwP3hCC+OMgNjxA8QeyRSyf/k/86eTYWcixw8E9wsE9+Bf3vgYUfsum
+GmS+ViG4ico+QanIk7aZfyKRvwcFO2agvInTRIP/wN+/n92OLgNHNyGf3F7
63XL5fM3BKqpVkkMvy8ZIMNRXHprsjrg9KUqnheV3eRR/JxDP63ZRJB/4z2h
mia4z5O90XDSJbWo3lO2mzRZZLXkiRqRfoonDK6zqjyVZG6hxZPnEZ3kc/jM
pPSF/SDJVdGvTftJzciStvayLlI0p6jSX5UNR4cZ61a4dBLl+eFhC6CLbM4p
kl2ynQVLrVa2UzvAz/chCO1IjR+NQjviKU/Sj5oVkNPeFtV9KY0k21pywEpk
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
9zD2oRULpmzB+BHx5vvxILWbTKzlGcL3weWplscwbvWKslYhP7+7QtgJ73sb
dCcWIz8v7pi/Bd/3jbkOxuG7qpr0/XOYLzZt2zvxHcduKLgF3yWVSBwXvuO8
mT2x+KdFJ5HQHvNeLNkKs/1O5Cc+6gHXW1tq8Z0oZVOSK74PPud6k4J5fSOo
8oagfxsJfiWmOurRBjov+R/e3NALnZbNNXifUBXCfonnYrjtRyqeSw1zjaA8
xb29cd69FPdIK1vPHnGvSOTeq3nZLHLRWHVpTROTWLruvKDxoA4c+e+ekeVn
kee25r9suhkkZJt69EPKx1xCb6auo/1X7JuWaI94Jvm5lqd+pVQ9tHRUiCyj
fQFDTEtmnPJ3GZPNYyVRLfBtj53vlSwW0Zr4Sngt7TNUUlmFMpMaYP+L2zcM
pFhkivFWw3gTBrEVqr3T6NoK896ov4ibSvsgpWOXAhndZDQozxHv23nZZ7Ro
/sKJCPvbNH/JmPc2E8zfec56srRugkn+Mn6smyNfT9Zi3bQrIvto/YXvwty7
sf6KBgWcwvo7+dn9Z8/XV4PQoJdkWHEXzDw1esLhdy+YRB1dQ+Wk0CRgDpWT
9/JzrqFc3MXaEuvLm1r57bS+kBeni/KwvlRWnuehdZA4O9r0Yx38IOyXgnWQ
74PjbVpPyUXdHQZYT9P28mlhPZVVlfuA7+9esQ8P4+8Q/H5/48Y6/uHkoQ7k
Pz+qOkrwXaPo1twIrONdElr7aB2H9Kn3/LCOT69q4sU6PnWdShDem5VvcxbG
e6098vaL8V5LJ9nO8/t5il+2396tEGeRK8oZAr8SKd+uqbmLPHxfXqYQ3iOZ
VGiPIA93bOeqpvEDGi3c49882ojOd4MHGD/Lx99Ak0MTqO7Pvn/2WyMxTyhS
feTdDz9rX/P/pv1CStZFA7wvSjEMUMJ+ocFdgUXjFjwc3uyicUtED5fmYNzm
DOw6hO8gN09KamHfGuQzpQjz4uEOxp4lpTS/eSaF//zdQQ6+qRNdfYAJMy9K
2WO/80a8dTTgDpMYx+2qwn7HIkJHFfsphajHunhfdG1RqyL2U3tq5lS4UN7l
4ym1/K5lB+zLEmUtc2OCi53W52i/FsLlaGUeLNQIFdP3X9ut3g9rEr+c5pVg
Ed4tclOX6bLItu7la7l318MCIb2y3cvZxFDvdqj9CIvkOW19bpz/DtJhwiSx
MKqXkH30+jiTqItVJfk61sGmCBHHdZto3zrz9Dm5ehaxfL1LdVblO7jafnfJ
hQkVZFNn0qyP8rT/43MqjXjBhpvkXKnThAoI3ZLFjfKvOhtSUa4tNqDDSs2F
O/uaPHKGWbC3c8KrE51syFZelIQ8ROreFnm83zDffMtVkvIQWTvXddeV2HCf
337m8R56vomiz7sj38HXutdq4xSfn5zcXbyyikV2cs+bkUvx2edSwCjif4x4
nybFfyI/Jj2E+H/ctDsCfy+xZ1DdC3//4+F1byH+XmJwVFa8b7QVHjIcvnxU
aiASK+PuOE/vh/ab65dZ0/q15V22FK1fJNl71yesX4sjd9/GummW7R1I6yZZ
VKP9GesmY5LxA3x3XtBrVIu/DxG95daB786GhbUz70zsIsHunyr8M5rhlVmU
W7xvD5j2dx9kpOaSb/7PfNEPy5ZsJ+iHDp0+Hfzd0ZXVynr4O5C65Bfh+DuQ
j2uniEZeqCKpjx45xvJWwXRzXQU3P5oX2U+PxXXVEd6Nc4NkPWsh+WPQpHma
g1B2a07IZjs2pOhxWcmsZZPwTwei9kUUgPwWYTWZhSwi/Orj9FNuPRArP3HN
8dJ8yPuyuPMY5RtSptvOLnHvIbu2uEeXleTD47uawdd3skltg6uR8HU2qRKL
/dZbk/OvHeDYIf/asZxUFaLg0wtxi6Lkpg8yyAIbh/MTNPJBT7DxSNUlNpEO
KGNv38smn+eF78xXzIXLYdO1l1xkE/VKpfZwE9rHTF+YcfxDLmi+1HXmd2QT
vrBCt4e6bHLE8/V+jbY8KDylxA48yyaMVynnLYBNdtz6KLB8LB/iS6Qu3jjD
JhsMJukw6X4V2Gm7++l+OX4gHD/Av37g6ANHH/7V95n16AO1Dy1L009R+1C0
XF8E7Utr5HrQ9dD+750jXQ9k1z07iusJi7h0ztyBDT+6elVHN7FB2NtFJTYh
H67e9Dam+wIlT9Vqui9YuzMuF/cFQ4dsqR+AsamxmfoB4m937kc/cPxGOH6D
f/32Q8MiivofzmlWaVH/w9zk+Pfof855Aee84N/zMnhRHWB/gQ1fTVcJ3NVj
Q2OQzTArOA+u9s+32Ui/qyXtuH/lDjbcZnw6lpKVC2qR26vOOlM/LNz4MWof
G6xTuIJP8efC1XpGKbcKmyzd4Rx3XJUNB1XzlGJii8B57fqBti1sEsPt7qSh
w4asN1v9Cva+gdKU7CFlQzZZuMp/YpARGxygxfinbiFs/iSy//oONlFp+VU/
QPehvXxJbI1dAWQl65vm7WGT6FO/pktTPwTx2y32b82Hr6crFJXM6LkmeX4L
oHLrDhvF5+/+j5zYceQdz3rnsM3Y//4lhYHNq1GeybEf9Y998phj/4Fzh7ID
1ff/5y+5GNy+FOVjL7n5J5iyScgu6/4gYzZZ/2n1wjcNBeCinTtvPV035y/Z
vCA8Htc/YmWbnKTHJh/3+AkabWOTKdeTfyx+Vwim7l1OvYYUN/75S3Jm2+1A
P8g5nDNSoP14xOl8tTKKo7K5Ip95f76BzU+9lb202bDun7/keu64P/qzUuZg
drIKG/L/+UvapR6tQf//ZQdkOHaCJS0Y66QY0CwVMjYq0QeKh+punnX+P+sE
fs46U3gzK3mWMWCxqZc3t0wf6PWvXKlq+X/8AJocPzC2KPrtXsyAbv3Vb8zW
94HZjTW5YrfyIPtNS9YO6mdHGe6t73exwXVnhhiZXwCaXaJMZVEG+LUndcVu
7YOg3jX7R5pz4WxTlCU9F/gVEf5zGT3f1Ih/zuWLJe+kJfvYZPVZvaPZ9HyE
Spa4TEzPh7uyB+dRORwyeW+A8m9y/8gDJqzcSuMBKi8pdmGczHSy/RMPRusf
EhpnxLx2vx2NO5gb2VWB5yV9V4437nY3nK9uuNzwoo/UCBhU3qjKhfSKjw3V
Nn3k8wG9XUKD3cRi3QSNG8dy4bbF6ZHbP7ohcfzNjqgjfUT4SPN+lnUufNjN
tTRyXx95ec67unS8m2TLsiwG3+UCz6YZD2PnMGgfc8V7um4f+RYUM1m2JRei
gz+7lS9igMHKa3dz1veRvScqlfZSv+2ImtzoRM8rNE9Q+6RMH5mVeqz9CvW/
4+7HwwlLGTDjt6iLuWQfqVw4SySTnuMELnVHnH+p58wvt3Lml9cuf6XXYdQD
KuYzG/2FWORZmLfB0oPFwMWl/vB/ziNXcOaRNRfExa793AFJ9b97/YoZpHL+
sEHfaQbOA77+T/PCBtO/m72Xq4NB1c3fE9LaSdzUlrc7xvtg06LEK+/ku2Gb
1bz8U5rdZE50bbP8t264a2Jtu5H9jqxl5vQuPlZPNtY/846fM0TtX7nyn+Z5
2/w/9lF92Gj1kIH6LZvmeqK+xwKGQ9WJFtg/Eiuy/0gLubYJCpLP94Hovnsl
jSndsGsst22vchd5JWi7sNuaATODhYKzDGqJ8Nnk0NY31WRSzYE2j5ZB2Lst
tXbMs4DsdbVuMzEoI7HcJ2atSh/G9WzFObW8v+ZtFedryfz2LIDLv6Y3o76W
ycfpqP9W17aI2geNL1OC0b5YpUs92r81eXpcT1AbfLz7vvF8UiMRNnJdNH6z
D6LG+W3cLnSTHfGxWawvbeThMTkB/RMsYEhuGdhqVE5qW1bF7lcsJHfWDu1y
Dh+GSC8Bz08Ls0mB+ngHWZNNNiwPXnT0zgg9dy5BnCv8yZl7beDMva5dXDXr
88Js2LmRux31q+39FqA+876Vgq5ROdi/XRKF9heop5mg/fsDn8ymUB4epzFe
tVu8glyK3XxhWvsg5BiOuTtsaQe+a+INBlBP7vp3VPf39IHrDTsjj2Qmmay7
79jBBbRPN45mRJp0wt3imLS31W+I+SaVx4fVouCLrV2bxdkRcO2/cHDJjRQy
90G3+yRyE8pPTc253/FnzvT3+Li2GheX0f+aM9WWVCdUH8qWDbihftz1iQT1
fxmps6l9qNK5FIL2F1w71IL2f0nW1/Tvq4K9zGrX6xsz4EzhJY3Pj4eh0u5m
+yoZFhEKV6hJ1KBxcGwjW/9RK3C37TmK/m96NfUz9T8ser18XI/6Pz1XbzX1
A2m8e3XRHvEKcFjofBH98NPjRi+ei4ulxiD1GxgY6exAv4mIat7CcxlaeXV3
zpps2Lyv7o+f6SYE8FyG/pr3fBjDPxPP5ZzU9Z2o3xZZLoH6oz8S5PBcRM3W
9KF9xm6R7WhfvdZYjZFfD9b5m9I87pbDBl6RUugfhGcTIt/Zu7DItBXZH17N
Z8J86XRJaRHaB6vaVmM8S28rmWVqUAa7jZbM+CeeuXQwno/8NXfpLDy2HONZ
+83pGaj/6XHCVNSvuNqUj/Hc/iz4NY1nEG+NrcJ4fv15xROM58NOYRMdkxqB
x5VLHOP5VbD7Scxr+x17hZYcq4djPPye/+Q116X/NBfZ28nPwLy2b1/Nh/oC
thfdUf+FoqAV5nWFo8EGmtfwsl8lC/O6U/ZkFub1otFPP2heg+UumIl5TXEs
9T/NM/aWjxkjLkmtUpN8ntYOLWc08xCXIh9an0Fcijb52EVxCQ7LFrxFXJrA
deU+4qHIX/OJzXPHbyMeTtcNmPygmAETJrxVQTxslRW4sa6NBT5bX6k7ZLNA
KTVMU0e8itoJNUMc3sWZQ4zmzCEmRiZMkt3eAynGvq93C7FA9bvrqx7zYpjI
lXP+f+J2Cwe3tY2FuQ/XsiCJvc1A6DObPFqZHfhdOo/uNycQ12nxF27/1loi
/mSsE1aXeN1rnsMkLVdSLX2UcV+dWeifur9wO2P9CVcx3XpIPym/4EJEBwn7
NjlQ6lIf4p4LntfXv3DY7fR2LpO3ZTC0xccydkUDcWe0ht3vHsTz/YOTBX/h
5NLLKbGP7hbAwhJTD/85FeTEK6sdP4KH4bVjTfDS3DpQCJ/rY+JTS5ZZktJZ
OoOg6H10VjWtN2X3IpZtmd1FxmI3vA637wbhsMirwt4FpN7l9PctsW/J6iTr
zeurhhH3/uQX14b/jXu/ur4ppS3Jhq9rN00//iaHKHBZZbe4jMCkz88S3Oor
YP5Nn9DU7GLy3iHTikH35SxxvLxbvAkmBNfy10ZVE8N1Zt2x/QMwsn1u/23x
fvIjUDjpglAsCX72Xk7Gqht03l3QuGNWRqzszXULP+YQjwLRsbstwzAc8WTt
j2XZ5HDt96WV3Jlkw2f+1+yAPzgw9g++XeH8/QffLhec71K9nQLdsyUnngtM
zu5ef/66TOcInF7z8PX+r0WgveNofe/X21BrMj/7iPUIBB1sYJUY14Cdw9E5
bcXJ5MVE9/irh4Zh1nW3hWXqbKKkvb05RZgNu/klZWI+lYB279qFcuwiMujx
Tc2j9yU4Gq3uXL5nBJYcfMpjeTOF7Px4M+xLbiB4CiTf9m/7s84/daT3L7x6
B72ZdF+Qt6QlmO4Llts7peO+rGLkTGVNykBNdfnOmZTHcB3qnlJeMwyvqkYf
XcmshR2/pDO2iBbDy+O9m7fFDoG+UTO7nfYFB8nR8HW0L/AY8Orcvu8NyMYm
RaQuySay39UM6HnB6sSbf86L5uMfvDrEwauzHLz6MK5aT+MBIs/Vy2nHvgXr
uI9qGA8RnidcZs2rgVNzZhyzDqwErp6mvClHhmCZV7R++ZQWkP5ROjcB6mD4
7YeGVb/64fUnHz0anyRe1LGQxifw7rz1Jz7pOf3Bq0N/4VWt5Ql7U+qN8rcD
d4P16iB3UZ6e284hONpeFySS2wQVFbci0nY1wRejtzYPTvbDretmy5/qd0Hg
PAfxH7/a4XGIwh4Rbjbm7x+8mvkXXoV+1Jv4MqwW5NvvdMoVtEF8edaw+KF+
OFJ/WmTDki68181t0+2Ct5ejrt7LZyLO3P+f89Q/OXh1ve9FhGNRO4iUNaoY
yTJAJpVsTXZiwqk2twBXLhasW9O8OkWSBVwuIbfXHmqg61mwF/Fnx19z08l8
uuPNUbQfmLnOsGGMCScOX9/gmVYJttdO5K6jfHjukm5opnz411Wf4HjKh8O5
11/lq2eTroedrHOfWOTcnUD7efJ5UPNyzdYdXCyiazRy4oUki1ztXS3US7/7
973cDc69XHvDsmDXqF6iPjjlyOp6BpnSc6wx7Gse6KwU8+P6xSTXhN+/+DCB
SdYmNsa3zmyB0bwCm9kLmeS83v0F4V3d5HlKc8VSxU6Icdjya/2SLjIgcuwV
9Rv5NCc6DP3muXmTntyZNuKer288fL+NLLeIDjLV7IUd8ysXoJ/VNTyfoH7s
05deqD9ldmkO/S7s1npzH7+bzevsjt/N0d8/nkj7uI1n43/VCLPJV88j6zQX
lYCEYMHrcCoP2LtCMZrKNV/yXzi2tASuf9b6cvVBD/F8WvBqfC6LLAzzZ23q
yYOpnHnnX5x554uceef/Ngd9d/epuTSuyHxNz5/ff7UTYYVPthhXY1sHvhdv
7CR30xObk7a2Eh8Txv5dcT0gqPVdEeOw3EmrB/WNB8YPo/5/m4/+W36RI2+/
NfNUO90XVCulBUmzif7jzYllaUWwe+vsWfens8HbhdcxejuLhFoMBFQsr4bx
cr/XKo5Msute/JQUjW4S5zK6/5pTJ8hw5qb3ceamCzlz0/9tnnr64owmagdY
J3V/JlM7O4u1DdBOafRZeVovwCFBYi7WiwWXsxOwXmw/4i//PIEFwkfLJ6Wr
MYmQxsyXRlyNoCruL+gt1UUuLLpaEp7cRKLEbvJ8yuuB2mnDt9P0O+F6fGY4
7896mBu0svcbbx+EMkxEqT6Y5iuOUH0QfrT0w0eqHzsR5lD7hMGevZDah5rN
B16g/c/njLr7MxkkfJr0xIcTu0Ci5u7wNd9u2MyZX37MmV8u5swv/7e55iCP
A5K4r+uTX2yg+wLXUVYo7kvwksMb9EPnHoYE9SfIvixQQz+kfr/NR/1P6tfy
uVP/g5tg8R//93DmmhmcueblnLnmXo6cxZEv5cjfRjK3b4BOcjrQ7+TTra3w
it2mNh7dA0JB74Qx3j4zs+QRx7YwlhzD+ImWCRIo2dgJUSf9f9B4g2ydfh2M
twjOHPQ1zhy0KWcO+r/NR5/fdrJn1o4eOHPD+eom/P+7OPZcz1xZCR+9U37Q
fIH07Zfiab6Ak9/8PsyXVSQH84v4JMhifsGZun/ya91Gn72IA0aefFoUB6Cf
O4ggDjzdkDZxtIlJHh8jEDjEgP3zzvqIprVAhhxjGPEhWOJGFeLq0PtHPpjv
13s3XKL4AKMbjKwpPoBYi7cb4sOF5nXO1D54zzeXR/uBC7vi0X6Yb5HX+ahe
UJqTdXxqPQOu9IroDH/Pg5kSyxHHgKEriDgGMfHH/+CY7A05cy4TNhnycMmZ
rcqGmKryZEG9N1D+IVQVcfLd+cELFCdB77rt9x6Kk//t94fv+G0nMXOY8H5k
aWpZYQ8oHrWxMFhfCINzZnyV2McmB+Z3iWeascHS6d1AYHo+mBQe1FqNvyMV
nFx51BvvL2PX9EfVwO1pllMk97HBpuQGL+ordr39o8/DlbMM56bVOHPTA5y5
6Qlc6utxXiyaMx+txJmPfiWv1nNgrI6IjMx3lc/vIMHTXl/VuEbz6Ng+T5sJ
zYQrvbh2Y3AX6d845YDhrh5wcz9uRnk4+SRTWIf3Ayt7vIeQh0unHfYu/d4O
wUoWlt/3MYinSoX6lQ04v3wz80VYLXl/eHsJrY8kfu0C7nm0PtJ6/edeovov
fisUbHHF+G0ZcY9Xt0W+KsYcjUK+uvanhXdxVgcZPTTp+ghXJ1k1XUnKN5UN
Q6NL42h/QQaCxgfw3uB1qJQC9hceGQZ2dseriNMLjTmqZs3EN4PdKls3ACIZ
987Quk/4pubfpnWfvFsgeAXrvp/YjDOU35IJQlcCkN8OTparRn7r4VHOj/Vd
YG1iJq7/vWjsN6zvluJ93J6vO0nPDD5hL/82cu3perHiXjbM48xNt3Lmph05
c9MpoT+cW/0ayCbGDLeFHfUkckqxr+q5Abin1SpLeQ5RyNvyIx7qiM42CTby
HMXC7zGU35Ir6o+mIr81TnHrQ35r0DSRl/IZ8vmWkC3lM0Tl4rQ9yGcoP/lz
D/P5L/4/MPhggurMQsI32e5wak05admflPMgaBja9vq3e4szSbeMhW5JVBfp
FPkVfuN2F6zk4LkZB8+LOHh+dOZ3hSMTm4nVsl9zo3prSNevkeIm5wFgceas
X3LmrC9w5qz/nb+O+2v++maMwT7K98ibbfLbKN8jHnvN3iHfO/NN4OLzZZXk
ZLza1caQYrK0LGKO7+5hUBMJv0Z5KVH4OXSZ8lIy7VWiPvLSfPcNpZRXk7Oy
J8WQV8urdL5AXn1qpv5l/+8sEryuwIHZzSQzXs1g816shXXBO5XcUhjk0lOx
tZPdOom+gm7tNwEGfJ+vqr8ro5NsT77d52vRSOTrmecvHaf5z1n/87/2Zf69
1InWHTJbyiYW6w6X584PWHfuCgoUfmTUkHPm224ejCkkT/3ZZ9uH/v+57Li/
5rKnc+QvOHJZjrx93f7NQStrSKV15gzDA/nwaY/4LvaSYbgecs4V/SC8xDcb
+blIYr0u+sFae0kY8na3mqtO6J/nlnk6KK/aWXaQ2oEd7VzT0M7KyGZjtPPf
5rincORDHDk3R76aM9/N5sx3Z3Dmu//b3LfCZcP8lmVdsPCBS+qy1CZCfB5m
B+X2wKfaL15Yr3dWeJylfiNlrzJG0G+pVRrJT4bbYO7gtEfa6dXQ6G7pn5LY
DxYrLdupP0HWdjyX+hNcPSSs0J/KnO/2/PVdgz19JdgPMqfkyNJ8AWPFfW2Y
L88fTjaj5wtTzFYI+1k0wpdPGUfxfP+e+5bmzH1HPj+pSuMEbHgO6tI4gbL4
pekYJxfOX3Nyu9ANAn6vuvHeibdv9CPeOz3fF+9G4w101yR50HiDWTwOzhhv
Wr7aQTSe4T3vmnQazxAgeH8axrOtpHIiXKmC2O2QPFb4DlL5Yru86L4GnBW3
0/wCL7Pn62h+QdG135mYX//yjdC/eIh53pcemr9QxvTYT/MX9r765ob5+/fc
9yTO3Pe/v5tdzfndrB/nd7OJuXL7KD5AC+/OQIoP4PHqZDriwyT+TwHY7+t8
KHlJ8RBMSzMKEQ/V82uiKI6B6THuUIpjIPI43x1xbNqOuTMpHkLuDAl5iocw
sYGPB/Hwb/5gwuEPny/vuoA4P+xs6ktxHgLWKoRz7iUuIo4d+auP00yanIR1
RFxQfhj7LPMhhR+Iw9sNtb9TO2A0J/Iu2uFbOysI7Zx+LvWK4j/YPvytQPEf
NFNt3iH+Lzp+fvXBsTp42mbxgNY76G92OoX17uSh3FxaX0Dy5lQ/Wl/gxOlp
glhf3tQ3TKB1jVSEzn9M6xoEb4rZjHVtAheXFs5H3+bMcb/izHE/ea3VSesm
CPYqtNO6CT62PupYN2n9XYr1d9Vf89o8XFfacS47jTOXLc6Zy34VsEBx7ecO
cv7uvokPihnkd+DM43h/Rb+rj9/d8tdcdvoiE773cnVksqcC3/O0duJvq9OI
92aPWqqh6kQLMXD5LYn37RW9ThV4L0frhcp/mssWOiB2rSeojWiYn+zGe2/m
/tkyeE8o9vGCQ6F6Mbk+RTKlXKuayBhrSihOGwYRzlz2jb/msstPht2jcU4+
JG9xpXFOHry404dxPrTl/xX23nE9f+//eLbMrDSMklDRMDLCRUQDkVRGr4Ss
hKySslKhlBAKlb0bdomjPWiXttbz+SxNUWbley4u79vr83y//X7/XrdzO8/z
PI9zrus692vcTRUqY9+ySpnzzke909hy9dpsxEWPUf31caq/Hk/111L2qpE1
qzLZ/PWtRxAfbls/aB7iw+J11luozjouXCqLrxMW3OycztcJ6xvTB+E6+f+d
8r/qqTtKaI75t7/USP6S4EnNnoI7QnZ+Va/Z2ycKWKPTrV3XNPOhi8TqX98r
gr6XNH0v+DpSdWuyNJP/EpEpv6WRDdny8KaRdhJ0lQj+5Y/NovmraP77GYo+
Uqeq2OWh+u9FWkL29d56H3OPaFigYz3olYOIZT0u6lhhKGKTB+W62ZfEQKvL
fIdOjiLWGrF75g4unxoYvSCkLAbKDy+vLpsvZBZhVgV+plUs4/g715FP42B9
bnerPtoi9mR62JJ7a4Ss+9euUqYKmSA757ppDffLB43xuOYpqIB98snpU5JL
wLn1kzP/vxAxSmUZ/7+gH5Mrj/+3t7+tjcsuEbjKZEuFzBLBQZktk0S5sWBj
o7Cezw9qhqOW8vlh7+QPlUv5/Jr2Tk8wnj6+3+mnGE+PmLBh5TS+fqOtUYf5
+iF1/YHxfP0wOvC0Ka4/0Paij/6pKthbc3/1bS0hzHPvJ2PA98HqnCLuJ9B+
gjzt53KV1DSs4/7g+ruO2yXqdx13Z4mTv+RRVN/t1/IfuSPWcQdSHbcE1XF3
kHjl+O++we8Iv8Vz8m8/eTz5yc4vsg6g3S+cP90Z7VfUNeFXtF+3z9w98lS7
jLkEt8Ssrt7B6vIM1h86WwsuY7saFVsLIWG8+dkxJyrh+67054vViqAhysd7
xtRKqI+wH1b9uhxKLy8V3ltdwd9JT6d+0KuEvPYBMk/PCpn5sWqv08ZF8Gr3
wUbUJ35RCxPRD887HbAQ9UlfH3jlZSuAMwr3dVKXCtj1mXaXfuQV/afu+CvV
HS+kuuNdbb/lwR1+y6uu/5bHuU/NRr2XM117H/rVmxzVBqPe8+tTfO/HCQEo
z/ZXu7O3kp2+rLPIPqMECnpOmHXHWARxfo83Pe8rYld7HxrSqpT8n3rkzVSP
nE/1yDvTguXRLmS+6PzTh/vJ6iFSfdAuiOMVToRXvJQ48zifn6sDD8rD1zwV
MncDQ8GtR2lgEvpafvcBIWw17Hbp4VABG+YzWgHjJq4519y6DxDBxREHjnXR
E7K2wOuX71pmwdCACUfQXp/xXnwX43S2p9ra0F4Pm9CkqDVWCFenSx4L061k
/vNsfsWV6jzX+15fJwTXY3GiCGsh660SNGyyMAe+7IxYyOUs6U1XtUj+PWVs
1wxB+f5ndrr2/P1uaWUnNF4uhGJLxR1mXbPgsKuhMvqZ3X06mKP/sDBCJRH9
h+S3AfPRz1xltF4W/ZCX4anb0A+RIj8wlPxAdfIDX+7p3BnXWb5f8BTjX3a1
6a9wna8D3ljw/8t2ftd+xv8vPKzPDsb/G39qw9eCeSJmdNPaV1pfBPIe3/az
fxJg84uAL7v4vj010cjAeJO3zJCvo/m+RVSvD+T7zGo/X0nm+wyvi15V4j7/
wRkEhDOMJpyhXLvBzA37nu2yWtsyRgTjUn5IpD1LBMkr1q2e/B0k2KAIaPfn
p2lJ4fddSfXIQVSPfJ7qkev9fstV5vyWd7z9W/4o5WcgvuOen9WSXDWpHEzr
WpTwHSdepzyM6pQVJcfhOWTb7j7HcwjDvx78dQ7/UfW35eeWbSx12MbPLYQt
eLcYz612/Mj3YXx8UZrSgBw+/uE1j1+43/u37w/iu9Ig9F0Q2n2ZLjJyeP67
PK9KbywTsgVZI21m6Qthhd7HYSumZsPrwVvs8F059KD7NPQrrJYsyUW/oqZN
2QjfxYsHXGjG+JSB7eF3+C7ea1loy+8pU5AM8eb3FAz8Ll3Be3olRMEF39eO
gnu16Cd4yHQxwXtdNv2r+vASIdv7rEjnwEshdJk4edA5+UywObWzP/oDrzt8
VsB41nvnJlP0B2ZtHRzTqFfJvndffoDrDWjp3ec86g0lT4HldiMh2ypp/dnX
VQRHLd7fUKhJhxPvavuhnumnE2iE43UGz1+B4z+X1x35uEsAtiPvDvAIFIJ6
lteMdYfywFy58j3O3y81Dcczp0OhKTi+n+qdebjOoud6w/k6mXJv23G4zmmW
Fz+63BIxc8Vls7u3C5iSbWqid0QGjJHSs+bzsxEzhw/i87PJoUsf4fymF8yL
r7SVsUULnt3D+NecsJFuGP/q2PnBpl6PK5jN8nEx+/oLWbv6q58i03eQI/HK
C/ezQ8kNK9R7A0zsX+N+ekdd36hkKWQ7J+psWdnM9Zz09dibB7P+WqdcT/J8
kruS/C7pzy+kPw1If+baLz26J1zIXO8KD+Y1CNjevtoXnzrkwjQTyWfoZ+a8
juyDOMM2hS45eB7+zPOZ5llK84j3bSgiPak73l3y/gQh+37lWMuw45Wsb+Kk
tLGxRWDUPlGndL4IlLXndtObL2KrO5kZeKxMgFE7TMd6cXnJh+vW67icOQ88
hPfdPGm3Eb5f3svtVcV3bqjyvATUPxMuf1aw2FkFt8zGhIq6Cll+6qDxnS8k
gMyM91uS+4mgh3BGe7OFkJ2zmL94GddjxlZPOnvJ10DXpqS3jr3vshWbDvbA
ONos0LuOfkL30J1D0C+6MrtAH/2Ee9ukNblfwaw+ur5EvyJhwY4W9Csqd/ov
Qj9KOSd6L/oVwd+vzcfxf6tTbiV5AcklCn/L8z7p9uP7A6l1s7oNP14JU/o9
PIL7k0J1yh+oTnkf1Sn/rX7ZivSJHukTBdInK++8bp4ZK4Sg3sHqGpcFoLIu
/luB+dv/0mOnSI/1O1i0jdtxxrKi1dGOf7l+vQXt+N/6KqjnL++wTF7Etoc1
rX70QgimhV1fDL6Z/te6Zk2Snya58p9659rlQWj3sxc82oz6JPSw/y48/+J4
ox7hjdNG1ul6egmga3xQ0MeFVdDl2LPSbZfT4NPC5XekVomY3LHbjjdWiMBu
9bS5A6K4XzfZLQXvY8hy2VR+H2Hm6J478D5KTZlhgPdxufT5Rn4fIcLnYibe
R4nyJZIYv778tikUx6t+vWSO42eorTnFx8Own+GxOP6L3uhzOH7cq2ev+O/C
fnuDNfi7yzeP/fW7zb6zvw9XFbGobtaqLZYiWFz4dOqw5ATupyn8istbUJzr
JsW5OkpkvPtf/aw6SGg+xPomic2/669HUf31gtPH19curmJdHtwLONlbyFZP
2js6wyoJhsz7eWnTtvdM7dTjPpvqKtjqC4YTqjdFcz8w+BdeelOsn6SubV/n
b98roKXEz3vBuvdMo0fV59fbomGWw8vWGi6/nHZXczqXL844Gqi3IxoMvBJT
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
7/zCAZJWtfB7ATWVo3P4vQArS/9DeC/+9EM+T/2QlakfckfVTe38/IOuxNxc
fv7hhMSteXj+562Mceb3FPTX3tdHP2qr28MqvKeH7kYuR3xGqBYWcDq8AG6d
MXNGfEZ3os23NItceLdb422I7lv4tCx7RLcedf/FR/nHXmwJW1SKeE7r46Dr
cl3K4Yirw3jEc84kjOtz5noZ2HncbOL6BD7XVdiiPkkS46/8Y0cOb35iM7i3
CDp3zZ+gPlMIY0/pa7r6Z0HgX/i8zpH8gZjclHi+dorxfK34C//XgrR1Q1B/
XtSSD+L6E9ZlO1ig/vxSW3Wd622wd3Hcy/U2FLduNkS9/eOKSgDXz2D3fIAB
18+Q6DXIHfXzE7dHI0XLslh5Z6sjQ1aUweqTP2dIcf9WY6SCwdhFiWyp2fzb
OL/oQtZqnH8g9VseRP2Wx1O/5YK3PRK5HYEV5/o/43YEgreevz+a25Fvfn1i
TJU3z1wqWZKXtqiUNR9aKyWqroUNN7u82mGZxuINmZ63fBm7+o98x0Nna2Co
mJ7/o/81FOem8e/LZBXLX/Dvy7YlFWng9903OXQCP5+ssKKoPz+fbF3yek88
nx1C3Yv5PWIDZWx28XvE/J5O0MZ79EDt7oUjrTnszKyjkzOupbAFjRu/FjjX
8/P3mz9rBfFnxRJ/1lGKt+4Q4886S/xZJcSfdZj4s6KIP2sS8WcZE3+WL+H8
eWLxWYuPl5/x9UDPjXrb+XrAYl3vD7ie9vdDii7+eAPJn+ZeVLqeDWvkJOYg
nqnxweDITss0UC7svoTvG+jY6tYf5PsmmfnkRlbXctaUFNKn0LSKzfJttT3m
VQTuYnq+P+n5cNJjDaTHfEmPObwKN3Y9VcUcXed8XKslZJ+jW9TOe0TDjG3R
O7unClihmkWAS4SI+dlqbzxpnAkfiQ/0OvGB+hMfqM7WMNt4ELGA4HabwCtC
NjrZffcr7XRoo3zvdsr3HkH53gPXJics1ReyeusPKZp8/d3ndFpa/iQOjtH6
NWj9PWj99M5l51TL8J0L5+idW6d6Vgrzuu+lnzxzf5YIEm031DXnxv4nTzuN
8rTlKU97uXvTDr5OeN6ssZ6vE8YPuKWA6yx44xeYYpkOmYFGe30k38OW7WHL
eplUwPXyF/2zu5ZD55S4xgLTKgj553ryUb7Pb270tnp+qgp66NaajdISQs9+
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
          "]], 
        GraphicsComplex3DBox[CompressedData["
1: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
lOC0r/UepfscLcQelvwV+FlF9PpJkU/15+RfB9IPfN+Qznesx/lOvnMo0dvR
nO/tlDRpXFBuvDlX4k2KZy3iWcjPJLpXSHbWws6ifTzdKwSOeqQyhBf30EtS
d2EvSZ0GcJzPHpb1xb5rJ/V1q7vcKf3eNCefcGJi48B/7y8U+WfrhmPTSqmc
1AzedjU5l8+Xzo/bueabDbRfDtocuWdH+9FiP9I5lPU4h1L9hvao8+wYO6D7
gOAMPhcwOBcAfoVwyInkXc0VsjtNRQ+MFT1A58V6vkbny4bPl7G/HitVscHQ
cll87q/37IB3EnyH4NDjmEdTeQcP+UTgx+S9MuwH4O53XCMMtwd93D/2OfDh
8i4f8q1Y/0pJTT/47SHnnXbgMauKJb4xynlfF3j/+7pdPdLEiT+AR45YkHgx
wnn3EPjmin23fljLeceQ+wedTM9jn4/9rGGu3geeMWd6UqG4aM0fgd9T5N0S
yKXme1Kf7fHFaed9CeBTmx3pNyrW+Z4R8CGH3vmyflHnvXjgvwVELe/wnHM/
DDjuO2C+3B7zBZ7y8RL/Rred7xndm54Mw/TXvFI2+d+6c+BfS/72qK++XP3l
j/PeaQlT/gD/anHlqa9P1/ejFJ9XvdkrP6U678MDf2jq8IEXejpyC/zJv0xS
8Zv8fbHgaP6+GNrjfgRwtOfvjqG9+54I/jl11OCzR/+G+wf/Peg3TD/W5d58
yDDMN+RVmc+VOn1bOCMoW/Gxn/Z/sPhTK5VvsDONXfREKL7Jda/Ezw84+IP5
cnvMi/vH+kKvr93ds2uhjY78A4d8gh7gLP/Anyf55/boB/oeegD9AIfeAJ2w
G+PoHVHgLUh/Av+Z9Cdw1p/cHny7d/+O/9IlsfHKou2d98GBn42s+MeMGvp9
EHNvPM549QM/6JHB4/+YedY5twbewfVuQ4Txao+8AvIMrXz5X8PvMOHeBfyF
0T0WXHzrhb0W91KwLwpI3gz3T4DXk7gP90yAl5a4EvdJgKMe45KH3rjsoR/O
e+zr3z32L/KzPC7q74Ej/kU9PXDcA0J9PHDc61njOld27rHhHg72XVLLWhdS
uyVr/g74jaZ7PwsMSrO4VwN86fh9E7s9kgl/XfF5SzudbHQgy+J+C3Dcm0Be
W+sXNla5MLf0AYt7C8BrPlsvu/ucTJxDKP7klKhlmyql4x0SxU/Hl3t29Xsp
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
zA==
         "], {{
           {RGBColor[0, 0, 1], EdgeForm[None], 
            GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1: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
4/8fSJmTQQ==
               "]], Polygon3DBox[CompressedData["
1:eJwtmwf811MXx7/r3n/SpCg7RIUSZSQqlZQGyV4J2bI9yEyF7JEthEI05Omx
KUVGqIwkJSGbMpLwfN597uvV7XfOvfe77z3ncz7n/JsNGtL/jCLLspvLLKv0
e6OUv/U7I8+ytyW3iFn2keSodnfIsonq20fjvfR7pw4YquMGSF+udonkLdTu
YFzzn9GcsTrmbOmbau5GNVk2Sr9t1b+l+u7V7/Oa315zW0seqbH2ut5y6QdL
/lTy4zr+fM3dQvrGOv5eblJz99fPPZJf1vEdcp/zWum7S19Pej/pYyTnOsdo
6S019q/kw9TXiPNr/GHJ96mt1rk2Ut9Tkt/TvP7Sv9H4R5o/SX2bauxNtVHq
25ZrSL5Ec7aRPFhz2qt/lPRndK8Dpe8ovan0xzX+tvoO1vz6khdq7B6dr17u
e+ReW6lvgeR1uEfJW6u9J/kNHT9CxzaSPll6e55bz3+Gjlkgsbb6pvIt1P8W
966+yRq7Wcccof526v9Bx76v3wM19q36PpY+T/oR0n+UvkD6FWpfSb9Lx/4o
ubnaXJ6XPp1rX81/V/rrmd/XlRr/On3rnySfqd+F0m9T20RyW7Wjde5neD4d
u7PmLON49eW6/6vV9730izJ/7xc0fxfpP6gdJn0M30ljN6n/Nx17uPRdNXZx
5vF1dE8XSt5b44u4X/3eLX2p2nO6xhvMl/w5a0vjn7L+JNfXvM+k7672k863
seYs1tgCzf+Fd63xFRobqL5l0i+UPkP6dB27QvoDar9K/kXz95Y8QXItPc+V
mveD9P/qnB00doZaXY3VU2uksR3Uxmj8II1/JnlC9No/RvOa6/iP9fuT9Ks0
9ovGRur3V+mHa/5SyZfpfmok3yH5aY0frfkrpLfhe+gabdS3hPWu/pWSZ2p+
X+nzNX+m9Fel7ye90Phr0vdU+036Njp+mcYGSV8pfSvpx0o+UPO+zL0nmkje
Xue5X/KB6vtU8v6a00DXPVtjr7DWOZ/G+6brH65zLpJ+tua+nL4f37aJ+kbr
uDPV10O/t6n/Wck7qS3V+HiNz9Gx/dX/hfRV0g+QfLzG22n+COlTNH575eNX
a84gyZ01/qfkfdXWlfyG5uwvOWjsdelv6beDjv1Sx7zIeg/ea1eq/3/Se+t3
kfTemlNKPjR4PbOuX9L4AWrr69jzNfaq5BP1u0bz+2a2b6y/g9hfapdKvk19
jSU/q/au5EMq27P62Fjp96htIfk79c2VfHTwfv5e8vc6fz2d44rM34Q1wn7v
xXpWO7/0e+X93q62meTGpd9NJ81/TfIGaiOld5Y+U/KePKfkn9V3jfQG7GHJ
HdU3XfL6asMxqdJvlbxr6W9xpPRlpfcB++Ee7J3kprrHFzX2J3uetaXzfyB9
F9YP9j/aVj4pfbjGe/MeJVfqu13yzmoPs5elf87+YI9K/lB90zR/rN7DDpJ/
Vt/Hkk8N3l+LNPdnzV2XPSE9y+2zOvFdJE/kmaQXpe3DP/gyyeuoXSr5BbUW
rGedY6HmfyB9O8kD1PeV9LPYw5r7mq75R+Z39rvkc9XXU/oStfNKFkmW/Ye5
alvp2HY6xxTuXf1f8izq+z2961+j/VVvnedfne9kyZuxRyVfiw3Vs12vsb8k
X4/NlfyExs/j+qX9X+dqrdnP1qh1kXxd6fk8816V9+/OhW1CR8kbY085p/Tj
K9tbfOuGrJnkv27LbQOPkBx1zBjJO/ON0vrDPuFTX5H8YGX/jJ8ua7x+sBV7
qO9Vyc00PlLn7aJ2k+TAM2vsGs3pqecr1U5i/eH3dPzX+j1TY8ep73t8SOnx
yerbU/K90fjhPclLJH9Xei7PzLM/q9ZQ8hBsseQbWC+5v+FbkvdSXy2Nt8n9
TW5S346Sv1Z7R/L6+HSurTnrSe6nVh+7xLvQ/f1T+l101Zx/sd18D94ne0Xj
Q6WfgJ+RXiP97dK2Z2hu+/GanreP5HmsvRrjIWxF79zPxP7cUfpe0mewXnle
yc+pb4GO3ai0f+nJ/fLONX635GHqa4ztkj42N944UPow6WdI/5W9res1xEbw
bTS+P3sbHy39N96bxh/QPZ4mfaX0+jXGG/WlL9AzNZM+VfqjhX3o85r73+T/
wQFbaHxGYd9Uo9/fCtuLUzT3CPV9kXzUofqdldl3vaDWI/cz7Sf5BrVDdNwG
6usheWqw7eKdHCB5GpivsM1+Vdd8Rm1ryX+A62psswdLnpvZln+quePVxoE5
8EXqu5Lz67h1NX+DaCyyEhursSXqP0p6I/3WqbG/HayxQ9W3hPOC4dLarKvx
16X3A5toTjPJrwRj2z7SN5K8XPOOlX4ue1TXfVl9t2T+doujfT6+/0r8U2W8
cKzGB+S2aR+q73Dplyf7hn08QfohGl+MPdb4FPyZzn1K8sfH8K74ZglfDJTe
X/pCyW8FX49rbCf5zWDfzZyWkmdpznX4EvX9Lbm2rvmI5J107kZ63jrSx2MP
sFVpP1yQG5M+onvYpLKtYg930NhZ7DHwkvpy1or0g6VfnDDH8uD9wT5pXGM8
dTx4R331wD7Bz4svqK3xG3X9oZpTW2MbSP9X46ewF7m29Kj+S3Nfg2v9zfuW
fpPalhr7SH1HY1sTBvg2WKbvRHwJe0Z6XY1tqPN9E3yvnO8YyTN1neE8K2uO
fa++q/S7seY31fw/pF+Nb1bfu8F4fgL2Xn1NNedn9Y2QvJ7kJpq/Kqx1Gdkb
xFV6ti+lPCZ9ZFqDD0fvH3wt63Uj9Y0C26h9U/o8IxI+Yn+dGx2nXYdd0/wf
eW/SR0jfXAOPRtvjZile4p3wbtphY5L/uhlfr9ZcY125RuY+/Bl2Dft2vfpe
lzwKHJf7mcGDYFyw7jS1PSr719tz27BWldcN6+czHT8e31kaazMH/0scRjyG
DyJ+qq/7nSD5S82px7vA50h/QG07jf9Z2tZh89pIPwT8rPu7VPKmNV63rN8G
fDPerdog/GjuGIhn4FkuSPa8gY5/UvJo9W0cHFcRX7GmWmi8Ld8k95pmbbN+
L0z6i5KPDb7Xx0vHV6xP3uVU9X0QvK5YXyen9cN6Y62z5hexd0pjlem5/fkr
hd8nGGeF5Br1XQRuzIzhiT/5bMR4xHqtgvETtuGL6H3CfsEmgM/BC9OTvwRb
rCP9irT+2RsD1F7HV4LxwGvB+B5b8rnOV0vzL9P4oer7UH27SZ+a2wbtIvkY
zWmT8MR41oL0x6TvLv1l6deAv/Gz2BTJ56ivYWEfSMzwVLStB5vib/+jvsbY
a7ULK2MwsNh20q+SflZl/8waYC0MqzzWqfAewB4R+zaRfLHke0vHqptLH1p5
nbBe+KY7Sj4dv8D+yIy/z9c9NtfvZZxX93Nw9PrbnnddY1/TEh5E7Qr1/a3f
7dXa5sZoJ2v+HtJv0FgbzT9F+jDps9P+5H1xPa7bWvpp+q0FrtX1VxXGZLxL
3uk1Gju1sm8lBry6tI3F1sJBEN8/qbGumTHedZp7dHT8TBy9g86/Wv1DNL47
e1jjNxIjpXseXhmjgdV2IKaqHE+2Bu9Iv0XykWrdCus3S75W5+1YOEYjHjss
ev10xRel5+VbbKe+1XqXLxdeay2kP4PNj14/rKOixvfLtRtozkOV8eqtmTEC
zzOZ87L2NOdtsITaNpLb8Q4kj6scP70PBpN+lForyR3BIJKPjP5efDewwiS+
K3tTfW9Jf0q/3cF+YPvKeBH8DoYESz4VzDcQq86Oft5tJbdnTcHFBPM/v+u4
N6PXA3i9de73yzpiPdXNzJ+dHv0+ea9ziBUqxzcfqe8d6fsHY5kTdL4PeB79
vi096Hw9NXeh5o1Re0DtfbBZadvaHJtTet2x/gbntv9vqvXAV6jvw2g8CR7p
npuzOF76+9JrSX9C+h6a8wv+IN3fGWrdC2Ou4yQPUduH9c49Su6q+50u+T78
X3Q8vm9ak8T0rBnWDmuK+A3eB/7naLU/JX9emV+AZ9hK6+GgaC6D2DXUmHPZ
tDSfBBczIjpeJdaAvwGHg8fBMGAZOI4t9XtnZu4DjmPz0vEx3AccwLal41e4
gSXB+Lhh+n7zg9/dqWq1gjmjiWmNwCW9r75jNNafbwA3pN8phd8x7/qr0s+G
T8e3f6exZwtzbkfgK9TOzR0PPR08H/x5Wub3AS4Hn8OPvERMERxf4pvBO69X
fverU/yxsDK2w/duLn20fnsW3qPs1bul71c45oQf/Z/O10XzlxSOV9oHx1rE
XMRmxA3ED8RUxFaPBMdLr6ntKnlFafwFxgBrfB2MHR9VGxBsz57PfQ93VI4r
iC82yMx/fKI5Q3JjjLEa/zD4Xa/LGpL+XPDa5B6bSn4u7dFuYIZozuZp6ftm
5nK2DObTwLpLNXYBuFXj/TJzNPgAfAExM/E07wcuqVa6PzA0WPqSwpzsgdH+
Bwy+lc5dVfbvazkhyb3U5kuel/bj4sr8FDzVlrpIH/0OAr/m5uDQ4ePw6fh2
9jPH7qP2Zmn/0kz9e3JPkmfhowu/Q/wBnNhAzZuTmSuD32F/wCnCLe4dzT/B
Q22r639WOX5pWBlvfls6ftH0tfgRDq6pfm/MzM29E8y9cMyOwRzXSdxjZu7r
keh4hrgGvAvndV5lewkXBud3XGX+DS4QzgHu4ajKfCbXH5TiA2L9EypzEdgI
+Dr8t/5l2+f27z8wB6yeOX7qofNx83AlLXS++8u1VE+2if6bWNpGYUvhh7Bd
cyrvVXIRbTX/Yf2+mJkjWg9sX5rfhtP/X+F8Bfw1+5N9ellp7g4OD37rG53z
PfW/LH1v9iI4S/J+mfk2OB54BfiFxyV/oevVybyn2FtwFsT5xPszpHeLtk1w
At0l76t2V+Zn7BmNucBexHPfwZWofafho/B3kidUjuWxWfDVrHnWPvHeJMnL
ozE2/FYnYim1b8B22G/J1xL/4Us1v1n0nmPv5aX5c47h2E3UNgALanxaZg6t
tvTapWME+K4O0vfBr/Iu1O5gHQdznXD2cPfMYe766f1/X9k342tW63p9gv0f
PN986b+m78eeZ++P0vgAfKPud8vo++H9duI7Sj8++N38XDj/sHUwNw+HDpe+
jfQHM3P6cPvw+sjgb/j7fyvHesuSf4FzJW+wNDMXC9+3OLO9we5cUJp7hYMl
v0H+hLXEmhpEbKs2OzOnBz6ZVlnH5sOvE098Kn2vzPgTTgxfsFnu/MqXlWWO
4VxfYdcTPu/Fu5X+Dv5RrVtwH2NgMPDIP5XXLs/As3SvzG+zn0/U/d4R7YvJ
FYAv/qj8LOSO/oqOIYgl4Bsekrx9cOwLhwmX2Vb645l9FtxJk+DcARgALLAM
/Fv6G7ULzmPwLY5TW1nYh+HLiJGIlVqrPZo5RiIeGhfNxZ5aGm8fGcy1wokf
LHlV5b23MNmnPytz9YuSPSO/xbdanPztk9JnZOa0Wc98U77tgHS+r8GPud9p
b4yOrn+17nM37Iv0g8AexFzSn6qMoeCXiG/w9+Tw8Bv4jzbBOcLJCQ+QO/wz
2meA3+6KzrFNK7xmWDvsOXJXzyT/B0c0R/rgwtwR+21fteeTvwTfEAcSD14X
bQOxhXAO5Ddnqe/55L/mVsY78B5wHtdH77HjNO+9zHuP/QXXSAxObvTJ0rnP
Y3WOCaUxRcfKfNjC5OPwdeD/ttE53M0q411yuzRkONc8mHOAe9g5d+6Whkz+
I0ger7aT9HrSq2CfBccBf4gvu059D5XmPOE+ifGJ4dg/46M5G2Js1ugOwRgS
LAk/8bv0rWvM6eNfHgzmsOAkDtfz3ST9HuZo7CMdPzKY04TbJB98fTDmB/uD
x66KjsfIb52Yme8khrhLv5tnji3g+OH6ya+cGex/sH3d8TPROUxymU+rb/dg
PhR8PxBbVeOcGbgB/EAuDRvXrbQNxvbhbw6qzF+Ta9gl4bc6yT7jr/qWzjk9
WjkfMsnLem1+gHvoVdoncm/s9zqV+chWaf92TJzEzsE5UGwmNrV5MJ4l78Ge
ZG92q1wLAD45pnTOkj3/o/QzNH4wmFxyK+6fdx7tW8jV/B4dwxDLEJO9RLwA
Ps+ce/ojms9lDmPwCbdIbpE5d7RK8rdqt4AJdA+PVI5BiEU4x9XR/vGiynwC
WBGOBh4IPgjuhhw3ue51pQ8L9iHksqlfwLfAwcLLws/CzcKh4385/zyd85fC
eT4wA3winAExH/USG+vYS4NtNTaGeonz1JqCr3Pny14K5vaJeeGPsclr87iZ
Y0HsI76KmgFqBz6o7OvhaOCfuSfuDQwMXiUHADeyd+78GXif3MUNmfE08Qr8
DHw6+BmOFa4VDDg2eo+z1x/OzBd/UtkXjM3MF5PjJm4Eo++l+c+yBnKvYfh8
chxbl+aLyH3UVTs9955/QvL0YNt1YmE89FjlvUXMszDYnlAbMlzja6TP0zUe
KowRplfGoGBRTDVcLHwqXCsx2XvBMRmxGZzL6oR34OLghP8J5qPIRcKp/hls
P9qV5uTg5ojnr9L4WdgfyY0rc8Dwd78G56ThXuFgfwn2hydl5oh/DOaA4YLJ
OZB7+Knyt+hCDBCcP8P28U4+CuY84D7O1PyPg3MwPUrbQ3IzxKTEptzT5PQ+
qX1on47H/4HlwRSHBcfExMbk46h1wD+TWwRPgEVGSx9YeA2yFtcNrr0gRttP
x56odk5mDH5SNOdyd2GOBS4GjoKcdbPM3AX+EdwH/usenKOEB4MPa5/wMLmQ
SQkPrK92eWYOrHf0+92tNKbg/a0M5sKfUzs3mNMhh078CNdDDoYcIPaM3Aw5
m/UrfwPwCJw53Dn5at7/Z8mXjMsc35BzJMbgnoh38YdjEz8xGqwebaewVy/o
2A2jYzdiuHOCa2ampPgTrPGJ9FY63334b8mzg+sNLtacFsl/1Cn9zHBJk4Kx
BTVBjYLt1YalvxH4CTzRvjQmYr//rGt0zuyj8FXYaGw1OR1yO3AI4MdzpH8R
jL/hmojZH5U8LvhbnJ/87cPBscp5yd+Swy1Lr0nWJj4SX3l28t934J8z5+ju
DK6ZqimNycEL8BGsbWqe4INWVvYF1ABsy7sM9pXk0McE4/t3M+cT4VPuDeYG
F6u1jvafw0vjRfDmxMrfYmZaX5tEcxFwanC1i7AZmTk49iv5QXKp1IjAV4EX
wb6f8AwYDT1vSziXwrVU5B+prWqc+/nIQZKLJAc6Ij0/Y4dq/o2Sbw223XBW
cFfUMD1Rek9R2wTHDddNTRf1DkvVmuv8e6bv87aO2SMz59Yv+P20ys0hwCUM
kd5Scl3i4WCOtE3pdwR3CicGN0aOdHLC57wrapLOSv66demYaEE6H1gEzHJf
MMcO1049SL8ULxEbEiMODsarT5eOObaJxrxgX2o2Ogf7XHwv9RtDg3OEa0pz
QOQOyekR0JMjIVdCzRu1b9RcYY/I2ZK7PRfuL30/bO0c/IPmztU5HizM+b4i
fZbaeRqbnzkfPL+ybyEnQXwMRgArUK9ycTAGAAsQk3YMxtPkXvGx90RjDrAH
JMJF+KZgrFIHewq+CF4bE6WfEhw/8i6JwU8O9vdw2ujE5uCdYaXfIfEm+K5z
6T1I/Mv3Z2+SMyd3TsxL7Avfenkw5gB7wEEQny+vvDeo8SJfTnwK9wnnQD7y
H/BS6ZwK/guMAlah5g1+YI3Gryhd08fzENMR21EfeGXw/gabUxsBNoYfJS9L
znNUdE6C3AT1SLtG2+s6hTlw7Bc5HvITdZL9nlqZi6LmhHqxljWuc6PerW+0
D8OX1S7sX/A3yGD+x4Lzp9hqOK9e6fqHVs5/kCshh08ufzed40X1/yfaF+GD
8EUXRGNvfBS+ako0P47NwHZQf0CtHPVIt0bzj8RS1AA1DD4ndh5enWtRswl+
IsfE/oCfJDaDg4UPhq/JC9cAzJJ+eHQuiBwD+YbLomM/fAS+gvoeYj9yFuQu
qNegtokcFLnLNZW5tO6ZuStyKKNL5xjINYAn965c74O9I6dTlc6ZkDv5qzLX
SQ0e/BuYi/3xT25+Cb4JmRpA+HA4lUGlbTC2GCBFLdIBmeNF+DZqG/LER/WJ
/pZ8Y741HNxJlecwFz6RGjRi8mui+UNq5eAU7oyOQfg+cGjEJsSTcNXki5uk
+4c77KY571R+PnJXYJx6urdvK2NVMCu5xW8qrwVqUqhNOTv4XPhofPWOpetM
qfGg1gP/Qq3H1GQ/2d/U+pDjxf5vFI3VqXG+IJgTgxuD4yZ/2yU6VwnH2jWa
g4KLgiOnPqdhdC6BGiJqicAsYBds+pjkL8jtUSNHrRycBtwGnC/cL/XC2GJy
KuRWqG+kFo+cC7kX+FdqDcjd7Z74YPIqXXXO26Lri8F6V2TGEy9In1S4Jns2
tjM6FgRDgaX+rvytyQmcnfBeh8I5I3KX84L5QPrAf+Qw/yqMCU9O/p1vRc3l
mel8vdL13k3+Giw4v/BehIO9M805S/pSyetkzkGeGp0TJW9LzpDc4dOV80Xk
yE6LtsHY4qdy12exX6j1pgYT/pmYjtgOzh7ufkLw3q5Vuv4JvhduFxtLnAcf
Njt3jvDO0jYRX/xV4r+wmfiCu0vbUupLqJe9N3M9wNz0/n4ozLXgg/BF25Xm
bqnzgtslB7FV6RiHWGduaS74/cQFkwNvVjofzt6FE0an/rxv4RoLai3IZ/Cs
cMSc7+PEDZ+kvk+IRQtjBXwY/No50diD2hPqS/AxcD2LC/sefPYssFCKn3+v
XM8It0luBf7n9Mz3QP07PoZYiToUfM856muSmz+hnuO3yt+eHBm5stlpfy4t
vBaJ/1tmxhDwaO+m+cs1Pj3ZZnwd9oh6UfiEN3LbP+wg+Rdq6ajRuKg0JiH/
AqcGVulXer3h8+EBwADE2wcm/gAfD3bZL/ENR5TmS8E3U0rXB4D1+BsA/hZg
SGms+BD2qTQfPlz6eqW5depN4S/wIfByewRjjV6J39ktmNuBs4G7of4U/gcf
As9HfS3cwavgmdL81kF61h74XM3vEpxr4FngNuDXN83M13CNC6PfJzEKscqA
6NoGaiyp1+yiOY0y80XcA/nULQrXz8zEz0djK2LqeWm/UAtETg5/eFE0FwMG
A4vhH+AS2V/9o7mV6ZnjUfiP01mTmfcU/DI12SMyYwCwwMjoep+e6f2Rr6Y2
hzXEWqIeDW5hp9L1XdS3wXU8mLm+hPo6uJHBlfNbxJDEknBUcFXk0MilrcrN
ob2VdNYQfBQ1Qzw77+Bk/Gblb4v9xQ5TjwyfNEOtfxqHfyam5vsTr2Fb65au
l+TvVciPX57570vIn5PP4B2cVtofYKuIAckvf5fwPjWM05I9vCvZMPz9sIS/
fyrMRVHDSP7/49x//4Edwh4NylwPxP4Fe7MG9gmO56m9JqdO/PFD5WN55ppo
+wb2Y48TbzBOrpG/MeFvTcgvUMswP+F94hly9OSjbw/mx8FO/M0Pf/tzYXAt
NWsMfL2scn0stYDUi5Lzo06denVygeS7iX34GwP+1qBDNHfAOyRf91g0f8he
B/sQj1JbDCdRJ5jP3bCyDyXeWq12ZOEaf2r9V1T+9nzz54P/HuOP3JzUsyl+
otaE9bRtcH4ZLow58FfwLeSoyVntFXx/5BLhm6YkG4othWNalfA3tlC3kF0d
jDeoqeJ7E/s3TjXA5CQejI6PqEnrJP2B6Pzp+QmzTYzO4VPDQAxNLI1N/G9h
H4OtJF5aVTqmJbbFp5GjZ8+yd7HvxBKssb7BfAh1hHAoK4LrJ6jZJyd0reQf
4Sxyx1RfBfNT3Bs199TeE4MTi1MjRn0s8+HaqZGnVp74n5o9/t6pgcb7B8dm
nJP6eeJraujwl5sF7xlqGuA82EvkD/avzAkQ7/L3COSW4G+or4c/xIfi7zYJ
5sDhwomJiV9ZY6w16k+pVWaNs9ap0SJ/jv0nFmRPkx+DUx+Y1kinaO6d3CSY
aA6+U32P5/bx1IfACcMN00f9IePUjlCTSG0iNQ7UOvQpnC+Ag4eLh2+hVoKa
QGoDx+X++5M1aQ9Tz3dacPx+SWV7hG1mPTOXGklqbclPjCu9xtGpryA3QU0j
8TU2dUhljDglPd+xleulyCWA16gBov6zCK4JojaIb0w9JPmT1pXrJ4k/Zib7
iM2Bb6a+hdotQmT4VGwutQXUOGOLwf/k4okZ9omu7+dvw/ibAf52oNL4izp4
qPrqB/PLDTT/ssK1veQ3qd3ib8r42zJqUKgxhaOGq74/mnuEo4Org+8h9qEm
i/qTXaJj0y0y84H4DGoeqWnGl8B3wWXxNzbtk/8n1seHdk7HwyXyN2e7RfMF
2LI+yd9Sz0BdIpj/yeh80NjSHA7x+/8BZ3wXeA==
               "]], 
              Polygon3DBox[CompressedData["
1:eJwt1XmQz3UYB/Df+h0YR6ppSAdJo4komlqpXGEmrCwiRyPFUG5hKTe5kqty
dKHGLRZJjsWu2Q4xZJ1djlKLclQ0E1uvz3z3j/d+nvf7eT/Pfn+fz/fzfO/q
MSCzf4lYLDYIkjDRn3Jpsdgu4qR4LDYQH5+KxS7iOVDI05PWhNYrEYu9CP/y
N8U30gvk+6gbRc+m9aN1oW1XO4HeHz9OPyTOUNdJ7k18NXRTMwea8m6wFkBb
nqO898Uj35/qr6rZzXOz/GV8Ff0ZcUeoy7+c9jGU59vL14G+kmcQ7TKtPP6Q
fvfjh8TP0kZYR8I6vqr0mvKl8Db6fYHvFT/J94p1KKzlO2f9Uf+D4lxxHkwW
36S2LeziX03LVd9KnwO0avAGzwdhT8UXoAzfQZ7WtLvFubQB6jLwdDivdire
CR4J+56MziGcR23ee/BRMI22Ht8AC/iu8P/CsxIayH2D9+E7J/6Upw7UwP+m
n+RZCulyX+HHobu4jLUsLNHvZ+sxntesVaztaUfVDxQn9doOa/CLcCPPKbyz
Z78U9j2cq35reJ8XN1RbkT6Zlsf3D5zEt0JzNXvw7vAW3yQoJ94Jj8p9x5MT
9kvtr/rto7/L8wkM1HtQOCO+fOso2imeZbAcDuN71S5T+7C6Cjwf0SrDWtoM
WhPabfgqvnr6vI4n6OXxfvS5+Ht6VePvi7cK74f4OZ5OMDf0oqWrzcFTcAM+
lH5A3UKowr9Un9G03/B1kA1H8AXW+dBG3Q6+/eLGqeie9VTzAqzBh+t5Pdwf
vgZQDy8NaeLHITv8Rnwh7xb8Univ9ErRxtL+EG+DrZCPr0hE+7uDryxMpCVK
Rs9fKfRKi873BFyhdeG/QKsf3lvYJ97Jt0TuHL5Zfg/eBa8IU8JvpeXTmuux
Rbw1EdW2sC7mqSy3SrwLdsKrqeiOfWbtGGaH/AC+W2Fq2AM4LL8YasqtC/eZ
73txmjgW+vJkwRGeJVCLnE0fFuYQvgg+hPV4B7VH5fvp3xvm05ZBLf6X4tF8
y+TZgeeEmSH3g9pNqWhPfw9xeF44hk+AUmF+8c6zPyXwTLhFPovWG5qHvYem
4va8u/2P0clob8IejZA7zr/ROgS+FE+Hr/WrGuYm70k1w9XeAdNoT0HpcK5Q
UY8rPPnJaJ4d5qkOt+Nz5eeE9yvMDT32hXeTPtJaMhHN6ff1Oks7Kz8mzAyY
EbRE9Nu/TUVnFc6sbiq683n0p/EH8U1qG9Ouq7sGi2iDoWW4CzwLwp3FC/lO
+x9ZPFVgeiq6H4XF+xn2NRc/k4zudx11tWE5bR70VDMOv5dvt7Uk33/iy/Re
/AXJ6MwLiu9XuGd78Ku8Z8R949HZh3egDj2DPoX2F20IbXAyik/QHpOrxFNk
Pa92WDw6g3AWhYnovPbLbxNvL/42hG9Ea/n9fBnW2bBS3cgwNz1fhVT03OH5
x4Z7Tn+Hdp2vOl5EbwdFeFbx3Z+JN+Krj48JZ4JvhswwN9QspT+g9yxaC74n
8HF8F0pE3+Twbe5Be5nWCJ+p5k64RluRjL6ns+nxMBPwrnzj5eeHd5reLRXN
2NPF8yvMsW14A95mPDOhKHxf8VnhzPFMyAvfAn3S6Q3j0QwLvyf8rvP0n4r3
IOxFZ3WzoR1P13g0U8JsmRNmQjyau2H+fk6rEe60Z24p7kF/G/8fHwM4jg==

               "]], 
              Polygon3DBox[{{1387, 896, 699, 700, 897, 1388}, {1345, 845, 658,
                659, 846, 1346}}]}]}, {}, {}, {}, {}}, {
           {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0ktLVHEch/G/phO5SRcaFVmCgq5EoWhZL0AtK29l3jLvMzWalo7mJXUU
RROqjZWlJN1eQ+u2LVuFm5a5EAQF8XMI5jfP9/me3zlnznCK2hO18YwQwnfz
MzOEGVNrbpqof3cihBo5Lt/ADZ7ODkEMfb4SeIAvzKHeJwzIg3iImYo5zOG3
8MiMyDF9Qs6Tb+NJ183VjfPH/Bx+0N2R8/UzfFAuwU39sq6Op3k9VuKKrkFe
ljsxFQvhD17nw7iGP+w8lP+aKv4U3+C63V+u28Xr+ShetPtW/q3v5i1yClfs
Vuo2eQ/vxH92n8tX9Nu8V+7FLbsFWSFMR+ebajOg/2avTf4qt0bkr1yjn0/x
L3hVNynv6Xv4hPwJL+vLo/+KPzD3TYXuo2Ol+jHeYZpNmb5Qt+7YM95uPuvu
4nn9a/2IfM9s61d1TfJLfSNew12/v0pekp/ge890YLeCL/J5POO8IXlfX8wX
5Gmcs3tal+RneTp6cXQpyNY/4rnyfPRs+kvuNczj/BTu8Fn5AiZ5vyyGodj/
9/UYuXRPOQ==
             "]]}, {
            Line3DBox[{1250, 1643, 1532, 1818, 1443, 1281, 1441, 1828, 486, 
             1442, 398, 536, 1147, 397, 448, 355, 1805, 1490, 568, 569, 1701, 
             1817, 1531}], Line3DBox[CompressedData["
1:eJwVz7kuRGEYBuCPzEatRSYxwhjXYYkoZibWmcYFcAW2ho5CYWt0qDEjERFx
G0rGMraWynOKJ+/7/f93Ts7JL62Ulzsios5PKuI4HbFNlRe6MxE92YgT2TB/
2xnVm3qFLn2WXjtnsuXsy05JH6FsPpVF9zMyR5ZPO0U5zKada1mjziILfNj5
kxvup3kwt2k6u5fvNPQ7+dgZcaXf6m9c6jfylXXPXpj3mEr+y9mQfqSvca6X
fN+87GfSWcvOoP7LIavO+uRc8q+Mm5/tFJJ7fYK0niFFlSf3ee8d0Lfcj7HD
Afvs8g8h6jHE
             "]], 
            Line3DBox[{1282, 1839, 1641, 1639, 1640, 1491, 1694, 1806, 1283, 
             1333, 1251, 1332, 1764, 1331, 1399, 1562, 1563, 1835, 1398, 1564,
              1335, 1445, 1588, 1765, 1706, 1444, 1284, 1448, 1707, 1756, 
             1589, 1447, 1285, 1450, 1819, 1702}], 
            Line3DBox[{1286, 1690, 1058, 1533, 1534, 1418, 1569, 1493, 1535, 
             1820, 1287, 1492, 1288, 1494, 1181, 1757, 1289, 1334, 1290, 1182,
              1766, 1336, 1400, 1337, 1781, 1183, 1341, 1446, 1342, 1807, 
             1184, 1611, 1291, 1449, 1292, 1795, 1185, 1495, 1293, 1451, 1294,
              1837, 1630, 1186, 1496, 1453, 1796, 1295, 1455, 1536}], 
            Line3DBox[{1296, 1791, 1537, 1419, 1570, 1497, 1538, 1667, 1808, 
             1452, 1297, 1498, 1187, 778, 1338, 1298, 1188, 1767, 1339, 1401, 
             1340, 1189, 1770, 1345, 1346, 1769, 1190, 1653, 1736, 1191, 1590,
              1592, 1591, 1838, 1631, 1192, 1612, 1299, 1454, 1737, 1668, 
             1193, 1499, 1669, 1809, 1456, 1300, 1632, 1194, 1500, 1758, 
             1670}], Line3DBox[{1301, 1539, 1420, 1771, 1571, 1195, 1501, 
             1502, 1457, 1738, 1504, 1593, 1503, 1196, 1671, 1768, 1343, 1302,
              1197, 1680, 1782, 1402, 1344, 1198, 853, 1349, 1199, 1714, 1654,
              1739, 1200, 1655, 1740, 1201, 1656, 1741, 1202, 1594, 1595, 
             1742, 1645, 1644, 1203, 1708, 1829, 1596, 1634, 1633, 1204, 1613,
              1614, 1833, 1458, 1636, 1646, 1635, 1205, 1810, 1505, 1303}], 
            Line3DBox[{1307, 1552, 1425, 1773, 1377, 1550, 1551, 1549, 1473, 
             1732, 1675, 1513, 1375, 1279, 1376, 1731, 1674, 1373, 1278, 1772,
              1374, 1366, 1372, 747, 1371, 1233, 1752, 1663, 1232, 1751, 1662,
              1730, 1231, 1277, 1650, 1649, 1841, 1230, 1276, 1617, 1729, 
             1711, 1229, 1275, 1616, 1728, 1709, 1601, 1603, 1602, 1831, 1472,
              1306, 1470, 1691, 1759, 1471}], 
            Line3DBox[{1310, 1792, 1556, 1426, 1386, 1554, 1555, 1553, 1480, 
             1735, 1677, 1514, 1383, 753, 1384, 1309, 1380, 1775, 1666, 1381, 
             1379, 1411, 1774, 1665, 1378, 1235, 1753, 1664, 1734, 1234, 1280,
              1618, 1606, 1832, 1607, 1609, 1608, 1478, 1308, 1801, 1476, 
             1605, 1604, 1477, 1733, 1676, 1474, 1475, 1760, 1692}], 
            Line3DBox[{1311, 1693, 1754, 1678, 1236, 1515, 1761, 1312, 1479, 
             1313, 1237, 1712, 1762, 1314, 1619, 1315, 1238, 1776, 1387, 1388,
              1788, 1239, 1389, 1390, 1777, 1240, 1316, 1382, 1317, 1778, 
             1241, 1318, 1385, 1319, 1794, 1557, 1436, 1582, 1516, 1558, 816, 
             1481, 1320}], 
            Line3DBox[{1327, 1755, 1484, 1326, 1245, 1517, 1815, 1325, 1393, 
             1324, 1244, 1780, 1392, 1412, 1391, 1437, 1584, 1779, 1583, 1395,
              1559, 1394, 1560, 1823, 1243, 1323, 1483, 1322, 1763, 1698, 
             1242, 1321, 1482, 1814, 1679}], 
            Line3DBox[{1416, 1790, 1529, 1417, 1330, 1413, 1568, 1651, 1789, 
             1528, 1488, 1489, 1440, 1530, 1642, 1840, 1652}], 
            Line3DBox[{1421, 1824, 1206, 1506, 1507, 1459, 1509, 1597, 1508, 
             1207, 1304, 1347, 1743, 1672, 1208, 1681, 1783, 1403, 1348, 1209,
              1682, 1784, 1404, 1350, 1210, 1657, 1744, 1212, 731, 1745, 1214,
              1658, 1746, 1216, 1659, 1747, 1218, 1357, 1748, 1686, 1220, 
             1687, 1749, 1360, 1221, 1621, 1797, 1713, 1460, 1361, 1222, 1710,
              1798, 1615, 1461, 1638, 1647, 1637, 1223, 1811, 1695}], 
            Line3DBox[{1424, 1822, 1548, 1274, 1600, 1547, 1469, 1512, 1813, 
             1697, 1369, 1273, 1370, 1727, 1673, 1367, 1272, 1368, 1726, 1688,
              1365, 1271, 1787, 1410, 1359, 1228, 1270, 1725, 1227, 740, 1226,
              1750, 1661, 1724, 1225, 1269, 1723, 1224, 1268, 1722, 1685, 
             1575, 1267, 1648, 1721, 1684, 1467, 1266, 1599, 1830, 1468, 1355,
              1465, 1265, 1800, 1598, 1466, 1305, 1464, 1799, 1660}], 
            Line3DBox[{1429, 1793, 1587, 1430, 1397, 1428, 1561, 1427, 1249, 
             1827, 1526, 1610, 1527, 1487, 1525, 1803, 1700}], 
            Line3DBox[{1519, 1802, 1699, 1485, 1328, 1246, 1816, 1520, 1521, 
             1486, 1586, 1585, 1826, 1247, 1438, 1439, 1396, 1523, 1522, 1804,
              1248, 1329, 1518, 1045, 1524}]}, {
            Line3DBox[{713, 1840, 652, 1155, 1156, 950, 1108, 1828, 715, 654, 
             830, 951, 1765, 1109, 717, 656, 839, 1807, 1011, 719, 660, 1736, 
             721, 666, 1740, 726, 673, 1746, 733, 1718, 681, 740, 690, 1752, 
             746, 696, 891, 921, 1774, 751, 701, 899, 1777, 900, 755, 705, 
             901, 1780, 905, 1085, 758, 708, 1043, 1804, 1044, 997, 998, 761, 
             711, 1793, 939}], 
            Line3DBox[{736, 1799, 968, 967, 1023, 1022, 677, 1825, 729, 1148, 
             924, 857, 932, 1096, 1824, 931}], 
            Line3DBox[{743, 974, 1759, 973, 794, 684, 1800, 503, 969, 465, 
             466, 1573, 286, 858, 372, 1597, 501, 408, 410, 930, 1771, 1095, 
             929}], Line3DBox[{762, 1165, 1051, 1817, 1000, 764, 1005, 1806, 
             1008, 1007, 829, 769, 1757, 834, 770, 911, 837, 1767, 842, 838, 
             663, 853, 916, 854, 670, 1744, 730, 1716, 678, 737, 1723, 687, 
             1176, 1841, 1177, 1178, 1179, 1180, 1129, 1832, 1128, 1144, 1145,
              1146, 1762, 987, 813, 990, 1035, 1036, 1763, 991, 819, 993, 
             1802, 1040, 822}], 
            Line3DBox[{766, 1060, 1058, 954, 1009, 953, 1012, 1808, 776, 1066,
              777, 1064, 841, 1768, 786, 849, 787, 915, 1783, 851, 860, 852, 
             1091, 1836, 918, 1092, 863, 971, 864, 1721, 1172, 1173, 1122, 
             1125, 1123, 1728, 1138, 1139, 801, 977, 802, 1733, 980, 1031, 
             981, 1754, 810, 984, 986}], 
            Line3DBox[{773, 957, 1796, 774, 958, 1013, 1809, 781, 960, 782, 
             1119, 1829, 1117, 1170, 1118, 676, 1749, 869, 1153, 870, 1720, 
             1154, 920, 1093, 871, 877, 872, 1726, 880, 796, 887, 797, 1731, 
             889, 806, 895, 807, 1735, 1029, 983, 1033, 816, 1081, 817}], 
            Line3DBox[{783, 1758, 961, 784, 962, 1135, 1833, 788, 1134, 789, 
             964, 1797, 1149, 873, 1067, 874, 1068, 1834, 875, 1069, 792, 879,
              793, 1727, 882, 798, 888, 799, 1732, 1026, 975, 1030, 808, 1077,
              1792, 809}], 
            Line3DBox[{818, 1814, 1034, 988, 812, 985, 1761, 811, 1032, 982, 
             804, 1801, 979, 803, 1143, 1142, 1729, 1141, 1140, 686, 1722, 
             866, 1099, 865, 919, 1715, 856, 862, 855, 1784, 917, 844, 850, 
             843, 1782, 913, 779, 840, 778, 835, 1059, 768, 1061, 1820, 767, 
             1010, 1006, 1055, 1166, 1839, 763}], 
            Line3DBox[{824, 1045, 709, 759, 1037, 1815, 820, 1038, 706, 756, 
             902, 1778, 814, 702, 752, 1775, 893, 892, 697, 747, 885, 884, 
             691, 1725, 741, 682, 1719, 734, 1747, 674, 727, 1741, 667, 722, 
             1133, 1838, 1112, 1161, 661, 1160, 1159, 955, 1795, 771, 657, 
             1111, 1110, 1756, 952, 765, 1157, 1167, 1054, 1818, 1053}], 
            Line3DBox[CompressedData["
1:eJwVzrEug2EUBuBTpC4BiUU7ugKd6GBTbd1BV8IFGBqbaJpKJARBR0OVThaD
RCINIjqoNLF16mIgTQwkHsOT9/3O+fL9/0xpo7ieiIgCp6MRl5wxxzFTYxG/
yYj2SESFK7NFs5bMMK1v8mBXZV5foGqXlbPjEWX5ZFf735sPvbcrn533yOkD
sxf9kEf9Vdbp6O/ynK7ely3e9IG8pqd/yBu2vPXjfCQ/nW9Z8v1lvsxzcttu
VQ7t7sjrKf9ZlAV27PflAWt8u3PPhJ52b0VOUnHvhCYXNPgDfEQyRA==
             "]], 
            Line3DBox[{937, 1076, 1773, 938, 890, 1028, 1100, 1027, 972, 1813,
              1024, 1025, 881, 1073, 1072, 1150, 1821, 1070, 1071, 1017, 1137,
              1136, 1798, 965, 790, 963, 1016, 1810, 1015}], 
            Line3DBox[{978, 1760, 976, 800, 693, 1127, 1831, 1126, 1124, 795, 
             1164, 685, 1121, 1830, 1120, 970, 861, 1097, 1098, 1785, 947, 
             946, 859, 791, 1743, 669, 723, 848, 785, 1738, 1014, 1115, 1063, 
             1062, 1065, 1791, 775}], 
            Line3DBox[{1018, 1811, 1019, 966, 1021, 1020, 1812, 1074, 933, 
             948, 934, 883, 936, 1075, 1822, 935}], 
            Line3DBox[{1046, 1803, 996, 823, 995, 1042, 1816, 1041, 994, 903, 
             992, 1084, 1823, 1083, 1082, 898, 989, 1776, 896, 699, 1734, 749,
              694, 1730, 744, 688, 1724, 738, 679, 1717, 731, 671, 1714, 724, 
             664, 847, 914, 1770, 845, 658, 833, 836, 1766, 831, 910, 827, 
             1764, 828, 1087, 1086, 908, 1003, 1805, 1004, 999, 1002, 1001, 
             1050, 1790, 928}], 
            Line3DBox[{1056, 1819, 1057, 1168, 1158, 772, 1837, 956, 1113, 
             1114, 662, 1737, 780, 959, 1162, 1163, 668, 1171, 1742, 1116, 
             1169, 728, 675, 1748, 867, 1152, 735, 1786, 683, 868, 876, 742, 
             1787, 692, 878, 886, 748, 1772, 698, 805, 894, 753, 703, 949, 
             815, 1794, 1080, 1078, 1079, 1130, 1039, 1755, 821}]}, {}, {}}},
         VertexNormals->CompressedData["
1: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
3zd28nVXWdy3CSUzD+O+bdTxCOH7zJasnTUV9/mrUeE13Oebl4dEv/tezQLf
buyQ9q0KflxW3zRozmtwcr+ZrJSSCfPivFUaRiSwKNijGrylEa51+Hgy5O5L
KHOSic21f8b0E3QGnT/WBNvSBs/H/TluMXcd3x+Wo1V9EfdH7WlMHh/PJgVK
v8TxOvG9B+D4ApNJtXx+NrWn/iicPyDlmzLO/zbt55OvPmWgdWKOjs32Qma2
7LnfjrgamJx15xE/n2BnqBLFzyc7uNJNC89nOOz7iOd/ksGPg/w8M1W3rF/n
eeKzMSV4/n1dEnfw88+GlW6/guff9ofLPDz/a++/dsHxV6/O3oDjpQ68uzl1
Wxo0l9lc43qArXjs2oJ6YG1z97eoN5KvHP/E9QbT+VHminrDT6yP6NC/9BGN
oj6iT6hfaLNYv9BU6oM9WCxuK97XPZL6ukdR//b11L99PfVv196zPavvOCEU
2Z+vN7sqYDpRZ+0XOxSA3waZFENhMQyY1et7on4F02w5qOQmWQ2jJn0ZaSQs
ZupX3etR/mVMfj+UXy3t2VVqnJCtOCUbj/M03FCai/Oklxk3Z3M9Vzqu92YD
/q6Pf7TKzcS1FOSoP09/ejedonfTmNT9k3OWVTGP8esAxytOPrIAx6+c1fV0
wm2vF3q1T8dXjnzH+in4FEm/qoK1poWjzH5UsqFeTYf7Iu7UNXlOr20xIFCT
yDN34X7qiM/yj25VwrZMTatmnSpoJ15Cb+IlNCNewkjiJUwhXsLuxEtoT7yE
WcRLaES8hFnES3iceAnHEi/hP6Q3LMX0hhTph5di+kGd7vV1sXu9h+5vV7H7
G0D8g3OJf/AG8Q/uIf5BQeNv/sGXxD/4lvgHhxH/4DTiH7Qg/sFexD9YQfyD
ESealshuaWJhN6s63lOSh/P1/k4HtJPhkJJklM1OASyRdGnv1VDBom5szdhc
Wg5lestTvgypgB+u+Q5KSkVs/e4rBz/frYYL3WN3KqoXwYMOJdD3bBa7+Nxj
uFxBHWwy7PK184MseNhQf9vCNJHlp6+Y+mhGI2yQe1RdZhILnZrO7G3Kj2YZ
T2qu1u5pgihrPVPvbxksI7G3+0DHeCa1qP7bKt9GeCDb5Yq6QQG7dmfKLou6
DHbpqNnG1MP1sPhM+tL1M8rZEROZd7FSBWzzhubeAzK4nz/hi1/Rqyrm+mPk
3i6Z5WxhekTr4fBK2NcSnH94ioh1HVh4dcgWISutcN3eVpUJ/Xo8CKt8WQ4h
dr2TfO2L2UT/lOyRvtXgbrv4zoH3+dA0+PHw0F05bMqFtDMnJOvBwd/xyL3o
VEjsJ3fkc9MrpmkZajz5UCNIzrJJtZlQyhYkD/IJOJzPIk5MSnJsegenv66/
ub2ykh1K0NTWGV3Ophkp3pFREcCkynELJu7MgcTKUYvee+axmxM+NUa710Pd
zStPp5oK2O7IZWqD9wlh+uxRl1S3F8CVpQMlrPNFMK7u/qD+H4Vg9LHSvVU9
FjoHJx+ImF4Fip4qNbCwCpy/GcZoJ5bDicjADhYuFey896uueC9CXFSN8F7k
BE/yuiUQss+yQvVc7m+MWxZjWHAuC8a+OB+FeOkJiHGagHjpKYNr0l9iwZx4
1qKIZ60D8az9jX8tmPjXDIh/bSjxr50juR7JFUheQrxszcTLFk+8bFUk/0ry
mP8fvjZPkpeT/ADJh1NdQwDVNYyhuobqK7Z3ep2tBtUm1V5WskLoKtPnemR1
LDw0WLPF+R8BKIxM3bHpciX06blmQ4xGOUwf/mRx2Btudx6rfiy/VALbmmHa
w+Rq+Oqv1vNkRRnrF9fjw8rgEniw6tFot4RqCF8RHiulJmT1sUHZeawKFgaO
72c0txhCX955vcRRBP0uRfRbZCiCLhlNd91LY0G3g9MTPIfS/ZP9+TmEnf2X
lOA53FU7uhDr6KuPWRm7Y/zrZke1jVh/FN3tCD/nMFbF3Iafc9jat7usKz/n
Y9ImqYf0EoFqpyGVBwYI2dubRy69Xp4DVhtNun0IFUJLiiii/R8B6yE5U2vv
8XxIjB5ewNfD4mujuvD1sNIf+Q9wPT0pf76J8ueNKH/+ceuZXXwfWK5Dfd+K
SyVMQ9ZQGfdhqHVRKN9PJjwn7ML3k51UOXkL93PC/OqrGHfWV0rfldNXxJYt
v82M/z/4wrxJ7kXy9SQP/AuP2BmSryL5DJK/Jn6xds3f/GKfiF8s4y+8Y4nE
O/aQeMeGEO9YMskfk1ye5JmZWR1VbtWw2mg92eA3VezS9Bd9ij/Hgp7SCmd+
v2DgnhszcrGfZ53mArxfLvorbPGe2th07DVrYRXbeWVvKN7TLZVb49F+qWgN
mc7vKZvl0M8Y76n0dskPXM4+B34YhfJHI3vqoFxB5ekZPg+7/2nNJ37fWb/W
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
          "]]},
       AxesLabel->{
         FormBox["x", TraditionalForm], 
         FormBox["y", TraditionalForm], 
         FormBox["z", TraditionalForm]},
       BoxRatios->{1, 1, 0.4},
       Boxed->False,
       ImageSize->Scaled[1],
       Method->{"RotationControl" -> "Globe"},
       PlotRange->{{-0.5, 0.5}, {-0.5, 0.5}, {-0.5, 0.5}},
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]}], 
      GraphicsBox[
       GeometricTransformationBox[GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Good\"\>",
           StripOnInput->False,
           LineColor->RGBColor[0, 
             Rational[2, 3], 0],
           FrontFaceColor->RGBColor[0, 
             Rational[2, 3], 0],
           BackFaceColor->RGBColor[0, 
             Rational[2, 3], 0],
           GraphicsColor->RGBColor[0, 
             Rational[2, 3], 0],
           FontFamily->"Helvetica",
           FontSize->Scaled[0.3],
           FontWeight->Bold,
           FontColor->RGBColor[0, 
             Rational[2, 3], 0]], {0, 0}], {{{
          0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
          0.766044443118978}}, Center}], {1., 0}],
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, False}, {False, False}},
      StripOnInput->False]},
    {
     Graphics3DBox[{GraphicsComplex3DBox[CompressedData["
1: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
ud7/twWC8YkmYPXZjUosknK938Jw0MhEtxVMPEwDDcIjyE35wqiXi2g7eKCz
37Zszxhyu5vNGndSvwNMOhans10fR25s2l/ho9kO8Lw5eqp4hHK9T3Ug+hLp
Uweo80sxY/ChXNe3ni/TprZpA1F+1ZtP3RhFbm5MHDdbTZtAwN6PPkZHhpFb
q3Pa9KZ1DwKduLHii0XK72pSLl7/s8ZnD1ZaTN4I81LuUymlcn4su+wPxDW9
63jKKPejqH6pJGdi+cLg1OE7v2oo96Ms489vzauNAmZftr8+JUi5H7XIuHZt
jvkbUClIN1PKo9yP8mYz8739JAFULntPpvpQ7kedLgstnl38DkZUghetYyn3
o2w8i//01iaByOyW9750U8htmD5gU7dgMqCVBcU0cZT7USkhPPxXF5LAQT5V
UXplyn0nhR3hNzKWE8EmjYSjJq2U+053m/nE7xjEgvL60OoOQcp9J2ZOh4U3
Bs8IZ/0uhGwrpfzuS0D07i3D/FB4ds+2x2qclPuoc+aujiU06fD7W/t7wlsp
brSJ3+4pmhbAnTR+/k0RlPulPi73vi+/LIX6LeB2jzHlfmkANDz2L7USDhPC
+3+3EJEbu1Zxler2Writ8FcXnzvlfukeTeOgaZd62Hb7uIrzW8r9UqW+lAsz
vg1Qacc10U09E8jtXMGNHq/ZBnivVd/nyzPK/dLi62zSTdkN8GfKSPbXfZT7
otfkp8fPeNTB/R9j3qsXjiE3/82f+4t2VEK5mhONj1Qp90W96jM9b+2/nz/E
LrKYaUz5XSKThTDXZavv0N1/S9bZ7FTkdmA6QKH7dBkUHC1/3dVXjdzcPU7t
rriLXb/1Bt3orG5FbnlGh6RP57XBE/qH+fydepBbGNs7VjnBbnj+rKzWle2U
+/lS3q5h/Zl98FV4B7W9POV+vvyjdTP3uAFYXH/b7fookZJHzFYNzVwH4Y7q
sqmGZRJy49TOyw+bGoS67/cJLTwfQW6VV1YnPicNwrvSJiyZJyn37adtKqiW
eAagm9EE6x45yn17+eSU8/r2XbCS9ki68ccB5JZVOq79ic41/waPboJG+3vk
dlxFJoJcN1yE5Pwci9wsjWRUhPvroNMLIYbxpkLK93FnZF7+ONIBRQ4/OUQa
qEZuCSP8p2L9++Hik86T8meakNuLLsshocEheNNgQXe4ppVynjZnf7BQx64n
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
ItGjKp+nZdJEnvf/AKgqNaw=
        "], {{
          {RGBColor[0, 0, 1], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNm3ccV9Mfxu8591yVKCqSSkUDmQ0jpJKRBlpGRCWrH6koFJoaSEIyysge
GdlbdmTvGdl77/F73r/n9PL747zO53u+55577jn3nM/zPJ9zWwwd2feYWBTF
4lQUpfIPlPi9tlJTpTWV6ij10J/rJZcPlL297A1kf6ZUKTVQ+kRJxUV9pY8K
t1dP6TulWkrrKX2jVFOpodJXSjWU1lXqp8qb6OLGsg9XB/5S/qdSX5W3Ufn6
sveUvX5ym71l99eN15HdLBRFF+V7KTWX3VX53kq9VKdpct96ym6c3Lc+spsn
33cf2a1lN+Ia2S2T+7mX7A2T+9lf9kDdq4nsn5XWKNzPH5RWL3zto7rvT8pr
K72r+ocp7Sz7PeWHl+7fCuVHlO7fq8oHK3WU/Zryg5W2kf2K8oOUOsh+Xfkh
StvK/kf5ZUpnyX5Z+SCldoyn7rup0o6ymyjvzNgova//j1TqJnuD4L70UXpJ
ZQcobS37ReX7K20l+wXl+yptKftD5f9R2pX2lc9RmiB7pfIRSt2ZX+VHK+0m
+1PlI5V68A4oP0ZpD9mtdd/1lLbjvVLZUUq7yH5T+RDeIdlf80xK42V/r/xc
pYmyxyrfR+PfV/ZExkH2QbJPZXxkHyj7ONl9kue6VXBfBii1DO57f6WNg/uy
r1JH2W2Udpe9UfBz9FOapHaGqp3Bsvcv/Bx7Ko1Teb/kOqfIHiv7gMLzuWPy
nDKfOyXP6dNq81PlGxae/30rj/tJsvdTnYGyT6Q8uZ8TZB+oOvvJHs+8JPfz
BNkDkvs/Wfahsg+WPUZ2r+T3/Hjq69p9ZI+W3TN5fn+QfZ7SJNnTGHOVD2Ut
yV6odAbrUfk5SqfKnql8tOocJnuG7GNlD2dtyj5T6STZZyifpvIjZU9nfmUf
KvsP2QuUTpf9l/JLuEb2j8rnKU2W/bfyS5VmMy7B88+cjuJ9SX5X/1T59ko9
ZU9ljah8iOxvZZ+tdLLs03gnVT5M9lDV7a90nOzfVX6x0izZvym/UGkm86s9
5DDVOYE1q7LzlabKfofxLL1OGur/Wkqb8H4qb6y0ueytdO3xsqfLLnXPKxgv
2Un2lbyjvAPB95mvdGTw/S9QOip4PC5UOjr4uRcoHSv7bOWXKh0TvI4XKo2U
PUf5JUojgufnIt552aOV5sq+gXFObucaniX5Xlcz18l9uKJwv85Tulbl85P7
cB1jktzmYvaQ5Htdz5rS+3Ox7BuZu+T+jAl+1suVblL5ouQ+3yz7CtmXyb5F
9lXJdW5l7aidRbJvk72UMZJ9u+xrZV8t+87S/uVa2XfJvln2dbLvkX2b7Btk
PyD7Ptk3y75P9l2yF8u+V/Ydsm+Ufb/se2TfJPsO2TfIvkb2g7IfkH2L7LWV
P6Pfy2WvJftp2c/IriX7EdmPyV5d9mOyH5ddW/bjsp+QvYbsJ2Q/KXsnvQNT
NRbzZK+p8idV/pTsurKXyX6acdP/lyg9KHupyp7Tf7fJrq98Ob9l15H9lOxl
shvIflb287IPVfu36NpHCvuFr/Gt+n1VcF9eZX6D+/IadQpf94LSlcF9f4W5
Dm77DeY6uF9vMnfB939Xabjudad+v8i8B4/HW0ofFvb3axX2tfh7fD2+DD+H
z/29sK/D541S+TClKbKD+ruo9DuN07+89Hv8RWF/Cya4IXge3i6ME+q76v8w
AL4X3w9OAFOAOdbMfcDP4lvxw+AGcAJ+fjWlfmr4dKUluuA2tb9Y6VmVN0rG
KLS1KHieX1baIBkH0KcmyTiAfrRK9vfco6bq/1Z4H9hPZW313xayN03GJTz/
duzZpfs3oDJuwO83S8Yi9K9FMrbg2fClmyf7U/ztlsk+90DZW8tuX9jPt0v2
9TwX+AZsAxbokIwH/lFayX2UulGW7E/Zw3ZI3seGyd5V9g7MtexOsncqjBG2
SsYJ+Nttk33um3reesHlVZ4b5uX+YJuxwv93TfajYCp8TpfCezg+B1yBP985
eU8HC+xX2QfvRlmynwV7sMfTzxbBvhpfCUbonuyb90r25fx3rPLdk/3vnsl+
guv3r+zn8HH4enwjfcPXTUz2dwtT3isL+3p8Pz53k2C/yr3w7fh4fC4YAF9E
/3sn+1eeE19EHfqwg+y2SoNkbxaMsXrJ3jvZBzMWfZPxCm0dL/vk0tc/mLw3
sS8Nquz78fsHJ+MYMMzhsqewF3M/td1J6ajC2K1z8jgPS8Yo4JPhyZgAPDAw
GSswFt113bbBvntQMp7gmY9M9qn406myT8e/8r6Bl7IPHZOMA8AAs5WP0+8T
ZV+e7DPwF2CBE5PxwFx8suxTmPdk34xfxldPSPbXYMbxybgRrHFKMt54VPYj
sh+VfXWyL8GPXJzsk/BH+E1ysAS+d06yT8KH0hf2GXwo84x/nav/z0r2lexD
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
eB2sDv7sme1p2QaLwtPAx2BjeAI8BB8EB+idy2Np3gJnWb00VgYnz8vtY6/S
ItE50SHQI+DRwyufhVvGvlP53Npb0Xo/ZyTABc+XPmdJrIE4A2cwwCzj2HeT
/dWdyneqzPfulb1zZax6KbpRZf2UmABnLcBHN6ITV+ZX6GrEo9kzGlSOU6Ov
Ef/hXCt4AT5BDA7+QMyKs6PgR2I4nBcFp4BbifGBWcHgxPjAyL0rx/XA+sTB
OKcKTnk5+dwp5wLXST7/8zD7dvLZDOIEx+na9sn7B5oo5y7Yw9CzOUeBnye2
wNkP9qe+qt+4st5EHIMzJOCmt9gzSvuRz5LPexADID7AWRF82jGVzxyu0L1+
Tz5PiKZPzIFzI+AIYiacUQFzjax8TqwsHbPiXArY55vkc4+cI/ms9PlPMMlo
1d0i2df9nHzGA80RfZTzA/gutEbOjbBHooNy3gBfh9bImQf2sy/V3qzS++EX
pc9KEjvgnBRnL9m/d6schwWboq9tEK25EY9Ha5soe2TGqHUL49wh0bgXvgKH
gafAUeBF8COwLPWJa4HNj43mAOT8fqkw/4MHwlWpyz2IgdUvrd2An8HX4Gy4
CWe6DojmSmicnGvFD8Dn4HXwvgeVj4s+A0UshXOt+Myjo7kKZ7jgI/BMOOCH
hWOmH7BXR9u4WPhFn8r8ietGRfMHOMYRuQ3qcg2cijrc4/3CvBo9Be6MttIv
2wuyDWdfszSXg8fBDeAMcDd0pX2yDefcN5rHwKvhwA8V//I9rmXNDMjltysf
Ex2TXa8092aN1C2tF3Df4Xkc7szPMSLPBeP/nzy/o3Kd9/PYHJXHhDNvB0dz
XjQIODZ8Fu6O7gD/Xac0H8Y+O/eNOpzhQBtCF2qq/Jxovo8OsSx5zNAfm0fr
Y/AKtMjJhXVPtGDsb6NjDGOzb0UrPCv7QTRKNMNZuU36gi7VNmZNNVqjpD66
P1ozOjN67brRmi26aINcjj6Jlo1mhVaFhkX/0TXRN1kX6L/oy+jMu2QbnZm4
0drZ3i23idaKTl0/259E69Rciz9F/z07+2t0QPQ6dMHNo/WoP5RPj9ZgW2bs
wXptlLkYbRMn4cwMGJYYLPshOgpxY/YTOD2x1o7JWAyszTkc8BHxEM7YMDbE
kfAX4DLiYJzP4ZnWR0+O1lJWaab3ZNyChoum/Wu0vj8tYxh0efTh09TOrck+
Fl26SWV9FF0UXXtqYW0JHwpHRi9vHa3ngyXQuNGHZ4JTkjEFOu9euT77J+fe
4DWNmedofYn9nLN9xElH6roJleNY8DJiqWBhMDmxU/ZwcDJxN3gYPJS4J5ga
DIZuT7/wu8Rzwctge+KYcESwIjwM3sU4oMGj0e/DGFaOh8E9ifOwn8MXiCs1
y/5ocuW4CBgLHRX8Ap4hXoH2fXzluQOPgyfR23nHwVvo9qwhsBrxXHA6Girn
e8Ev+HDOD+PH0bw5M8wcomdzNpi9hzgD575Yc8QKOA/G/Gxc+fwYz9K+8hlm
eHaVfJabuQZTcN4YXIFOzLll8BG6KeecwUTEYzkjDaarkXz2Cf0SnZvzzGCo
EcrHV9ap+8s+oTLvxdfCScHsxKA4Uw1OBLNwHhvcMkT5iZV5KTjhf2eGCsfo
OfPAmRg0Jc69giXAQtMra8RgoRmV9QX2T7RAcAj+CJ0G/1gva5tgOnDRtMoa
NO/VmpVjQfh44tfj87PUrhxbBV9NrRyHBmuiOYOF4QtoVmhwzbLGiI9tmnVF
9t2NdO0byedpeLfRGNEHwcxo2MxFw6wJX5LXKVooPhN8z7kddCDeQ3AbmI2x
/SeZ/9P+qMrnn8CXnLWAz+2tsrGVz1igDXI+57vsazi3g4YHLyNWAIbpmtcm
/qpTXu+z8rysVlk72Ev5mMpnMtC4OJ+D5kT5BxnLcd/PMu4CMxOrJ/YPzif2
Ab+BdxBDYY+Et3D2DK6JHsU5nV8yHuDsDRoeGjxn0sDa7KXEsOBSxMD5FoP9
G4zEuVNixfSX71noM7E+zsey37eofO6O9Ugcg7OO+AfiUZwnhGeAuzgjSjyQ
GCNn9sDyxJn5TgSfwLkDvikA7xO75iwo8Wt0Dr7NQcOoqfyh0ryJMwKc/+Sc
ADo95+jYL4n58C0DnDJU/kaG/Qdsy1lN8C3xCr5hgacSw+Q8J/7tl9LnOIlP
EYPl3OCAvK45r0ksZrPK30Ew/ug3fFeCFkL8me964N+8RwPyu4SGxLc5HXL7
80v7azQhvsFBOyFOwnc68Gn0Uc7+gYPQxvhGCZ2GuBbfZcBrOevBtxvwNtYZ
39ew1lhbfM/C+iJOyxlI/DM8iHPmxLiJe/BdA3jkreTv4Hg34D18KwH3IfbC
eVq4HWdV+A4IDYY11zKvO86F8W0dugXzwjm6pYX3Mb7fWFT4DB3fu6GVctaG
b3PQeDgjxvdxaM/E3Pj+Amz4X8VNpaM=
              "]], 
             Polygon3DBox[CompressedData["
1:eJw1mnkAF9Mexe/MnUmRrURaKMoWKlpItCdKUUmkKAkvJEuUVi3aFUmLVJZE
yrPvS5GQ7JLl2d+zZ1/K0jufd+774/7mnnvvzG/mzr3f7/ec79QdMKT7hXkI
4V79FDqO0vENlbpZCJ+rLFJ9jMrPmdvalyGcp1IlhnCDcFT9QpWPNOYI4WZq
/1z1DqpX1bG1cK4yXLi18GiVTSoHCm9WaaW+bcIXq95Cx6bC/9axrfCuOv5L
N3W+rv+06n/o/v4UvkD4PeFGGrNReLDwg8LfqP8hHS9TqaT6Dyp76XqdVPqr
bZXG762x56j8KNyH/1BfO5UTcj/PeB2/Vumq+k467qex56r8pvpZmcdurzI5
8znf6f9nlJ435utNHQ9W/1eq11MZIfy8yg70qRyjvr+Eh6h+hI6Zzp2l0kjt
W9S2v673nspa1Wvo/n9WfZD6X9HY6mr7Vvhs4ReFdxHeKnyN8KE6/0fhJjp+
or6jVa+s42HC/9LxcOFCx40qh6jtG/5LpbHq76rtUNW3qRyo672v8pzqNfX/
vUrP/xUaU0v4V/XNLP0eeX9H6/ytqv9D9cOZL/W/q7JGeE+NP1z9H6q9mXAF
Ha9UWa9SRfhdleGqP6MSVd+gMlL1V1VqqP4x603n76gyQ/XurAvVt1MZJ3ws
/6f6ozr+qP96VW1thEuV0ap3yD2vb+d+Vua3g/DOKrNU75l73l7Xce/M81dP
9/6OymrVq+uaDdX/Vu53+RtzJvyk8G/qe53xwo8L/xL8zl5TvQFrOPM1n9a1
pmi+7lL7tcK7R98D/71Y+Bn1t1V/b+FndY3XhHdXeZ26youqT1X/bjrnRo2/
V3iS8AqNnyr8XO574l4qZR7HnDFXjF+i41UqFdP+fEHHA9S/KfP6eST6ejvo
uCL4ujNUuqXrL9ZxHOs07bfn9P8dNL6P8LrgvccefFJ9l+ZeK+zZdZnXzPW5
2+n/WuOPVN8RKrXZmypvqj5N5+zDPGrMOuGOwqezb9T/itqr8T5UX6PyvOrH
qr+v+l8QfkzHYayhzO/gH+rrXHq/s++fTWuEtVFB5Ybca461hr2Ym/s+ud+t
wqtVr6/x64WzzHtxeun3zPvl2vzHHtHv78vce4691oVrJhuG7TpJuI7Of1vl
Kd69rt+z9JwxJ9WEq/OuVR7FFgmfoL652ATsTbqX+3X8IvieamvsWypP8K7V
9k/1zVH5gDo2WuP3jrZ1D6jczbpTeVv9y4X30bmbVJ5WfQ+11dLYY1XO0JgV
arsHW5x8wecqL2GrsSHqq6ayNLeNxDa2Et5XfQ/ntrXsmZdVP4g9n9lenZX8
RUe1PYdNVn9z1fdM9nfP6L7ThJdl3iczVXql/XK9zt2x8Lu+Rm01C68Z1kpV
tW3O7XPwNT3VNi+3zcXW4i9qaOwbKo8JVxG+WX0TmHuVYzOvNf6Da7PmblIZ
i6/J7KPW6tx26j9VbWt1/tGFbT62vo1wa9UvLz1PzM9EHX9S6Yv9xP6q/zNs
KrY5eC7woTwvz92BPh1bqu8olUHCI0rPM/PbWPhTfAL2Vf3Hqf67yvf4H+En
VW+t8Z00/h7hq7l39qH6D9DxLvU3V38r1Zerv5HwJ4Vt72HCq9iPpX3zHcJN
hP+j8gG+XLiZ6l+ofIS/Ej5TY4eoTMG+CHdW3xaVH9TfVfgi1XcsbevPFr5f
+CjhdtwLa1T4SOE2wnfi37BLev69dDxT13hQ/S2ZI+GV6n9Y+OjStnyV8IXC
lYVL4YHCFwvvJLyd8CDhR4WPYb0J3x3sK/GZ2GPs8rmqV1Jbrv7+6j9feIfS
vvEs7Ifw9sJReIDw48KtSvuafwrPEj5AuKHwdfhDHY/Udevkjg8Wqb+h+psJ
L1L/MuEmwkcJ3yx8nXAFlbmqX887V/0b1gixgXAr5lLlS2IN4TtUb6bzj9H5
twsvFW5cOnZYLNxC+GvWCL5Y+JTSz8yzthKepHG/8y7Y+zreqrGHl461lqr/
Pvyp2m5R/VaVlqpvZg1ofGvhY1hrrAHhtsKLVW+k85uzV4TbF44JiAU6CbdT
/ReVb/HPwls0roX+Y7/cMcI89R1cOlZYgH8V/hify1oXbsDaU9kofKjwAtUP
0fgmGr9QeIDqF6lMzX3Ph6j/Q2ysxjdkTlU/SP2N1T9PuHfp+ImYp6Nwc+a2
cGxxpPANqjdQ/2EaPz841iPmO0S4pc5po/6fmGNiB/UPVH079Qf1n6HDlcJV
hWsIjxTuIfw3c6LxPbBZqu9PfIY9E54qvI/wgfhZ1oOOtaNt73vCt+feW03T
Hu6X4k/uZXaw7foe+5jZhjVN81FR/ePVNkPXry98sPpmBfvyquqbn9mnH5r2
b1TblWqbjT1R/WrWispkjQnCl2Ze43eoTFNpm3v8NI3fV+cfhJ3W0CnCdUvb
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
HY9gbOG12D7z2uxTWLtmjaJ3nK222plj0Amqn6e2NpnXNHrOpDT/5JCmqH5J
Ye7D/Y2Kjs86ZY4J2As/qHRL58OHZgtfGJwDGqP5Oql0nbwQ+hAxKbEo/0k8
8mP0XqINfnet8JDga85Q/dvoZx8crBfMEr4AW59Zj5qQ9mPrzGvnp2juwjMQ
b6wurM3cFqynkG9Bq4Afw/3RAFom3nkbtrGwtjQnONYdUnitE/PC35hj5pac
DPrZlPQ+O2aOtQcXnjti7vHqO6fwvfFMzO0Fwu3S/aHHEVNja2hjbw0tfC32
GHP5ffSzMqfoQ3AGuAIcBL6wWaVzZn8G/2TPs9fJWaGnwIHgPocJ9+PdqTRQ
/ajMesxV6X0dw/tiL6qtZZpv+DQ+k2vTBl8dl+afHBl8lXMY2yKzvjo0mrvy
H1fgzwr3HZ+Zi/UsfG9wMnxx/8LXwifD1y+K1nIPyqyPXhzN5Q/JfO3jC9f5
j98K83vGfpf53s4q/CzcI892dmEtmGeEL89I98ucsZa+i+byjEe7wt6gNaGp
XMraLpy7Qa9CHxgWrX02zqxPXBLN3ckBUj9BbQ0zt6FPcA3OpY1zuxd+F1zj
MtZ+4WudGaw9YR/xxWhQaDVoNviKLFr7wr+gHaGBPRMdf85J/o+5g6+2CJ5D
tEHiEbgIGiF6JfuB2BuO81R0/E2u4GnhtdHx8dzMPhT9/pnkj2l7ITpeXqD6
Y8HaOvELfBSNnfzS88KPBo95LjpeJzdMjLguOr6elzmGJB/GGPpoQ5tmf7B+
0ajhH9PVv3tuG4p2yPtlbtEQ4YujmYPcNglt5Nvkv9BIiF3eU2kQHMMMiOb8
cH3a0IpY76wlNKOKpdcL74uc3c6l7R+2kxwgWjn78+xgzZxYjRiQ2K9esDbO
fuddopGjhWNfeddo4nBB7DHaCJyQfB1zwlzAYZ6Mjs9n41sz55qIn8l9kXNC
T3g1OpdMDnB9ND8hV/lEcK6M+JfcGDkzcsnEx+RiySmTiyMnhzbyRO5cNfEx
uXJy1nyvwPcLbYP1MPgG75x3vTBzrhI+QO6MnCS5SuJxct3kAMmHoce+G8y5
XozmX5wLXye/AKeHy8+kLZpvzEz3D7e4p3DulDkh//Fo+v9pmbWAxwrnn9EE
5iY+tmPwnJCPva/wWNYg+RA0A/57euZ86gMqFYLniPwPe4C1z5yjLTxUOF+O
xoDeT8xIrEjOnHt5oPC1uCfyKzwD9845aJ2/pngAzZN8IN+GkDtTc9izdDw1
PjjngXaJvUDbRMPkWwT0TmzJO7lzQ9g7clXkiOAicCa4EvE733Ngn9A++cYE
rZF4D+0RzRF+g/67Jre+gLaO/UHbRGMn14CeRe6BnAPaJ/aId48GilaIPkUu
As1wQNpP2BZsDN9eoGfiCz/I/W0D+Qy0ohtza6vcI/eGxkqemvkgN0oOEr2e
fBtaPhx3dTT/Q3vBPi1L/hhtAY7xUmGODbeG0w4snU8mVw3nX19YA4D7w9l7
pv3C3me//578X5fgHOCGwnwZbRTOjv7Mi8L33xKs1xPTE8sTo5LLQD9DGyGn
Qa4Jva19cM4JfoZ+vy63vlaltH8hViNnS64Df048Ss4DrRf/2CdY80Xb/iH9
Hxo3WjXx0dhgzZp8Pd9L8G3I9ti40vHOuOAcIN/vkE8mN10xWIslHkRrRpNF
KyZeILZEM0bbhe8Qi6Pxou0Tv5JbQOMn/42eTP54U3AuFv6ItkhOllwXeleb
4JwX/JJ8wtrcY8h9oqeiH5ID/XdhPoreSE7888L6ILlRct7kTuG3zB05VHJT
8HPWLjkqcnXop+T6yNmRW0P/bRecYyNXiX7WOjhnSW4QfQ1tlhwh+X708Ff5
P5UfC+unHYK/OeJbJPLTaJELc39v0Uv9b2XWcD8qzMfR5vgGhG8J0N/IpfNN
AbmM/qX5NDkN9kef0noa39Kwv08trRfz7Qz75YtobXl08vdnlI5PydGgHxWF
1yM5GHIrf0XvF3IsfNvyYrJvfLuCNrk0rRc0+UuSvfvapuF/z/dxtH3nmyv8
wcml11O99O54h9gWckLYDmxI3eAcEvEs+fVPc/s4vj3pUdq+7ZPWPnsAbYIc
FnwB/ZpcAZouvndAik8W5NY2B6f1xDcA5C7RM9A3yWHCv9AL0COKaH0Gfg/f
rRSdG0AzWh387UOL0v4D7kvO7eXo71/4Foh3Tu787sJcmxw6uXX8BdoEOXZy
s+gF5J7J0aItw6fJnaIx8z0c34e8H2xvyOXBX9FKyOnVY5IL5w7JoZGLx1+g
PZCT51sC9Aq4O98U8O54h9Wi/SX+B3+FPlI5+tuiR1I8xbdF+D/8J/x0p+QL
8Ans90dy58rRN5YG58xZj+TY8F0VonPh6C3LgnPicB/0lZuDORC5GPgzuXFy
MsQ2xDjkA+bnjt/hE+i/7ye9cbfCc0uuaUO0/rkkxZPk/4lpiGXw2ejFcHC4
N/kb1hJrCm60NPEB+Abx/se5+RR8Ef7yGTY9Wt9dlDmGgJ/BnwZif3J/C4Se
v0vwN0HsF3KScP/bcuei4M/kUslJwf3Rr7kX+Dm5Vfg33JAcK/5hQ4oP0FTx
T+QT0KbRKMkNTk3nkyPk+zO+uaLvHo3pWvp7NOoDc/uvV1VWZp4jtFPW45QU
H+O/1qd4gmdkLPot30pxDt+7PUtckjnm59sc8hl8+8Q3OuQW0LDgk+T0uDfu
8Yvc+SP2K9//kAu4L/f3OnxPiv1hj6JXkF9jLPyed8U7w//empvPw8/Rw27J
nauCg8IPyYmSW4DTw+XJITKWc+D+vOP/AltSOCY=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwV0ltMj3Ecx/Gng2TkkEhrM6mLyJBmJUO1WctmlJylA8vMaDMuqLHauOHe
qU0bWbS0xTRMi605x6WcKse0mcnIjeX1XLz3/Xzev+/zPP//8/+nVNWUHIgM
gmAJxqE7OgjyhSLyNKZGBUEW9xnvIoJgnt7DV+ux9iLkenzEIW4KFys3YAhj
XCneyotcO+oepXbWymmed4a/haV2vqLf+XxnD7kce23cBD0vhFvBdXKT9Hys
5jr0XL5APoWJfKbexEfLK5HD9+mpuC2ncvc9q15PsjuHW8b9MFfpd/nJegEK
uTXmBv6GfBMpPvtxO4nc7PCzOv8evjMujcuQl3O/zTi9hv8iZ3ExZgXXKre6
z1U9Sq7iOswO7hoXK9dgCI36S+Q622yvmlssP+aeYBt3mKvgLupvQu+ZRXy5
XOhsBrbo+81se738CxTrG/l7chfSncXola4f1DOdj3lXm7hSOcP5Wb4bB/Wt
fJ/8GmXOjnDbufd6P3ZzZXojXyv/5EbC34nb5xmf5CXOos2jejyfJGdzw+Yj
M45vk6fLd8LvaP5DM/cLx7idrrvENch/uFG06OXh/9SMRIuzPPcawbDvtIB7
bq85fD53Rf6LE/bauUrXxpjj0c59s7OeO2+nDoPukayX4LJ+EnPxwd467pxc
G74bewu5AbyS093vAd9rJnDX5Vnhf9IzdrmuR+6Up5nx2MHVmXu4JrsDSOCK
w+8cfl4kh+9af2avy95MMxF7MYgLzp+G/0Fn/wFdK3mC
              
              "]]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0jlPVFEYBuAziKwyWFGxhFiRAKGH+QODoaBA0YTCMAmMyBpgaGhMhIKQ
sBe2SkEJg5HWmcJaFkFFllDRUEIBgeeG4s37nHu+e8+9k6l/N9Q5GAshfJTB
ghAip/WFfi6NhSHc6zqJ23z9JIRmruEUJ6IZfql7zLbyW85wktPcrefNTnEf
f+ZZnuQ1vWH2E69znld4m7/ovNk8b/Gw99rl93rTeo/3ZcH6QP+WRT7UR/JH
lqz/6n9S71nb7jvmb/q/XrZ/ok/lu2sj1mf8QafkF3c8DaGXc/xK//CcLCc5
y185wau6wWwLz3A1v+AMV+k5s/1cytP8hm+d2a6vffcVt/Eln3NT9H26y2wt
38mQeyv1gP5pL84V0W9p/UzfSLnk7E24VhadJ+NcooulSMasvV5wVBhlRwQV
dmKP/4MHR8tBqg==
            "]]}, {}, {}, {
           Line3DBox[{626, 689, 690, 802, 1419, 691, 692, 805, 705, 1394, 706,
             808, 713, 714, 1381, 811, 721, 722, 814, 1423, 729, 730, 817, 
            737, 1401, 738, 820, 745, 1406, 746, 823, 753, 754, 1383, 826, 
            761, 762, 829, 1427, 769, 770, 832, 777, 1413, 778, 835, 785, 786,
             1385, 838, 793, 794, 657}], 
           Line3DBox[{627, 693, 661, 628, 1387, 694, 663, 633, 707, 1395, 665,
             635, 715, 667, 1421, 637, 723, 669, 639, 1389, 731, 671, 641, 
            739, 1402, 673, 643, 747, 1407, 675, 645, 755, 677, 1425, 647, 
            763, 679, 649, 1391, 771, 681, 651, 779, 1414, 683, 653, 787, 685,
             1429, 655, 795, 687, 658}], 
           Line3DBox[{629, 695, 696, 803, 697, 1393, 698, 806, 708, 1396, 709,
             809, 716, 1399, 717, 812, 724, 725, 815, 732, 1400, 733, 818, 
            740, 1403, 741, 821, 748, 1408, 749, 824, 756, 1411, 757, 827, 
            764, 765, 830, 772, 1412, 773, 833, 780, 1415, 781, 836, 788, 
            1418, 789, 839, 796, 797, 659}], 
           Line3DBox[{630, 699, 700, 804, 1420, 701, 702, 807, 710, 1397, 711,
             810, 718, 719, 1382, 813, 726, 727, 816, 1424, 734, 735, 819, 
            742, 1404, 743, 822, 750, 1409, 751, 825, 758, 759, 1384, 828, 
            766, 767, 831, 1428, 774, 775, 834, 782, 1416, 783, 837, 790, 791,
             1386, 840, 798, 799, 801}], 
           Line3DBox[{631, 703, 662, 632, 1388, 704, 664, 634, 712, 1398, 666,
             636, 720, 668, 1422, 638, 728, 670, 640, 1390, 736, 672, 642, 
            744, 1405, 674, 644, 752, 1410, 676, 646, 760, 678, 1426, 648, 
            768, 680, 650, 1392, 776, 682, 652, 784, 1417, 684, 654, 792, 686,
             1430, 656, 800, 688, 660}]}, {
           Line3DBox[{854, 1081, 1080, 853, 976, 852, 1366, 1388, 1245, 1066, 
            851, 1065, 1244, 1064, 850, 1063, 1243, 1420, 1365, 849, 1062, 
            1242, 1061, 848, 1060, 1241, 1059, 1393, 847, 1058, 1240, 1057, 
            846, 1056, 1239, 1055, 845, 1364, 1387, 1238, 1054, 844, 1053, 
            1237, 1052, 843, 1051, 1236, 1419, 1363, 842, 1050, 1235, 1049, 
            841, 1048, 1234, 1047, 1068}], 
           Line3DBox[{856, 1067, 1246, 977, 855, 1069, 1247, 978, 857, 1394, 
            1070, 1248, 979, 858, 1071, 1249, 980, 859, 1072, 1250, 1359, 
            1395, 860, 1073, 1251, 981, 861, 1074, 1252, 982, 862, 1396, 1075,
             1253, 983, 863, 1076, 1254, 984, 864, 1397, 1077, 1255, 985, 
            1090, 1078, 1256, 986, 865, 1079, 1257, 1360, 1398, 866, 987, 867,
             1093, 988, 1258}], 
           Line3DBox[{869, 1082, 1259, 989, 868, 1083, 1260, 990, 870, 1367, 
            1381, 1261, 991, 871, 1084, 1262, 992, 872, 1085, 1263, 1421, 993,
             873, 1086, 1264, 994, 874, 1087, 1265, 995, 875, 1399, 1088, 
            1266, 996, 876, 1089, 1267, 997, 877, 1368, 1382, 1268, 998, 1094,
             1091, 1269, 999, 878, 1092, 1270, 1422, 1000, 879, 1001, 880, 
            1095, 1002, 1271}], 
           Line3DBox[{894, 1142, 1141, 893, 1003, 892, 1372, 1390, 1283, 1115,
             891, 1114, 1282, 1113, 890, 1112, 1281, 1424, 1371, 889, 1111, 
            1280, 1110, 888, 1109, 1279, 1108, 1400, 887, 1107, 1278, 1106, 
            886, 1105, 1277, 1104, 885, 1370, 1389, 1276, 1103, 884, 1102, 
            1275, 1101, 883, 1100, 1274, 1423, 1369, 882, 1099, 1273, 1098, 
            881, 1097, 1272, 1096, 1118}], 
           Line3DBox[{908, 1157, 1156, 907, 1004, 906, 1405, 1140, 1295, 1139,
             905, 1138, 1294, 1137, 904, 1136, 1293, 1135, 1404, 903, 1134, 
            1292, 1133, 902, 1132, 1291, 1131, 1403, 901, 1130, 1290, 1129, 
            900, 1128, 1289, 1127, 899, 1402, 1126, 1288, 1125, 898, 1124, 
            1287, 1123, 897, 1122, 1286, 1121, 1401, 896, 1120, 1285, 1119, 
            895, 1117, 1284, 1116, 1144}], 
           Line3DBox[{910, 1143, 1296, 1005, 909, 1145, 1297, 1006, 911, 1406,
             1146, 1298, 1007, 912, 1147, 1299, 1008, 913, 1148, 1300, 1361, 
            1407, 914, 1149, 1301, 1009, 915, 1150, 1302, 1010, 916, 1408, 
            1151, 1303, 1011, 917, 1152, 1304, 1012, 918, 1409, 1153, 1305, 
            1013, 1166, 1154, 1306, 1014, 919, 1155, 1307, 1362, 1410, 920, 
            1015, 921, 1169, 1016, 1308}], 
           Line3DBox[{923, 1158, 1309, 1017, 922, 1159, 1310, 1018, 924, 1373,
             1383, 1311, 1019, 925, 1160, 1312, 1020, 926, 1161, 1313, 1425, 
            1021, 927, 1162, 1314, 1022, 928, 1163, 1315, 1023, 929, 1411, 
            1164, 1316, 1024, 930, 1165, 1317, 1025, 931, 1374, 1384, 1318, 
            1026, 1170, 1167, 1319, 1027, 932, 1168, 1320, 1426, 1028, 933, 
            1029, 934, 1171, 1030, 1321}], 
           Line3DBox[{948, 1218, 1217, 947, 1031, 946, 1378, 1392, 1333, 1191,
             945, 1190, 1332, 1189, 944, 1188, 1331, 1428, 1377, 943, 1187, 
            1330, 1186, 942, 1185, 1329, 1184, 1412, 941, 1183, 1328, 1182, 
            940, 1181, 1327, 1180, 939, 1376, 1391, 1326, 1179, 938, 1178, 
            1325, 1177, 937, 1176, 1324, 1427, 1375, 936, 1175, 1323, 1174, 
            935, 1173, 1322, 1172, 1194}], 
           Line3DBox[{962, 1231, 1230, 961, 1032, 960, 1417, 1216, 1345, 1215,
             959, 1214, 1344, 1213, 958, 1212, 1343, 1211, 1416, 957, 1210, 
            1342, 1209, 956, 1208, 1341, 1207, 1415, 955, 1206, 1340, 1205, 
            954, 1204, 1339, 1203, 953, 1414, 1202, 1338, 1201, 952, 1200, 
            1337, 1199, 951, 1198, 1336, 1197, 1413, 950, 1196, 1335, 1195, 
            949, 1193, 1334, 1192, 1220}], 
           Line3DBox[{964, 1219, 1346, 1033, 963, 1221, 1347, 1034, 965, 1379,
             1385, 1348, 1035, 966, 1222, 1349, 1036, 967, 1223, 1350, 1429, 
            1037, 968, 1224, 1351, 1038, 969, 1225, 1352, 1039, 970, 1418, 
            1226, 1353, 1040, 971, 1227, 1354, 1041, 972, 1380, 1386, 1355, 
            1042, 1232, 1228, 1356, 1043, 973, 1229, 1357, 1430, 1044, 974, 
            1045, 975, 1233, 1046, 1358}]}}},
        VertexNormals->CompressedData["
1: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
S1n2W4nkvPtmjYMqkecskx353Yh8x5ORgPW8VPjMgASR56o8qthziHzX6bH4
Ocn593fZqcNEnpNhV+8i890B6l6cn4uOmh3zJfLc6vY1xmS++8jx5/3G228u
+leJPKdQ8GOQzHetgncw53UbglXIPKfqyOJO5juVcSvMWXR6t2QZkedY8gyU
y3C++8P5Qv/E6y4HGsD4nU1XfhVBh45Fbbc5DYWHSXLrnRqCBzqrv/tqtUNB
0CU8/rPD6vPaD1SgOw3KzPcs+rdP/6afOM6spkN3qnHlE9ZiWHjjW8vxEQqS
OZsYlnGDAkl3WcRlyjpgV8/FVnI8W4PNSFhyGFo6WL7k8ZTAo+QsET+RIbR8
JRfT5C0Vjvt71ggf6YIhsyV4fN2baZcNj0aAZ2yzWObGUng78cznPecAEmm+
YHFinAaeqlPSmxq6IcDQBI+3hHmYZf1gwgCvT/aH7WXwPrHfNHVHD+KWnTpz
bD0DLjPV+ugavdB6eSUeD/km4JK6bwyQ6PVcV6Fy2HzvQYWxbxuSfDW8soyo
81DDRGB4Yh9EmTwtI8dfJ2pylx0dB8dfgXs3jpVDNrf8xcTNDaje7tiyhLUj
8JO7gvLLrB825WjZkuOdtlyqxYsnIG7pAUv76++hme94WKN+KbqrNaS6pmgE
8tm06j/V9kM3peguOa4qcq/dwnICinMkxfjK34Pp6VNSNh7xiEvFhf6Shwn7
zNfN2806ALvUagXJ8Zr32a7ab8dBT9Y1x1/xPaRcPHYuxroavju7qMloMWFT
jV6GYlIpBPKc03+Q1QfLDi5gnrxCrL/L2dfkn/ZD49AHM3I+Z/e1V0rVTDgX
KjbPdjai0KYu1JCcr/ig5fmLW3TQt9NuWBXWA0qb3p8jx9fqRiXKbCDGLZd4
bPF4Bwq00U6HNCr4PVDWnDc6BBt6xe1WL+oAAeveDnK8ZMWKI+DaD1/98t4b
TmVD3bQd2+L9TLAI1VHjDuiFKesnDYvWZ/3Lwzbt90XUhbvgzeyRlCnjQXh+
3gXrUNLkfaFn5SDQ7m5LWvCo7d9+5GHS773GJd3wrcifepPYR+sv8cV6e6H5
c9UZx1441OES0/6UAurMHVhXXez7l3/i6we39rH1KlVU2KxahfXTmXLrht1w
PwgbrObbMUKDPaFUY1InthoO89iTB4D73PSP5o90aH7Q857UQ//NlRefaw7C
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
NzzHjnbXC6FZXLBxfCDw++ITc2YmsF6g6FPe66fLeRDetcqT8PXkVfvReCIF
XbsSyHe8hkFszcl9hK8PjM56ZMBJxe8RzYs23h+BrjN/5xH+Xa2IOeyTmYaQ
mep9+9Qo6LMj8gmfHmS0ljmqno4/avYHHqGOgvIs5lXCj/s6n5blHUzD9RyN
lA0feOCgMf2Z8NevM+7u19F6gUYZSTLuZ/nnWbn6KeGj7cWL1bVXfoYSSjjX
IHsATs0+KfA1w59vLVsbUw9P/tQXie4bANWg94I5tprqclXt5FS8zhUnaX4a
hurafQ+JfR7lmld6gdfiUebQVotyfj080vxA4CtfXPL7dHU7HWOKdjTOYLRj
/ohV3+3zTFi0nHf6Ej+evR9nrCpa04mt+otUE3/Q4ae50+rXpUwcNKlomOPX
hXW0uCr1jTS4aRihEyvJRqtLKx/p1HXj+p2bVx1ZTAHPr+vmnjDj4LrqyWOT
sr2oa35IyGV3PySt38UJ8eKicdy95/rGfUgqWNAmmtAFTgYz3+adGEItYVrV
PCDhvvLres66LZCyMWTisywPazqZl2PGSRgk9NCT610BpLSK36v5PmFiMK8h
aU8/dkTvOOwVmwolr6hL66qGcO9XVs+GFyTMg/2BpWH1KDccsuBcJhv/LAu8
oHS2B+0ODiZtah3ETzYD6vQBOs6kyrRtCenAbT2vvvkVMbBky/KlWld68bnG
r7F3fF+hI+HtJefBhL89kjTRBSRcT1ukIJRDw4vt0n7FI3R4mt6rcr2wH6l2
rLX7yHQMnf7iM1+FBlFpUbLRboMYZa8Q0SHFxJADfivN5lGg/Wown+/JaDVf
LaRDg4VyL1pz9XT6IeLHDf0yYwqekws7ZMn3xT2S6veY4V1w34+3RoRKQXo8
p4G3lIODwey4u2otcOEIQ+r1AX5d3/qZd62Ag4Wh3uQ1ThWgen1+yKc7VAx0
OPZAU5KL33kdYvmhqRDeIPbrjSIVzcc/51v5clA4X7jO3Lceo8WHV+r8R8bh
dT2ke0lMfL9A5ZhPySAWKHr8zd7Vh3MaRtaQVtOw5dRGs+psBuZ8klWqnNGK
C/WLxbmmPZhtsURwf3fFZ3V8xNc8/H6RvK7rPhOXGd2seX+OCZywLe7aNwrw
Xa/u9oMjLJQqKzMtnKDDG7cNzudWFeGYvXeYsy0H310fKTXRpMEmD0O/szXF
+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
uiIavg==
         "]], GraphicsComplex3DBox[CompressedData["
1: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
25Q6bfL5Z9SU55//A+1xDig=
        "], {{
          {RGBColor[1, 0, 0], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxNmgn4llMTxp9zLJGQqLTQLkmbhE+WRIn0VbZISFlKkWxJiooWKpQlhGQJ
oSyJSCVRZIlskSJJRfbts/Tdv+Z+r1xX05n3POc5Z86cOTP3zPOv1aPf8Rfm
oigmbFUU+lcsTkXRUfSF+MqiMqLtRFeqb6CorPj/phhbQbSbaGvRNqIf1N8o
x7OfxDfO0f9GirG1RG+KXyI6ULS/ftcV1RPtoN9f0opeF3+8aI34g9R+rXat
aLD4q0Q7ia8k2tby/aK+JjnkbOH59hLtK6ou2kNUR7Sr5R2u8SeL1ntcJe+V
9yr69yI9f030H9H/RAfkmGM/UW3P96P6m+XY28/i98sxfxNRDVFNUVO37P0P
jWmRg/8THeRYv6voWFF70fGi1qIjRZ1ErURHiP5Glhzz7Sz+W3QjOkzU2GuO
Uv+pom/E76R2g9oGfr+ZZb9e/aNZW/wmtS1z6Kyq2pNFd4mvovYk0R3i/9GY
g3O8i0zNizi3o9zybktRQ+v7V41vnkOfh7ivkeg69V8r2tv7bOnnWWMPyyFj
B9Gh3lNS36Giw7E398GfYDlYfyue5+BPFR1jPY7VOt1EG/37YK93o/rGidqK
L6/2O7VHi8aLP1P0vddo4nO7Rn1Xi6qI31HtOvQk6iY6zvL28Jkh11mizv5d
RnIdmaO/rNq2ojPF76J5flB7MvarvtY5zplnHX3mt2jMBNFJ4u9Re7foEvG9
RKd4r73dYjvba442otPF366xPUQ/ih8sukB0Ibavvl/UXoptaOyxOfqvEV0k
6i+apDHniH4Wv0LP3xZdLv4ttWtFF4v/XO2qHPNcrPZx0U/iK6RozxE9Krqz
CFu6Q/0TRWdjtxrbPsdaO6o9RtRX/CBRnyL4K0Xn+/cOen50Dh1fLepnWT9W
30Y/u09z9xL9iq5E4zhn0RjRVdYBfUM8x4gi9jRANFo00GuOdN8VoluxV4+9
0e+hp4e0Th/R70XouoNtcxvsNwe/q9qOOcbfr7FTRMPE76b2N7XDRdd7Tfb9
sPqnim7GNvRehxz9t3l95Kqovs453quMTeWQC/3e4L3ejd17r5X0/Pgc/RU1
9x/YuGiiaJT3PU39F+Lbirjnoy3XA9ifdfCgW2SZim15jofd8l4F9p1Dz795
n6zFHeIule4yvquV+BdFj4keFz2LTj33M16bNatpbJcc5/m497aZ19yPiSaL
f4E9eK7nRY/Y7paK5oteFu2pObrm6J+t9wYkhFE8UN+pOfYxy+vDV9KzP9Xe
J5ohvr/oL/FPc5aWb5HoOa/5lJ4/KZou/psUc73qtZ/yezPVf6noH/G1teYZ
Od7dXX2b1M5FBvHPil4SX0PPT8ux78rq+xtZRK+zB+/7Dbfosg5+JQf/P8cg
YuoOjp/4K+L27mq3L8I/Eyv5PUf8i6Ik+li/F3udF1Ls433Rh6LXvO96eu+s
HM/qq+2ZQ5bWGr+6CMwwl32I3hR/qNo2ojKiqmAG0VvqX6D2ZdHWooWiV1Kc
G2Orefxe3Psc6y6wLrGR5ZaRdcEpYJFdxJ+rsZNyYAiwQ2fmKiIug0OI62AF
4lIJO9DS/6NxC/gAfAFm2LGI38R54j0YZzf3DUmBRcAk4BhiffkicA1Yp2YR
sR5swLuHpNjDu6KDU9j9QlEtfHYOu0EO8Adn1wvbzxFviD/1izivHY1ZiOnI
SGwl7oJlThLtUwReoR/MgxzEMe4isfeAIub6x3imudcjjjf3+i38e5PxCe/8
bdwChqjh+RpbL+AC+s/HF+fAHGCQU8Arlo/YSwwm1oMlWlv2Q/yMufATxH7u
86Qi7jwyEetbF1swB7+J++CWNkVgGVrk7Ku+B3Jgo50d/4nvYIHTRO0sB5gA
rLCTsdJB3gMYpJVlau9xyIVfx9eXN0YgdhOridlnFIEpTixCjm2NZzp7rk6l
sRpzhqhLEfGaeHGG5yWWdLM97uVz+NM4qr5lJdafYpm6+vdxfu806wjc0dl6
7ODn6OsEPwPoT82Bey7CL+bAImCNnkXsYRdjh3OKLTgD3AGmOEt0bhFxGWzT
0zLx/DyvDQbqXkRMBL+x97LGOd0tRw+PW6a+b4xdPuDcjJPKGNchT0P7mU+K
iLvEF2IocauiYw3x/zzRtUVgBOI18b6CcQ78GnyD6LIi4izYA3wA1iAWgwN2
NY5gfjDX0CIwDzGWWAumuVTvzciBpao4LtO/q7EN74BRrrEc4JhBXgMsRpxk
XTAI8R2cAUa4qYh3L9ccT+eIpZWNJXhW0djgBs9FrB5tfaCX8f5NTC7FeVpi
NrhmpNcb6HE8B8ucD9a0HMT6WzzuNv+uaizBnazluEn8I27jx2YWERfxzfho
8AexmvsLvrgADFRETAe33Cv+CrXP5sAlYB/6biq2YI4H/D4x8DHvYarXLOEP
fhPHyVMe8dkQ5+GJ++Qy4INJnmOa7QW7Ib5Xdkye6z2zJjG+hrHHE15jlvfJ
vMRt9l7JuGCG32HfxHvwwkVggiJwCnOwt9rGIcTvq4jVOeL6lWCBHJgD+Yjp
sy3vi/5dx3hgThFYg5Z5x1pHk2xPY2ynQ3wGY21/N/o3chNLieX1HHfg9zIm
IfaDBYj9y4otOINYC7ZZaD0Qv17xuc/2c94FcxHD3yki3sGDg8A1S4qQ+zDx
2XijvnELzxoYV3xQBEa7XPS2ZQV/0N9Jfa1SYIynPPd8rw12+ciyLPfvazTf
yzkwB3gE/8Fa+xhXML6qMciKIvDIfNFn4o8kPhrT/Kb2nBx1j+op8AWYaqFx
yqoi8MtK7533trecDX038SfgvcL456sisBm1ji7gB8f1miniJ/GovfgjjDH2
TIEFiPsnpnhGTaSG4xf9p4uv45hXyy3zkAuAz7EHcOglonm22QXWY9cU7zBX
7RTxk7i5h+Viv0M0x9wcmLWc5aIO0118PcfFnpyr40c9t8RK+sgpiSknpJiX
/VPnQRflsMMUsYgxn2idL3Lkk6vVfiVqAL5J4XfRZwP7avLQ3il0ze99U/hO
/GEdy8Ve6qaIe8iD38EX4Af6qm3kc7oB3yZqrN9NU9xL7ng/8U3sO5r47vNu
Fdsy94VzA0+gc2ykbIrzbeT3kGe/FPcen9Pc9gB/sdpmnvcKtS387ChRS6/R
zP5qhucH31ct2ZHXapuiXlbOdr2tbZu7MFT0qfjD1bedbXeszx2c9o3tBvm3
9fvchRbmsdttUtwn5sQewaPY3mLbvJbYLHO2jyjjtbgjr6bIB+jbP4UdMedl
KXTB3tZ7zqrFlhoW82NH4BLO7gfz2Ak2VcE8eq1sfZbwH+fO+Zc3/5155tno
MeyXc8ano1tsCByAXf3lfs76F/cPt31SB2HMJt9t9nKd+h7KcYeGq52c4+6u
911lL+iyqsdvZR59tktxNtV8/2paNvRc3To5OoUPrWL72N37HaZ17s4xjhog
a5ELXKu++3PMNdz3jpzoH+tqhu1nD8+PDe9pOcHn5BLU7kp+H5+PPcITD6ib
ccfaWZ91rOcRxOQcd+52+4cuPru61j9nUftfZ1TP/SP13mM5/AH1KHwHmHMD
uFU03dhrb5/RT/Yd2AC1IPwCGG+0xj2Vw2dgP/U9Bt+wj88Rm2lqPVyvsTNz
+A/qPPgT8CS+4A/f92n2FRPsQxg73vbT2HZS8hHw1BDgp9iWmnmtmb7P4ISx
WvOlHL5hk30EZzpGfS/kkA+bbGiZf7dPGe9zbO7x4zR2fo67RdwiDhGDjknB
YzLET/LV8ra9/W2Hx9pv7FxEbs6dJ/4W5hlD3se7NW0LLX3H55jHHohX2Ay5
J7EFHEB8Kef5iRn4APrJhWf77s8rIvc/1P3Ie6RlruZ7UcZ2j/3jDzu4//Mi
8vEjvC61iFbe43Ee/14R3x3op1awyOP3tD0f5b1k88n3sI3lWe15y3tPyLnU
+mxtPbPO0V6Lvba1PpGxneWcl+O8OeNPHdfOTZG/9PY5f652VQpcfiPnn6OW
sZva43Lg9JX6/VmKnKe338dWH9bzC8gXUozp5buwIkVdl3u0GnlT4HJkWOOc
iBwZDLHRd5G4zp3dXc875cDIm+dI4XeRs4/X7Wt+gm2zr/k+5rHZBzVHH/KX
FLbc2+9WJ8/LgaNvUXtUjjzzVrXtRGeLv90yoJObsPEc9Y4JalvlyKtvVntQ
jrrDeLWH5Mj5J3p+9nubdYjewJMdbQ+/p9AzNZWl4t9JofNp6usnulX81p6T
XPzDFPoibk5RX2/RCO6M5yQOPqn/LiHf0e8n1PYX3Wkb7OR1O5rHfj5OUSPA
l1LHAnMS5xfkuNv7+0zO9LnQjvd4MBI1ec5lfY48F719lqOGT24ONuthG3hP
fYty1NtXqn0nRw7/iccw/2fuJ3d8V+2rOXJZvklQLyA355w+9Zz7smYOHLxB
fetT4GnuCfgYbNzT7/ItgDgI5gZj0OJ33rY8S3PU4Td4DP0tPGZry8h+8Ovg
Sep9xLWP9N6bOb4vfKh2SY5cfE4Of9rUZzHS8QWdf5TCfjjrEY5Zs3NgQXz6
MzliCTFjVo44gd/fzrZ3is96VI6YhJ1f65hbx3eqnc+L8yPWlbOdcy7vq309
x7eYFdbn2V73MtEDKb7FfO/7wB0HZxA7Oa/lKc7h3hw4AAyATYI/iOX1rSvO
aKXPYpXa71LUTivY3xInwHBgwK627an2J8Rqvp3dnOL8qSMR3/mNr+EZ39RK
9Th47jnfGvnOSC3zvBxYhrvzQYq7SU3yOo8Z53mY/0T/Psl+aazlaet+1nk/
RZ1xH695vdelBggGG5OiFojPAU/xfIzH1PKc+LpTvV/wJt8mkYmaG5gIzAR2
O9l8NftP6hr4N1pyg801BfsBMBR7Gul99fP4Kdy7FHMxDxiti+X/K4VPo1ba
xWPop6YKfhvpvi6WB5lHecwBlpm1+F45LMU+qCGDP/k9wnqmv7CfpA56oHV3
gOUZZT2g22UpfCl3izsGThyaYg2+h15tnjnB8OSWxPG15sE21KwHevxSz0Wu
x98SDHI/z680z30Z7zvCfScX4u6X9bjtfS4nWIfU/MG9g3zPuvmu4Yffsn0T
l8EB2XcEO2Qfd3B3c9RriNdgIHJqiPwarAJGgAcn3KWx3XPUJohN5Xx/iYkr
fGfvVF+3HDk2uTHfEviOAAYAr5ALVXc/WKW+9bi39fZVinepI5ETghmb2Maw
nzVqv0wh896WB7+6DtlTyFbXMswv4hw4mxJOvMxnVNN7p45ysdd70vP391rs
fYj10NV3jTtYOnvOdrDHsJfS32ew7wE+OwBcM++F+ekb4DNdZ36e9THY83BH
3k0R39H9idY/+SM1l6Wef533+0oOXaCHi6xD1iL+bPBa1LS+TfHdiudrPYZa
LjnC5BQ1LsaAY7/171etw7U+F2ygrnVL7XpxjpouPppvvcOKwFzkIWAqaoB8
s5xuOyGfwQ9f4vNi7197L/DsZ71lph7+Ro56NjVI5CEPw8Zq+uywhTU+L7AR
uA6/hG2Dq8BUF9hmGMPfEFDXpqYNNgPDld5bnbb4NHjee9k6JI6DwcCg4E9w
VPkcNez+lgHdUz/cmELfM4x/yNVWeS3wHthrlflXfKarisCzK623XuYZy7d+
/v4AmadYz3wrv8m/4amL8i2W76cQNUfqjYx90GOe8FlMFr88x98zTPTZ8P4T
7v86h56ow5MP8j64jb9jONv3kbyOu0n9lhxtego7mWm7amaee0etd1COXJNa
78Ac+eLTlnm6dTjDZ7TZXtxfqvmyJ+rkD1t+/uYCPEnui0zsA2z1tDEDOe4j
Hs/e+TsN8ua7UuAB7BCs2MC2St4BpiJXB/tRmx+QI8cdZj0Ptc085LPjb1Ru
s074jgROJr+v53nAZvdabmRGr+usWzA5eQU5xc0ew3mCDW/xnHyfog7AGg29
LnnErR4DNqCWTu78jO/uRt/fobZzZAe7vpbjGxnfpKkFUwf+xDw1sWTbpY6H
PwHHYvPgZHAv39hm++ywI96b63eX2b/wrZxckny4NN8cy0M+Ujjmgn3AQPhS
MBD4k5hFbKQeSnwEh1FT+6IIfIif4VvhRs/LnB09hqmJ0x94Tvw8eTW+l7s8
zfcabAwePquIuvjVOWoA5LL4VvzqQvPk2uTx/P0b9Z8P7Yu6FxEXFv3rOTz+
eZZtBrvj+w511EdT5LyD+Z2ifgxPnWOO7wX3YIHlmZfibyGeT3FW1JypafB7
nnX+pvXAeaP3Ad4v/pN4D64ltyJegWPQDZiaGI3vJX8k3yMOU1OizgxuR5/g
BuYg/hCHwBhvuR89d/Yz+t/wWuBncjrqC9RHvnc/zzlTcA/vkcsvzIEHsM17
bJ/3mudecF8f9X2hb7LHLLFPY+/veE7s5Dnrq+TzZnnMMu8dfFjTstYqQrYl
1g95A/kD9528m3yGXIZcaHnakmOSI9HXw+PJNYjNyzz/Rx6DDXezbWPX5Obk
zOTLB3pdZCFPB++W/m7hPc+H/yVe4vcmm8d/NLINg7GXWM/Iz3cD7ssanzvn
xN+dfucz2MXjv/dZ4Gufsa7+DwBJRTo=
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtl3f8llMYxs85ZGdkk1FIZIay956FiF+aiEhRsld2ZYfs+GVUiDKSvVfI
SpKspMzslfH9fu7zx/V5r/s9zzjnntfTome/A08oKaV5YEEwBONRMDqndBX2
D/BvQGvsS/gdCiaB+7FHpvjvQXAb9gDsKfBPwKnwU8Bx8DvBmqx/h/0WfGaJ
tUHgMvgzYCLrT2FfDn/e/7DfwP4U/gVYD3sgdl/4PaAl9g/YvX03aI49F/tY
+B1gdexvsC+FPwRGYQ/GPtG9g1bYP2NfXO0bsY/E7gcfC9bG/hF7QD2f5/8V
exj8STABexz2RfX6a7E7YZ9c37c+9u/6oPpzA+w/sQ+CrwiuhN8GzqjP24T1
f7C7uBcwHv4smAX/Wp+xfjJ2d/hNJdamgH3gy4JzPRvYBb446Om7wE7wRcER
8P3B9vCFQAfXwA7whUtcuysYDTch9K0+6Ay/ATSm2NN4+MASvvCM+8GXB0M8
i++ArwCGwc8CCX41aODaqWA7eAY7snRA3U8BO8M7gm3g/3FdO/huKa5vUmLv
O5ij8GtAV66ZBvaCNwV9WTsTLAIfDnqwNh0sYWzAkfAZOfzjeQ/m2l5g5+oP
39292ouBbil8dC+8f4lcMGfc3wIlfLUFuAV+NJiVIgdfhr8DjsPuAzaE/8T/
zeALgLbYf2GvBV8OvIT9Ljg+xT1bVf941k1AI7xPiVy2hraA/5NjrQVoh/0v
dtsUz2xf/efeWoHNsP/OwVes8Xb/+lYfTIZPK5E7/cFG8F9y7K1JCv8uUyK2
7nFveLMSsT0BvAL/tsbA9Tf4/R4sVZ/5Or8flHh2P/Aa/DuwZIn7t67xNxc9
w6vw9+uaMd0Y/luOvS8CNsX+M8fZ9eldvrdEb7En7FTzxdzqWp+vfzZLkWN7
13e7l7NrPa4KboVfAQ6Er2KNpcjhjvCVrYEUOd4Jvhq4J8V/D8MHlah1a7wr
vBV4Bfsxaxh+tjGBb876H+BK7E78vpMjPp5vJdbXrfmh/5e3/kA37HXB6/An
UsTf87fUF9ZQiX7i3u0Bh8BXB2NSnKF9jb/Ptqbm29f5rzO/7+XIN/PJZ1mT
j2Of7j0petJE+KkletdG2IfBW4BHU/igAb5Wib3dB46ArwNeSnHNofA1Sqzp
46fgZ5bodW153uHwliV85Z5Hwo8p0cvt4e1qvegLY/iiZ7Ve+W9Kjv5nrp3E
2nlgJfgI+wFrn9vT4S+U6JWf1PgZzxvho2u87VeXwW9OsR/9NxY+yZou0f/6
86xZYGn4daB3jp58SM0X7x1bz2s+2dvvT+Ev88V3Taz5az9YNkUM96v1Ze8a
WuNpP/cszoge8PWsiRQ+tT5/5v6FUuSI9fEr9qIpcqgn9vrWXIoc3L/Wq7nu
GdcsMV8GcM/s6p8NwExz1bqHXw/6wD8F58HPtWfAm+ToZz/m0AqeoRd2GzA9
RY421Hh79idrPpgvnv1lsGuJnmwvtkd3qO+7kLXhKebvGDA8x0x1Xt9nDHLM
aOf/3eaAdZRjPj9g/ebQIOqNUWAIfGiOeeaMdjZfhb1vjZ/aw3eOqv1jWI57
7CcXgt1T/OeznXcjc7zDfnwBaM/6xTn0xu3eA78ohx65VZ/puxzz/xH7RQ5N
5bx/AozPoSFOM/c9Yw5N1avW+2Se/1EKPTEBNObQMMbX/vIqa9PsESX0wCDW
5oDWNd+N5ddg8xL9pjnXtqn9xHo1NpNrflmvxmYqOAv+tPWdQ5Ppa/WAvtPn
xsZ5eF2OGL1dQu8dw73HgqOsBXA6a4vVeeB86ZFCk6gP1X+9U9zj/HE+dE9x
zeASek7frZwiFuo9Y21Mzi+h7/R16xT+U4/am/6u+1dP2lvsucZK/WkuGLOD
S/QHc62x9nf1i7VnT3CeuwfffUaO+a9GVBt6ZnPxJH2eIyfnltDI6mD1r7ng
vDY3zAl9oT7wWfrE/uYZ3PvgHPPT+d8lhUZzPjr/nF3dar2oZzqn8Jm5ZX/0
XnNM/aDeaEjxjHNK6GdnjTWr/ZwxzaGp1W9q4sEpctrctL+PyZGj9ns1/sgU
/zkP1Lxq3XE55p3fCH4b3KkOKTHTnGX2ZHPZ+eG15rTvtn/MSLEH+7+aX63/
UI5ccz4+liPnnJd+A6j9/c9acV54rTWjdtBH+mb3Evk9v84yZ6paRJ/qy934
3bGEJlQLqhnV0vNK9PGZtR/Y8+x19nTnt/PI3m+NqbetKWvJGtu2hAZVezbU
/uXMcdbYM9Xv1qS1aI9VP9tz7bXOEPPPmeIscUZtCVcjq42dydbP79ZODk35
FfabJbTqCP77Ul+aU16b43zq4b1S5IjfS5+BZqz9gj27xPeT/Ojqn/dKaCs1
m1rNGrU29yjxvuk1l52pnlf9vnWKd9iL1DvGvrHG33ncNEWPMT5TS+irJauv
9bn6e0/9BD4q8S3nN5Xv/7DEu5zjs+v5/Nbxm8/vH8/sWX3GnLq/EbX+fP7H
Jfr50vXsPt9vO31gbc6t9Tqucp/hvTdV/6uH7I2e8X/cl+Zb
              "]], 
             Polygon3DBox[{{715, 726, 582, 522, 96}, {738, 747, 687, 626, 
              243}, {713, 724, 581, 521, 94}, {718, 729, 583, 523, 99}, {719, 
              733, 584, 661, 103}}]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0Lsug2EAx+G3H9Wqlq4iIR0dr6CdJHWqRUzEYmNgZTRxBVwBV8AVqNga
5/OhIhGrNI3V88bw9Pd/v/RNvra0urmwkQohrDBjxD3p41OLDDFBhRrLnCch
rOs2exxwxAl1EvdrXNtT2s+Nfcuwu3d6z4j9oI88Mer8rC/s2Gn3Xu0ufdMx
z961SdazeT7saR3gyj7lmEP22WWLS3fXdIk5yozH3+LeoC7qt85qn1Y1T69d
4Mz9i/jM/qKHnPMvObubtp3VTHxnWs5p7eTH7tCGJvH7qf//+w/FaSqq
            
            "]]}, {}, {}, {
           Line3DBox[{497, 557, 498, 561, 505, 565, 509, 569, 513, 573, 517, 
            577, 521, 581, 748, 525, 585, 529, 589, 533, 593, 537, 597, 541, 
            601, 545, 605, 549, 609, 553}], 
           Line3DBox[{499, 558, 500, 562, 506, 566, 510, 570, 514, 574, 518, 
            578, 522, 582, 749, 526, 586, 530, 590, 534, 594, 538, 598, 542, 
            602, 546, 606, 550, 610, 554}], 
           Line3DBox[{501, 559, 502, 563, 507, 567, 511, 571, 515, 575, 519, 
            579, 523, 583, 750, 527, 587, 531, 591, 535, 595, 539, 599, 543, 
            603, 547, 607, 551, 611, 555}], Line3DBox[CompressedData["
1:eJwNxmkyAmAAANBPN3El4wTN2FX2CoWyV06QtUREloQK4UD99Nf78WbecDQx
Eh8KIYzyJ2OREMqMc0yOUyY4YZIz8lwwxTnTVNjmkhmqzFJjh2tiXBGnzi63
JLhhjgZ73DPPHQs0GbDPI4s8sMQTB7RY5pkVXjjklSRtUrxRoEOad1bpUuSD
NXqs80mJPhm+yPLNEb9s8MMmW/wDHmcz8A==
            "]], 
           Line3DBox[{556, 612, 708, 552, 608, 667, 548, 604, 666, 544, 600, 
            665, 540, 596, 664, 536, 592, 663, 532, 588, 662, 528, 752, 584, 
            661, 524, 580, 660, 520, 576, 659, 516, 572, 658, 512, 568, 657, 
            508, 564, 656, 504, 560, 655, 709}]}, 
          Line3DBox[{711, 722, 710, 723, 712, 748, 724, 713, 725, 714, 749, 
           726, 715, 727, 716, 728, 717, 750, 729, 718, 743, 730, 744, 745, 
           751, 747, 738, 731, 737, 736, 739, 742, 732, 741, 740, 746, 752, 
           733, 719, 734, 720, 735, 721}]}},
        VertexNormals->CompressedData["
1:eJx1m3k0ld/3x6WRpFSa9VGGkgYlDZJNKlEkKUWZKiqhkCgiUkhJUpEGCqWQ
SEJtJco8z9PluveaFRVN+p3ndOu3Vmt9/8lqO95nn9fZz977ufecORZ2+gcE
BQQEPpB/hpOfuzsfBsxRqMR7bevEpFaywTLLIvOLKA+UhaP89M5VYeQR+e8u
pq3w/dYme9sEDjg3c0GiuxprBy6+XH6NA3aRDaIyYq3QFMltmLy3FvVXlX5r
KufCyGtTr0pLtcC1bg/FHbl1mN0zR2KpWBtM/mzMq0ptgs8ZNZeqpBrQIdzU
4JBKO+QKluUftq+FTQuafqRub8TWh2Olr2l0wCdrc5Q+Ug4hqvsOb1NvQum1
7R2GYp3wPdRwbbVjHvTVTvisWdGEUpJnY08FdkLupYNGS2elgo3AbYtlg03o
fdP9Wkp8J+QFXkgfNIzC4/nzjbQzG3D6yB/27tntMNdVS9bKswq9rT55n4+s
wao1faM6lLgwlcvSVpdi46r+LcYuFyswweTqjQ0xLfD+8RuDjdE8rGc5Sd5e
VIonF9X83OLaBO3+LjX1OzpwR0LgvezJRRi0Ib3qbUctuMjYh0z72omHciru
O/2qxgXSAznSO1r+cj5hrSjz3aMW75clH220Y0OjiCflHKMnLrZKvB7NTskk
6t9ohWYlJ8rZVootnZPYgB5zescavefAE/ZpyvmddESL9tYmdL144NPcL1wY
peLQznD+eWmytuZhFq5xuyYUNqkNDnQsKWQ4z9ySJnhCvBmvx6aHJ4i2g3OH
eybD+WjEirM6N5tRy2eO66/SdvD4vkyF4Ry2Nkg9uqcZH2QbL1HT6YD5HDEb
hrODyLTj+oItmKZh4DT9cAfoC0RzGM5SM8UNp79l4QM/Ewmj621w2fywNMN5
Tauw2M/WehzesjoyQYEDc2pkKOfQgyemK22qRhf55SIZhc3AvpZFOevs8X3d
f7IcLS0LdH4JNULMm7OUs95x9/9WeJag7pDepGVxNXCKzznG/UDNsEd1OHn8
zwDermY4wOdsFr10MHFHA/rMG77Ybn8LmdeQcvZu4xyaLd6E5/u+e3xyZYMI
T5ly/lhnlfTdjoXhM02T7oe1woa8zZSzvGL40+TtzZg+MHK3UioHzF960Hg+
nfs4aK58C4pKVwXvfM8FFntUCcP5g/CxNTfbWrBr6Jp79zMeCLRWZDCcd8Zp
Wb10ZeOK9Mr9cXaET/HqVQznGT/yNIeq2bh6y9The9lt4FliZs9wXva1Siez
h41mm78ZPxxqg337boUznPfGrkjwv9SCc1I+DxPYwIOixBYphnPbBusHk783
oZ65zNe540jcKMtSzvkjbPYsYtXihbMjPqbVsOCH7tYdDOd1/elaAzGVaPV6
usKTI/Ww7/BJytkr+3TbgFkZXohU2l23pRqc+Zyj3BWiPyxuxB6lA6fKNViw
n8/ZTWUjrhBgodiM+PGPVJuhVludcrZeNcph3ScWqvb2V8VvaAGR0fm/ORd+
cPAjcbVr3d3RNtvZELxuCeW8ctHTgK/cFty/f82lhST/vDvcyGU4u2SfGfe9
hI03BHeucdhDdKU3FjGcux4OWsTebUXOej/dlWu4cNxZ8TXDWeN6uozmOg62
7NLbat7OhWmCbGA4Zw2tn94ZxcHnGlNWV+/gQeJ/7lYMZ/04y7cxrzjYP3Z2
4FE7HrwLE7/HcG6I2c+2VW3FDqeq8ztKOLArPnUew7n8mN31hGPNuFp1o3VT
fgvYNcVtYjibj64IfrStAR86SkoohDSB+IOvNJ73z6/8dC61Gneq95nGR9WC
x+bfnGMOz9L9LlWBv6xGnE59Xwkn+ZwtHq0MJHxx0mdZZ8L7b95QGnFnHuGL
5UmukYQ3ZK0BytnSMrmH8MWuB5ZGhDfUHWRRzhNzfaQIXyzt1tpBeMMrjwzK
uaP12EPCF+0fTztGeINfEYfmjdoDcTsJXxyh97z3WwkbbF3WFDOcX6tmWRO+
WLtFW4PwhtjKTso5fUGANeGLgsLyowlviLnvpM5wVo5ftJvwxfqqqC8dURww
C5Q7xHCubMl7TPiixZfAKMIbGvicPXoxgvDFzrfTsglv2DQlYz7D+fCobG/C
Fy2MNU8S3jBXTVmL4RyUNFOL8MV89LcivOFy713K+dkMvbOEL96UnV9IeMP5
A8aUc2imahjhi0YOPosI77/5mZPiEE7yBc60DYkl+eMvZx9rKw2SL3CFSuUb
kj9g6h1Vytl49ttgki+wtO7qcpI/QDc4gXL+qnOhkOQLHFzACSL5AwYlRlDO
Umu9j5J8gblVBsEkf0BSjhTNG3rmsbEkX6C/60tHkj/giRenjOF8cvTEEJIv
UL5y3CySP2CxEL5iOG81+uRB8gXWptzSIPkD9jv10fwcIFsjSfIFXqptmUvy
B8yLSzdhOE//UO5C8gW2WB6cT/IHhPLzxgbPi7NIvkB1Me4lkj9gr/1HWgct
5L+PlxrXiv+p6NuS/AGVvNM0bxQG7xqZXsNCvw3CC0j+ANl+KZo3rubdNyD5
AlsXJ80k+QPCRpyjnFW02h1IvsAn84a/I/njL+fDDnr1pP5h4CFBO1IPYR+f
s8PZ016k/qG5bFXPN49a2Pvld79hOrM0i9Q/lLk0tWaleD1cedhCOUeIus4h
9Q+/DYi2vk9sANPMecEMZ/bB1UJSX7hY+q4iktRDuFY8j8bzTLWAOaT+Yep8
U1lSD0H+oj/NGzMitr0g9Q/Xrl3FchJvBv8rqrQOdkbzgkn9wwvPqk1IPYQ6
l5SVDOcQkWItUv9wGC94BqmHYLHc6DjDuetI6WVS//CwyCFdUg9BqDPxNcN5
7OOi5aT+IfuQtRKphxDnvmcuwzn3QlUqqX/4qEC49EdrPVgZDNF41gjdJkHq
H3o5y/OWb6oGX988Gs/zzqUfJPUPW+omhJJ6CNvGeVHOMKNxIal/KHR45Dcl
z5K/+TnS+cwc0s9hisp+Q9Lf/a2DQsUd406S531J8Uct0t/Bix8rKefVkW+L
SD+HX8NRgPR3kGTxm3NN1OfxrHIuLos5F0T6OxD19KTxfPOe7FLSz6Hyyivd
Brl1cOFsE43nX7XLrUk/h1cHZqwh/R3cv9RH6+CBuZzVpJ/DUR2DcaS/g6Pv
Hr5hOGs19A/bJdaJWjMEZ5L+DpI0d61hOB/jyGWRfg7n6s6LIP0dxLgX036j
Wc0rnvRz+PSFlAjp7+CVxvXHDOftK7t9SD+HecqDIqS/g2N172h+3i52fQbp
5/DGnOtqpL8D18xtmxnOFb210aSfwxIdPVnS34FUTjbl3KtzaJqOaxNajlbv
v7WoFEZs3kk5Z2wW6yb9HL6Tfbyb9Hd/87N945Lm2z/ZqKQzbssY9bK/dXDj
gE5Rx1IOrkp3KBs4VA73Bxwp52Fq49YsOc7FK7fhhn54BdyaLU05+8/TmJuc
wUPu46kfwlmVkPZCg3I+kXwlIleoHUX2vhkMlqiGqTLn2Qzn9bpbwsTVO1Ar
lK19UKsGjqupUs7vzOY1svQ7UVXHPmLWtloIjA+g/Yb6moqfvfO7cO/rn0ab
/quDrcNZagznAcVEI4jrwqUf1kjH3amDbM9NJxnOHi1bbiUVdKFzWefVby/r
4KWDcwbDeWRT3ORXxR04eaGPT1ZZDRjCZBmGs9r1KsWdM3m46ZaLnJF6JSS+
qaLxfM371e6J1mwUnVG8tSWxFMQHllLOou/TbmSasdB75qgWL/8iSK/+zfmF
ufLxQoF6nPlK5Uj4YO5fzr5Pznw+Fd2Kmi0eV01WFP+N57nC1eeGczm4KGLl
5QMKJZDRa085S45kvRdczsNs+dPxl1eUQvH4esp5UuziZD+/NnzFq4621SiD
9gYJmjdq2oQcLzS2Y5DVoWA93XLorxtD+42rcr3n5SU7USPzRXSWdgUMWkTT
/vnWvCiyk1142mvBnpL5lWAjKks573twRWPltG7UCExfZV1ZCS2OD5fT/vmb
nHl/eDca5UZY+ayrgtQLAZ4M50taer0Ob7rRQDvYf+yeKsgPrXnEcP7w1jv+
RlIneu68qayJFXB/9df/GM6y4lrXYpt4aFBVaKT3shSiSy/R/DyTJ68wcUIr
bppx756QexHs69lH83O9Zd+4nk4WsjZGCIdfzoWzObco54abVWkZPfV45Ge1
ddOz7L/5ebNc+ZJ3ihw0ULNg/5yf+zeeL9wI2PvmJBeb341usU3PA84LPcpZ
XOPnltslPDwwMV/yxL4C2Cw2mnI2jxZlqSxtR07sXBNd8SJ4sP9bEMP5drT7
RI1LHXiw/+nQoHkxDBPOp3lj44BDvnU16SslVHdHLyqBfX3HCxjOMavLfxR+
68IpNlKB+awS2GhcSTmPKLmlVtXQTeK/Uaj+SCl82K6rzHBO2CTwQdm6B98f
1C0Xf1sKUXu6aX7+3uGuccO/B9VK4mc9qi4FvUWvUxjOd06NnptztAt/iJw9
GXWhBIbNDqX9s2VjmUzVmTYEzYQfrSqFsPKFGOWcUn/l4y5SjwzbhRVWHsoB
jxlqlHPDQF5co0kzBq05MSbZNgtu2l2jnCXGeYprkve1/dEzfoXov/nLef6b
M4nPwzm4RJHbnouZf/uNwaQCE/1eLnbi2k17P7yFN7m/+43Bx6qSkjptGDBr
TtWLJdnw8dh+ynmP0fwPDYntKHZP+wiceAeh6YY0bwTuet39eWonzmmK+c8o
/T0EiGbTeGZJB4QVHuzCWp8og5beHPCNi6J9nXf0eL9Jgd04dpZThclQLhzY
uYPm59IXa0c/c+7Bet85XVUlebDlg/EGhrOs25KGz2N6UdI4t9NvRz4os8Ca
4YyHDioIyPfipddPu2475sMYv/JLDOcMZVOBdSO6sfMmnit0ywXZQmf6Puj+
ziG1Q6AdH6zYPdRYlg1pd+Uo5+0fN3pKDecg28XryvAlmeCUu5Rynlyj3fkh
pRl5kpXCsxZngMiWU5TznNYUuU06jeg8I/nkspi0v3UwUDJh9pMPHHyg6ap1
zzH1b96ICTkcI6JB8r3LnQ8RIukwU8Kcci62uXS0KrINzf0LD9qnvAS9YH/K
ecy0nbynYh2Yqum/QsEO4X2EEeU8Q/cAq/FkJy7ROHlhV2AGuDaqUs4dPzI2
ehd34dqFe9u3m76GzgubKeccoTW5w392o4DTOBn3yW/g1FQfynnhG//WPl4P
Lhc3uyEV8QbCfs6n74OZkmt3rTvZiz07vgft/vYGooum2jGcVfWPfHwf1ou7
Lb9ZLBifCR8UYmNpHdybt0DBthulB34WW7x6DbzFgbSv29f4xWrZnnZcN6xn
0ODqK9gwwpNy1sxsGVazlYNbB3ylnj59AZkcAZqfLW/ql9372ozdLukv4x8/
g6t3TSjnaTnlbry0RjxzjxMWfP4puPI5D+xYYAqSXGyIc00PPx/zN29I5T4x
dznOw5tfWHuzJR9Dvosl5Zx8/5zKhjrSrxpyvrwviAXBTFXKWfM5z1ZJuwNf
pYx0fe0dDxJhSTRv/Orbt/VocidKKIo/W3vrCXhP8GljOK/NdNP9LtqNeeuH
cvOtE2B72WzKeVS6i+JI1R6c7us09eScp/DMZCP9HKna3//yxwW9WHFZ3vhs
/FMoLyulnCMOn5Q//aoXbRps3n0dnQjzTG+eYTh/e2MWtrW5F3+ZGZyqmZUI
2TqjghnOFifdBr/HdqPTr62iknkJsOX7Zcp5WsAGN/mgdpw7GGuoFRMHI35s
pf3G04C40LGnOXhtwWRlmayH8KNtkHIu8sjPDJVsQef5kywhPRJ+qLpTzumD
l5+cG2pEX8ftcuyrEX8/3zgUGG06R4GLp09qjP5aaqn6tw7OUjbQO8dDFf3A
rkfsw6pNVb8/3zAxvTJSorsNh1SvK6YNHlJ9XupGOe+aPfz25L0dGDcm4/rV
zUdVY6KCaTzPjx/72SC3E4WnBX6yCj6q+m6iK83P023KN1ZJdWNow1L1WcNs
Vfuiamj/rPC1JDF1ew9q9UXxHjofVbWeOpLm53F4Tmqbei8Wem9We1pop1q5
4BF9T3msc/+hZkUvLllVac+qO6ZaPEyfxvPJZ+7Tlg324k0zY3PHrGOqbvdq
ohnOXeYek7Uzu9FZJXSDjqWtakTuGdpv2NZUaJ2PbEcD3VkGpTNtVb+7j6Dx
rP34i7zLRQ66v9i95mWpleriwXrK+VKCzedbi1qwdtTRorVnDqiOjjhOOfuL
fzbLntyEC6ctxN77pqp/OKvHmFmd21qNJaO2rjXcxYZbNUcK6624cEU3auao
sCq8aN3Y6ZHT8jfOf5bfmawczsLuw/7yO090wLL9IuZ3rfMwc/eGeVODGtC9
/UjtAx8e9ItpmYY+b8Jfn1071fPqMFw9478hsTZo8TltxNgFQ1rqsaYE9dWd
biYfrAffYceHC6t14mfhhRfX+Raj4GTXi0tJX/enL4qt8+y5H9CCE5yFw0C2
HSyk8BAzr4LS+J7FZ1go4atk3LmHC/pfdpsw+uW8XxPd9rVikSA3YV4CD4ba
0ZgZb3nLY8vSOS3YN8c+VU6MA+GHJMyY8YlmPxOlZ3CxyDX9MvkJXwVsLJjx
KQ37J0E0Gzu9jT6rRrNBQ09wLzN+3aBwIdFFB5cVH133tUJcxt2DzPh++9eV
RBd5FaYLyTxwx9+Y+tPyoiaZ+I1r3p3PI+uAoHmLqT+bxcCR+I0shZx8sg64
oPRrDzM++EvyBsIXzwu2dawOZ0G9YjblLGQx8xPhi7cXf6mdEtQAzQUrKU+p
W8osn4hOjHFAA4EVDRCZFE79STKKWfHsShtmck52OH+tAZfF/nT8HpOhhfJR
XRiXtrEvlbyfLjm6aD8zfvTFgl1BLu04v0ht2SPlSiib/oDyuc5uO5nj0Y3r
uKL6jyLLIbRAax8zPk1zT+Xgmg6Uqa60Ft5D+pPoaZRPxLnQ3AVLe7CrKeqY
yOJiOJGgbMeMX2Dou7eougOfdrtHqWfnw/1lG42Z8Z8Cd4bqJ/fgnOhNC8+r
voPGlXuoP3MadA6s2NqJXYU6J1UevYWUCZ+o/oVF7A2e43txe0Y+a8+vNDh/
eiH159Sih9Znb3fibr3kJWqcFPBS8qf8T0yY259G3u/K4249Utl5E+z2edE4
f1Ijcnb+Qi62Hiwc3Ocf+vc93dLju6SySi+GJ33Ok0+MgOW2K40Y/fJ5RVzN
7E702r9tRvbdu/AuaRGN88qsdbdKSR6IRufeY3ePqebltlF/HjaejFXP68SA
zfeLDIVtVR8WXKH+l0iMMLyVycKhqx6WNyZeBWVDfxr/j0Py5W5ns3DOeXvO
lzIL1ViXY9T+03/0yrLqSpx/8EeHcg4bxm04Sv2/Wny0rVS9CXGlkvB7sU74
NuLSEWbeB1XFbYceNWHrWdNkO8V2CG4LovnkgNJFvdvZxXg3WOXzadEGmBPr
TPWPmKT/dH3cjA5Ngeed+ngw1vALHf8jP/XMwCE2vlV5HLk8gAt1+eI0/1c9
Xfw2aiwHAw+8jyQ/YejRp9mMXSWtKoOMw9fPtfaTvwMNaxHaz8Ntn3Ciiymv
umrJPOB0qpb2RckHWwuIf9hl5naL+Aty25dTfRttMTTQ60C7c9YnPYvJe7eT
shxjH/h0OOiiZiemGJ5Zl1NQBVYR+6hdeekw05SpXVi+dWLp9wdlEPx8HfVf
3fDQ1EfYha2F1WVixYWQ/zGS6oekRuseV+1Gn6itP0TnZsPRSWOpfXHw19Pm
Qd0YdyX7YcqDVLCNjaWfY8wZ8WFYWTUXn17gfrxhfEh1cacL5f+sc/GkLy+7
0VdodbteYTjISFrSdW1ek/JJaXwTKjqZWK26ceVvXZsSK+1w7WYzHp6hcuJw
WTsoJD00YfarJW1kyA69JpzsHeLH/cKFF3GpNA9UKa+SEnVjY43J+1uTjrZB
VqwGHd+Yskdb26AZiz/6WPekciBzbhONw+h5SSvurOOg4sdnqzLauZCdvs2K
Ge9ypONyKK8F430OTKk1bQXbHdvoc3F8885dZBw+LXGbTP4O2u05NG+8A4dl
ZBwez9Q/Tv4O2M9H7GLGK3mUPyd+oEfBguHELxAQMzBkxo9I8PImfqBEf4Q8
8QuqV5XR57o5ODaArBMF15/XJeuGLT88LJnxRgonwsk6semo0Xaybvg4Upv6
b3aBM4fEMVb6lFwjcQ28G5cOM+NPJD9fRuoHBn1b9pDUE9L3ClL93nCRyP1y
XVjlnvQ8hbzvC712pnlSraScd0e4HafVbjqwb3Y1yPz4XRcalZe+jyfvrWVy
SdU55L1Vt1fGmhn/0aWgyKqpHYdkg/1+kvfizCITyl+yUeCbfmM33qto3jPf
phRm3b1jSvPY9sOaMgEdqBw4weesRTFkrOHR8WajetYpuvRgITrJbC7Ng4HY
TWbM+CmZa57XT+vEgvvVuQtfvoeYstE0D2i35HTat/VgRt/K7KOkHw49tY3y
sUp/8en9qU68UJYdxyH99rhZW3cz44tip8fak/cO74Lq1BLS1wXKBVI+JteH
TPY8J33jymPz80jfKPJYmOrXpAXanV1L6njVzzDWJjakjXVThpdcUD2V2L5l
bh2WdgUc6DdvgUq7EzSeNQwt4oMeFOPBKbPm2kfWwbyOkV8awzvRdtTEdU5d
ZXiPNXVx81AtXGn4nTcckj5sFknios3zPmG2UxIMqh2jOjNOvwbn9ySvyq+W
2rntEYCfN7XPsjJddesRCwcHLySdHRcH3yr3UZ3Ldg/7b6ayUHzRohu/RO+D
8XAnatc4E7+kypOLqccCN73/6AdSHX7Uf3avT9TbuSzcedo2X0vPCx7ajKF+
Dp6v0PZ+WYP/IR49x2qBfFlfOq/1PTdw45ZihsnD3W9S6qAn7yDVn6X53cQ/
php57F1DSytbQD3RnepPuzJObQavEutEnr2WH/b/3xfHbt9d/+4kF8eJiUq2
L7sPD7RP0/ET5CY//jmLhdNbZ4b1fwqDbdpC1J/tbJ3nblLFWFN63r2/vw4i
in77aW7fIl/jxcUjT1CSHX5QNTr697xHhD3XWkwi9fDH0q0TQjz/vkd7CVSY
1nhV4k0xowv33Nmw/tbvfbyr8wD9hIuRw5Vds/BO7d/3FCnh11eV40pQIt/3
u9CwOhDrEaXzJvcXzJVawsX9/vjk+kW/v31dX/CtK25SLFx4XiS+94G5qsuj
EXT84SkJl5WyatDcd+vbp2daQWf1lcptHa2QXnl35JwxNTinc+GktZ1sUJ/2
uw8fKlLpH2dZgwvTs6bsO8AG1bSzXpGiXJD2P105VagGm07tOj2siw1N2W9q
7J9w0CmE+0Fauw6tW93GLn3OgUa/8bS/naaW+o2j2YBN23Ijd5O+LrtPeF3l
jWasPyV/yH1UCSq4x2XVCfz/986GQWV21h/r8K7hxbb1PS3gofmU6rcEjn3l
erwRrY1UBMMiWuHepDr6eZ2z19ZJahtYWHXff8+65Ryo8pmqzuhvbBxe+jKh
Ef0F5vxnW9EMA1JGdYzOhzPs8DASnzMlJCa7HmVD8ZFb1M+hQIOv6kXNeM5h
ZnRRNxteeU9cz+gMLD+9bfw9FnobdKwgP6HIegTV8Tty4uH5uS24MtT4AvkJ
i547UR2rh1evvAU2qkt9+1ju10JitRIYHSXfZCXiB2aqh90ifsHpl/pUx3JR
/kLiB2q99DpH/IJKV2e6LstlxVtTrrbiDFU3c91xzWDfMIxyE5s37xvhgg88
S1QIJ3ixPbOW0ZFJvSpOuODXq2vPE04QE1rwe11eB0WU8jl4yeaOfXpPI6Sf
V6Q6Rh2vLpH9w0vp/XfJfsKhShmqw4oM/o/sH+65YpxA9hOW9LdTf9Akt8G1
lYuf7WYtDrpWB2vVrDQYnZeyVk9WFbTiUV6QRdePCrgWFE513DJbtsY/5iLO
bpueNlAFCTCN+rPa1/jUUB0PtY/IvuuYUg1nDffS/eozXdobfZlD+poq140l
pbCg4RTVeeo2WeH5GR6i+CrNYV7lEGiYS/0JrvK9aJjQhr2QZZ/lWA5yneJ0
XaBW4blSiYtaX6emmIoXgcXLN1QnzHBY1lSlNtQ3Hlnc/qEYuJIC1J+ISsV7
O/e148DpFs7OZ8Wg0mRD/bnOXlrw/QUXOVfX7n9q/B6mfDxJ92uDnyYUZ7Vh
sfiK/LkXcyFmye91PTO90PbjQztWrHbY9DUtByL1iqk/IYnub1bM5qGMm3S4
jPtr2PLpAo3niSvybMVIv1S1amm57cRMsJq9h+pMsl4S5L67A1fKnVls0/Ya
0sJ/qTE6rcUh9bvMeeiomOIybdIzaDZ0o/48Fn3Uoerajt88JmXUDCaDyPBI
yudjqsNwrbAOjPeLnHbqSyIsW9ZC1zVhb871ZYLNaPkpWC6G9Jm+muzlNu5R
8MFx+TZ1Ync0kLz+mtgNH3bQ99kU6S0DY82b0diob+r8Cx0wN+zl/jlPMjDP
zkzOYUwFTjrTFxSVzoKOefIOsKAdvyi9PIiGZRgsPar3wftGeKB+mb63fjn1
fND0vzKcquAaW728AZItwu4MlXSgalygM+t7C6o3HPrJSWmH68eK5Rh/BNQf
tX1g7OnX4Aexj5aues/44/nWMmX4nhYcU+L2TITVDnMX7j3M+JPWaPb4oB4b
83cmxcTKt8Mb9msrxj4wlxNH4h5LaxYOLM/ngITYiN9xYukdb1bbiid0fM7o
rmmDYrEjisy8j6+EpdsTO9fM7OQ+Yr+UfYFyeO2/aC97bSs2bBD32mzbBjFr
O2wZ/RVLW5/Nluag+SbR6Qse8EChv+4IY1dVV/Ugzy36LBu+kjzHEK+zgvI/
/nD8wlE3uVjf7jKG/ITG8y7zmXm1nL6mTyf2MxdtQ8hPeOFz+g4z731Z2PFe
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

         "]]},
      Axes->False,
      Boxed->False,
      ImageSize->Scaled[1],
      Method->{},
      PlotRange->{{-0.8977596459392547, 
       0.899469979032795}, {-0.8977596333759166, 
       0.8969548893160069}, {-1.732050612422391, 0.9999998048535137}},
      PlotRangePadding->{
        Scaled[0.02], 
        Scaled[0.02], 
        Scaled[0.02]},
      SphericalRegion->True], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      Graphics3DBox[GraphicsComplex3DBox[CompressedData["
1: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
2hv53kUJJCjgzvY7S3zJt6tJ58/WvCY/0j9Nl84vrLpXq5VzfY+v239WrTl4
ziyGHCrTHPA2LxKv/x4485Oljj8ZX1KlQmYcx7q19k9pLZ137D3fZtItrk/y
dXt0UsOH5RHRpEO5pni5fQrW57ET/sZ5fZNI52sWllSSiXWY4tT+/tQeKaTz
TdsO755dw3o76Ps2Y4z+FfJ75+i0KTqFWFcjP+jXH/JMJ9V15XaZwcVYP8Fn
XzstrJcQq63qbUYolmKdPLaWP1ZglEmuLrh0V/FxKdaDdevc+PDITHLkn9Fx
3pPK8Ln3aIxr99Y+k/SNyDl9oX0ZPt/onIk6Vl8zSGtf3R4NvUvwOdr5r9Lr
FXiZnLgvKn2yuwCfl7txTn+tWO7z6kZtmWyWhc9l4r3DNdcPbRZbakw7w/lo
5D8veO6j+owQomsattQkKR75r+u2SeNMHJHY36KWnmUnkP9+47H97LbbilcU
ZNlJ+yfPf8XlaYsHLp4vWWr+yu5RTiryH37T2lV7+1KJuaN517eB2cj/5eVO
ZQse20m+Td4ktpp1HfkvOSq+HmWzRpKo2zhkhFIx8j+0+Y1Vm5drJZfDlqzT
dyxF/pma/hOz85wlx085JyhVlCH/YP9lUZ2i1kv2XdU265tRjvwLGz6VPW3n
Itl6z2/aysEVyH+Ip0jBu3i9pMXJxXGGL8uR//fDrgstJzpLPhts/TFrchny
L9Iv0YuJd5D8qh34Ttmi6M850hu546XiMsnIA9P0C3VykL+yqd6H8VPWiHeF
LPmXy4vIf7LzaIu3lWaSH2XHJvfZeQb5B3gnSRbo+FPJm68xYkH9L3qZ4GKh
opQxnc1LkH+t79KxKyOiqfUX74ZlgvpPO3KZ5PdNouOzj/YU1v+lHW80THuk
0HeK79IaBPVftXumyTj9K9RopXihsP5HxT48c8QznY7K3vWdCur/Um3Y7MX1
Erq0y+Oi4YL6T1E3Ci80yqTuptvDhfU/0LL47NHITLpUPtheWP//pE5rX2+f
Sb+N/OIorP9b9i8UrL9m0N5vrOPqBfXfNTU7RT3wMh3kn+QqrP+n8zQGaccm
0c6T3hkK698u1Lime6B6xtUQ1j95/g+7D1vxLiOETpm6QUFY/6+C5++wnh5G
XeP7aAn7ptmbyE6rOb84qa/7EGH9i3p3qOT6Iw2qvmfhLuiPT82+nOP6II28
9dujvaAPtgy6GcT1O/o6JHNSpKDf5ddsi+P6Gp193HKHp6Cv5bby2f/zbAGt
rX5aeUTQv74qvDHqWX2DDlPqENNJ0KfsHp67wfUjOmJUfv1LQT9qf6hIs/Fz
MX1m1PPCUEHfGTdN7SfXX6jx/DWTBgv6i+vO8B9cH6FXNN+uMhP0kXlmI1zr
BuZRizy9L8GCfpFJzmZxfYEOddj1cqCgLyiZxh4nnC/cci9ZS1j/IztP6Zpo
FkOf3zDf9kag/5nWiYmcn6G+fvnaOwV+Zplet2TpPCWgbsnaCoH+n7A8Yc75
FtrnVsx+bYFvSZB/4Mv5E7o0cMzxDwJ/Mm1xx0DOh1Bn18evRwh8SLzhChPO
b9AxCpbnpwj8Rq35uzLOV9CLU4+8HSfwFXNpTgXnH+ir8WGRrQX+QcMlXpvz
CXSt68WndwQ+YY7dyQrOD1CjfnJjegr8QBU5KX/LuZw6Lh/Z6lfln75/Llru
G9ffqXb7qovnBP2dhI+8x/VxGrUyOadR0MdXulVe4vo1Nb1XPeaGoF+73e23
QZp/PP6Z1Jgm0H9l2wu6XL+m045E6t8S9GuevyfjT3n+jtb2p6T5fz+Z2qpa
4Bt5/t0ZfyrLfyHjT2X5OzD+VJb/cMafyvJPYPypLP9HjD+V5W/P+FNZ/uMZ
fyrLfxXjT2X592H8qSz/cMafyvI3Zvwpz39HvxNe0py/5d1nz5sC/8PzN2b8
Kc//DeiPC9OfZvx9GH/MrWLQn0CmP8j/GejPCaY/yF8B9OcV0x/kXwD6M4vp
D/LPA/15zPQH+X8H/RnK9Af524P+DGf6g/w7gv7UMf1B/gagP0ZMf5C/G+jP
ZaY/yN8S9Gcu0x/knw36M4TpTzP+6xl/zKe6oD/PmP4g/0Dovxms/yL/laA/
B5n+IP+6v/sv8s/4u/8i/yvQfxtY/0X+j6D/TmT9F/mPgf47kvVf5J8G/XcJ
67/IP/Xv/ov8B0H/XcL6L/JXgv77lfVf5H8P+q8667/Ivyf0X03Wf5H/s7/7
L/LfBPqzjekP8n8M/Xcy67/If/XAiIEC/4n8Z0L/NWb9F/kHZ5fZCvwn8t93
22+DwH8if5fco+UC/4n8f55WKxT4T+Q/bF9bG4H/RP4tkpONBP4T+ZMeQdEC
/4n8SzxGVgj8J/Lv3+DSSuA/kX9Wm38XCfwn8k/SOjFW4D+R/80hjp4C/4n8
VaH/urP++2cOtrztfIH/RP61kL+MWf5C/pMzKl0F/hP5+0H+UmT5C/kfhPzV
heUv5B8N+UuF5S/kvw3yl8KupvyF/HtC/nrK8hfy3w75y4blL+RfCflLwvIX
8p8O+SuE5S/k3xHy1wCWv5C/P+SvTix/If+5kL9OsfyF/B0hf3Vh+Qv5f18/
9bHAfyJ/I8hf+ix/IX9rmNucZ3Mb5O8K+Ws1y1/I3xvmMwPZfAb528EcRp/N
YZD/c5i3vGbzFuT/H8xVZrO5CvL/F+YnOmx+gvxbwpxEmc1JkP9YmId8ZfMQ
5K8Nc4/HbO6B/O/CfKOWzTeQvy7MMVLYHAP534R5RQCbVyD/eTCXeM/mEsj/
hwnLX/tY/kL+rWD+cIzNH/7UP8zTTNk8DfnPgPlDMJs/IP8rMDe7xeZmyL8f
zMcIm48h/wMwBytnczDk3wfmXeFs3oX8HWCudYzNtZD/XZhf3WPzK+S/AOZU
g9icCvm/gnnUdjaPQv57YO60ic2dkH8izJdmsvkS8u8LcyRrNkdC/nNhXqRs
0zQvQv5jYf6wgs0fkL8E5kWZbF6E/OUr2Nyh9XvHAWfiZkp4/i1gbmnM5pZ/
/j4C8yUfNl/C+x8vYbla77bCvLeV1hLZ+x/4mKjB3V/M33/rtzbO0ry95lPN
SWtO//j1tHbJBdJcXTw47C7X5zFfONMJPyRcrnbudDOD6/OYLzon6h+R5ur3
rauvc30e80Xq3Jyh0lz9rIVnJ31O5/jnu+ps1TVprp79K8kvkNM5/vl2Xpyb
KM3VOj/WG9tyOsc/3/fk8TZprs72WNrzBqdz/PO12mZiJs3Vmr/KRhzjdI5/
vj/dlWdIc/Xpbsf2cX0e80Xg0bfrpLl6jcH4eq7PY74wX+EwWZqra0wb3Hpz
Osc/337TQnpJc/WlRXPjuT6P+YLn7B69woLjLOY5D5v0qHIql6sD7oQOfM/p
HL8edlH92kMuV3vPnHaT87nI2bbs/fXNXH72r63oeIjTM57z2q1BnaX5edyv
ca2LOT3jOa89dTzlBJefvyo9KpHqGc/ZovG6tjQ/W51OfS3VM57zgT7j3KT5
2dDkxD3OzyJnuzu9xkvzc+SrsCDOzyLnhz03eUnzs/+RWI1unJ7xnN+/mGIk
zc/fjfI8OT+LnOVTlCq1ufzckPNsXgSnZzznj6uMWkrz89yGRHNXTs94ztkZ
FdHS/Dxh2LkUzs8i53JHP3dpfnb7mKvWyOkZzzl46lItaU5+tUx3AedbkefN
3/WGXlxOnjU5L0OqWzzPMP+MEVpcHj7V1XepVJ94nqfWWPk3cnl4baNjqFSf
eJ773770Gc7l4aQCh3ipPvE8t84MajOZy8NK/0iWSPWJ5+l6wLrjWC4Pmy25
UC3VJ57nxoSxQQpcHj7ufP6xVJ94nkYVQeW3uTwsP26hvlSfeJ7F5HivHlwe
3nwpqVaqTzxPld0e9T+4POxZsqULl8+QZ0JB+pUzXB6eGri57SZOn3ie0zQK
NN5zedhb7k2DVJ94nh279VUv5PLww74v8qT6xPM8dLh1cDmXe9cMD5om1SGe
Z7RqRLfdnO5PXRcSKeTp0ePgi8Gcvs8JTtUX8hwrUUn8yOn7M2XTLUKeWp/v
zR7J6XvQu7OeQp77UrstMuH0/dyq9jpCnra/i0sNOH0PNRiRK+QZd/PHmbac
vit1qswV8rygXP7lLqfvExI+9RDyLGyxbKYap+8DVI/kCHk+mPC0528u3+ol
FjRWCHh+N/mZmMTp+6ALe19tFPA8GhO6/COn726jN2YJeYaERcwq4vT90fWs
GCHPqMOi/yo5HR9+oFRNyLPPsX5+Uh/z5OFSHeF5H/g6s0aaV59bGh0LEJx3
36H2r6R59XtgqmWR4Lyn7ntcIc2rLXqkLxKe92kmdbekefWrqtEK4XnvEnF4
jNSv1GU5EeF5TzH9+o/UrxT2IvU9BOd9pEm3xVK/EqN5ybWr4LzvDnujIfUr
G6vLi94LzvvIT7kXpHn1cemM6OOC8z71SWixNK/2VPVJcBGc9xfFwdOkfkXP
LklHeN517DxspH5l1d7AVe8F591gpkGpNJeSdKuKc4LzblH9qkqaS1U6ed63
EvSpG08tukn9d9kzraAVgj6lnvtlnNR/91aLysoT9Kmj6+Jqpflz2ufv200E
fcra7Yqf1H/bt+2zc6ygT1lXDhkp9d9bZ3S8eVjQp27m/34hzZ9eBTm2iwR9
SnlOz6tS/y1J79+rUNCn3Hyf7pX6b73E60OOCvpU6xdVflL/vXfeN9+3gj5V
b5hfI82fAcGBPRcI+lToxU+RUv/9un/gx16CPtVeZGYj9d8DzBujtQR9qtGk
ja7UZxdYZZ5sEPSjGsiZ+8Z17C72nyPiebafwfJkTPr3bc/HOIh4nmWQJ7vG
T6qa7rlBxPOMmcLy5Ka1lsvulW0R8Tw9RrM8Obbbg7qObT1FPM+h4SxPbt+Q
pOij7i3iefaKYXmyS0nCEJv4nSKep2Iay5MfNIsNfBN2iXie8vdZnuy3TWW8
0oDdIp6nD+TJgdk+l8yqdol4ni6GLE9uSp7o/KvjThHPM/8Jy5M2Ix+09iQ7
RDzPK5AnA+u71vQe4ibieeaVs9w4deP9pJWutiKe5zyoz86sPqlsfd5k9Yk+
uTfUpxqrTypbnyasPtEn20B92rH6RJ9sA/W5idUn+uQSqE8PVp9Utj7TWX1S
2focxeqTytbnHlaf6JMboD73s/pEnxwG9fmC1Sf65A5Qn/1ZfaJP/gD1mcfq
E/1wP9DPx0w/kacm6Oczpp9/5h6gn1+Zfv6ZO4F+/u7epJ/Iczro52emn8hT
BfTzCdNP5HkJ9PM600/kOQr0M5rpJ/LcA/q5gekn8tQF/axm+ok8TUE/uzP9
RJ4vQT91mX4iz5GgnyuZfiJPQ9DP8Uw/kWcG9PcprL8jz3+hv89m/R15Tob+
Xsf6O/I0gP4eyPo78jwB/f0s6+/IcxP09xDW35Fn9t/9HXlm/d3fkec96O8a
rL8jzxd/93fkqWrK+rsm6+/IMxn6+wbW35FnzN/9HXlegf4+jPV35BkN/nMO
85/Icxv4zxjmP5HnAfCf65j/RJ5rwX8mM/+JPOeD/+zC/CfyNAP/OZ35T+Rp
Cv4zgvlP5DkE/KcC85/IMwX8pzvzn8jzxy7mP72Y/0SenuA/TZj/RJ5a4D93
Mv+JPD90Zf6zmvlP5LkW/KcT85/I8wDkIz+Wj/7MPyEfHWb5CHkuhXxkzPIR
8lwE+UhOuSkfIU8zyEdLWD5Cnt6QjyaxfIQ8rSEfJbB8hDzLIB+FsHyEPJ9C
Pmpl3JSPkOeniywffWf5CHm+hHy0kOUj5HkZ8pEJy0fIMxfykSfLR8jTH/JR
I8tHyNMVcv0BluuRZwrk+jqW65GnI+T6nSzXI8/2kOs7tGnK9cgzCXJ9q5ZN
uR552kKud2W5Hnl2hFxvwXI98nwLuf42y/XIcy7kegOW65HnF8j1GSzXI8/9
kOsPsFyPPCdDrv/Jcj3y7AW5vpDleuSpCfk9keV35KlXp7XR+cNB8l/+u/Jb
BxeT3OkVBjFvv1HDsVd+iRWPkZTRRSVRIx3IKLlP0fOd35LRcL3p9abrKX+9
PlyvrNd0PeWvr6UlF6a0dRE7/xg0tNPECfh3RuOqnmueKQaQ0bOX31RSnCDh
7+NwIORxhOEOccFO3y+ag6bj/Gem/qqI2eJjZK33y4ree6aJ+fvz91m0QV56
HzF/H0e4z0p2H/w73WPYz2m2H5w78fd/VXLgFnd/CX//qJnP7I19s0j3/et/
mnk5i1tbLjK1c/pADVO15K/mFBPNeIMOifLbxNYevhlRJi9prtzh8P5lhWT/
7b2/Bt26Qvj1GfC9xMXwO+LZ8L3E3bfcpv/sUEHOP0nZM/WNl9ikb77duqpL
5PWVldo6LW+QZV8PBUeucRdfVWmffdvpEWn/tOLwpnnXSVWR96EX61IJv77B
Kayu7EA28VLu+t1ycj7+v7lHag+8vp1J5Nzb6qepX8PrDT+SuhHbT5NpNywn
JioU4/Wn1I8p6baPI+H6K/+rtCjE6+UaDWfpbj9NnX5vVhRe3173zOAx7eNo
pP+AROH1DaXlgeUHsmmIufU64X6m+z8e9uZ2Jl39TnT1qmA/s5xKf3DcaJVj
soOmgJu1VefX3OelR9p1HvBc8Hl9rjbxp96F/ud2O3iK+Otfpjdxo0PmqNoU
FnqI+Otnw/3vs/tT/nobuH8Auz/lr38H+w9i+6ey+1/F9o/XdwU+jowPXt8b
+JxgfPB6VeBvzvjj9buA/zHGH6+3h+e7jz1fvD4Nnm9b9nzx+gyow9OsDvF6
eaifr6x+8Hq+zguVb0nrXCJb5yOePJLWuUS2np/A92xl61nneV8frp4lsvW8
/PLgEK6eJfz/q/9gTLXu+iKSsLb94xd+yfjcRTv7L29ZUkAu7R9o/v1OIj73
X6qOOrFl10jq8myXNHEuXl8zy+TbhqIcMmNAbOe7i7Px+h3Fhg3BnCuYddKy
a4uUG3g9/epbopR+gZzeaxgrGlCA1ye5Xl6+8kYANd/vHLDm3J86z/v8YHHI
wIN01cHUnPtv/9T5vVn+u67mZFDt1Udm1+QV4PWnR5Uc12mZRn+72iX+tzwf
r78f/Cb3UvB12ud4o4ZVbiZevyfxp+m1WXl0kt62n0VOErx+0MFjD4+vLabj
P5i3OSWJxOvlOv+3+NPFQqpVVzipdc8TeP38X5P7jV5fRH8uvaL33C8Zn7tq
QZcIjicdplRp/OVOIj73dp8eXOd40h6nN9+8Ks7F6zMrwna5FeXQ4ecPb72z
OBuv17q8JSCUptDBWRtz5VJu4PUZXppmXdIv0IId9Qs5nnj9816lqxbfCCA7
lHVOcjzx+pBBnm0PDTxI9Lq9LOd44vW5frZyV3IyyGqNqCyOJ16/teSQeETL
NLLnq4pq1fJ8vD7r49kpHE+yt6hPFccTr19yau2d3Fl5ZNdLX/ObTpI/998y
JoPjScSHMj3iJJF4/bys/RM4noQM07Zv1/MEXm9rekezj2UWCY4+Mzj9+RHC
nwu1EXFGZVmZpLFz+o+GM9G4PnvU+KRV39LJAuvYdQVZF3D9e+N74yspV8im
8+6+jfdTcf0a7Kcb2w8+3wL4XNvY52rWR/acPLRA2EcuwO8LjsH7E/j1RFiX
yKxfgt99LIP3APDrh9fcN/KpLCe77pvp302JIfz5Xej2NmuhLnfe/Q7b1224
hOvjfCe33+heQuJ+Rf3c5nYN1w1vv5xw8fUN0t7RxrrtiwJctwTOKowz1q09
PK817HnhulbaujIj32RyXuHB8JO2EuTmufnZwfUn4kl0/+CuDXMycf0W1M8K
Vj/ILRY+71qZz5sk8zt9fn1k7YOYHx1ySDf/jxPStpfi/hWVDxoHV6aR7lWn
rN9eLcP1AKhPT1afuP/PK4ZaXvq8i0wxLn+Ssi0L96kd+iJA8nkX/a734b5w
vav6X+cF978f9ukss8+t8Hu0i/D7d35d9/qnpF55QcR8u3ej9a9y3KfDtxGR
A/OC6NPKwufC9So4j6PZecT9b7I4sM31RDxVyVpQVy/g3KeXxiVj32T69Gzp
6UjBcxkI+jCE6QPuP0Lmd/r8PtfD7xZr4Hfl/Ppgq4AFoZVpVCdmgqaQc1iJ
UcTPDjk0ZN2Er1cFzyUV9KeQ6Q/uv7Y84DN37ujdj7X57wXnrmCq3OTV39Jp
pMQt8LrgnLYBPVRjeoj794R9Vsrs0wx+39oIv9fm19vVtlRIeX2DVu/vvreN
oP6nT7mXwJ0X2tM/prPwvEhAb3WY3uL+5cMP23M6Q0Vn2inUC3Rm/eTdBpwu
0fqJml0vC3RpHui/3LIm/f+jG7DPcpl9zoffQWe17tJpUPVFEb/+Yejo19x5
p0P+WTX5ieC8e9kZWHH6QC/sLiisEOiDCvSX0ay/4P5dYJ/P2D4pv0/+c41j
nwvX+X6nx/od6jO/z8oRVyO2nEhM5/c5Ez5XMfy+mF/n9xnH9kn5fX6Ez6XJ
Pheu8/20L+unqP+FUCcRrE5wn3VQV7dZXeH6f9Df1Vl/x/1Pg33Wy+zTG+qq
An63y6/PgDrpweoE99kB6qqK1RWu+4B/mMj8A+5fHc5pHTunuM/dcK67sHP9
Z//gZ7SYn8H9u8I+H8rs84zM72H59XA4p8HsnOI+R/x9rnH9HPilX8wv4f7N
/9ZJ3Od+0NWpTFdx/fvf/g337wv7vCCzz42gq+vhd6b8+mXQySdMJ3GfT/L/
0lVcr//bH+L+naFPnWJ9CvfZHfpaGutruL4S/Oo85ldx/6Eyv4dFztDXNsPv
N/H8KrE+pcb6FO5zAPQ1NdbXcD0R/PAZ5odx/+/Bt3gx34L7nAQ+x5H5HFxv
BH+ezfw57v807NNRZp+nwZ88gd9F8uvDwT90Y/4B9zkM/MYV5jdw/Q74fyvm
/3H/PcCnqSo1+TTc52LwdVeZr8P1MZBHclgewf2fg33myOyT92NuBV/+ykEL
wC/9Zn4J93kI/FUG81e4rg955wHLO7j/A7FmarahlJxxcQmZuu4c6nwy7Oes
jK87ozZ0kLp2Gflw22urgU8m6vOWvYo7FB6mkCKHbvPOr0nD+yTCc1kt44te
Vg/Jn5iZTzzmfmpcdb0Y73P/9qTEyLERZL/XTauU7n98S8Tf9Yn3GSLX4lLb
D0mkPiq1U0bAH78x8YRayqmxEVQn39FQeB//v88p3ifh7dSn7T8k0agPxW/S
BffxaOlj3uphCn0W5JyULPhc/PsQHsj066gAx1ijzHz6yKnvROHnUhlf7c9x
pktaBadPFnA2B91+LNM3z5evXMlxpmNVVN31BZyPzG7K0XSD++vQd5auIv4+
fP+ygfeN8PeJvN2Ul6nGru2/9rTcLeLvowr7Wcj2Q2X3UyXTRy7Afkaz/WBd
bQc+TxgfvM8W4HNXRs+jgU8144P3sYHnNYI9L7xP+N++Du9zFZ7XSfa8/ug8
1I8/qx+8z96//S3epwvUTwOrH7zPWqjn26ye8T5RUM8uMjrzH9SzD6tnvM9u
OF+l7Hzhfc7C+aqQOe+xcL7a3mk6X3gf/v025w4VmYVX7sL32/Dvw5k9qU24
v+ZUfB8O/94b73Ees0YHH2723hsrA/ero3eHN3vvjeOgs+tX9Yxs9t6bloYH
V7aoiGr23pvXd56OW/36VLP33gz9dfZVuF1ss/feZJ997nF0Ylyz996MrFVL
atwS1+y9N++0t0Zlz4pt9t6bpI6j9L6YRDd7701VV69Crfzjzd57s3C6+arh
EwPwvTdjgedp4PkOeJYCN0/g5g3c9IHbfODWBbgpArc1wM0EuD0HbnLAzQG4
LQdur4Db/v/DbeH/4Sb+P9zuRjJu44Hbe+B2EbjNB27JwC0IuE0Ebo+BWzxw
Ww/clgI3H+Cmq9vY9L3k58t2HPPraGG4GubecnJyW6V12C7IpKkOF0MdTgDO
KcC5HjiPB542wFMJeCoDTyfgOQl4vgae8sDT7v/U4V7gKctNB7gZAp964JMN
fOYCn0Tgcxz4GAKf+8DnLPBZDnysgI+fzPuULFarN/Hh/y7Af29Evja7qmSD
W7PvjYweP3hP+OwDzb430i34uHmLS8HNvjcyqX+n4JsKEc2+N9JxSVJJ2L6T
zb43Mv3ydN3wxuhm3xt5FGqzcXVGTLPvjRQpVIW0fB7b7HsjHb6Whtm7xjX7
3kjnw3LzD/SLa/a9kdJYv5CDbWOafW/kX6u17l+VTjb73kiE2ex3AVtDmn1v
ZOi4l1Y/Rnjj90buwjndDefUE84p3weHwTmygHMke15MQGf4fvpu3bJSYhvU
rJ/y95Htp6c3qXaMmB6H/ZT/e8GTkrFO23+cbPb3grS9qkvWG0Ti3wv+BwP7
mkk=
        "], {{
          {RGBColor[1, 0, 0], EdgeForm[None], 
           GraphicsGroup3DBox[{Polygon3DBox[CompressedData["
1:eJxFm3f8T9Ufx+85t71EEqWMyE5KkpEVyiiZEUKaKtqFhERbJColpKmhPVXa
m9ZPO2nvoaGhfu+n18ujP87jvL/3c+65557zPu/36/U691trxOjeJ+aiKO7a
qCjKqFdH4e+KUXZJRVEhSpOwN416t6j3jrJt2E2j3i/KJmHXjbp5lLVRdorS
MMovUapFqR/l7yg7R2kcZbNoXy/qFlG2TrrWOsqWSfftG2VNlC18/09RNo9S
Ncp20aZZ1O2j/Oxr9PVblB2jNIiyTbT5l7HTR9K1lvSRNJZ9onzH+0SpwrvG
9VpR7xFlo7B3jXrPKBeGvSDqJVEuCHt+1HdGuTzsW6J+MMr5YV8X9R1RJoZ9
ZdQ3Rbk07HOizA57ctRXRX1zlFlh3xr1Q1EuCnsh8x5lZtLvD0Qpw65d6D3v
4rlRng77lFico6KcFPZpUR8T5ZSwL4nfF0V9T5Qi7JqF1uaypLHcH2Ve2NOj
3BD2uVFfXegdfmA9ouwQ5bNC618pyklhjIwyOuwxUR8R5cSwR0c9IsoJrFn0
MyDqo1izsPtFPTLKXmEfHPXQKK3C7h/1kVFOjPuGRzk+7BOiPjzKqLAPijbt
ogwKu1HUBxTqt1rSWnXBp5L8gt92TFrPrvhUku90Y83CPijqIVHahj0w6mPw
UXw1Svewf/S74sd7xLWeUQ/Gd8PuFfXhUf7Ch+yv39tH8O+vo1Qu5B+/R9mq
kK9/FWVj//YFPoSfRvkVn7ZffulrrOvnnmN87pNC+4w1axFj6B31cPw17L5R
H4G/ht0n6hFRTo45OzLKGJ6X5KcdojRJmgPe+ezYvP9EvY7nJPl1O94jaY92
ijIl7LmFfHFq2NdGfVuUo8OeGPV01hUfxpdZr7CnRn0FYwp7PP4b5biwz8V/
oxwb9uSoZzDvYU/CB6NMCHt0lGn4UtQXFNonZyb9zv4ZGfbZUV8c5ZSkvvHR
U5OuMdbTk8bCWM9IGuO8KKPCnhL15VHOSnr+fOYq7AsL7b0RYY8r9PeRMT+z
4+9Hwl4U9XOF9nK1uH5wks+MjTmeVervbmwK++2O0aZXXDsu7PZRHxLlsLAb
xvU+npf6bjMWHwq7b9J+aRr2oZ6X3cMe4LneJex+SftrbtgPR5kQdo2o+yft
wSa2WY+avhcfWBj1M4X2ePcYY+n40MjPZU6nJc3T7VHGJc0TcaePx8WYr0+a
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
dp/s2UPivbcr9b7d3H6e9+mpjif72saHu2SdbbB/O2TpMugmrbK4NPuos9fr
Kq/RKLfZK0tnmeI9Av9FDxmRdR75oGMX3BJe2T/GVbPUmeIRvg4Xuz7sJ7M4
VP8sXkqs65PFV/Gx4bYfsG9cZH/oF/3tXMqvBjl+ovUzlkkeD/2gPd3sd8GG
z/fNOndkbPjvDPtwJ/sw2kSf6LtqqXcflsVt77f/Y6NrLQx7WRY3Zu/Dt4kD
HW3TD3HuRMc64t5ox4dOtme7Pb49y3tqjMc5L+ylWddfTTrDA9tz3wTfy76b
vmFfZHF49s5gzxV8/rCs8+Ml3kfwefyWd73Ue7Z0zIFXHu4+OUMZ6vbw/Jey
uDY8nPw1x3lnZRYHgRuMyuLhT4R9Y9jPZPHnw2Ium5Q6CxmbxavhjMfbXkaM
yuL/8Mpjsjg8/P1022j6p2Wdu8DZj3P7x+1Xi+x73Is2xLOOzToros2h8fy6
pfyEe+d6nINtMz9nZJ3foEEMjLb1S/neCVm6wJNh3xD201ncdmSWvoA/n+Qx
wAHhCuBvsHc12+Bt+A14GiwNjoZvgLc/zMLltIE3fOV74THge7B9Fdvc+34W
Rgef7+A+seGj8FL46VFZ2gS6BOeMaBbstTFZZ2zw8dFZZ1Hod6e4DdrFqb6X
s5ZB8ZxGpc69XsniovBQ9hN7jH26OouPMc4B0XbXUthmkNcC3ILfoCOgIawu
pDXAK9FF0ErQVb6yvaEN+kN0sR5novWgjUzO0ug3nOeg068qpBUttY2ega5B
+0/8LDSNDXolWuXg6G+PUu+OPoFOsdLreK/nh49R0IT45uEz90k/Z2XpIMvt
t4/YZ/BtxoDPLw77uaxxoW/R5kP3yZnZM/b/a+1Xw70WxBlizALHmaFuc7dj
Efeisw3J0kPZ44vCfiprH+GraJFPeS9f5/3Lnp7nfT0ua+7Yg8zlU55LfBy9
mDOyo7POPtmDzMEyzwPnXy94vSZlaWdPJD3nDj93nPcL/cBx4cBw1WwbLgwf
XG0b3QJ+DpeBO2LDJYkpH9lmT5EjN3zDA/eGd8PXP/C95E/aoA98lKWP0AYt
4T1ffyuLw9f3eNBoatlnsGsW0ofQg6q6T/IxuXiNba7DvYjLxGT0GDTK2oX0
BPQFtIU3srQn7n0tS/tA90D7ROND34PzrbTd2HuNGLe7YybxqGmpWEpsbWa/
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
+3BE4jjn/vAkOAhncPADtBq+d0Kf+z97TYHT
              "]], 
             Polygon3DBox[CompressedData["
1:eJwtl3mgl0UVhufOJwqKZOIVF0yviiu5hCRRpiIiroiIuQGKKAiKSF7BJLOM
ApRNQEWpTLJIcMslI9cWlFKjRUQJaXHJ0FJTjKzseTrnj/fOOXPm993vmznn
vO+0jbzklPG1lNKhpZTNGG/H+URTygP4E7G/Cw7Ffxj/Cuz+2K8z7oFfGFeA
JeD5Er/pR/xl/B2w3wdH4b+KvxP2JvAb7N+CHVm/Jfgd9nNgnxJzR7P+DX3W
dmD8NtiduQX4p2Ef1sT6jaxdx9wa7BfAQfhtYDH2fqy5ndgo7FvBrvjX4Q/C
/gbYFr8dvy/2t3w3/Kn4A7G/Aw7EX4Y/Dvs2sDf+Ivxh2H2beP/3+F/PMncl
/tfBTsyNZe5I7D9idyX2DpiJvRpsItYZHEt8o88h1sr4KfxfMb5N7Gnmvog/
A+zC3MXMLcC+CRwHLsLvw7iS2GvYT7L+avyZYDfmJjD32Sb2oyH2MvgK/lyw
J3OXER+A/Tf3iNgWjFfhXws+hj2e+A3YC8Hx4FL8YxjfJtaL9V0Yp+BPAztj
jyM+EPtd7D7EuzJ+Gv+XjH8htpq5L+PPBrszN5G5L3kWYFf8S/CPwH4Je0vW
bgCH4/8evyP26+BG/JvBCeDzfjOxpeClEjm5IvN1Jf4asAj/I+4VsV7Y17tX
oDv+m2Awsc5gDPZhzM8FfwKt+K+CZ7GvBZ1KnMkc7PWgM7H1YF2N9z20RM7u
w7P2BSuwfwhuJrYF/tms7YF9A3gffAa/E+NCUIkPbYk9vxH8CxyNvw3jPPBX
0AP/XXAT9ofgBOxujAvAO6A3fmW8hmdd38T/auf/P8U4rUYtmyPfxO5GfArr
j8SeAZ4BbxBbydyfa9Rrf/zeYJa17DthryI+G/vFGv1hDVhb43xcu1eJer4O
bFWiJobwvz7qWbF2APOnYm8HJuMfj3+LedXE2bsXf6hRL4eXqOFXavSLASX2
+BZzg/Xn8/ue2G/VyMdhxE4CpxDrAsaaO8zPB38HPfE/AGea+9YQ9uga+2P9
bMtvG7+ZP58057CfAR/HPqAJ+1GwP3ZPc9p8A2dh72VO8rwLec4Z2G1gHv7I
GvljPXdjbcfMV/vnKuz1oBf2IeDFEs88CPtge1qJHJqT+f5ffnccz5ye9b8J
/yhrpEZ/HFLizM7O/FtMbIL7ku+7BL8d/yTszcDp+AfiD8LeHJyJfzD+idgt
YAj+fvgnY3cC5+H3wZ+V/eDf2AN9H8anwQY5Awwltj34ArETmX+zRn8ZWuIM
T7e32NOIn8X88NzfO/An4X8Ou7s9Bf8M+0YNfvFszYnTiO0IriF+qnWE/Wtr
gNha5r7q3nsmzF3O3M75vDvNfTAVez7Ym/gkz6SJb/Zb/cax2JPsd9gXlOiX
F5pvJeasL9cYswYvwr7CZ2CPKVF7i5qoe2uwQ/aqPWrs8b3ZP/ZnbV9wT9bT
nuYC+EkNfluKvdwcy3y/CnsmWJb7vTl2K3gk+9tU7PngiRr8thj7B+DurN/u
Jf5nk728rUYOuF/jwOgS3+C3Xt5Erp2f++U3+m2DWoIfzgMjSvQo+/cocI7n
m/x3DhiMfYTPwJ7YROxc1lxgLwDHWB8l+GOE/RG7X/KXv3Gta1bV4ES50DMe
aa9oIveHl+BH57T7M/c1c6+Jdx2efDPad5ZrW+LdJzSx1m8Yg93eRGwU/l3Z
D91bz8TfXtZErvuMO2vw99Yl9lS9ogaQ+zdm3J5pr5Tj1SNyoNwnB5vPagK1
gJrp/uzhNXv8vclRcpMc848aGkjtI6c+lv3bs/aMbVpqge41ava9Gpwul6sp
5HJ7rL1VfvlpDf1ibjxhjiTHyC1y3n3ZM+2VcuTPa+gf167KfixHy81quJ/V
0FfmqpxrP1LzqfXUbNa/mk+tp8awX6sZ1YpqCLXSxU1oBzXTAzU4slP27P/U
0Eit2f/M5/9zcEtw0trsAda+GuEXNTSRWkjNIT+rEdWGaoplyXly3YY8bzlN
LpMDH62hB621RXJ4Dc6Va+Xsx2voQ2NLs37VDGoFOfHHNfje3mNNflBDE3XN
fim/qcnUYmrCB2twvlzfO/lXzaPWUTMvr6EP5Ed7wD9raLAu2f+tD/uf3CvH
+Dz1wOASNen7qIHUPmqQrZrQO7OJXV2CW+Zkf7JPlez/V5bQl3LN9Mwv88zz
9k7gXUBN3TH5YUaJ32zdBP/OtXeW4IpZ2W/sO/KpnClX2vO3aYJj5BY1QmsT
HC53yyHyoZwml93nnjWh2dRqagj7mXzmt1ya/VPNr9b3jjAi88teZI8x/9X0
ank1vHyuJlALyJHysZwpVz6U76d+WVjiG30/+e3WEt/o+6hn5Bb3dIcm+GlJ
id9Yv+phe50cbX6qh9tKaA7rVf1v7xma/d47iXcRNc73a+gD32Ut8R5N6A21
yN0l6tM7mXcx7yjqFzlVLl1uj2lC76hV5MDdmtAnalPf8Xs19IZ7uxr/jhr6
x9+uw9+lCb72f/nN8pl6wbNVf8t1kzPf5Tz1rxpI7aMGsZ7VX8fK/dlv1Ndy
Xb8S/UY9Lhe6Znb2Y5/tHWF69nvvPubgzOQPz9o7jncZ+Vqt653Gu8j4JnLX
O4m9zx4oVz1Ug/vlh8klNIBaQf5WC6gZrHf1ue86Or9PTpfrf1TjriKfebfy
zjIj+cS7knc0a0n+9G5lTc1K/vCuYw24n2oktZEa6Nx8X7lvWPK5Gl1t7p3F
elKjqc3GZv2q4dRuY7I/qInVwt4hzD81t1pbjWQ/807rXbY9+cb7hHs/OPWC
d1rvst6JzS81mtpMTWu+qLnUWvOSf7xDe3eekvmlZlOrqanVW2p8tf207Jfe
2b2re6f+H4ti520=
              "]], 
             Polygon3DBox[{{868, 881, 696, 762, 96}, {875, 888, 697, 767, 
              103}, {919, 872, 100, 765, 766}, {918, 870, 98, 763, 764}, {917,
               865, 93, 760, 761}}]}]}, {}, {}, {}, {}}, {
          {GrayLevel[0], Line3DBox[CompressedData["
1:eJwl0UsrRGEcB+D3uF8HX2A0H8CUPcqa1FhSwo5CdmzkOkYuZcNOWbiXUmyF
mU8w7nfK55DnZPHr+f3fznnfc0kNT/SORyGEMVksCSHus/xho0QWmtnENFNs
Zyu72cl+ZjhYGsKoPqRPc5I5znGbm9znLi94xgKvmXXmbXwtr8x3+r0cmB/4
KIf6E5/lRY7Mr3yTY/2dH3Kif/JL8vZaNn/r87wxF/VL5nnKc+5wjxvc4kx8
H+OPM8WsdxvQR/Qe9rGDXUyzjUm2MMEkf2XJmQ1cYNF6Qq+XdXMda2VNr2G1
rOpVrJQKWTGXs0xyuscICIXo/3/9AaekNh0=
            "]]}, {}, {}, {
           Line3DBox[{648, 712, 713, 824, 714, 715, 827, 728, 729, 830, 736, 
            737, 833, 744, 745, 836, 752, 753, 839, 760, 761, 920, 842, 768, 
            769, 845, 776, 777, 848, 784, 785, 851, 792, 793, 854, 800, 801, 
            857, 808, 809, 860, 816, 817, 679}], 
           Line3DBox[{649, 716, 684, 650, 717, 686, 655, 730, 688, 657, 738, 
            690, 659, 746, 692, 661, 754, 694, 663, 762, 696, 923, 665, 770, 
            698, 667, 778, 700, 669, 786, 702, 671, 794, 704, 673, 802, 706, 
            675, 810, 708, 677, 818, 710, 680}], 
           Line3DBox[{651, 718, 719, 825, 720, 721, 828, 731, 732, 831, 739, 
            740, 834, 747, 748, 837, 755, 756, 840, 763, 764, 921, 843, 771, 
            772, 846, 779, 780, 849, 787, 788, 852, 795, 796, 855, 803, 804, 
            858, 811, 812, 861, 819, 820, 681}], 
           Line3DBox[{652, 722, 723, 826, 724, 725, 829, 733, 734, 832, 741, 
            742, 835, 749, 750, 838, 757, 758, 841, 765, 766, 922, 844, 773, 
            774, 847, 781, 782, 850, 789, 790, 853, 797, 798, 856, 805, 806, 
            859, 813, 814, 862, 821, 822, 682}], 
           Line3DBox[{653, 726, 685, 654, 727, 687, 656, 735, 689, 658, 743, 
            691, 660, 751, 693, 662, 759, 695, 664, 767, 697, 924, 666, 775, 
            699, 668, 783, 701, 670, 791, 703, 672, 799, 705, 674, 807, 707, 
            676, 815, 709, 678, 823, 711, 683}]}, 
          Line3DBox[{864, 891, 903, 877, 863, 892, 904, 878, 865, 917, 920, 
           905, 879, 866, 893, 906, 880, 867, 894, 907, 923, 881, 868, 895, 
           908, 882, 869, 896, 909, 883, 870, 918, 921, 910, 884, 871, 897, 
           911, 885, 872, 919, 922, 912, 886, 873, 898, 913, 887, 874, 899, 
           914, 924, 888, 875, 900, 915, 889, 876, 901, 916, 890, 902}]}},
        VertexNormals->CompressedData["
1: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
s4Lqau8y34vgV1Tqls6C8y6ncITyc1hHcBn4laE4mWPgX9gawvS8J7mrHwZf
YpV/TBvOu5mHAPWH0Wd0v4Avf6kT4NFE6lTAjSHKz7fxua/Bf8sfaVcmeRRv
5eqneFa2l0WB/15tXG5qTuqUicBT6sNvx7x9Af47MFEtFvx4avMdiqfI7uQs
8N+LfT4+Bj/uflGf6uenS4/iwX8bvntz8gupU2Lp0fS8n/xQ2wL5c6hwrbcF
qVNceeYigKfwwHpt8N8FlzNiwI/L8hZ1AZ7/kqWfgv+W9Jxw9C+pUxJeXuMB
T2FVg0HIn5E7Grw/kjq1bp4TPe88LxcVgv9uky9UCyB1yrjWkOJ51MnyPvjv
+XqtK5VInWrSUKH8/BgR3w750+SGbRX48cSIFx2A5xbfgk3gs+2TLn4F3316
1wg/e5mcWW8/3bpkoiFLi8mbrUyeNI/YofRK0JDV6j6SKyVDR/JkoL+R8WIv
Y9YHj5Fc+YXJk/9yHt+6pmnC6t81kisP+4/kyVUJE4eb64xYiMmV/CYjeXLX
8Bnx7DAjli6TK/uZPJnbc8RBcNseVoPISK58wuTJRz+jn3ziN2EpMbmym8mT
b8zmBQ+eM2b1WIzkymtNI3nSEhuV38g1ZvnWjuTKA6dG8uTqJUJvBhQNWYjJ
lTlMnqyvEnqngI1YTkyunJ4zkie9WzM/dTsYssYzuXJ65EhujODii3WKMmDd
ahqp+1xbed8DP2NWSTwk/ERirTPpeecpUkkBfuZtOGcK/ZKs5Rcpnmrsr9eB
n76nn14i/ETvwx9Tnzw9918C8HOe379ywk/0guFnvkPzC+Dn5reldYSf6AV2
oee9mPvJLeDnNrl9dwk/kSjDz0/+MjXAz8kKA08JP5HUggSKp6KapTrw83rm
zXLCT6RvFzoefNTcO8seAD9nP1OJIPxEyDYoEPD0UL/QA/yMOG/3nPATDS9c
WAZ4Fhn4ZAI/rQx6LQg/kSHDz+fbP4QDP91jnh4m/ERhmoGUnwcaPtUDPzNf
1nNDv+SwvQw97zynkxHwc85TFz7oi4zyU3fle2XQzyJ+2RXQF3T/MVKPnEWX
VoB+3r5q5QH9v0eMfu45/UcH9HPBj+cNRD+R5PyRelQksLgG9PNI/ri10P/b
hCpo7oi97JUC+rmjqnaY6CfqZvRTSX3/VaqfKp5fiH6iYkY/1xV0Xwb9LLQT
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
tJTB50yD7TjAZ4O8/EaCDxJm8PHyFVOXI/iL3d6zE+av7j1J5+vLXBXaSfD/
u3ydA8zvro2vg/nHhVIy4fnufef0D/YTki1M9y865JACz/fNtwof2E9BATdd
P3bp03Dg4QVtbX/CQ9Sth+j8yTt3uwB/xFwsggh/UMgsc7p+jcAIzw/EbPY9
IxnBesDwfJDhua/Oo+nKNyJYvxmexzHv2d5l3rN9y/DZzm+EzzpPI+Ze6I5g
XWH4nMPwmWup9c6JieGszwyfdc4tkjdd1I3nPbXXa48sw3N1Im8dqMlBz5MH
nt0T6MI5NgOR42o/4KxJqf5Z/eVY+skL66K5rTgsfnO3n0szTu65dhPmR4Sf
cnmv34LV5HdPHxf3DYv3RNL5+rIBLE+hCmxXUGxbbNGFe6wu0PmK8sfq3uh8
xguVr4jL67JxzMrldH5nv1fjt69PkOedrNDa0xws6r4qCuYfsltbH9H1GL2T
FzJo296NJ5vb0PmzZtdzPwisR1ke2d2Bhp1YUOVYJMwPb+Tx32Jch3Sski22
G3Xg0M4BP5h/fvMysVliHchsHp9Vd14DFp+teBvmL18uMXPpjHYUM9VvKmd+
AzbWG9n/9bTDkmrqHNTBEXGWLMvCFQIxdP2Tn7K/9U7rRrML57meQVk48EQc
nd90cbYtwRMJps6OaI0sQzvWYjr/1KdD/QRPlJLp/ZOr9gOSfWFO53+1SRxf
PLcVcYZ0NhA8kaBpE8UnZ9LTaSX6LSgoWPUkd9w3NO+TC52vmryt4aJQBXq3
IlaS4In2/p1G5/PdYdtl63xG9/DlvAW6bKQQKkrnFw9afaj9+gQvX/Y8juCJ
3k9QpXgGrFsz63rXY1wRImVF8ETSdoJ0fga/kEtsYD0OXyJvFmTYiSIWudP9
8+0unr7ZuA6/2qJbSvBEth0L6Xw534TQmWIdWLP1swwnrwFpzNlJ92PWVnlH
dUY7FvrqjQmeqPG0CZ3/e012/wp1Dv6yIvvXzLIs9PLpLDpfa9/cHIIn1s70
+OKOslDXJWE63yszJena/W78+2LdyRWXsvCWJzVH/34sQbOscT/XrS78aMly
x0pUhpuklI7B+HPjrqfqEe34/Bm/cSucG7BlyVc67nfwWpvXqxbsoBj9LF24
Gc+4M9kOxl9/SvkJ+4m6nLN3Fnm+nNURlP92lZbe8Lt+D2qtIL8L63D06D5H
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
Pd3I1NPRvxeQ9bf/b38vIOuL//ffC/4fvQYU1w==
         "]],
       Axes->False,
       Background->RGBColor[1, 
         Rational[82, 85], 
         Rational[14, 15]],
       Boxed->False,
       ImageSize->Scaled[1],
       Method->{},
       PlotRange->{{-0.299823326344286, 
        0.2998233263442558}, {-0.299462627196952, 
        0.299462627196952}, {-1.732050612422391, 0.9999998048535137}},
       PlotRangePadding->{
         Scaled[0.02], 
         Scaled[0.02], 
         Scaled[0.02]},
       SphericalRegion->True], 
      GraphicsBox[
       GeometricTransformationBox[GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Bad\"\>",
           StripOnInput->False,
           LineColor->RGBColor[
             Rational[2, 3], 0, 0],
           FrontFaceColor->RGBColor[
             Rational[2, 3], 0, 0],
           BackFaceColor->RGBColor[
             Rational[2, 3], 0, 0],
           GraphicsColor->RGBColor[
             Rational[2, 3], 0, 0],
           FontFamily->"Helvetica",
           FontSize->Scaled[0.3],
           FontWeight->Bold,
           FontColor->RGBColor[
             Rational[2, 3], 0, 0]], {0, 0}], {{{
          0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
          0.766044443118978}}, Center}], {1., 0}],
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, False}, {False, False}},
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[1], 
       GrayLevel[1], 
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25], 
       Scaled[0.35]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.01]}}, "Rows" -> {{
        Scaled[0.02]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.5844458186324043`*^9, 3.5844481472179956`*^9, 
  3.5844513032280903`*^9, 3.584451409048431*^9, 3.584451822764337*^9, 
  3.584452334667102*^9, 3.584452577699649*^9, 3.5844536257004757`*^9, 
  3.584453760320094*^9, 3.584453923339946*^9, 3.584455423870867*^9, 
  3.584455490001206*^9, 3.584470651068644*^9, 3.584473583714806*^9, 
  3.584476524204803*^9, 3.584476898852376*^9, 3.584477704530182*^9, 
  3.5847985979364758`*^9, 3.5849049554156427`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"badOrbi", " ", "=", " ", 
     RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AdjacencyOrbigraph", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "2", ",", "1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "2"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"VertexSize", " ", "\[Rule]", " ", ".09"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"EdgeShapeFunction", "\[Rule]", " ", 
          RowBox[{"GraphElementData", "[", 
           RowBox[{"\"\<FilledArrow\>\"", ",", " ", 
            RowBox[{"\"\<ArrowSize\>\"", "\[Rule]", " ", ".1"}]}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"1", " ", "\[Rule]", " ", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
               RowBox[{"204", "/", "255"}], ",", " ", "0", ",", "0"}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"2", "\[Rule]", " ", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
               RowBox[{"230", "/", "255"}], ",", " ", 
               RowBox[{"193", "/", "255"}], ",", " ", "0"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"3", "\[Rule]", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
               RowBox[{"180", "/", "255"}], ",", " ", 
               RowBox[{"82", "/", "255"}], ",", " ", 
               RowBox[{"204", "/", "255"}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"EdgeLabelStyle", " ", "\[Rule]", " ", "20"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"Scaled", "[", ".4", "]"}]}]}], "\[IndentingNewLine]", 
        "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"goodOrbi", " ", "=", " ", 
     RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AdjacencyOrbigraph", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", "1", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"1", ",", "0", ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"2", ",", "2", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"VertexSize", " ", "\[Rule]", " ", ".09"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"1", " ", "\[Rule]", " ", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
               RowBox[{"204", "/", "255"}], ",", " ", "0", ",", "0"}], 
              "]"}]}], ",", "\[IndentingNewLine]", 
            RowBox[{"2", "\[Rule]", " ", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
               RowBox[{"230", "/", "255"}], ",", " ", 
               RowBox[{"193", "/", "255"}], ",", " ", "0"}], "]"}]}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"3", "\[Rule]", 
             RowBox[{"RGBColor", "[", 
              RowBox[{
               RowBox[{"180", "/", "255"}], ",", " ", 
               RowBox[{"82", "/", "255"}], ",", " ", 
               RowBox[{"204", "/", "255"}]}], "]"}]}]}], 
           "\[IndentingNewLine]", "}"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"EdgeShapeFunction", "\[Rule]", " ", 
          RowBox[{"GraphElementData", "[", 
           RowBox[{"\"\<FilledArrow\>\"", ",", " ", 
            RowBox[{"\"\<ArrowSize\>\"", "\[Rule]", " ", ".1"}]}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{"EdgeLabelStyle", " ", "\[Rule]", " ", "20"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"Scaled", "[", ".4", "]"}]}]}], "\[IndentingNewLine]", 
        "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ShowOrbigraphGrid", "[", "slide_Integer", "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Grid", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slide", " ", ">", " ", "1"}], ",", " ", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Infinite k-Tree Cover\>\"", ",", " ", "\"\<Subsection\>\"", 
              ",", " ", 
              RowBox[{"FontSize", "\[Rule]", " ", 
               RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}], ",", " ", 
            RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Item", "[", 
           RowBox[{
            RowBox[{"Spacer", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"True", ",", " ", "True"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slide", " ", ">", " ", "0"}], ",", " ", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Orbigraph\>\"", ",", " ", "\"\<Subsection\>\"", ",", " ", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}], ",", " ", 
            RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Item", "[", 
           RowBox[{
            RowBox[{"Spacer", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"True", ",", " ", "True"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slide", " ", ">", " ", "2"}], ",", " ", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Finite k-Regular Cover\>\"", ",", " ", "\"\<Subsection\>\"",
               ",", " ", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}], ",", " ", 
            RowBox[{"Spacer", "[", "1", "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slide", " ", ">", " ", "1"}], ",", " ", 
            RowBox[{"SetProperty", "[", 
             RowBox[{
              RowBox[{"CreateUniversalCovering", "[", 
               RowBox[{"goodOrbi", ",", "3"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"VertexSize", "\[Rule]", ".3"}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "}"}]}], "]"}], ",",
             " ", 
            RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Item", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"slide", " ", ">", " ", "1"}], ",", " ", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Arrowheads", "[", ".3", "]"}], ",", 
                  RowBox[{"Thickness", "[", ".05", "]"}], ",", 
                  RowBox[{"Arrow", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".3"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{".3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
                ",", " ", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".3"}], ",", " ", ".3"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], "}"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", " ", 
              RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"True", ",", " ", "True"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slide", " ", ">", " ", "0"}], ",", "\[IndentingNewLine]",
             "\[IndentingNewLine]", 
            RowBox[{"Overlay", "[", "\[IndentingNewLine]", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"SetProperty", "[", 
                RowBox[{"goodOrbi", ",", " ", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", 
               "\[IndentingNewLine]", "\[IndentingNewLine]", 
               RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"slide", " ", ">", " ", "4"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Translate", "[", 
                    RowBox[{
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Text", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Good\>\"", ",", " ", "Bold", ",", " ", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], 
                    ",", " ", 
                    RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".3", "]"}]}], ",", " ", 
                    RowBox[{"Darker", "@", "Green"}]}], "]"}], "]"}], ",", 
                    " ", 
                    RowBox[{"40", "Degree"}]}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1.0", ",", "0"}], "}"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
                 " ", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}]}], "}"}], 
             "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Item", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"slide", " ", ">", " ", "2"}], ",", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Arrowheads", "[", ".3", "]"}], ",", 
                  RowBox[{"Thickness", "[", ".05", "]"}], ",", 
                  RowBox[{"Arrow", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{".3", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".3"}], ",", "0"}], "}"}]}], "}"}], "]"}]}], 
                 "}"}], ",", " ", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".3"}], ",", " ", ".3"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], "}"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", " ", 
              RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"True", ",", " ", "True"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slide", " ", ">", " ", "2"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Item", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"SetProperty", "[", 
               RowBox[{
                RowBox[{"CreateFiniteCoveringGraph", "[", 
                 RowBox[{"Normal", "@", 
                  RowBox[{"WeightedAdjacencyMatrix", "@", "goodOrbi"}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", "1.0", "]"}]}], "}"}]}], "]"}], " ", 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Background", " ", "\[Rule]", " ", 
               RowBox[{"Opacity", "[", 
                RowBox[{".5", ",", " ", "Green"}], "]"}]}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Spacer", "[", "1", "]"}]}], "\[IndentingNewLine]", 
           "]"}]}], "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slide", " ", ">", " ", "1"}], ",", 
            RowBox[{"SetProperty", "[", 
             RowBox[{
              RowBox[{"CreateUniversalCovering", "[", 
               RowBox[{"badOrbi", ",", "4"}], "]"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"VertexSize", "\[Rule]", ".3"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "}"}]}], "]"}], ",", 
            RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Item", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"slide", " ", ">", " ", "1"}], ",", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Arrowheads", "[", ".3", "]"}], ",", 
                  RowBox[{"Thickness", "[", ".05", "]"}], ",", 
                  RowBox[{"Arrow", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".3"}], ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{".3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
                ",", " ", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".3"}], ",", " ", ".3"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], "}"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", 
              RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"True", ",", " ", "True"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slide", " ", ">", " ", "0"}], ",", 
            RowBox[{"Overlay", "[", 
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"SetProperty", "[", 
                RowBox[{"badOrbi", ",", " ", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", 
               "\[IndentingNewLine]", 
               RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"If", "[", 
                  RowBox[{
                   RowBox[{"slide", " ", ">", " ", "5"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"Translate", "[", 
                    RowBox[{
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Text", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Bad\>\"", ",", " ", "Bold", ",", " ", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], 
                    ",", " ", 
                    RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".3", "]"}]}], ",", " ", "Red"}], 
                    "]"}], "]"}], ",", " ", 
                    RowBox[{"40", "Degree"}]}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1.0", ",", "0"}], "}"}]}], "]"}], ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
                 " ", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}]}], "}"}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Item", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"slide", " ", ">", " ", "3"}], ",", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"Arrowheads", "[", ".3", "]"}], ",", 
                  RowBox[{"Thickness", "[", ".05", "]"}], ",", 
                  RowBox[{"Arrow", "[", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{".3", ",", "0"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".3"}], ",", "0"}], "}"}]}], "}"}], "]"}]}], 
                 "}"}], ",", " ", 
                RowBox[{"PlotRange", "\[Rule]", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".3"}], ",", " ", ".3"}], "}"}], ",", " ", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], "}"}]}], ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", 
              RowBox[{"Spacer", "[", "1", "]"}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"True", ",", " ", "True"}], "}"}], ",", 
               RowBox[{"{", 
                RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slide", " ", ">", " ", "3"}], ",", 
            RowBox[{"Item", "[", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Text", "[", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\[Times]\>\"", ",", " ", "Red", ",", 
                 RowBox[{"FontSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", ".6", "]"}]}], ",", " ", 
                 RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Background", "\[Rule]", 
               RowBox[{"Opacity", "[", 
                RowBox[{".3", ",", " ", "Red"}], "]"}]}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Spacer", "[", "1", "]"}]}], "]"}]}], 
         "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", "\[IndentingNewLine]", 
      RowBox[{"Alignment", "\[Rule]", "Center"}], ",", "\[IndentingNewLine]", 
      
      RowBox[{"ItemSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Scaled", "[", ".25", "]"}], ",", 
          RowBox[{"Scaled", "[", ".10", "]"}], ",", " ", 
          RowBox[{"Scaled", "[", ".25", "]"}], ",", " ", 
          RowBox[{"Scaled", "[", ".10", "]"}], ",", "  ", 
          RowBox[{"Scaled", "[", ".25", "]"}]}], "}"}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Scaled", "[", ".01", "]"}], ",", 
         RowBox[{"Scaled", "[", ".02", "]"}]}], "}"}]}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"Background", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
         "White", ",", " ", "White", ",", "highlightColor", ",", " ", 
          "White"}], "}"}], "}"}]}], ",", "\[IndentingNewLine]", 
      RowBox[{"Frame", "\[Rule]", "All"}]}], "\[IndentingNewLine]", "]"}]}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"ShowOrbigraphGrid", "[", "1", "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.583689204783654*^9, 
   3.5836892059379377`*^9}, {3.583689247574144*^9, 3.583689253766901*^9}, 
   3.5836894292191153`*^9, 3.583690035795977*^9, 3.583692209784424*^9, {
   3.583775088515678*^9, 3.583775101231744*^9}, {3.583786434962036*^9, 
   3.583786483895177*^9}, {3.5838692486544113`*^9, 3.583869272224636*^9}, {
   3.58386934775286*^9, 3.583869350350371*^9}, {3.583869506301964*^9, 
   3.5838695147494707`*^9}, {3.5838698274605713`*^9, 3.583869876444372*^9}, {
   3.583950970921329*^9, 3.583950983399239*^9}, {3.584106329957271*^9, 
   3.5841063464142447`*^9}, {3.584125333308248*^9, 3.584125333540291*^9}, {
   3.584195107763858*^9, 3.584195138631399*^9}, {3.584195302158284*^9, 
   3.584195374825238*^9}, {3.584195454266306*^9, 3.5841955032225103`*^9}, {
   3.584195599408515*^9, 3.584195639270626*^9}, {3.584195677525853*^9, 
   3.584195683081524*^9}, {3.584196554938385*^9, 3.584196558322584*^9}, {
   3.5841977797627583`*^9, 3.584197787199843*^9}, {3.584197824378058*^9, 
   3.584197990483066*^9}, {3.584198058948021*^9, 3.5841981594176073`*^9}, {
   3.584208745561983*^9, 3.584208746441575*^9}, {3.5842087981701307`*^9, 
   3.584208855354003*^9}, {3.584298446287365*^9, 3.584298529295892*^9}, {
   3.584298694359271*^9, 3.584299014467272*^9}, {3.58429907002599*^9, 
   3.5842991415998363`*^9}, {3.584299188646434*^9, 3.5842991952765713`*^9}, {
   3.584299271505011*^9, 3.584299272791916*^9}, {3.584299353223269*^9, 
   3.5842994681249866`*^9}, {3.584299546973187*^9, 3.5842995509343367`*^9}, {
   3.5842996701139727`*^9, 3.5842997584997377`*^9}, {3.584404361428561*^9, 
   3.584404784950856*^9}, {3.58440488710564*^9, 3.584405262687581*^9}, {
   3.5844054264923267`*^9, 3.584405439145966*^9}, {3.584406098134862*^9, 
   3.5844061146376953`*^9}, {3.584406145592103*^9, 3.584406258030322*^9}, {
   3.584406547280815*^9, 3.584406549728751*^9}, {3.584406984383525*^9, 
   3.584406990070388*^9}, {3.584444713514359*^9, 3.584444725332715*^9}, {
   3.584444775719221*^9, 3.584444791129965*^9}, {3.584444836785994*^9, 
   3.5844448813580103`*^9}, {3.584445980330118*^9, 3.584446022817713*^9}, {
   3.5844460593750277`*^9, 3.584446075350088*^9}, {3.58444828115954*^9, 
   3.5844484665603027`*^9}, {3.584448524770911*^9, 3.5844485337279177`*^9}, {
   3.584448585975974*^9, 3.584448628717102*^9}, {3.584448684771564*^9, 
   3.5844488552296543`*^9}, {3.584450727247842*^9, 3.584450749852178*^9}, 
   3.584451312337721*^9, {3.584451957029729*^9, 3.584452008061515*^9}, {
   3.584452556486807*^9, 3.584452556676672*^9}, {3.584453604646372*^9, 
   3.584453613413517*^9}, {3.5844538645295486`*^9, 3.584453899785058*^9}, {
   3.584455462822715*^9, 3.584455467303341*^9}, {3.5844736975322313`*^9, 
   3.5844737158354063`*^9}, {3.584473774164027*^9, 3.584473776248798*^9}, {
   3.5844738161512947`*^9, 3.584473817101828*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Orbigraph\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]]},
    {
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3}, {
            SparseArray[
            Automatic, {3, 3}, 0, {
             1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
            Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
            EdgeShapeFunction -> {
              GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
            EdgeWeight -> {1, 3, 1, 3, 2, 2}, ImageSize -> Scaled[1.], 
            VertexSize -> {0.09}, VertexStyle -> {2 -> RGBColor[
                Rational[46, 51], 
                Rational[193, 255], 0], 1 -> RGBColor[
                Rational[4, 5], 0, 0], 3 -> RGBColor[
                Rational[12, 17], 
                Rational[82, 255], 
                Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                0.3954100979887313, -0.37993503101780424`}, {
                0.44429670652560765`, -0.38346806780211296`}, {
                0.49295692129322827`, -0.38934738255181967`}, {
                0.5412782000680146, -0.3975593774815831}, {
                0.5891487845236741, -0.408085059741211}, {
                0.6364579587078756, -0.42090008534266654`}, {
                0.6830963051081035, -0.43597481546328354`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$1"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$1", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                0.010621778264911619`}, {-0.3648076211353314, 
                0.610621778264911}, {-0.33928696614102627`, 
                0.6524676742622335}, {-0.31178396226487193`, 
                0.6930382007678794}, {-0.28236221895097113`, 
                0.7322395255353922}, {-0.25108978333865395`, 
                0.7699809830328253}, {-0.21803898288182322`, 
                0.8061752841356209}, {-0.18328625806871401`, 
                0.8407387180104745}, {-0.14691198562895147`, 
                0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$2"], 
             InsetBox[
              FormBox[
               StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$2", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.6830963051081028, -0.5640251845367187}, {
                0.636457958707875, -0.5790999146573355}, {
                0.5891487845236735, -0.5919149402587909}, {
                0.5412782000680137, -0.6024406225184188}, {
                0.4929569212932275, -0.6106526174481819}, {
                0.4442967065256069, -0.6165319321978884}, {
                0.39541009798873045`, -0.6200649689821971}, {
                0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$3"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$3", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.7191134181554866, -0.3735913457232625}, {
                0.682739145715724, -0.34073871801047506`}, {
                0.647986420902615, -0.30617528413562134`}, {
                0.6149356204457841, -0.2699809830328256}, {
                0.583663184833467, -0.2322395255353924}, {
                0.5542414415195662, -0.1930382007678796}, {
                0.5267384376434119, -0.15246767426223357`}, {
                0.5012177826491069, -0.11062177826491115`}, {
                0.15480762113533175`, 0.48937822173508894`}, {
                0.13132833965468138`, 0.5324027052800367}, {
                0.1099447349939594, 0.5765062685699912}, {0.09070626354023958,
                 0.6215869080872107}, {0.07365742037777057, 
                0.6675403605144072}, {0.05883763637894179, 
                0.7142603438768308}, {0.046281187007849445`, 
                0.76163880335314}, {0.036017113047383975`, 
                0.8095661611865443}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$4"], 
             InsetBox[
              FormBox[
               StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$4", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 
                1.}, {-0.03601711304738375, 
                0.8095661611865439}, {-0.046281187007849, 
                0.7616388033531397}, {-0.05883763637894135, 
                0.7142603438768306}, {-0.07365742037777012, 
                0.667540360514407}, {-0.09070626354023947, 
                0.6215869080872107}, {-0.10994473499395929`, 
                0.5765062685699913}, {-0.1313283396546815, 
                0.5324027052800367}, {-0.15480762113533164`, 
                0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, "DynamicName", BoxID -> 
              "EdgeLabelID$5"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$5", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                0.14691198562895247`, 0.8735913457232614}, {0.183286258068715,
                 0.840738718010474}, {0.21803898288182422`, 
                0.8061752841356202}, {0.25108978333865495`, 
                0.7699809830328245}, {0.282362218950972, 
                0.7322395255353913}, {0.3117839622648728, 
                0.6930382007678785}, {0.33928696614102716`, 
                0.6524676742622324}, {0.36480762113533227`, 
                0.61062177826491}, {0.7112177826491075, 
                0.010621778264909898`}, {
                0.7346970641297578, -0.03240270528003786}, {
                0.7560806687904799, -0.07650626856999232}, {
                0.7753191402441997, -0.12158690808721184`}, {
                0.7923679834066687, -0.16754036051440824`}, {
                0.8071877674054975, -0.2142603438768319}, {
                0.8197442167765898, -0.2616388033531412}, {
                0.8300082907370552, -0.30956616118654545`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$6"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$6", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
               0.07794228634059945], 
              RGBColor[
               Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8660254037844389, -0.5000000000000012}, 
               0.07794228634059945], 
              RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$2"], 
            TagBox[
             StyleBox[
              DiskBox[{1.8369701987210297`*^-16, 1.}, 0.07794228634059945], 
              RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{2.400693309010096, 
            279.5993066909899}, {-127.82490669098988`, 123.2393066909899}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]], 
      GraphicsBox[{},
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]]},
    {
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3}, {
            SparseArray[
            Automatic, {3, 3}, 0, {
             1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
            Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
            EdgeShapeFunction -> {
              GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
            EdgeWeight -> {2, 1, 1, 2, 2, 1}, ImageSize -> Scaled[1.], 
            VertexSize -> {0.09}, VertexStyle -> {2 -> RGBColor[
                Rational[46, 51], 
                Rational[193, 255], 0], 1 -> RGBColor[
                Rational[4, 5], 0, 0], 3 -> RGBColor[
                Rational[12, 17], 
                Rational[82, 255], 
                Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                0.3954100979887313, -0.37993503101780424`}, {
                0.44429670652560765`, -0.38346806780211296`}, {
                0.49295692129322827`, -0.38934738255181967`}, {
                0.5412782000680146, -0.3975593774815831}, {
                0.5891487845236741, -0.408085059741211}, {
                0.6364579587078756, -0.42090008534266654`}, {
                0.6830963051081035, -0.43597481546328354`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$1"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$1", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                0.010621778264911619`}, {-0.3648076211353314, 
                0.610621778264911}, {-0.33928696614102627`, 
                0.6524676742622335}, {-0.31178396226487193`, 
                0.6930382007678794}, {-0.28236221895097113`, 
                0.7322395255353922}, {-0.25108978333865395`, 
                0.7699809830328253}, {-0.21803898288182322`, 
                0.8061752841356209}, {-0.18328625806871401`, 
                0.8407387180104745}, {-0.14691198562895147`, 
                0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$2"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$2", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.6830963051081028, -0.5640251845367187}, {
                0.636457958707875, -0.5790999146573355}, {
                0.5891487845236735, -0.5919149402587909}, {
                0.5412782000680137, -0.6024406225184188}, {
                0.4929569212932275, -0.6106526174481819}, {
                0.4442967065256069, -0.6165319321978884}, {
                0.39541009798873045`, -0.6200649689821971}, {
                0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$3"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$3", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.7191134181554866, -0.3735913457232625}, {
                0.682739145715724, -0.34073871801047506`}, {
                0.647986420902615, -0.30617528413562134`}, {
                0.6149356204457841, -0.2699809830328256}, {
                0.583663184833467, -0.2322395255353924}, {
                0.5542414415195662, -0.1930382007678796}, {
                0.5267384376434119, -0.15246767426223357`}, {
                0.5012177826491069, -0.11062177826491115`}, {
                0.15480762113533175`, 0.48937822173508894`}, {
                0.13132833965468138`, 0.5324027052800367}, {
                0.1099447349939594, 0.5765062685699912}, {0.09070626354023958,
                 0.6215869080872107}, {0.07365742037777057, 
                0.6675403605144072}, {0.05883763637894179, 
                0.7142603438768308}, {0.046281187007849445`, 
                0.76163880335314}, {0.036017113047383975`, 
                0.8095661611865443}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$4"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$4", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 
                1.}, {-0.03601711304738375, 
                0.8095661611865439}, {-0.046281187007849, 
                0.7616388033531397}, {-0.05883763637894135, 
                0.7142603438768306}, {-0.07365742037777012, 
                0.667540360514407}, {-0.09070626354023947, 
                0.6215869080872107}, {-0.10994473499395929`, 
                0.5765062685699913}, {-0.1313283396546815, 
                0.5324027052800367}, {-0.15480762113533164`, 
                0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, "DynamicName", BoxID -> 
              "EdgeLabelID$5"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$5", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                0.14691198562895247`, 0.8735913457232614}, {0.183286258068715,
                 0.840738718010474}, {0.21803898288182422`, 
                0.8061752841356202}, {0.25108978333865495`, 
                0.7699809830328245}, {0.282362218950972, 
                0.7322395255353913}, {0.3117839622648728, 
                0.6930382007678785}, {0.33928696614102716`, 
                0.6524676742622324}, {0.36480762113533227`, 
                0.61062177826491}, {0.7112177826491075, 
                0.010621778264909898`}, {
                0.7346970641297578, -0.03240270528003786}, {
                0.7560806687904799, -0.07650626856999232}, {
                0.7753191402441997, -0.12158690808721184`}, {
                0.7923679834066687, -0.16754036051440824`}, {
                0.8071877674054975, -0.2142603438768319}, {
                0.8197442167765898, -0.2616388033531412}, {
                0.8300082907370552, -0.30956616118654545`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$6"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$6", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
               0.07794228634059945], 
              RGBColor[
               Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8660254037844389, -0.5000000000000012}, 
               0.07794228634059945], 
              RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$2"], 
            TagBox[
             StyleBox[
              DiskBox[{1.8369701987210297`*^-16, 1.}, 0.07794228634059945], 
              RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{2.400693309010096, 
            279.5993066909899}, {-127.82490669098988`, 123.2393066909899}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]], 
      GraphicsBox[{},
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[1], 
       GrayLevel[1], 
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.01]}}, "Rows" -> {{
        Scaled[0.02]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584446047523361*^9, 3.584446076069742*^9}, 
   3.584448318806229*^9, {3.584448355502194*^9, 3.584448385291346*^9}, 
   3.5844484679034*^9, 3.584448535340411*^9, {3.584448589107028*^9, 
   3.58444862927141*^9}, {3.58444872054812*^9, 3.5844487334471903`*^9}, 
   3.5844487645888577`*^9, {3.584448804727325*^9, 3.584448813797565*^9}, 
   3.584448856627489*^9, 3.584450751767345*^9, 3.584451313655888*^9, 
   3.584451848401836*^9, 3.584451973785746*^9, 3.584452008718841*^9, 
   3.584452335039274*^9, 3.5844525817283382`*^9, {3.58445360668464*^9, 
   3.584453626110629*^9}, 3.584453760943932*^9, {3.584453873488057*^9, 
   3.5844539239210367`*^9}, 3.5844554285526648`*^9, {3.5844554684936237`*^9, 
   3.584455494515921*^9}, 3.5844737167321043`*^9, 3.584473776640547*^9, 
   3.584473817403871*^9, 3.584476524288417*^9, 3.5844769008755827`*^9, 
   3.584477706643257*^9, 3.5847985980348597`*^9, 3.5849049555567827`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ShowOrbigraphGrid", "[", "2", "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.583689204783654*^9, 
   3.5836892059379377`*^9}, {3.583689247574144*^9, 3.583689253766901*^9}, 
   3.5836894292191153`*^9, 3.583690035795977*^9, 3.583692209784424*^9, {
   3.583775088515678*^9, 3.583775101231744*^9}, {3.583786434962036*^9, 
   3.583786483895177*^9}, {3.5838692486544113`*^9, 3.583869272224636*^9}, {
   3.58386934775286*^9, 3.583869350350371*^9}, {3.583869506301964*^9, 
   3.5838695147494707`*^9}, {3.5838698274605713`*^9, 3.583869876444372*^9}, {
   3.583950970921329*^9, 3.583950983399239*^9}, {3.584106329957271*^9, 
   3.5841063464142447`*^9}, {3.584125333308248*^9, 3.584125333540291*^9}, {
   3.584195107763858*^9, 3.584195138631399*^9}, {3.584195302158284*^9, 
   3.584195374825238*^9}, {3.584195454266306*^9, 3.5841955032225103`*^9}, {
   3.584195599408515*^9, 3.584195639270626*^9}, {3.584195677525853*^9, 
   3.584195683081524*^9}, {3.584196554938385*^9, 3.584196558322584*^9}, {
   3.5841977797627583`*^9, 3.584197787199843*^9}, {3.584197824378058*^9, 
   3.584197990483066*^9}, {3.584198058948021*^9, 3.5841981594176073`*^9}, {
   3.584208745561983*^9, 3.584208746441575*^9}, {3.5842087981701307`*^9, 
   3.584208855354003*^9}, {3.584298446287365*^9, 3.584298529295892*^9}, {
   3.584298694359271*^9, 3.584299014467272*^9}, {3.58429907002599*^9, 
   3.5842991415998363`*^9}, {3.584299188646434*^9, 3.5842991952765713`*^9}, {
   3.584299271505011*^9, 3.584299272791916*^9}, {3.584299353223269*^9, 
   3.5842994681249866`*^9}, {3.584299546973187*^9, 3.5842995509343367`*^9}, {
   3.5842996701139727`*^9, 3.5842997584997377`*^9}, {3.584404361428561*^9, 
   3.584404784950856*^9}, {3.58440488710564*^9, 3.584405262687581*^9}, {
   3.5844054264923267`*^9, 3.584405439145966*^9}, {3.584405497454258*^9, 
   3.58440550133148*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Infinite k-Tree Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Orbigraph\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{{1}, {{
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 1}}, {{
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 3}}}, {
          Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 6}, {2, 7}, {2, 8}, {3, 
           9}, {3, 10}, {3, 11}, {4, 12}, {4, 13}, {4, 14}, {5, 15}, {5, 
           16}, {5, 17}, {6, 18}, {6, 19}, {6, 20}, {7, 21}, {7, 22}, {7, 
           23}, {8, 24}, {8, 25}, {8, 26}, {9, 27}, {9, 28}, {9, 29}, {10, 
           30}, {10, 31}, {10, 32}, {11, 33}, {11, 34}, {11, 35}, {12, 36}, {
           12, 37}, {12, 38}, {13, 39}, {13, 40}, {13, 41}, {14, 42}, {14, 
           43}, {14, 44}, {15, 45}, {15, 46}, {15, 47}, {16, 48}, {16, 49}, {
           16, 50}, {17, 51}, {17, 52}, {17, 53}}}, {
          GraphLayout -> "RadialEmbedding", ImageSize -> Scaled[1.], 
           VertexShapeFunction -> {{{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {1} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> Automatic}, VertexSize -> {0.3}, 
           VertexStyle -> {{{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {1} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$2", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$11", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$12", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$13", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$14", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$15", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$16", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$17", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$18", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$19", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$20", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$21", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$22", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$23", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$24", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$25", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$26", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$27", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$28", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$29", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$30", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$31", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$32", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$33", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$34", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$35", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$36", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$37", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$38", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$39", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$40", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$41", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$42", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$43", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$44", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$45", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$46", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$47", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$48", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$49", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$50", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$51", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$52", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$53", Automatic, Center]}}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.76698500973869, 2.76698500973869}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$1"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.112309149161229, 3.421660870316151}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$2"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.1123091491612285`, 2.112309149161229}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$3"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.421660870316151, 2.1123091491612285`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$4"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.4216608703161513`, 3.421660870316151}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$5"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.28772901730711, 4.5555927233251925`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$6"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.4576332885837677`, 4.076336730893612}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$7"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9783772961521879, 3.2462410021702715`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$8"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9783772961521873, 2.2877290173071105`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$9"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.4576332885837673`, 1.4576332885837677`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$10"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.28772901730711, 0.9783772961521875}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$11"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.2462410021702692`, 0.9783772961521873}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$12"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.076336730893614, 1.4576332885837686`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$13"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.5555927233251925`, 2.28772901730711}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$14"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.5555927233251925`, 3.2462410021702692`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$15"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.076336730893612, 4.076336730893613}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$16"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.24624100217027, 4.5555927233251925`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$17"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.5249051892403864`, 5.53397001947738}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$18"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.0481010210913193`, 5.449896580118444}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$19"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.5931397791644533`, 5.28430423031228}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$20"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.1738452305742377`, 5.042224409813977}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$21"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8029574280063074, 4.731012591471075}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$22"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.4917456096634054, 4.3601247889031445`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$23"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.24966578916510107`, 3.940830240312928}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$24"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.08407343935893685, 3.4858689983860622`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$25"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.440892098500626*^-16, 3.009064830236996}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$26"], 
           TagBox[
            StyleBox[
             DiskBox[{0., 2.524905189240387}, 0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$27"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.08407343935893596, 2.0481010210913206`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$28"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.2496657891650993, 1.5931397791644544`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$29"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.4917456096634032, 1.1738452305742377`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$30"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8029574280063063, 0.8029574280063068}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$31"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.1738452305742364`, 0.4917456096634045}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$32"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.5931397791644515`, 0.24966578916510107`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$33"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.0481010210913175`, 0.08407343935893685}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$34"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.5249051892403833`, 4.440892098500626*^-16}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$35"], 
           TagBox[
            StyleBox[
             DiskBox[{3.009064830236993, 0.}, 0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$36"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.4858689983860587`, 0.08407343935893596}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$37"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.940830240312925, 0.2496657891650993}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$38"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.360124788903143, 0.4917456096634041}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$39"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.731012591471073, 0.8029574280063063}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$40"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.042224409813976, 1.173845230574236}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$41"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.28430423031228, 1.5931397791644537`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$42"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.449896580118444, 2.0481010210913198`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$43"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.53397001947738, 2.5249051892403855`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$44"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.53397001947738, 3.009064830236993}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$45"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.449896580118444, 3.4858689983860587`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$46"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.28430423031228, 3.940830240312925}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$47"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.042224409813976, 4.360124788903143}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$48"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.731012591471074, 4.731012591471073}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$49"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.360124788903144, 5.042224409813975}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$50"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.940830240312926, 5.28430423031228}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$51"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.48586899838606, 5.449896580118444}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$52"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.0090648302369942`, 5.53397001947738}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$53"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{4.640000000000003, 277.36}, {-139.5856, 
           133.13440000000003`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[1.]], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3}, {
            SparseArray[
            Automatic, {3, 3}, 0, {
             1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
            Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
            EdgeShapeFunction -> {
              GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
            EdgeWeight -> {1, 3, 1, 3, 2, 2}, ImageSize -> Scaled[1.], 
            VertexSize -> {0.09}, VertexStyle -> {2 -> RGBColor[
                Rational[46, 51], 
                Rational[193, 255], 0], 1 -> RGBColor[
                Rational[4, 5], 0, 0], 3 -> RGBColor[
                Rational[12, 17], 
                Rational[82, 255], 
                Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                0.3954100979887313, -0.37993503101780424`}, {
                0.44429670652560765`, -0.38346806780211296`}, {
                0.49295692129322827`, -0.38934738255181967`}, {
                0.5412782000680146, -0.3975593774815831}, {
                0.5891487845236741, -0.408085059741211}, {
                0.6364579587078756, -0.42090008534266654`}, {
                0.6830963051081035, -0.43597481546328354`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$1"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$1", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                0.010621778264911619`}, {-0.3648076211353314, 
                0.610621778264911}, {-0.33928696614102627`, 
                0.6524676742622335}, {-0.31178396226487193`, 
                0.6930382007678794}, {-0.28236221895097113`, 
                0.7322395255353922}, {-0.25108978333865395`, 
                0.7699809830328253}, {-0.21803898288182322`, 
                0.8061752841356209}, {-0.18328625806871401`, 
                0.8407387180104745}, {-0.14691198562895147`, 
                0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$2"], 
             InsetBox[
              FormBox[
               StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$2", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.6830963051081028, -0.5640251845367187}, {
                0.636457958707875, -0.5790999146573355}, {
                0.5891487845236735, -0.5919149402587909}, {
                0.5412782000680137, -0.6024406225184188}, {
                0.4929569212932275, -0.6106526174481819}, {
                0.4442967065256069, -0.6165319321978884}, {
                0.39541009798873045`, -0.6200649689821971}, {
                0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$3"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$3", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.7191134181554866, -0.3735913457232625}, {
                0.682739145715724, -0.34073871801047506`}, {
                0.647986420902615, -0.30617528413562134`}, {
                0.6149356204457841, -0.2699809830328256}, {
                0.583663184833467, -0.2322395255353924}, {
                0.5542414415195662, -0.1930382007678796}, {
                0.5267384376434119, -0.15246767426223357`}, {
                0.5012177826491069, -0.11062177826491115`}, {
                0.15480762113533175`, 0.48937822173508894`}, {
                0.13132833965468138`, 0.5324027052800367}, {
                0.1099447349939594, 0.5765062685699912}, {0.09070626354023958,
                 0.6215869080872107}, {0.07365742037777057, 
                0.6675403605144072}, {0.05883763637894179, 
                0.7142603438768308}, {0.046281187007849445`, 
                0.76163880335314}, {0.036017113047383975`, 
                0.8095661611865443}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$4"], 
             InsetBox[
              FormBox[
               StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$4", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 
                1.}, {-0.03601711304738375, 
                0.8095661611865439}, {-0.046281187007849, 
                0.7616388033531397}, {-0.05883763637894135, 
                0.7142603438768306}, {-0.07365742037777012, 
                0.667540360514407}, {-0.09070626354023947, 
                0.6215869080872107}, {-0.10994473499395929`, 
                0.5765062685699913}, {-0.1313283396546815, 
                0.5324027052800367}, {-0.15480762113533164`, 
                0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, "DynamicName", BoxID -> 
              "EdgeLabelID$5"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$5", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                0.14691198562895247`, 0.8735913457232614}, {0.183286258068715,
                 0.840738718010474}, {0.21803898288182422`, 
                0.8061752841356202}, {0.25108978333865495`, 
                0.7699809830328245}, {0.282362218950972, 
                0.7322395255353913}, {0.3117839622648728, 
                0.6930382007678785}, {0.33928696614102716`, 
                0.6524676742622324}, {0.36480762113533227`, 
                0.61062177826491}, {0.7112177826491075, 
                0.010621778264909898`}, {
                0.7346970641297578, -0.03240270528003786}, {
                0.7560806687904799, -0.07650626856999232}, {
                0.7753191402441997, -0.12158690808721184`}, {
                0.7923679834066687, -0.16754036051440824`}, {
                0.8071877674054975, -0.2142603438768319}, {
                0.8197442167765898, -0.2616388033531412}, {
                0.8300082907370552, -0.30956616118654545`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$6"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$6", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
               0.07794228634059945], 
              RGBColor[
               Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8660254037844389, -0.5000000000000012}, 
               0.07794228634059945], 
              RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$2"], 
            TagBox[
             StyleBox[
              DiskBox[{1.8369701987210297`*^-16, 1.}, 0.07794228634059945], 
              RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{2.400693309010096, 
            279.5993066909899}, {-127.82490669098988`, 123.2393066909899}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]], 
      GraphicsBox[{},
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{{1}, {{
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}, {
             DirectedEdge[1, 3], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}}, {
          Null, {{1, 2}, {1, 3}, {1, 4}, {2, 5}, {2, 6}, {3, 7}, {3, 8}, {4, 
           9}, {4, 10}, {5, 11}, {5, 12}, {6, 13}, {6, 14}, {7, 15}, {7, 
           16}, {8, 17}, {8, 18}, {9, 19}, {9, 20}, {10, 21}, {10, 22}, {11, 
           23}, {11, 24}, {12, 25}, {12, 26}, {13, 27}, {13, 28}, {14, 29}, {
           14, 30}, {15, 31}, {15, 32}, {16, 33}, {16, 34}, {17, 35}, {17, 
           36}, {18, 37}, {18, 38}, {19, 39}, {19, 40}, {20, 41}, {20, 42}, {
           21, 43}, {21, 44}, {22, 45}, {22, 46}}}, {
          GraphLayout -> "RadialEmbedding", ImageSize -> Scaled[1.], 
           VertexShapeFunction -> {{{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {1} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic}, VertexSize -> {0.3}, 
           VertexStyle -> {{{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {1} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$2", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$11", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$12", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$13", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$14", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$15", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$16", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$17", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$18", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$19", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$20", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$21", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$22", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$23", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$24", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$25", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$26", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$27", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$28", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$29", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$30", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$31", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$32", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$33", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$34", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$35", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$36", Automatic, Center]}, {
              DynamicLocation["VertexID$18", Automatic, Center], 
              DynamicLocation["VertexID$37", Automatic, Center]}, {
              DynamicLocation["VertexID$18", Automatic, Center], 
              DynamicLocation["VertexID$38", Automatic, Center]}, {
              DynamicLocation["VertexID$19", Automatic, Center], 
              DynamicLocation["VertexID$39", Automatic, Center]}, {
              DynamicLocation["VertexID$19", Automatic, Center], 
              DynamicLocation["VertexID$40", Automatic, Center]}, {
              DynamicLocation["VertexID$20", Automatic, Center], 
              DynamicLocation["VertexID$41", Automatic, Center]}, {
              DynamicLocation["VertexID$20", Automatic, Center], 
              DynamicLocation["VertexID$42", Automatic, Center]}, {
              DynamicLocation["VertexID$21", Automatic, Center], 
              DynamicLocation["VertexID$43", Automatic, Center]}, {
              DynamicLocation["VertexID$21", Automatic, Center], 
              DynamicLocation["VertexID$44", Automatic, Center]}, {
              DynamicLocation["VertexID$22", Automatic, Center], 
              DynamicLocation["VertexID$45", Automatic, Center]}, {
              DynamicLocation["VertexID$22", Automatic, Center], 
              DynamicLocation["VertexID$46", Automatic, Center]}}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.491679184531429, 3.491679184531429}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$1"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.7291852240807537`, 3.9319052778530903`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$2"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.491679184531429, 2.611226997888106}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$3"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.254173144982104, 3.9319052778530894`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$4"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.6112269978881066`, 5.016667105432779}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$5"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.7307748112447838`, 3.4916791845314297`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$6"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.6112269978881057`, 1.9666912636300786`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$7"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.37213137117475, 1.9666912636300775`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$8"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.252583557818074, 3.4916791845314283`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$9"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.372131371174753, 5.016667105432779}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$10"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.8080458019150756`, 6.043033702205834}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$11"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.6239580494733776`, 5.35940031958948}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$12"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9403246668570246, 4.175312567147784}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$13"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9403246668570238, 2.8080458019150765`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$14"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.6239580494733772`, 1.6239580494733776`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$15"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.8080458019150756`, 0.9403246668570238}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$16"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.175312567147781, 0.9403246668570238}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$17"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.359400319589478, 1.6239580494733752`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$18"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.043033702205834, 2.8080458019150756`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$19"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.043033702205834, 4.175312567147781}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$20"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.359400319589483, 5.359400319589478}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$21"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.175312567147782, 6.043033702205834}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$22"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.0319908991139455`, 6.983358369062858}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$23"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.1439413252593678`, 6.74540620290972}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$24"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.3477378592720615`, 6.285717917492237}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$25"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.6976404515706216, 5.635620509790797}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$26"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.23795216615313786`, 4.839417043803492}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$27"], 
           TagBox[
            StyleBox[
             
             DiskBox[{8.881784197001252*^-16, 3.951367469948916}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$28"], 
           TagBox[
            StyleBox[
             DiskBox[{0., 3.0319908991139455`}, 0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$29"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.23795216615313608`, 2.1439413252593695`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$30"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.6976404515706212, 1.3477378592720615`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$31"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.3477378592720606`, 0.697640451570622}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$32"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.1439413252593655`, 0.23795216615313786`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$33"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.0319908991139446`, 4.440892098500626*^-16}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$34"], 
           TagBox[
            StyleBox[
             DiskBox[{3.951367469948912, 0.}, 0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$35"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.839417043803488, 0.23795216615313608`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$36"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.635620509790794, 0.6976404515706189}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$37"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.285717917492233, 1.347737859272058}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$38"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.74540620290972, 2.143941325259365}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$39"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.983358369062858, 3.031990899113944}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$40"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.983358369062858, 3.9513674699489116`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$41"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.745406202909722, 4.839417043803488}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$42"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.285717917492239, 5.635620509790794}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$43"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.635620509790799, 6.285717917492233}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$44"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.8394170438034925`, 6.74540620290972}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$45"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.9513674699489134`, 6.983358369062858}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$46"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{4.64, 277.35999999999996`}, {-139.5856000000001, 
           133.13439999999997`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[1.]], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3}, {
            SparseArray[
            Automatic, {3, 3}, 0, {
             1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
            Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
            EdgeShapeFunction -> {
              GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
            EdgeWeight -> {2, 1, 1, 2, 2, 1}, ImageSize -> Scaled[1.], 
            VertexSize -> {0.09}, VertexStyle -> {2 -> RGBColor[
                Rational[46, 51], 
                Rational[193, 255], 0], 1 -> RGBColor[
                Rational[4, 5], 0, 0], 3 -> RGBColor[
                Rational[12, 17], 
                Rational[82, 255], 
                Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                0.3954100979887313, -0.37993503101780424`}, {
                0.44429670652560765`, -0.38346806780211296`}, {
                0.49295692129322827`, -0.38934738255181967`}, {
                0.5412782000680146, -0.3975593774815831}, {
                0.5891487845236741, -0.408085059741211}, {
                0.6364579587078756, -0.42090008534266654`}, {
                0.6830963051081035, -0.43597481546328354`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$1"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$1", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                0.010621778264911619`}, {-0.3648076211353314, 
                0.610621778264911}, {-0.33928696614102627`, 
                0.6524676742622335}, {-0.31178396226487193`, 
                0.6930382007678794}, {-0.28236221895097113`, 
                0.7322395255353922}, {-0.25108978333865395`, 
                0.7699809830328253}, {-0.21803898288182322`, 
                0.8061752841356209}, {-0.18328625806871401`, 
                0.8407387180104745}, {-0.14691198562895147`, 
                0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$2"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$2", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.6830963051081028, -0.5640251845367187}, {
                0.636457958707875, -0.5790999146573355}, {
                0.5891487845236735, -0.5919149402587909}, {
                0.5412782000680137, -0.6024406225184188}, {
                0.4929569212932275, -0.6106526174481819}, {
                0.4442967065256069, -0.6165319321978884}, {
                0.39541009798873045`, -0.6200649689821971}, {
                0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$3"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$3", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.7191134181554866, -0.3735913457232625}, {
                0.682739145715724, -0.34073871801047506`}, {
                0.647986420902615, -0.30617528413562134`}, {
                0.6149356204457841, -0.2699809830328256}, {
                0.583663184833467, -0.2322395255353924}, {
                0.5542414415195662, -0.1930382007678796}, {
                0.5267384376434119, -0.15246767426223357`}, {
                0.5012177826491069, -0.11062177826491115`}, {
                0.15480762113533175`, 0.48937822173508894`}, {
                0.13132833965468138`, 0.5324027052800367}, {
                0.1099447349939594, 0.5765062685699912}, {0.09070626354023958,
                 0.6215869080872107}, {0.07365742037777057, 
                0.6675403605144072}, {0.05883763637894179, 
                0.7142603438768308}, {0.046281187007849445`, 
                0.76163880335314}, {0.036017113047383975`, 
                0.8095661611865443}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$4"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$4", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 
                1.}, {-0.03601711304738375, 
                0.8095661611865439}, {-0.046281187007849, 
                0.7616388033531397}, {-0.05883763637894135, 
                0.7142603438768306}, {-0.07365742037777012, 
                0.667540360514407}, {-0.09070626354023947, 
                0.6215869080872107}, {-0.10994473499395929`, 
                0.5765062685699913}, {-0.1313283396546815, 
                0.5324027052800367}, {-0.15480762113533164`, 
                0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, "DynamicName", BoxID -> 
              "EdgeLabelID$5"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$5", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                0.14691198562895247`, 0.8735913457232614}, {0.183286258068715,
                 0.840738718010474}, {0.21803898288182422`, 
                0.8061752841356202}, {0.25108978333865495`, 
                0.7699809830328245}, {0.282362218950972, 
                0.7322395255353913}, {0.3117839622648728, 
                0.6930382007678785}, {0.33928696614102716`, 
                0.6524676742622324}, {0.36480762113533227`, 
                0.61062177826491}, {0.7112177826491075, 
                0.010621778264909898`}, {
                0.7346970641297578, -0.03240270528003786}, {
                0.7560806687904799, -0.07650626856999232}, {
                0.7753191402441997, -0.12158690808721184`}, {
                0.7923679834066687, -0.16754036051440824`}, {
                0.8071877674054975, -0.2142603438768319}, {
                0.8197442167765898, -0.2616388033531412}, {
                0.8300082907370552, -0.30956616118654545`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$6"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$6", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
               0.07794228634059945], 
              RGBColor[
               Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8660254037844389, -0.5000000000000012}, 
               0.07794228634059945], 
              RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$2"], 
            TagBox[
             StyleBox[
              DiskBox[{1.8369701987210297`*^-16, 1.}, 0.07794228634059945], 
              RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{2.400693309010096, 
            279.5993066909899}, {-127.82490669098988`, 123.2393066909899}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]], 
      GraphicsBox[{},
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[1], 
       GrayLevel[1], 
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.01]}}, "Rows" -> {{
        Scaled[0.02]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.5844047547250843`*^9, 3.5844047866882677`*^9}, {
   3.584404887828841*^9, 3.584404953184533*^9}, {3.584405135170412*^9, 
   3.5844051512665987`*^9}, 3.5844051892293177`*^9, {3.5844052385191507`*^9, 
   3.58440526353485*^9}, {3.584405426967922*^9, 3.5844054404532022`*^9}, 
   3.5844055212728453`*^9, 3.5844061582843513`*^9, {3.584406204985238*^9, 
   3.584406214702146*^9}, {3.584406247082848*^9, 3.584406261593874*^9}, 
   3.584406555452827*^9, 3.584407002624345*^9, 3.584444731794478*^9, 
   3.5844448169836397`*^9, 3.5844448529515533`*^9, 3.584444886315135*^9, 
   3.58444749313595*^9, 3.5844488604085608`*^9, 3.58445075901985*^9, 
   3.584452335506007*^9, 3.584452583266646*^9, 3.5844536262356052`*^9, 
   3.584453761072448*^9, 3.584453924450419*^9, 3.5844554305512466`*^9, 
   3.584455496263259*^9, {3.584473752943535*^9, 3.584473779871901*^9}, 
   3.584473821200046*^9, 3.584476524426214*^9, 3.584476904165584*^9, 
   3.584477709987844*^9, 3.5847985981905537`*^9, 3.584904956163288*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ShowOrbigraphGrid", "[", "3", "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.583689204783654*^9, 
   3.5836892059379377`*^9}, {3.583689247574144*^9, 3.583689253766901*^9}, 
   3.5836894292191153`*^9, 3.583690035795977*^9, 3.583692209784424*^9, {
   3.583775088515678*^9, 3.583775101231744*^9}, {3.583786434962036*^9, 
   3.583786483895177*^9}, {3.5838692486544113`*^9, 3.583869272224636*^9}, {
   3.58386934775286*^9, 3.583869350350371*^9}, {3.583869506301964*^9, 
   3.5838695147494707`*^9}, {3.5838698274605713`*^9, 3.583869876444372*^9}, {
   3.583950970921329*^9, 3.583950983399239*^9}, {3.584106329957271*^9, 
   3.5841063464142447`*^9}, {3.584125333308248*^9, 3.584125333540291*^9}, {
   3.584195107763858*^9, 3.584195138631399*^9}, {3.584195302158284*^9, 
   3.584195374825238*^9}, {3.584195454266306*^9, 3.5841955032225103`*^9}, {
   3.584195599408515*^9, 3.584195639270626*^9}, {3.584195677525853*^9, 
   3.584195683081524*^9}, {3.584196554938385*^9, 3.584196558322584*^9}, {
   3.5841977797627583`*^9, 3.584197787199843*^9}, {3.584197824378058*^9, 
   3.584197990483066*^9}, {3.584198058948021*^9, 3.5841981594176073`*^9}, {
   3.584208745561983*^9, 3.584208746441575*^9}, {3.5842087981701307`*^9, 
   3.584208855354003*^9}, {3.584298446287365*^9, 3.584298529295892*^9}, {
   3.584298694359271*^9, 3.584299014467272*^9}, {3.58429907002599*^9, 
   3.5842991415998363`*^9}, {3.584299188646434*^9, 3.5842991952765713`*^9}, {
   3.584299271505011*^9, 3.584299272791916*^9}, {3.584299353223269*^9, 
   3.5842994681249866`*^9}, {3.584299546973187*^9, 3.5842995509343367`*^9}, {
   3.5842996701139727`*^9, 3.5842997584997377`*^9}, {3.584404361428561*^9, 
   3.584404784950856*^9}, {3.58440488710564*^9, 3.584405262687581*^9}, {
   3.5844054264923267`*^9, 3.584405439145966*^9}, {3.584405497454258*^9, 
   3.584405530986595*^9}, {3.584450768705903*^9, 3.5844507694971247`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Infinite k-Tree Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Orbigraph\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{{1}, {{
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 1}}, {{
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 3}}}, {
          Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 6}, {2, 7}, {2, 8}, {3, 
           9}, {3, 10}, {3, 11}, {4, 12}, {4, 13}, {4, 14}, {5, 15}, {5, 
           16}, {5, 17}, {6, 18}, {6, 19}, {6, 20}, {7, 21}, {7, 22}, {7, 
           23}, {8, 24}, {8, 25}, {8, 26}, {9, 27}, {9, 28}, {9, 29}, {10, 
           30}, {10, 31}, {10, 32}, {11, 33}, {11, 34}, {11, 35}, {12, 36}, {
           12, 37}, {12, 38}, {13, 39}, {13, 40}, {13, 41}, {14, 42}, {14, 
           43}, {14, 44}, {15, 45}, {15, 46}, {15, 47}, {16, 48}, {16, 49}, {
           16, 50}, {17, 51}, {17, 52}, {17, 53}}}, {
          GraphLayout -> "RadialEmbedding", ImageSize -> Scaled[1.], 
           VertexShapeFunction -> {{{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {1} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> Automatic}, VertexSize -> {0.3}, 
           VertexStyle -> {{{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {1} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$2", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$11", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$12", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$13", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$14", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$15", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$16", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$17", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$18", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$19", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$20", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$21", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$22", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$23", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$24", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$25", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$26", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$27", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$28", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$29", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$30", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$31", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$32", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$33", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$34", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$35", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$36", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$37", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$38", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$39", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$40", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$41", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$42", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$43", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$44", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$45", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$46", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$47", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$48", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$49", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$50", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$51", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$52", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$53", Automatic, Center]}}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.76698500973869, 2.76698500973869}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$1"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.112309149161229, 3.421660870316151}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$2"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.1123091491612285`, 2.112309149161229}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$3"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.421660870316151, 2.1123091491612285`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$4"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.4216608703161513`, 3.421660870316151}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$5"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.28772901730711, 4.5555927233251925`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$6"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.4576332885837677`, 4.076336730893612}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$7"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9783772961521879, 3.2462410021702715`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$8"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9783772961521873, 2.2877290173071105`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$9"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.4576332885837673`, 1.4576332885837677`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$10"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.28772901730711, 0.9783772961521875}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$11"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.2462410021702692`, 0.9783772961521873}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$12"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.076336730893614, 1.4576332885837686`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$13"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.5555927233251925`, 2.28772901730711}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$14"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.5555927233251925`, 3.2462410021702692`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$15"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.076336730893612, 4.076336730893613}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$16"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.24624100217027, 4.5555927233251925`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$17"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.5249051892403864`, 5.53397001947738}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$18"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.0481010210913193`, 5.449896580118444}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$19"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.5931397791644533`, 5.28430423031228}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$20"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.1738452305742377`, 5.042224409813977}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$21"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8029574280063074, 4.731012591471075}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$22"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.4917456096634054, 4.3601247889031445`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$23"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.24966578916510107`, 3.940830240312928}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$24"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.08407343935893685, 3.4858689983860622`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$25"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.440892098500626*^-16, 3.009064830236996}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$26"], 
           TagBox[
            StyleBox[
             DiskBox[{0., 2.524905189240387}, 0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$27"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.08407343935893596, 2.0481010210913206`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$28"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.2496657891650993, 1.5931397791644544`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$29"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.4917456096634032, 1.1738452305742377`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$30"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8029574280063063, 0.8029574280063068}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$31"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.1738452305742364`, 0.4917456096634045}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$32"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.5931397791644515`, 0.24966578916510107`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$33"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.0481010210913175`, 0.08407343935893685}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$34"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.5249051892403833`, 4.440892098500626*^-16}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$35"], 
           TagBox[
            StyleBox[
             DiskBox[{3.009064830236993, 0.}, 0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$36"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.4858689983860587`, 0.08407343935893596}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$37"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.940830240312925, 0.2496657891650993}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$38"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.360124788903143, 0.4917456096634041}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$39"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.731012591471073, 0.8029574280063063}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$40"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.042224409813976, 1.173845230574236}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$41"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.28430423031228, 1.5931397791644537`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$42"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.449896580118444, 2.0481010210913198`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$43"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.53397001947738, 2.5249051892403855`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$44"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.53397001947738, 3.009064830236993}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$45"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.449896580118444, 3.4858689983860587`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$46"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.28430423031228, 3.940830240312925}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$47"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.042224409813976, 4.360124788903143}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$48"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.731012591471074, 4.731012591471073}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$49"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.360124788903144, 5.042224409813975}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$50"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.940830240312926, 5.28430423031228}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$51"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.48586899838606, 5.449896580118444}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$52"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.0090648302369942`, 5.53397001947738}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$53"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{4.640000000000003, 277.36}, {-139.5856, 
           133.13440000000003`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[1.]], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3}, {
            SparseArray[
            Automatic, {3, 3}, 0, {
             1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
            Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
            EdgeShapeFunction -> {
              GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
            EdgeWeight -> {1, 3, 1, 3, 2, 2}, ImageSize -> Scaled[1.], 
            VertexSize -> {0.09}, VertexStyle -> {2 -> RGBColor[
                Rational[46, 51], 
                Rational[193, 255], 0], 1 -> RGBColor[
                Rational[4, 5], 0, 0], 3 -> RGBColor[
                Rational[12, 17], 
                Rational[82, 255], 
                Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                0.3954100979887313, -0.37993503101780424`}, {
                0.44429670652560765`, -0.38346806780211296`}, {
                0.49295692129322827`, -0.38934738255181967`}, {
                0.5412782000680146, -0.3975593774815831}, {
                0.5891487845236741, -0.408085059741211}, {
                0.6364579587078756, -0.42090008534266654`}, {
                0.6830963051081035, -0.43597481546328354`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$1"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$1", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                0.010621778264911619`}, {-0.3648076211353314, 
                0.610621778264911}, {-0.33928696614102627`, 
                0.6524676742622335}, {-0.31178396226487193`, 
                0.6930382007678794}, {-0.28236221895097113`, 
                0.7322395255353922}, {-0.25108978333865395`, 
                0.7699809830328253}, {-0.21803898288182322`, 
                0.8061752841356209}, {-0.18328625806871401`, 
                0.8407387180104745}, {-0.14691198562895147`, 
                0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$2"], 
             InsetBox[
              FormBox[
               StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$2", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.6830963051081028, -0.5640251845367187}, {
                0.636457958707875, -0.5790999146573355}, {
                0.5891487845236735, -0.5919149402587909}, {
                0.5412782000680137, -0.6024406225184188}, {
                0.4929569212932275, -0.6106526174481819}, {
                0.4442967065256069, -0.6165319321978884}, {
                0.39541009798873045`, -0.6200649689821971}, {
                0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$3"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$3", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.7191134181554866, -0.3735913457232625}, {
                0.682739145715724, -0.34073871801047506`}, {
                0.647986420902615, -0.30617528413562134`}, {
                0.6149356204457841, -0.2699809830328256}, {
                0.583663184833467, -0.2322395255353924}, {
                0.5542414415195662, -0.1930382007678796}, {
                0.5267384376434119, -0.15246767426223357`}, {
                0.5012177826491069, -0.11062177826491115`}, {
                0.15480762113533175`, 0.48937822173508894`}, {
                0.13132833965468138`, 0.5324027052800367}, {
                0.1099447349939594, 0.5765062685699912}, {0.09070626354023958,
                 0.6215869080872107}, {0.07365742037777057, 
                0.6675403605144072}, {0.05883763637894179, 
                0.7142603438768308}, {0.046281187007849445`, 
                0.76163880335314}, {0.036017113047383975`, 
                0.8095661611865443}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$4"], 
             InsetBox[
              FormBox[
               StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$4", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 
                1.}, {-0.03601711304738375, 
                0.8095661611865439}, {-0.046281187007849, 
                0.7616388033531397}, {-0.05883763637894135, 
                0.7142603438768306}, {-0.07365742037777012, 
                0.667540360514407}, {-0.09070626354023947, 
                0.6215869080872107}, {-0.10994473499395929`, 
                0.5765062685699913}, {-0.1313283396546815, 
                0.5324027052800367}, {-0.15480762113533164`, 
                0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, "DynamicName", BoxID -> 
              "EdgeLabelID$5"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$5", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                0.14691198562895247`, 0.8735913457232614}, {0.183286258068715,
                 0.840738718010474}, {0.21803898288182422`, 
                0.8061752841356202}, {0.25108978333865495`, 
                0.7699809830328245}, {0.282362218950972, 
                0.7322395255353913}, {0.3117839622648728, 
                0.6930382007678785}, {0.33928696614102716`, 
                0.6524676742622324}, {0.36480762113533227`, 
                0.61062177826491}, {0.7112177826491075, 
                0.010621778264909898`}, {
                0.7346970641297578, -0.03240270528003786}, {
                0.7560806687904799, -0.07650626856999232}, {
                0.7753191402441997, -0.12158690808721184`}, {
                0.7923679834066687, -0.16754036051440824`}, {
                0.8071877674054975, -0.2142603438768319}, {
                0.8197442167765898, -0.2616388033531412}, {
                0.8300082907370552, -0.30956616118654545`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$6"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$6", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
               0.07794228634059945], 
              RGBColor[
               Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8660254037844389, -0.5000000000000012}, 
               0.07794228634059945], 
              RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$2"], 
            TagBox[
             StyleBox[
              DiskBox[{1.8369701987210297`*^-16, 1.}, 0.07794228634059945], 
              RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{2.400693309010096, 
            279.5993066909899}, {-127.82490669098988`, 123.2393066909899}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]], 
      GraphicsBox[{},
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
            SparseArray[
            Automatic, {7, 7}, 0, {
             1, {{0, 4, 8, 12, 16, 20, 24, 28}, {{4}, {5}, {6}, {7}, {3}, {
               5}, {6}, {7}, {2}, {5}, {6}, {7}, {1}, {5}, {6}, {7}, {1}, {
               2}, {3}, {4}, {1}, {2}, {3}, {4}, {1}, {2}, {3}, {4}}}, 
              Pattern}]}, {
           GraphHighlight -> {3, 1, 5, 4, 7, 2, 6}, 
            GraphHighlightStyle -> {
             6 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              4 -> {VertexStyle -> Hue[0.14, 1, 0.9]}, 
              5 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              2 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
              1 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
              7 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              3 -> {VertexStyle -> Hue[0.14, 1, 0.9]}}, ImageSize -> 
            Scaled[1.], VertexSize -> {0.2}}]], Typeset`boxes, 
         Typeset`boxes$s2d = GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.0001937884754836805, 0.31823716684075093`}, 
               0.06415272600389244], 
              Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{1.6946654040242253`, 0.3189627344256111}, 
               0.06415272600389244], 
              Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$2"], 
            TagBox[
             StyleBox[
              
              DiskBox[{1.6949416592011364`, 0.9654747332116507}, 
               0.06415272600389244], 
              Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"], 
            TagBox[
             StyleBox[
              DiskBox[{0., 0.9648215660605998}, 0.06415272600389244], 
              Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$4"], 
            TagBox[
             StyleBox[
              DiskBox[{0.8485113459102751, 0.}, 0.06415272600389244], 
              Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$5"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8466491549206725, 1.2833113220558312`}, 
               0.06415272600389244], 
              Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$6"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8477109312976009, 0.6417849406778126}, 
               0.06415272600389244], 
              Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$7"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{4.640000000000001, 
            277.35999999999996`}, {-108.5856, 103.014563754606}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]],
      Background->Opacity[0.5, 
        RGBColor[0, 1, 0]],
      StripOnInput->False]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{{1}, {{
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}, {
             DirectedEdge[1, 3], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}}, {
          Null, {{1, 2}, {1, 3}, {1, 4}, {2, 5}, {2, 6}, {3, 7}, {3, 8}, {4, 
           9}, {4, 10}, {5, 11}, {5, 12}, {6, 13}, {6, 14}, {7, 15}, {7, 
           16}, {8, 17}, {8, 18}, {9, 19}, {9, 20}, {10, 21}, {10, 22}, {11, 
           23}, {11, 24}, {12, 25}, {12, 26}, {13, 27}, {13, 28}, {14, 29}, {
           14, 30}, {15, 31}, {15, 32}, {16, 33}, {16, 34}, {17, 35}, {17, 
           36}, {18, 37}, {18, 38}, {19, 39}, {19, 40}, {20, 41}, {20, 42}, {
           21, 43}, {21, 44}, {22, 45}, {22, 46}}}, {
          GraphLayout -> "RadialEmbedding", ImageSize -> Scaled[1.], 
           VertexShapeFunction -> {{{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {1} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic}, VertexSize -> {0.3}, 
           VertexStyle -> {{{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {1} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$2", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$11", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$12", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$13", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$14", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$15", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$16", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$17", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$18", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$19", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$20", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$21", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$22", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$23", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$24", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$25", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$26", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$27", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$28", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$29", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$30", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$31", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$32", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$33", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$34", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$35", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$36", Automatic, Center]}, {
              DynamicLocation["VertexID$18", Automatic, Center], 
              DynamicLocation["VertexID$37", Automatic, Center]}, {
              DynamicLocation["VertexID$18", Automatic, Center], 
              DynamicLocation["VertexID$38", Automatic, Center]}, {
              DynamicLocation["VertexID$19", Automatic, Center], 
              DynamicLocation["VertexID$39", Automatic, Center]}, {
              DynamicLocation["VertexID$19", Automatic, Center], 
              DynamicLocation["VertexID$40", Automatic, Center]}, {
              DynamicLocation["VertexID$20", Automatic, Center], 
              DynamicLocation["VertexID$41", Automatic, Center]}, {
              DynamicLocation["VertexID$20", Automatic, Center], 
              DynamicLocation["VertexID$42", Automatic, Center]}, {
              DynamicLocation["VertexID$21", Automatic, Center], 
              DynamicLocation["VertexID$43", Automatic, Center]}, {
              DynamicLocation["VertexID$21", Automatic, Center], 
              DynamicLocation["VertexID$44", Automatic, Center]}, {
              DynamicLocation["VertexID$22", Automatic, Center], 
              DynamicLocation["VertexID$45", Automatic, Center]}, {
              DynamicLocation["VertexID$22", Automatic, Center], 
              DynamicLocation["VertexID$46", Automatic, Center]}}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.491679184531429, 3.491679184531429}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$1"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.7291852240807537`, 3.9319052778530903`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$2"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.491679184531429, 2.611226997888106}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$3"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.254173144982104, 3.9319052778530894`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$4"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.6112269978881066`, 5.016667105432779}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$5"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.7307748112447838`, 3.4916791845314297`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$6"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.6112269978881057`, 1.9666912636300786`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$7"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.37213137117475, 1.9666912636300775`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$8"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.252583557818074, 3.4916791845314283`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$9"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.372131371174753, 5.016667105432779}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$10"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.8080458019150756`, 6.043033702205834}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$11"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.6239580494733776`, 5.35940031958948}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$12"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9403246668570246, 4.175312567147784}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$13"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9403246668570238, 2.8080458019150765`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$14"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.6239580494733772`, 1.6239580494733776`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$15"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.8080458019150756`, 0.9403246668570238}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$16"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.175312567147781, 0.9403246668570238}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$17"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.359400319589478, 1.6239580494733752`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$18"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.043033702205834, 2.8080458019150756`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$19"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.043033702205834, 4.175312567147781}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$20"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.359400319589483, 5.359400319589478}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$21"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.175312567147782, 6.043033702205834}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$22"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.0319908991139455`, 6.983358369062858}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$23"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.1439413252593678`, 6.74540620290972}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$24"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.3477378592720615`, 6.285717917492237}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$25"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.6976404515706216, 5.635620509790797}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$26"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.23795216615313786`, 4.839417043803492}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$27"], 
           TagBox[
            StyleBox[
             
             DiskBox[{8.881784197001252*^-16, 3.951367469948916}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$28"], 
           TagBox[
            StyleBox[
             DiskBox[{0., 3.0319908991139455`}, 0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$29"], 
           TagBox[
            StyleBox[
             DiskBox[{0.23795216615313608`, 2.1439413252593695`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$30"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.6976404515706212, 1.3477378592720615`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$31"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.3477378592720606`, 0.697640451570622}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$32"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.1439413252593655`, 0.23795216615313786`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$33"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.0319908991139446`, 4.440892098500626*^-16}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$34"], 
           TagBox[
            StyleBox[
             DiskBox[{3.951367469948912, 0.}, 0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$35"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.839417043803488, 0.23795216615313608`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$36"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.635620509790794, 0.6976404515706189}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$37"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.285717917492233, 1.347737859272058}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$38"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.74540620290972, 2.143941325259365}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$39"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.983358369062858, 3.031990899113944}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$40"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.983358369062858, 3.9513674699489116`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$41"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.745406202909722, 4.839417043803488}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$42"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.285717917492239, 5.635620509790794}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$43"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.635620509790799, 6.285717917492233}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$44"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.8394170438034925`, 6.74540620290972}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$45"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.9513674699489134`, 6.983358369062858}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$46"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{4.64, 277.35999999999996`}, {-139.5856000000001, 
           133.13439999999997`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[1.]], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3}, {
            SparseArray[
            Automatic, {3, 3}, 0, {
             1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
            Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
            EdgeShapeFunction -> {
              GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
            EdgeWeight -> {2, 1, 1, 2, 2, 1}, ImageSize -> Scaled[1.], 
            VertexSize -> {0.09}, VertexStyle -> {2 -> RGBColor[
                Rational[46, 51], 
                Rational[193, 255], 0], 1 -> RGBColor[
                Rational[4, 5], 0, 0], 3 -> RGBColor[
                Rational[12, 17], 
                Rational[82, 255], 
                Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                0.3954100979887313, -0.37993503101780424`}, {
                0.44429670652560765`, -0.38346806780211296`}, {
                0.49295692129322827`, -0.38934738255181967`}, {
                0.5412782000680146, -0.3975593774815831}, {
                0.5891487845236741, -0.408085059741211}, {
                0.6364579587078756, -0.42090008534266654`}, {
                0.6830963051081035, -0.43597481546328354`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$1"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$1", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                0.010621778264911619`}, {-0.3648076211353314, 
                0.610621778264911}, {-0.33928696614102627`, 
                0.6524676742622335}, {-0.31178396226487193`, 
                0.6930382007678794}, {-0.28236221895097113`, 
                0.7322395255353922}, {-0.25108978333865395`, 
                0.7699809830328253}, {-0.21803898288182322`, 
                0.8061752841356209}, {-0.18328625806871401`, 
                0.8407387180104745}, {-0.14691198562895147`, 
                0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$2"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$2", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.6830963051081028, -0.5640251845367187}, {
                0.636457958707875, -0.5790999146573355}, {
                0.5891487845236735, -0.5919149402587909}, {
                0.5412782000680137, -0.6024406225184188}, {
                0.4929569212932275, -0.6106526174481819}, {
                0.4442967065256069, -0.6165319321978884}, {
                0.39541009798873045`, -0.6200649689821971}, {
                0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$3"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$3", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.7191134181554866, -0.3735913457232625}, {
                0.682739145715724, -0.34073871801047506`}, {
                0.647986420902615, -0.30617528413562134`}, {
                0.6149356204457841, -0.2699809830328256}, {
                0.583663184833467, -0.2322395255353924}, {
                0.5542414415195662, -0.1930382007678796}, {
                0.5267384376434119, -0.15246767426223357`}, {
                0.5012177826491069, -0.11062177826491115`}, {
                0.15480762113533175`, 0.48937822173508894`}, {
                0.13132833965468138`, 0.5324027052800367}, {
                0.1099447349939594, 0.5765062685699912}, {0.09070626354023958,
                 0.6215869080872107}, {0.07365742037777057, 
                0.6675403605144072}, {0.05883763637894179, 
                0.7142603438768308}, {0.046281187007849445`, 
                0.76163880335314}, {0.036017113047383975`, 
                0.8095661611865443}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$4"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$4", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 
                1.}, {-0.03601711304738375, 
                0.8095661611865439}, {-0.046281187007849, 
                0.7616388033531397}, {-0.05883763637894135, 
                0.7142603438768306}, {-0.07365742037777012, 
                0.667540360514407}, {-0.09070626354023947, 
                0.6215869080872107}, {-0.10994473499395929`, 
                0.5765062685699913}, {-0.1313283396546815, 
                0.5324027052800367}, {-0.15480762113533164`, 
                0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, "DynamicName", BoxID -> 
              "EdgeLabelID$5"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$5", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                0.14691198562895247`, 0.8735913457232614}, {0.183286258068715,
                 0.840738718010474}, {0.21803898288182422`, 
                0.8061752841356202}, {0.25108978333865495`, 
                0.7699809830328245}, {0.282362218950972, 
                0.7322395255353913}, {0.3117839622648728, 
                0.6930382007678785}, {0.33928696614102716`, 
                0.6524676742622324}, {0.36480762113533227`, 
                0.61062177826491}, {0.7112177826491075, 
                0.010621778264909898`}, {
                0.7346970641297578, -0.03240270528003786}, {
                0.7560806687904799, -0.07650626856999232}, {
                0.7753191402441997, -0.12158690808721184`}, {
                0.7923679834066687, -0.16754036051440824`}, {
                0.8071877674054975, -0.2142603438768319}, {
                0.8197442167765898, -0.2616388033531412}, {
                0.8300082907370552, -0.30956616118654545`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$6"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$6", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
               0.07794228634059945], 
              RGBColor[
               Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8660254037844389, -0.5000000000000012}, 
               0.07794228634059945], 
              RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$2"], 
            TagBox[
             StyleBox[
              DiskBox[{1.8369701987210297`*^-16, 1.}, 0.07794228634059945], 
              RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{2.400693309010096, 
            279.5993066909899}, {-127.82490669098988`, 123.2393066909899}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]], 
      GraphicsBox[{},
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[1], 
       GrayLevel[1], 
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.01]}}, "Rows" -> {{
        Scaled[0.02]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.5844047547250843`*^9, 3.5844047866882677`*^9}, {
   3.584404887828841*^9, 3.584404953184533*^9}, {3.584405135170412*^9, 
   3.5844051512665987`*^9}, 3.5844051892293177`*^9, {3.5844052385191507`*^9, 
   3.58440526353485*^9}, {3.584405426967922*^9, 3.5844054404532022`*^9}, {
   3.5844055212728453`*^9, 3.58440553193248*^9}, 3.5844062201823883`*^9, 
   3.584406265546163*^9, 3.584406562770323*^9, 3.584407014003283*^9, 
   3.58444473726188*^9, 3.584444857791091*^9, 3.58444489057933*^9, 
   3.584447498282729*^9, 3.584448868770665*^9, 3.5844507707773657`*^9, 
   3.58445233571696*^9, 3.5844525851547127`*^9, 3.584453626426058*^9, 
   3.584453761264471*^9, {3.5844539130866623`*^9, 3.5844539246397333`*^9}, 
   3.584455432611416*^9, 3.5844554983527517`*^9, {3.5844737585130453`*^9, 
   3.584473785486878*^9}, 3.584473827111738*^9, 3.5844765246109743`*^9, 
   3.584476907572391*^9, 3.584477713373145*^9, 3.584798598390869*^9, 
   3.584904956420702*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ShowOrbigraphGrid", "[", "4", "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.583689204783654*^9, 
   3.5836892059379377`*^9}, {3.583689247574144*^9, 3.583689253766901*^9}, 
   3.5836894292191153`*^9, 3.583690035795977*^9, 3.583692209784424*^9, {
   3.583775088515678*^9, 3.583775101231744*^9}, {3.583786434962036*^9, 
   3.583786483895177*^9}, {3.5838692486544113`*^9, 3.583869272224636*^9}, {
   3.58386934775286*^9, 3.583869350350371*^9}, {3.583869506301964*^9, 
   3.5838695147494707`*^9}, {3.5838698274605713`*^9, 3.583869876444372*^9}, {
   3.583950970921329*^9, 3.583950983399239*^9}, {3.584106329957271*^9, 
   3.5841063464142447`*^9}, {3.584125333308248*^9, 3.584125333540291*^9}, {
   3.584195107763858*^9, 3.584195138631399*^9}, {3.584195302158284*^9, 
   3.584195374825238*^9}, {3.584195454266306*^9, 3.5841955032225103`*^9}, {
   3.584195599408515*^9, 3.584195639270626*^9}, {3.584195677525853*^9, 
   3.584195683081524*^9}, {3.584196554938385*^9, 3.584196558322584*^9}, {
   3.5841977797627583`*^9, 3.584197787199843*^9}, {3.584197824378058*^9, 
   3.584197990483066*^9}, {3.584198058948021*^9, 3.5841981594176073`*^9}, {
   3.584208745561983*^9, 3.584208746441575*^9}, {3.5842087981701307`*^9, 
   3.584208855354003*^9}, {3.584298446287365*^9, 3.584298529295892*^9}, {
   3.584298694359271*^9, 3.584299014467272*^9}, {3.58429907002599*^9, 
   3.5842991415998363`*^9}, {3.584299188646434*^9, 3.5842991952765713`*^9}, {
   3.584299271505011*^9, 3.584299272791916*^9}, {3.584299353223269*^9, 
   3.5842994681249866`*^9}, {3.584299546973187*^9, 3.5842995509343367`*^9}, {
   3.5842996701139727`*^9, 3.5842997584997377`*^9}, {3.584404361428561*^9, 
   3.584404784950856*^9}, {3.58440488710564*^9, 3.584405262687581*^9}, {
   3.5844054264923267`*^9, 3.584405439145966*^9}, {3.584405497454258*^9, 
   3.58440550133148*^9}, {3.5844055399715567`*^9, 3.584405540634699*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Infinite k-Tree Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Orbigraph\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{{1}, {{
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 1}}, {{
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 3}}}, {
          Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 6}, {2, 7}, {2, 8}, {3, 
           9}, {3, 10}, {3, 11}, {4, 12}, {4, 13}, {4, 14}, {5, 15}, {5, 
           16}, {5, 17}, {6, 18}, {6, 19}, {6, 20}, {7, 21}, {7, 22}, {7, 
           23}, {8, 24}, {8, 25}, {8, 26}, {9, 27}, {9, 28}, {9, 29}, {10, 
           30}, {10, 31}, {10, 32}, {11, 33}, {11, 34}, {11, 35}, {12, 36}, {
           12, 37}, {12, 38}, {13, 39}, {13, 40}, {13, 41}, {14, 42}, {14, 
           43}, {14, 44}, {15, 45}, {15, 46}, {15, 47}, {16, 48}, {16, 49}, {
           16, 50}, {17, 51}, {17, 52}, {17, 53}}}, {
          GraphLayout -> "RadialEmbedding", ImageSize -> Scaled[1.], 
           VertexShapeFunction -> {{{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {1} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> Automatic}, VertexSize -> {0.3}, 
           VertexStyle -> {{{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {1} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$2", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$11", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$12", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$13", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$14", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$15", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$16", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$17", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$18", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$19", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$20", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$21", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$22", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$23", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$24", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$25", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$26", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$27", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$28", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$29", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$30", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$31", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$32", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$33", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$34", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$35", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$36", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$37", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$38", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$39", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$40", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$41", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$42", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$43", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$44", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$45", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$46", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$47", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$48", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$49", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$50", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$51", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$52", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$53", Automatic, Center]}}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.76698500973869, 2.76698500973869}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$1"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.112309149161229, 3.421660870316151}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$2"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.1123091491612285`, 2.112309149161229}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$3"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.421660870316151, 2.1123091491612285`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$4"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.4216608703161513`, 3.421660870316151}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$5"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.28772901730711, 4.5555927233251925`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$6"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.4576332885837677`, 4.076336730893612}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$7"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9783772961521879, 3.2462410021702715`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$8"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9783772961521873, 2.2877290173071105`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$9"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.4576332885837673`, 1.4576332885837677`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$10"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.28772901730711, 0.9783772961521875}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$11"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.2462410021702692`, 0.9783772961521873}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$12"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.076336730893614, 1.4576332885837686`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$13"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.5555927233251925`, 2.28772901730711}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$14"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.5555927233251925`, 3.2462410021702692`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$15"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.076336730893612, 4.076336730893613}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$16"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.24624100217027, 4.5555927233251925`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$17"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.5249051892403864`, 5.53397001947738}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$18"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.0481010210913193`, 5.449896580118444}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$19"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.5931397791644533`, 5.28430423031228}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$20"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.1738452305742377`, 5.042224409813977}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$21"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8029574280063074, 4.731012591471075}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$22"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.4917456096634054, 4.3601247889031445`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$23"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.24966578916510107`, 3.940830240312928}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$24"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.08407343935893685, 3.4858689983860622`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$25"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.440892098500626*^-16, 3.009064830236996}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$26"], 
           TagBox[
            StyleBox[
             DiskBox[{0., 2.524905189240387}, 0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$27"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.08407343935893596, 2.0481010210913206`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$28"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.2496657891650993, 1.5931397791644544`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$29"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.4917456096634032, 1.1738452305742377`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$30"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8029574280063063, 0.8029574280063068}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$31"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.1738452305742364`, 0.4917456096634045}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$32"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.5931397791644515`, 0.24966578916510107`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$33"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.0481010210913175`, 0.08407343935893685}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$34"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.5249051892403833`, 4.440892098500626*^-16}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$35"], 
           TagBox[
            StyleBox[
             DiskBox[{3.009064830236993, 0.}, 0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$36"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.4858689983860587`, 0.08407343935893596}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$37"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.940830240312925, 0.2496657891650993}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$38"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.360124788903143, 0.4917456096634041}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$39"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.731012591471073, 0.8029574280063063}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$40"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.042224409813976, 1.173845230574236}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$41"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.28430423031228, 1.5931397791644537`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$42"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.449896580118444, 2.0481010210913198`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$43"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.53397001947738, 2.5249051892403855`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$44"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.53397001947738, 3.009064830236993}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$45"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.449896580118444, 3.4858689983860587`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$46"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.28430423031228, 3.940830240312925}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$47"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.042224409813976, 4.360124788903143}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$48"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.731012591471074, 4.731012591471073}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$49"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.360124788903144, 5.042224409813975}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$50"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.940830240312926, 5.28430423031228}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$51"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.48586899838606, 5.449896580118444}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$52"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.0090648302369942`, 5.53397001947738}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$53"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{4.640000000000003, 277.36}, {-139.5856, 
           133.13440000000003`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[1.]], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3}, {
            SparseArray[
            Automatic, {3, 3}, 0, {
             1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
            Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
            EdgeShapeFunction -> {
              GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
            EdgeWeight -> {1, 3, 1, 3, 2, 2}, ImageSize -> Scaled[1.], 
            VertexSize -> {0.09}, VertexStyle -> {2 -> RGBColor[
                Rational[46, 51], 
                Rational[193, 255], 0], 1 -> RGBColor[
                Rational[4, 5], 0, 0], 3 -> RGBColor[
                Rational[12, 17], 
                Rational[82, 255], 
                Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                0.3954100979887313, -0.37993503101780424`}, {
                0.44429670652560765`, -0.38346806780211296`}, {
                0.49295692129322827`, -0.38934738255181967`}, {
                0.5412782000680146, -0.3975593774815831}, {
                0.5891487845236741, -0.408085059741211}, {
                0.6364579587078756, -0.42090008534266654`}, {
                0.6830963051081035, -0.43597481546328354`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$1"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$1", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                0.010621778264911619`}, {-0.3648076211353314, 
                0.610621778264911}, {-0.33928696614102627`, 
                0.6524676742622335}, {-0.31178396226487193`, 
                0.6930382007678794}, {-0.28236221895097113`, 
                0.7322395255353922}, {-0.25108978333865395`, 
                0.7699809830328253}, {-0.21803898288182322`, 
                0.8061752841356209}, {-0.18328625806871401`, 
                0.8407387180104745}, {-0.14691198562895147`, 
                0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$2"], 
             InsetBox[
              FormBox[
               StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$2", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.6830963051081028, -0.5640251845367187}, {
                0.636457958707875, -0.5790999146573355}, {
                0.5891487845236735, -0.5919149402587909}, {
                0.5412782000680137, -0.6024406225184188}, {
                0.4929569212932275, -0.6106526174481819}, {
                0.4442967065256069, -0.6165319321978884}, {
                0.39541009798873045`, -0.6200649689821971}, {
                0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$3"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$3", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.7191134181554866, -0.3735913457232625}, {
                0.682739145715724, -0.34073871801047506`}, {
                0.647986420902615, -0.30617528413562134`}, {
                0.6149356204457841, -0.2699809830328256}, {
                0.583663184833467, -0.2322395255353924}, {
                0.5542414415195662, -0.1930382007678796}, {
                0.5267384376434119, -0.15246767426223357`}, {
                0.5012177826491069, -0.11062177826491115`}, {
                0.15480762113533175`, 0.48937822173508894`}, {
                0.13132833965468138`, 0.5324027052800367}, {
                0.1099447349939594, 0.5765062685699912}, {0.09070626354023958,
                 0.6215869080872107}, {0.07365742037777057, 
                0.6675403605144072}, {0.05883763637894179, 
                0.7142603438768308}, {0.046281187007849445`, 
                0.76163880335314}, {0.036017113047383975`, 
                0.8095661611865443}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$4"], 
             InsetBox[
              FormBox[
               StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$4", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 
                1.}, {-0.03601711304738375, 
                0.8095661611865439}, {-0.046281187007849, 
                0.7616388033531397}, {-0.05883763637894135, 
                0.7142603438768306}, {-0.07365742037777012, 
                0.667540360514407}, {-0.09070626354023947, 
                0.6215869080872107}, {-0.10994473499395929`, 
                0.5765062685699913}, {-0.1313283396546815, 
                0.5324027052800367}, {-0.15480762113533164`, 
                0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, "DynamicName", BoxID -> 
              "EdgeLabelID$5"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$5", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                0.14691198562895247`, 0.8735913457232614}, {0.183286258068715,
                 0.840738718010474}, {0.21803898288182422`, 
                0.8061752841356202}, {0.25108978333865495`, 
                0.7699809830328245}, {0.282362218950972, 
                0.7322395255353913}, {0.3117839622648728, 
                0.6930382007678785}, {0.33928696614102716`, 
                0.6524676742622324}, {0.36480762113533227`, 
                0.61062177826491}, {0.7112177826491075, 
                0.010621778264909898`}, {
                0.7346970641297578, -0.03240270528003786}, {
                0.7560806687904799, -0.07650626856999232}, {
                0.7753191402441997, -0.12158690808721184`}, {
                0.7923679834066687, -0.16754036051440824`}, {
                0.8071877674054975, -0.2142603438768319}, {
                0.8197442167765898, -0.2616388033531412}, {
                0.8300082907370552, -0.30956616118654545`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$6"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$6", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
               0.07794228634059945], 
              RGBColor[
               Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8660254037844389, -0.5000000000000012}, 
               0.07794228634059945], 
              RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$2"], 
            TagBox[
             StyleBox[
              DiskBox[{1.8369701987210297`*^-16, 1.}, 0.07794228634059945], 
              RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{2.400693309010096, 
            279.5993066909899}, {-127.82490669098988`, 123.2393066909899}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]], 
      GraphicsBox[{},
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
            SparseArray[
            Automatic, {7, 7}, 0, {
             1, {{0, 4, 8, 12, 16, 20, 24, 28}, {{4}, {5}, {6}, {7}, {3}, {
               5}, {6}, {7}, {2}, {5}, {6}, {7}, {1}, {5}, {6}, {7}, {1}, {
               2}, {3}, {4}, {1}, {2}, {3}, {4}, {1}, {2}, {3}, {4}}}, 
              Pattern}]}, {
           GraphHighlight -> {3, 1, 5, 4, 7, 2, 6}, 
            GraphHighlightStyle -> {
             6 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              4 -> {VertexStyle -> Hue[0.14, 1, 0.9]}, 
              5 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              2 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
              1 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
              7 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              3 -> {VertexStyle -> Hue[0.14, 1, 0.9]}}, ImageSize -> 
            Scaled[1.], VertexSize -> {0.2}}]], Typeset`boxes, 
         Typeset`boxes$s2d = GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.0001937884754836805, 0.31823716684075093`}, 
               0.06415272600389244], 
              Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{1.6946654040242253`, 0.3189627344256111}, 
               0.06415272600389244], 
              Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$2"], 
            TagBox[
             StyleBox[
              
              DiskBox[{1.6949416592011364`, 0.9654747332116507}, 
               0.06415272600389244], 
              Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"], 
            TagBox[
             StyleBox[
              DiskBox[{0., 0.9648215660605998}, 0.06415272600389244], 
              Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$4"], 
            TagBox[
             StyleBox[
              DiskBox[{0.8485113459102751, 0.}, 0.06415272600389244], 
              Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$5"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8466491549206725, 1.2833113220558312`}, 
               0.06415272600389244], 
              Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$6"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8477109312976009, 0.6417849406778126}, 
               0.06415272600389244], 
              Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$7"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{4.640000000000001, 
            277.35999999999996`}, {-108.5856, 103.014563754606}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]],
      Background->Opacity[0.5, 
        RGBColor[0, 1, 0]],
      StripOnInput->False]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{{1}, {{
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}, {
             DirectedEdge[1, 3], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}}, {
          Null, {{1, 2}, {1, 3}, {1, 4}, {2, 5}, {2, 6}, {3, 7}, {3, 8}, {4, 
           9}, {4, 10}, {5, 11}, {5, 12}, {6, 13}, {6, 14}, {7, 15}, {7, 
           16}, {8, 17}, {8, 18}, {9, 19}, {9, 20}, {10, 21}, {10, 22}, {11, 
           23}, {11, 24}, {12, 25}, {12, 26}, {13, 27}, {13, 28}, {14, 29}, {
           14, 30}, {15, 31}, {15, 32}, {16, 33}, {16, 34}, {17, 35}, {17, 
           36}, {18, 37}, {18, 38}, {19, 39}, {19, 40}, {20, 41}, {20, 42}, {
           21, 43}, {21, 44}, {22, 45}, {22, 46}}}, {
          GraphLayout -> "RadialEmbedding", ImageSize -> Scaled[1.], 
           VertexShapeFunction -> {{{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {1} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic}, VertexSize -> {0.3}, 
           VertexStyle -> {{{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {1} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$2", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$11", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$12", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$13", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$14", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$15", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$16", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$17", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$18", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$19", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$20", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$21", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$22", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$23", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$24", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$25", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$26", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$27", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$28", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$29", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$30", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$31", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$32", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$33", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$34", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$35", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$36", Automatic, Center]}, {
              DynamicLocation["VertexID$18", Automatic, Center], 
              DynamicLocation["VertexID$37", Automatic, Center]}, {
              DynamicLocation["VertexID$18", Automatic, Center], 
              DynamicLocation["VertexID$38", Automatic, Center]}, {
              DynamicLocation["VertexID$19", Automatic, Center], 
              DynamicLocation["VertexID$39", Automatic, Center]}, {
              DynamicLocation["VertexID$19", Automatic, Center], 
              DynamicLocation["VertexID$40", Automatic, Center]}, {
              DynamicLocation["VertexID$20", Automatic, Center], 
              DynamicLocation["VertexID$41", Automatic, Center]}, {
              DynamicLocation["VertexID$20", Automatic, Center], 
              DynamicLocation["VertexID$42", Automatic, Center]}, {
              DynamicLocation["VertexID$21", Automatic, Center], 
              DynamicLocation["VertexID$43", Automatic, Center]}, {
              DynamicLocation["VertexID$21", Automatic, Center], 
              DynamicLocation["VertexID$44", Automatic, Center]}, {
              DynamicLocation["VertexID$22", Automatic, Center], 
              DynamicLocation["VertexID$45", Automatic, Center]}, {
              DynamicLocation["VertexID$22", Automatic, Center], 
              DynamicLocation["VertexID$46", Automatic, Center]}}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.491679184531429, 3.491679184531429}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$1"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.7291852240807537`, 3.9319052778530903`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$2"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.491679184531429, 2.611226997888106}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$3"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.254173144982104, 3.9319052778530894`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$4"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.6112269978881066`, 5.016667105432779}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$5"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.7307748112447838`, 3.4916791845314297`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$6"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.6112269978881057`, 1.9666912636300786`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$7"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.37213137117475, 1.9666912636300775`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$8"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.252583557818074, 3.4916791845314283`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$9"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.372131371174753, 5.016667105432779}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$10"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.8080458019150756`, 6.043033702205834}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$11"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.6239580494733776`, 5.35940031958948}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$12"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9403246668570246, 4.175312567147784}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$13"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9403246668570238, 2.8080458019150765`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$14"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.6239580494733772`, 1.6239580494733776`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$15"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.8080458019150756`, 0.9403246668570238}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$16"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.175312567147781, 0.9403246668570238}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$17"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.359400319589478, 1.6239580494733752`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$18"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.043033702205834, 2.8080458019150756`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$19"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.043033702205834, 4.175312567147781}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$20"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.359400319589483, 5.359400319589478}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$21"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.175312567147782, 6.043033702205834}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$22"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.0319908991139455`, 6.983358369062858}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$23"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.1439413252593678`, 6.74540620290972}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$24"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.3477378592720615`, 6.285717917492237}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$25"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.6976404515706216, 5.635620509790797}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$26"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.23795216615313786`, 4.839417043803492}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$27"], 
           TagBox[
            StyleBox[
             
             DiskBox[{8.881784197001252*^-16, 3.951367469948916}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$28"], 
           TagBox[
            StyleBox[
             DiskBox[{0., 3.0319908991139455`}, 0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$29"], 
           TagBox[
            StyleBox[
             DiskBox[{0.23795216615313608`, 2.1439413252593695`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$30"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.6976404515706212, 1.3477378592720615`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$31"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.3477378592720606`, 0.697640451570622}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$32"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.1439413252593655`, 0.23795216615313786`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$33"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.0319908991139446`, 4.440892098500626*^-16}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$34"], 
           TagBox[
            StyleBox[
             DiskBox[{3.951367469948912, 0.}, 0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$35"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.839417043803488, 0.23795216615313608`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$36"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.635620509790794, 0.6976404515706189}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$37"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.285717917492233, 1.347737859272058}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$38"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.74540620290972, 2.143941325259365}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$39"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.983358369062858, 3.031990899113944}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$40"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.983358369062858, 3.9513674699489116`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$41"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.745406202909722, 4.839417043803488}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$42"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.285717917492239, 5.635620509790794}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$43"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.635620509790799, 6.285717917492233}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$44"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.8394170438034925`, 6.74540620290972}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$45"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.9513674699489134`, 6.983358369062858}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$46"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{4.64, 277.35999999999996`}, {-139.5856000000001, 
           133.13439999999997`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[1.]], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3}, {
            SparseArray[
            Automatic, {3, 3}, 0, {
             1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
            Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
            EdgeShapeFunction -> {
              GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
            EdgeWeight -> {2, 1, 1, 2, 2, 1}, ImageSize -> Scaled[1.], 
            VertexSize -> {0.09}, VertexStyle -> {2 -> RGBColor[
                Rational[46, 51], 
                Rational[193, 255], 0], 1 -> RGBColor[
                Rational[4, 5], 0, 0], 3 -> RGBColor[
                Rational[12, 17], 
                Rational[82, 255], 
                Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                0.3954100979887313, -0.37993503101780424`}, {
                0.44429670652560765`, -0.38346806780211296`}, {
                0.49295692129322827`, -0.38934738255181967`}, {
                0.5412782000680146, -0.3975593774815831}, {
                0.5891487845236741, -0.408085059741211}, {
                0.6364579587078756, -0.42090008534266654`}, {
                0.6830963051081035, -0.43597481546328354`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$1"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$1", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                0.010621778264911619`}, {-0.3648076211353314, 
                0.610621778264911}, {-0.33928696614102627`, 
                0.6524676742622335}, {-0.31178396226487193`, 
                0.6930382007678794}, {-0.28236221895097113`, 
                0.7322395255353922}, {-0.25108978333865395`, 
                0.7699809830328253}, {-0.21803898288182322`, 
                0.8061752841356209}, {-0.18328625806871401`, 
                0.8407387180104745}, {-0.14691198562895147`, 
                0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$2"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$2", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.6830963051081028, -0.5640251845367187}, {
                0.636457958707875, -0.5790999146573355}, {
                0.5891487845236735, -0.5919149402587909}, {
                0.5412782000680137, -0.6024406225184188}, {
                0.4929569212932275, -0.6106526174481819}, {
                0.4442967065256069, -0.6165319321978884}, {
                0.39541009798873045`, -0.6200649689821971}, {
                0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$3"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$3", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.7191134181554866, -0.3735913457232625}, {
                0.682739145715724, -0.34073871801047506`}, {
                0.647986420902615, -0.30617528413562134`}, {
                0.6149356204457841, -0.2699809830328256}, {
                0.583663184833467, -0.2322395255353924}, {
                0.5542414415195662, -0.1930382007678796}, {
                0.5267384376434119, -0.15246767426223357`}, {
                0.5012177826491069, -0.11062177826491115`}, {
                0.15480762113533175`, 0.48937822173508894`}, {
                0.13132833965468138`, 0.5324027052800367}, {
                0.1099447349939594, 0.5765062685699912}, {0.09070626354023958,
                 0.6215869080872107}, {0.07365742037777057, 
                0.6675403605144072}, {0.05883763637894179, 
                0.7142603438768308}, {0.046281187007849445`, 
                0.76163880335314}, {0.036017113047383975`, 
                0.8095661611865443}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$4"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$4", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 
                1.}, {-0.03601711304738375, 
                0.8095661611865439}, {-0.046281187007849, 
                0.7616388033531397}, {-0.05883763637894135, 
                0.7142603438768306}, {-0.07365742037777012, 
                0.667540360514407}, {-0.09070626354023947, 
                0.6215869080872107}, {-0.10994473499395929`, 
                0.5765062685699913}, {-0.1313283396546815, 
                0.5324027052800367}, {-0.15480762113533164`, 
                0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, "DynamicName", BoxID -> 
              "EdgeLabelID$5"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$5", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                0.14691198562895247`, 0.8735913457232614}, {0.183286258068715,
                 0.840738718010474}, {0.21803898288182422`, 
                0.8061752841356202}, {0.25108978333865495`, 
                0.7699809830328245}, {0.282362218950972, 
                0.7322395255353913}, {0.3117839622648728, 
                0.6930382007678785}, {0.33928696614102716`, 
                0.6524676742622324}, {0.36480762113533227`, 
                0.61062177826491}, {0.7112177826491075, 
                0.010621778264909898`}, {
                0.7346970641297578, -0.03240270528003786}, {
                0.7560806687904799, -0.07650626856999232}, {
                0.7753191402441997, -0.12158690808721184`}, {
                0.7923679834066687, -0.16754036051440824`}, {
                0.8071877674054975, -0.2142603438768319}, {
                0.8197442167765898, -0.2616388033531412}, {
                0.8300082907370552, -0.30956616118654545`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$6"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$6", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
               0.07794228634059945], 
              RGBColor[
               Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8660254037844389, -0.5000000000000012}, 
               0.07794228634059945], 
              RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$2"], 
            TagBox[
             StyleBox[
              DiskBox[{1.8369701987210297`*^-16, 1.}, 0.07794228634059945], 
              RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{2.400693309010096, 
            279.5993066909899}, {-127.82490669098988`, 123.2393066909899}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]], 
      GraphicsBox[{},
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"\[Times]\"\>",
          StripOnInput->False,
          TextAlignment->Center,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->Scaled[0.6],
          FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
       Text[
        Style["\[Times]", 
         RGBColor[1, 0, 0], FontSize -> Scaled[0.6], TextAlignment -> 
         Center]]],
      Background->Opacity[0.3, 
        RGBColor[1, 0, 0]],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[1], 
       GrayLevel[1], 
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.01]}}, "Rows" -> {{
        Scaled[0.02]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{3.5844738306546993`*^9, 3.584476524798691*^9, 
  3.584476908308436*^9, 3.5844777168067102`*^9, 3.584798599084489*^9, 
  3.58490495672314*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ShowOrbigraphGrid", "[", "5", "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.583689204783654*^9, 
   3.5836892059379377`*^9}, {3.583689247574144*^9, 3.583689253766901*^9}, 
   3.5836894292191153`*^9, 3.583690035795977*^9, 3.583692209784424*^9, {
   3.583775088515678*^9, 3.583775101231744*^9}, {3.583786434962036*^9, 
   3.583786483895177*^9}, {3.5838692486544113`*^9, 3.583869272224636*^9}, {
   3.58386934775286*^9, 3.583869350350371*^9}, {3.583869506301964*^9, 
   3.5838695147494707`*^9}, {3.5838698274605713`*^9, 3.583869876444372*^9}, {
   3.583950970921329*^9, 3.583950983399239*^9}, {3.584106329957271*^9, 
   3.5841063464142447`*^9}, {3.584125333308248*^9, 3.584125333540291*^9}, {
   3.584195107763858*^9, 3.584195138631399*^9}, {3.584195302158284*^9, 
   3.584195374825238*^9}, {3.584195454266306*^9, 3.5841955032225103`*^9}, {
   3.584195599408515*^9, 3.584195639270626*^9}, {3.584195677525853*^9, 
   3.584195683081524*^9}, {3.584196554938385*^9, 3.584196558322584*^9}, {
   3.5841977797627583`*^9, 3.584197787199843*^9}, {3.584197824378058*^9, 
   3.584197990483066*^9}, {3.584198058948021*^9, 3.5841981594176073`*^9}, {
   3.584208745561983*^9, 3.584208746441575*^9}, {3.5842087981701307`*^9, 
   3.584208855354003*^9}, {3.584298446287365*^9, 3.584298529295892*^9}, {
   3.584298694359271*^9, 3.584299014467272*^9}, {3.58429907002599*^9, 
   3.5842991415998363`*^9}, {3.584299188646434*^9, 3.5842991952765713`*^9}, {
   3.584299271505011*^9, 3.584299272791916*^9}, {3.584299353223269*^9, 
   3.5842994681249866`*^9}, {3.584299546973187*^9, 3.5842995509343367`*^9}, {
   3.5842996701139727`*^9, 3.5842997584997377`*^9}, {3.584404361428561*^9, 
   3.584404784950856*^9}, {3.58440488710564*^9, 3.584405262687581*^9}, {
   3.5844054264923267`*^9, 3.584405439145966*^9}, {3.584405497454258*^9, 
   3.58440550133148*^9}, {3.5844055399715567`*^9, 3.584405540634699*^9}, {
   3.5844488914472837`*^9, 3.584448892600275*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Infinite k-Tree Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Orbigraph\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{{1}, {{
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 1}}, {{
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 3}}}, {
          Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 6}, {2, 7}, {2, 8}, {3, 
           9}, {3, 10}, {3, 11}, {4, 12}, {4, 13}, {4, 14}, {5, 15}, {5, 
           16}, {5, 17}, {6, 18}, {6, 19}, {6, 20}, {7, 21}, {7, 22}, {7, 
           23}, {8, 24}, {8, 25}, {8, 26}, {9, 27}, {9, 28}, {9, 29}, {10, 
           30}, {10, 31}, {10, 32}, {11, 33}, {11, 34}, {11, 35}, {12, 36}, {
           12, 37}, {12, 38}, {13, 39}, {13, 40}, {13, 41}, {14, 42}, {14, 
           43}, {14, 44}, {15, 45}, {15, 46}, {15, 47}, {16, 48}, {16, 49}, {
           16, 50}, {17, 51}, {17, 52}, {17, 53}}}, {
          GraphLayout -> "RadialEmbedding", ImageSize -> Scaled[1.], 
           VertexShapeFunction -> {{{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {1} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> Automatic}, VertexSize -> {0.3}, 
           VertexStyle -> {{{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {1} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$2", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$11", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$12", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$13", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$14", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$15", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$16", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$17", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$18", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$19", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$20", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$21", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$22", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$23", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$24", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$25", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$26", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$27", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$28", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$29", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$30", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$31", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$32", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$33", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$34", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$35", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$36", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$37", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$38", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$39", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$40", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$41", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$42", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$43", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$44", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$45", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$46", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$47", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$48", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$49", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$50", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$51", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$52", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$53", Automatic, Center]}}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.76698500973869, 2.76698500973869}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$1"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.112309149161229, 3.421660870316151}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$2"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.1123091491612285`, 2.112309149161229}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$3"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.421660870316151, 2.1123091491612285`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$4"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.4216608703161513`, 3.421660870316151}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$5"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.28772901730711, 4.5555927233251925`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$6"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.4576332885837677`, 4.076336730893612}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$7"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9783772961521879, 3.2462410021702715`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$8"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9783772961521873, 2.2877290173071105`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$9"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.4576332885837673`, 1.4576332885837677`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$10"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.28772901730711, 0.9783772961521875}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$11"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.2462410021702692`, 0.9783772961521873}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$12"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.076336730893614, 1.4576332885837686`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$13"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.5555927233251925`, 2.28772901730711}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$14"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.5555927233251925`, 3.2462410021702692`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$15"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.076336730893612, 4.076336730893613}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$16"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.24624100217027, 4.5555927233251925`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$17"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.5249051892403864`, 5.53397001947738}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$18"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.0481010210913193`, 5.449896580118444}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$19"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.5931397791644533`, 5.28430423031228}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$20"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.1738452305742377`, 5.042224409813977}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$21"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8029574280063074, 4.731012591471075}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$22"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.4917456096634054, 4.3601247889031445`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$23"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.24966578916510107`, 3.940830240312928}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$24"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.08407343935893685, 3.4858689983860622`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$25"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.440892098500626*^-16, 3.009064830236996}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$26"], 
           TagBox[
            StyleBox[
             DiskBox[{0., 2.524905189240387}, 0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$27"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.08407343935893596, 2.0481010210913206`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$28"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.2496657891650993, 1.5931397791644544`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$29"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.4917456096634032, 1.1738452305742377`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$30"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8029574280063063, 0.8029574280063068}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$31"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.1738452305742364`, 0.4917456096634045}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$32"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.5931397791644515`, 0.24966578916510107`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$33"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.0481010210913175`, 0.08407343935893685}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$34"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.5249051892403833`, 4.440892098500626*^-16}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$35"], 
           TagBox[
            StyleBox[
             DiskBox[{3.009064830236993, 0.}, 0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$36"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.4858689983860587`, 0.08407343935893596}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$37"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.940830240312925, 0.2496657891650993}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$38"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.360124788903143, 0.4917456096634041}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$39"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.731012591471073, 0.8029574280063063}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$40"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.042224409813976, 1.173845230574236}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$41"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.28430423031228, 1.5931397791644537`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$42"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.449896580118444, 2.0481010210913198`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$43"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.53397001947738, 2.5249051892403855`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$44"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.53397001947738, 3.009064830236993}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$45"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.449896580118444, 3.4858689983860587`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$46"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.28430423031228, 3.940830240312925}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$47"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.042224409813976, 4.360124788903143}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$48"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.731012591471074, 4.731012591471073}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$49"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.360124788903144, 5.042224409813975}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$50"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.940830240312926, 5.28430423031228}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$51"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.48586899838606, 5.449896580118444}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$52"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.0090648302369942`, 5.53397001947738}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$53"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{4.640000000000003, 277.36}, {-139.5856, 
           133.13440000000003`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[1.]], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3}, {
            SparseArray[
            Automatic, {3, 3}, 0, {
             1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
            Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
            EdgeShapeFunction -> {
              GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
            EdgeWeight -> {1, 3, 1, 3, 2, 2}, ImageSize -> Scaled[1.], 
            VertexSize -> {0.09}, VertexStyle -> {2 -> RGBColor[
                Rational[46, 51], 
                Rational[193, 255], 0], 1 -> RGBColor[
                Rational[4, 5], 0, 0], 3 -> RGBColor[
                Rational[12, 17], 
                Rational[82, 255], 
                Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                0.3954100979887313, -0.37993503101780424`}, {
                0.44429670652560765`, -0.38346806780211296`}, {
                0.49295692129322827`, -0.38934738255181967`}, {
                0.5412782000680146, -0.3975593774815831}, {
                0.5891487845236741, -0.408085059741211}, {
                0.6364579587078756, -0.42090008534266654`}, {
                0.6830963051081035, -0.43597481546328354`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$1"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$1", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                0.010621778264911619`}, {-0.3648076211353314, 
                0.610621778264911}, {-0.33928696614102627`, 
                0.6524676742622335}, {-0.31178396226487193`, 
                0.6930382007678794}, {-0.28236221895097113`, 
                0.7322395255353922}, {-0.25108978333865395`, 
                0.7699809830328253}, {-0.21803898288182322`, 
                0.8061752841356209}, {-0.18328625806871401`, 
                0.8407387180104745}, {-0.14691198562895147`, 
                0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$2"], 
             InsetBox[
              FormBox[
               StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$2", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.6830963051081028, -0.5640251845367187}, {
                0.636457958707875, -0.5790999146573355}, {
                0.5891487845236735, -0.5919149402587909}, {
                0.5412782000680137, -0.6024406225184188}, {
                0.4929569212932275, -0.6106526174481819}, {
                0.4442967065256069, -0.6165319321978884}, {
                0.39541009798873045`, -0.6200649689821971}, {
                0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$3"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$3", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.7191134181554866, -0.3735913457232625}, {
                0.682739145715724, -0.34073871801047506`}, {
                0.647986420902615, -0.30617528413562134`}, {
                0.6149356204457841, -0.2699809830328256}, {
                0.583663184833467, -0.2322395255353924}, {
                0.5542414415195662, -0.1930382007678796}, {
                0.5267384376434119, -0.15246767426223357`}, {
                0.5012177826491069, -0.11062177826491115`}, {
                0.15480762113533175`, 0.48937822173508894`}, {
                0.13132833965468138`, 0.5324027052800367}, {
                0.1099447349939594, 0.5765062685699912}, {0.09070626354023958,
                 0.6215869080872107}, {0.07365742037777057, 
                0.6675403605144072}, {0.05883763637894179, 
                0.7142603438768308}, {0.046281187007849445`, 
                0.76163880335314}, {0.036017113047383975`, 
                0.8095661611865443}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$4"], 
             InsetBox[
              FormBox[
               StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$4", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 
                1.}, {-0.03601711304738375, 
                0.8095661611865439}, {-0.046281187007849, 
                0.7616388033531397}, {-0.05883763637894135, 
                0.7142603438768306}, {-0.07365742037777012, 
                0.667540360514407}, {-0.09070626354023947, 
                0.6215869080872107}, {-0.10994473499395929`, 
                0.5765062685699913}, {-0.1313283396546815, 
                0.5324027052800367}, {-0.15480762113533164`, 
                0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, "DynamicName", BoxID -> 
              "EdgeLabelID$5"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$5", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                0.14691198562895247`, 0.8735913457232614}, {0.183286258068715,
                 0.840738718010474}, {0.21803898288182422`, 
                0.8061752841356202}, {0.25108978333865495`, 
                0.7699809830328245}, {0.282362218950972, 
                0.7322395255353913}, {0.3117839622648728, 
                0.6930382007678785}, {0.33928696614102716`, 
                0.6524676742622324}, {0.36480762113533227`, 
                0.61062177826491}, {0.7112177826491075, 
                0.010621778264909898`}, {
                0.7346970641297578, -0.03240270528003786}, {
                0.7560806687904799, -0.07650626856999232}, {
                0.7753191402441997, -0.12158690808721184`}, {
                0.7923679834066687, -0.16754036051440824`}, {
                0.8071877674054975, -0.2142603438768319}, {
                0.8197442167765898, -0.2616388033531412}, {
                0.8300082907370552, -0.30956616118654545`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$6"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$6", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
               0.07794228634059945], 
              RGBColor[
               Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8660254037844389, -0.5000000000000012}, 
               0.07794228634059945], 
              RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$2"], 
            TagBox[
             StyleBox[
              DiskBox[{1.8369701987210297`*^-16, 1.}, 0.07794228634059945], 
              RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{2.400693309010096, 
            279.5993066909899}, {-127.82490669098988`, 123.2393066909899}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]], 
      GraphicsBox[
       GeometricTransformationBox[GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Good\"\>",
           StripOnInput->False,
           LineColor->RGBColor[0, 
             Rational[2, 3], 0],
           FrontFaceColor->RGBColor[0, 
             Rational[2, 3], 0],
           BackFaceColor->RGBColor[0, 
             Rational[2, 3], 0],
           GraphicsColor->RGBColor[0, 
             Rational[2, 3], 0],
           FontFamily->"Helvetica",
           FontSize->Scaled[0.3],
           FontWeight->Bold,
           FontColor->RGBColor[0, 
             Rational[2, 3], 0]], {0, 0}], {{{
          0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
          0.766044443118978}}, Center}], {1., 0}],
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
            SparseArray[
            Automatic, {7, 7}, 0, {
             1, {{0, 4, 8, 12, 16, 20, 24, 28}, {{4}, {5}, {6}, {7}, {3}, {
               5}, {6}, {7}, {2}, {5}, {6}, {7}, {1}, {5}, {6}, {7}, {1}, {
               2}, {3}, {4}, {1}, {2}, {3}, {4}, {1}, {2}, {3}, {4}}}, 
              Pattern}]}, {
           GraphHighlight -> {3, 1, 5, 4, 7, 2, 6}, 
            GraphHighlightStyle -> {
             6 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              4 -> {VertexStyle -> Hue[0.14, 1, 0.9]}, 
              5 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              2 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
              1 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
              7 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              3 -> {VertexStyle -> Hue[0.14, 1, 0.9]}}, ImageSize -> 
            Scaled[1.], VertexSize -> {0.2}}]], Typeset`boxes, 
         Typeset`boxes$s2d = GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.0001937884754836805, 0.31823716684075093`}, 
               0.06415272600389244], 
              Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{1.6946654040242253`, 0.3189627344256111}, 
               0.06415272600389244], 
              Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$2"], 
            TagBox[
             StyleBox[
              
              DiskBox[{1.6949416592011364`, 0.9654747332116507}, 
               0.06415272600389244], 
              Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"], 
            TagBox[
             StyleBox[
              DiskBox[{0., 0.9648215660605998}, 0.06415272600389244], 
              Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$4"], 
            TagBox[
             StyleBox[
              DiskBox[{0.8485113459102751, 0.}, 0.06415272600389244], 
              Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$5"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8466491549206725, 1.2833113220558312`}, 
               0.06415272600389244], 
              Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$6"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8477109312976009, 0.6417849406778126}, 
               0.06415272600389244], 
              Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$7"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{4.640000000000001, 
            277.35999999999996`}, {-108.5856, 103.014563754606}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]],
      Background->Opacity[0.5, 
        RGBColor[0, 1, 0]],
      StripOnInput->False]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{{1}, {{
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}, {
             DirectedEdge[1, 3], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}}, {
          Null, {{1, 2}, {1, 3}, {1, 4}, {2, 5}, {2, 6}, {3, 7}, {3, 8}, {4, 
           9}, {4, 10}, {5, 11}, {5, 12}, {6, 13}, {6, 14}, {7, 15}, {7, 
           16}, {8, 17}, {8, 18}, {9, 19}, {9, 20}, {10, 21}, {10, 22}, {11, 
           23}, {11, 24}, {12, 25}, {12, 26}, {13, 27}, {13, 28}, {14, 29}, {
           14, 30}, {15, 31}, {15, 32}, {16, 33}, {16, 34}, {17, 35}, {17, 
           36}, {18, 37}, {18, 38}, {19, 39}, {19, 40}, {20, 41}, {20, 42}, {
           21, 43}, {21, 44}, {22, 45}, {22, 46}}}, {
          GraphLayout -> "RadialEmbedding", ImageSize -> Scaled[1.], 
           VertexShapeFunction -> {{{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {1} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic}, VertexSize -> {0.3}, 
           VertexStyle -> {{{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {1} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$2", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$11", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$12", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$13", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$14", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$15", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$16", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$17", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$18", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$19", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$20", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$21", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$22", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$23", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$24", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$25", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$26", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$27", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$28", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$29", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$30", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$31", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$32", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$33", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$34", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$35", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$36", Automatic, Center]}, {
              DynamicLocation["VertexID$18", Automatic, Center], 
              DynamicLocation["VertexID$37", Automatic, Center]}, {
              DynamicLocation["VertexID$18", Automatic, Center], 
              DynamicLocation["VertexID$38", Automatic, Center]}, {
              DynamicLocation["VertexID$19", Automatic, Center], 
              DynamicLocation["VertexID$39", Automatic, Center]}, {
              DynamicLocation["VertexID$19", Automatic, Center], 
              DynamicLocation["VertexID$40", Automatic, Center]}, {
              DynamicLocation["VertexID$20", Automatic, Center], 
              DynamicLocation["VertexID$41", Automatic, Center]}, {
              DynamicLocation["VertexID$20", Automatic, Center], 
              DynamicLocation["VertexID$42", Automatic, Center]}, {
              DynamicLocation["VertexID$21", Automatic, Center], 
              DynamicLocation["VertexID$43", Automatic, Center]}, {
              DynamicLocation["VertexID$21", Automatic, Center], 
              DynamicLocation["VertexID$44", Automatic, Center]}, {
              DynamicLocation["VertexID$22", Automatic, Center], 
              DynamicLocation["VertexID$45", Automatic, Center]}, {
              DynamicLocation["VertexID$22", Automatic, Center], 
              DynamicLocation["VertexID$46", Automatic, Center]}}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.491679184531429, 3.491679184531429}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$1"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.7291852240807537`, 3.9319052778530903`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$2"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.491679184531429, 2.611226997888106}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$3"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.254173144982104, 3.9319052778530894`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$4"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.6112269978881066`, 5.016667105432779}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$5"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.7307748112447838`, 3.4916791845314297`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$6"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.6112269978881057`, 1.9666912636300786`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$7"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.37213137117475, 1.9666912636300775`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$8"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.252583557818074, 3.4916791845314283`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$9"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.372131371174753, 5.016667105432779}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$10"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.8080458019150756`, 6.043033702205834}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$11"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.6239580494733776`, 5.35940031958948}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$12"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9403246668570246, 4.175312567147784}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$13"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9403246668570238, 2.8080458019150765`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$14"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.6239580494733772`, 1.6239580494733776`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$15"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.8080458019150756`, 0.9403246668570238}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$16"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.175312567147781, 0.9403246668570238}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$17"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.359400319589478, 1.6239580494733752`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$18"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.043033702205834, 2.8080458019150756`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$19"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.043033702205834, 4.175312567147781}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$20"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.359400319589483, 5.359400319589478}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$21"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.175312567147782, 6.043033702205834}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$22"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.0319908991139455`, 6.983358369062858}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$23"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.1439413252593678`, 6.74540620290972}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$24"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.3477378592720615`, 6.285717917492237}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$25"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.6976404515706216, 5.635620509790797}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$26"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.23795216615313786`, 4.839417043803492}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$27"], 
           TagBox[
            StyleBox[
             
             DiskBox[{8.881784197001252*^-16, 3.951367469948916}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$28"], 
           TagBox[
            StyleBox[
             DiskBox[{0., 3.0319908991139455`}, 0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$29"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.23795216615313608`, 2.1439413252593695`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$30"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.6976404515706212, 1.3477378592720615`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$31"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.3477378592720606`, 0.697640451570622}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$32"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.1439413252593655`, 0.23795216615313786`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$33"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.0319908991139446`, 4.440892098500626*^-16}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$34"], 
           TagBox[
            StyleBox[
             DiskBox[{3.951367469948912, 0.}, 0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$35"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.839417043803488, 0.23795216615313608`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$36"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.635620509790794, 0.6976404515706189}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$37"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.285717917492233, 1.347737859272058}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$38"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.74540620290972, 2.143941325259365}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$39"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.983358369062858, 3.031990899113944}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$40"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.983358369062858, 3.9513674699489116`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$41"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.745406202909722, 4.839417043803488}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$42"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.285717917492239, 5.635620509790794}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$43"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.635620509790799, 6.285717917492233}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$44"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.8394170438034925`, 6.74540620290972}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$45"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.9513674699489134`, 6.983358369062858}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$46"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{4.64, 277.35999999999996`}, {-139.5856000000001, 
           133.13439999999997`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[1.]], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3}, {
            SparseArray[
            Automatic, {3, 3}, 0, {
             1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
            Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
            EdgeShapeFunction -> {
              GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
            EdgeWeight -> {2, 1, 1, 2, 2, 1}, ImageSize -> Scaled[1.], 
            VertexSize -> {0.09}, VertexStyle -> {2 -> RGBColor[
                Rational[46, 51], 
                Rational[193, 255], 0], 1 -> RGBColor[
                Rational[4, 5], 0, 0], 3 -> RGBColor[
                Rational[12, 17], 
                Rational[82, 255], 
                Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                0.3954100979887313, -0.37993503101780424`}, {
                0.44429670652560765`, -0.38346806780211296`}, {
                0.49295692129322827`, -0.38934738255181967`}, {
                0.5412782000680146, -0.3975593774815831}, {
                0.5891487845236741, -0.408085059741211}, {
                0.6364579587078756, -0.42090008534266654`}, {
                0.6830963051081035, -0.43597481546328354`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$1"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$1", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                0.010621778264911619`}, {-0.3648076211353314, 
                0.610621778264911}, {-0.33928696614102627`, 
                0.6524676742622335}, {-0.31178396226487193`, 
                0.6930382007678794}, {-0.28236221895097113`, 
                0.7322395255353922}, {-0.25108978333865395`, 
                0.7699809830328253}, {-0.21803898288182322`, 
                0.8061752841356209}, {-0.18328625806871401`, 
                0.8407387180104745}, {-0.14691198562895147`, 
                0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$2"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$2", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.6830963051081028, -0.5640251845367187}, {
                0.636457958707875, -0.5790999146573355}, {
                0.5891487845236735, -0.5919149402587909}, {
                0.5412782000680137, -0.6024406225184188}, {
                0.4929569212932275, -0.6106526174481819}, {
                0.4442967065256069, -0.6165319321978884}, {
                0.39541009798873045`, -0.6200649689821971}, {
                0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$3"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$3", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.7191134181554866, -0.3735913457232625}, {
                0.682739145715724, -0.34073871801047506`}, {
                0.647986420902615, -0.30617528413562134`}, {
                0.6149356204457841, -0.2699809830328256}, {
                0.583663184833467, -0.2322395255353924}, {
                0.5542414415195662, -0.1930382007678796}, {
                0.5267384376434119, -0.15246767426223357`}, {
                0.5012177826491069, -0.11062177826491115`}, {
                0.15480762113533175`, 0.48937822173508894`}, {
                0.13132833965468138`, 0.5324027052800367}, {
                0.1099447349939594, 0.5765062685699912}, {0.09070626354023958,
                 0.6215869080872107}, {0.07365742037777057, 
                0.6675403605144072}, {0.05883763637894179, 
                0.7142603438768308}, {0.046281187007849445`, 
                0.76163880335314}, {0.036017113047383975`, 
                0.8095661611865443}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$4"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$4", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 
                1.}, {-0.03601711304738375, 
                0.8095661611865439}, {-0.046281187007849, 
                0.7616388033531397}, {-0.05883763637894135, 
                0.7142603438768306}, {-0.07365742037777012, 
                0.667540360514407}, {-0.09070626354023947, 
                0.6215869080872107}, {-0.10994473499395929`, 
                0.5765062685699913}, {-0.1313283396546815, 
                0.5324027052800367}, {-0.15480762113533164`, 
                0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, "DynamicName", BoxID -> 
              "EdgeLabelID$5"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$5", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                0.14691198562895247`, 0.8735913457232614}, {0.183286258068715,
                 0.840738718010474}, {0.21803898288182422`, 
                0.8061752841356202}, {0.25108978333865495`, 
                0.7699809830328245}, {0.282362218950972, 
                0.7322395255353913}, {0.3117839622648728, 
                0.6930382007678785}, {0.33928696614102716`, 
                0.6524676742622324}, {0.36480762113533227`, 
                0.61062177826491}, {0.7112177826491075, 
                0.010621778264909898`}, {
                0.7346970641297578, -0.03240270528003786}, {
                0.7560806687904799, -0.07650626856999232}, {
                0.7753191402441997, -0.12158690808721184`}, {
                0.7923679834066687, -0.16754036051440824`}, {
                0.8071877674054975, -0.2142603438768319}, {
                0.8197442167765898, -0.2616388033531412}, {
                0.8300082907370552, -0.30956616118654545`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$6"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$6", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
               0.07794228634059945], 
              RGBColor[
               Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8660254037844389, -0.5000000000000012}, 
               0.07794228634059945], 
              RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$2"], 
            TagBox[
             StyleBox[
              DiskBox[{1.8369701987210297`*^-16, 1.}, 0.07794228634059945], 
              RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{2.400693309010096, 
            279.5993066909899}, {-127.82490669098988`, 123.2393066909899}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]], 
      GraphicsBox[{},
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"\[Times]\"\>",
          StripOnInput->False,
          TextAlignment->Center,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->Scaled[0.6],
          FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
       Text[
        Style["\[Times]", 
         RGBColor[1, 0, 0], FontSize -> Scaled[0.6], TextAlignment -> 
         Center]]],
      Background->Opacity[0.3, 
        RGBColor[1, 0, 0]],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[1], 
       GrayLevel[1], 
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.01]}}, "Rows" -> {{
        Scaled[0.02]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.5844047547250843`*^9, 3.5844047866882677`*^9}, {
   3.584404887828841*^9, 3.584404953184533*^9}, {3.584405135170412*^9, 
   3.5844051512665987`*^9}, 3.5844051892293177`*^9, {3.5844052385191507`*^9, 
   3.58440526353485*^9}, {3.584405426967922*^9, 3.5844054404532022`*^9}, {
   3.5844055212728453`*^9, 3.584405540975202*^9}, 3.5844062697166653`*^9, 
   3.5844065689521923`*^9, 3.584407018299097*^9, 3.584444741250002*^9, 
   3.584444894809885*^9, 3.584447506502994*^9, {3.584448873135786*^9, 
   3.584448893062598*^9}, 3.584450779206916*^9, 3.5844523361378717`*^9, 
   3.5844525889820957`*^9, 3.584453627006011*^9, 3.584453761648127*^9, 
   3.584453925037734*^9, 3.584455436761586*^9, 3.584455502602189*^9, 
   3.584473842639402*^9, 3.584476525148327*^9, 3.584476908518291*^9, 
   3.584477720218993*^9, 3.584798599317848*^9, 3.584904960020032*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"ShowOrbigraphGrid", "[", "6", "]"}], 
   "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.583689204783654*^9, 
   3.5836892059379377`*^9}, {3.583689247574144*^9, 3.583689253766901*^9}, 
   3.5836894292191153`*^9, 3.583690035795977*^9, 3.583692209784424*^9, {
   3.583775088515678*^9, 3.583775101231744*^9}, {3.583786434962036*^9, 
   3.583786483895177*^9}, {3.5838692486544113`*^9, 3.583869272224636*^9}, {
   3.58386934775286*^9, 3.583869350350371*^9}, {3.583869506301964*^9, 
   3.5838695147494707`*^9}, {3.5838698274605713`*^9, 3.583869876444372*^9}, {
   3.583950970921329*^9, 3.583950983399239*^9}, {3.584106329957271*^9, 
   3.5841063464142447`*^9}, {3.584125333308248*^9, 3.584125333540291*^9}, {
   3.584195107763858*^9, 3.584195138631399*^9}, {3.584195302158284*^9, 
   3.584195374825238*^9}, {3.584195454266306*^9, 3.5841955032225103`*^9}, {
   3.584195599408515*^9, 3.584195639270626*^9}, {3.584195677525853*^9, 
   3.584195683081524*^9}, {3.584196554938385*^9, 3.584196558322584*^9}, {
   3.5841977797627583`*^9, 3.584197787199843*^9}, {3.584197824378058*^9, 
   3.584197990483066*^9}, {3.584198058948021*^9, 3.5841981594176073`*^9}, {
   3.584208745561983*^9, 3.584208746441575*^9}, {3.5842087981701307`*^9, 
   3.584208855354003*^9}, {3.584298446287365*^9, 3.584298529295892*^9}, {
   3.584298694359271*^9, 3.584299014467272*^9}, {3.58429907002599*^9, 
   3.5842991415998363`*^9}, {3.584299188646434*^9, 3.5842991952765713`*^9}, {
   3.584299271505011*^9, 3.584299272791916*^9}, {3.584299353223269*^9, 
   3.5842994681249866`*^9}, {3.584299546973187*^9, 3.5842995509343367`*^9}, {
   3.5842996701139727`*^9, 3.5842997584997377`*^9}, {3.584404361428561*^9, 
   3.584404784950856*^9}, {3.58440488710564*^9, 3.584405262687581*^9}, {
   3.5844054264923267`*^9, 3.584405439145966*^9}, {3.584405497454258*^9, 
   3.58440550133148*^9}, {3.5844055399715567`*^9, 3.584405540634699*^9}, {
   3.5844488914472837`*^9, 3.584448892600275*^9}, {3.5844759871804256`*^9, 
   3.58447598745892*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     StyleBox["\<\"Infinite k-Tree Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Orbigraph\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{{1}, {{
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 1}}, {{
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 3}, {
             DirectedEdge[3, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 2}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 3], 3}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 3}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 3}, {
             DirectedEdge[3, 2], 2}, {
             DirectedEdge[2, 3], 3}}}, {
          Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 6}, {2, 7}, {2, 8}, {3, 
           9}, {3, 10}, {3, 11}, {4, 12}, {4, 13}, {4, 14}, {5, 15}, {5, 
           16}, {5, 17}, {6, 18}, {6, 19}, {6, 20}, {7, 21}, {7, 22}, {7, 
           23}, {8, 24}, {8, 25}, {8, 26}, {9, 27}, {9, 28}, {9, 29}, {10, 
           30}, {10, 31}, {10, 32}, {11, 33}, {11, 34}, {11, 35}, {12, 36}, {
           12, 37}, {12, 38}, {13, 39}, {13, 40}, {13, 41}, {14, 42}, {14, 
           43}, {14, 44}, {15, 45}, {15, 46}, {15, 47}, {16, 48}, {16, 49}, {
           16, 50}, {17, 51}, {17, 52}, {17, 53}}}, {
          GraphLayout -> "RadialEmbedding", ImageSize -> Scaled[1.], 
           VertexShapeFunction -> {{{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {1} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 3}} -> Automatic, {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> Automatic}, VertexSize -> {0.3}, 
           VertexStyle -> {{{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {1} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 3], 3}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 3}, {
                DirectedEdge[3, 2], 2}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$2", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$11", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$12", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$13", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$14", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$15", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$16", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$17", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$18", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$19", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$20", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$21", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$22", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$23", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$24", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$25", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$26", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$27", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$28", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$29", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$30", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$31", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$32", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$33", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$34", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$35", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$36", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$37", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$38", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$39", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$40", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$41", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$42", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$43", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$44", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$45", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$46", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$47", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$48", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$49", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$50", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$51", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$52", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$53", Automatic, Center]}}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.76698500973869, 2.76698500973869}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$1"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.112309149161229, 3.421660870316151}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$2"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.1123091491612285`, 2.112309149161229}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$3"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.421660870316151, 2.1123091491612285`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$4"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.4216608703161513`, 3.421660870316151}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$5"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.28772901730711, 4.5555927233251925`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$6"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.4576332885837677`, 4.076336730893612}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$7"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9783772961521879, 3.2462410021702715`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$8"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9783772961521873, 2.2877290173071105`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$9"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.4576332885837673`, 1.4576332885837677`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$10"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.28772901730711, 0.9783772961521875}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$11"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.2462410021702692`, 0.9783772961521873}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$12"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.076336730893614, 1.4576332885837686`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$13"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.5555927233251925`, 2.28772901730711}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$14"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.5555927233251925`, 3.2462410021702692`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$15"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.076336730893612, 4.076336730893613}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$16"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.24624100217027, 4.5555927233251925`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$17"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.5249051892403864`, 5.53397001947738}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$18"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.0481010210913193`, 5.449896580118444}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$19"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.5931397791644533`, 5.28430423031228}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$20"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.1738452305742377`, 5.042224409813977}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$21"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8029574280063074, 4.731012591471075}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$22"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.4917456096634054, 4.3601247889031445`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$23"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.24966578916510107`, 3.940830240312928}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$24"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.08407343935893685, 3.4858689983860622`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$25"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.440892098500626*^-16, 3.009064830236996}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$26"], 
           TagBox[
            StyleBox[
             DiskBox[{0., 2.524905189240387}, 0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$27"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.08407343935893596, 2.0481010210913206`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$28"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.2496657891650993, 1.5931397791644544`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$29"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.4917456096634032, 1.1738452305742377`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$30"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8029574280063063, 0.8029574280063068}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$31"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.1738452305742364`, 0.4917456096634045}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$32"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.5931397791644515`, 0.24966578916510107`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$33"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.0481010210913175`, 0.08407343935893685}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$34"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.5249051892403833`, 4.440892098500626*^-16}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$35"], 
           TagBox[
            StyleBox[
             DiskBox[{3.009064830236993, 0.}, 0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$36"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.4858689983860587`, 0.08407343935893596}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$37"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.940830240312925, 0.2496657891650993}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$38"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.360124788903143, 0.4917456096634041}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$39"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.731012591471073, 0.8029574280063063}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$40"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.042224409813976, 1.173845230574236}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$41"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.28430423031228, 1.5931397791644537`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$42"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.449896580118444, 2.0481010210913198`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$43"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.53397001947738, 2.5249051892403855`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$44"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.53397001947738, 3.009064830236993}, 
              0.07262394614949098], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$45"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.449896580118444, 3.4858689983860587`}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$46"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.28430423031228, 3.940830240312925}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$47"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.042224409813976, 4.360124788903143}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$48"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.731012591471074, 4.731012591471073}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$49"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.360124788903144, 5.042224409813975}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$50"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.940830240312926, 5.28430423031228}, 
              0.07262394614949098], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$51"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.48586899838606, 5.449896580118444}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$52"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.0090648302369942`, 5.53397001947738}, 
              0.07262394614949098], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$53"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{4.640000000000003, 277.36}, {-139.5856, 
           133.13440000000003`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[1.]], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3}, {
            SparseArray[
            Automatic, {3, 3}, 0, {
             1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
            Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
            EdgeShapeFunction -> {
              GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
            EdgeWeight -> {1, 3, 1, 3, 2, 2}, ImageSize -> Scaled[1.], 
            VertexSize -> {0.09}, VertexStyle -> {2 -> RGBColor[
                Rational[46, 51], 
                Rational[193, 255], 0], 1 -> RGBColor[
                Rational[4, 5], 0, 0], 3 -> RGBColor[
                Rational[12, 17], 
                Rational[82, 255], 
                Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                0.3954100979887313, -0.37993503101780424`}, {
                0.44429670652560765`, -0.38346806780211296`}, {
                0.49295692129322827`, -0.38934738255181967`}, {
                0.5412782000680146, -0.3975593774815831}, {
                0.5891487845236741, -0.408085059741211}, {
                0.6364579587078756, -0.42090008534266654`}, {
                0.6830963051081035, -0.43597481546328354`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$1"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$1", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                0.010621778264911619`}, {-0.3648076211353314, 
                0.610621778264911}, {-0.33928696614102627`, 
                0.6524676742622335}, {-0.31178396226487193`, 
                0.6930382007678794}, {-0.28236221895097113`, 
                0.7322395255353922}, {-0.25108978333865395`, 
                0.7699809830328253}, {-0.21803898288182322`, 
                0.8061752841356209}, {-0.18328625806871401`, 
                0.8407387180104745}, {-0.14691198562895147`, 
                0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$2"], 
             InsetBox[
              FormBox[
               StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$2", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.6830963051081028, -0.5640251845367187}, {
                0.636457958707875, -0.5790999146573355}, {
                0.5891487845236735, -0.5919149402587909}, {
                0.5412782000680137, -0.6024406225184188}, {
                0.4929569212932275, -0.6106526174481819}, {
                0.4442967065256069, -0.6165319321978884}, {
                0.39541009798873045`, -0.6200649689821971}, {
                0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$3"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$3", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.7191134181554866, -0.3735913457232625}, {
                0.682739145715724, -0.34073871801047506`}, {
                0.647986420902615, -0.30617528413562134`}, {
                0.6149356204457841, -0.2699809830328256}, {
                0.583663184833467, -0.2322395255353924}, {
                0.5542414415195662, -0.1930382007678796}, {
                0.5267384376434119, -0.15246767426223357`}, {
                0.5012177826491069, -0.11062177826491115`}, {
                0.15480762113533175`, 0.48937822173508894`}, {
                0.13132833965468138`, 0.5324027052800367}, {
                0.1099447349939594, 0.5765062685699912}, {0.09070626354023958,
                 0.6215869080872107}, {0.07365742037777057, 
                0.6675403605144072}, {0.05883763637894179, 
                0.7142603438768308}, {0.046281187007849445`, 
                0.76163880335314}, {0.036017113047383975`, 
                0.8095661611865443}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$4"], 
             InsetBox[
              FormBox[
               StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$4", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 
                1.}, {-0.03601711304738375, 
                0.8095661611865439}, {-0.046281187007849, 
                0.7616388033531397}, {-0.05883763637894135, 
                0.7142603438768306}, {-0.07365742037777012, 
                0.667540360514407}, {-0.09070626354023947, 
                0.6215869080872107}, {-0.10994473499395929`, 
                0.5765062685699913}, {-0.1313283396546815, 
                0.5324027052800367}, {-0.15480762113533164`, 
                0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, "DynamicName", BoxID -> 
              "EdgeLabelID$5"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$5", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                0.14691198562895247`, 0.8735913457232614}, {0.183286258068715,
                 0.840738718010474}, {0.21803898288182422`, 
                0.8061752841356202}, {0.25108978333865495`, 
                0.7699809830328245}, {0.282362218950972, 
                0.7322395255353913}, {0.3117839622648728, 
                0.6930382007678785}, {0.33928696614102716`, 
                0.6524676742622324}, {0.36480762113533227`, 
                0.61062177826491}, {0.7112177826491075, 
                0.010621778264909898`}, {
                0.7346970641297578, -0.03240270528003786}, {
                0.7560806687904799, -0.07650626856999232}, {
                0.7753191402441997, -0.12158690808721184`}, {
                0.7923679834066687, -0.16754036051440824`}, {
                0.8071877674054975, -0.2142603438768319}, {
                0.8197442167765898, -0.2616388033531412}, {
                0.8300082907370552, -0.30956616118654545`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$6"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$6", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
               0.07794228634059945], 
              RGBColor[
               Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8660254037844389, -0.5000000000000012}, 
               0.07794228634059945], 
              RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$2"], 
            TagBox[
             StyleBox[
              DiskBox[{1.8369701987210297`*^-16, 1.}, 0.07794228634059945], 
              RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{2.400693309010096, 
            279.5993066909899}, {-127.82490669098988`, 123.2393066909899}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]], 
      GraphicsBox[
       GeometricTransformationBox[GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Good\"\>",
           StripOnInput->False,
           LineColor->RGBColor[0, 
             Rational[2, 3], 0],
           FrontFaceColor->RGBColor[0, 
             Rational[2, 3], 0],
           BackFaceColor->RGBColor[0, 
             Rational[2, 3], 0],
           GraphicsColor->RGBColor[0, 
             Rational[2, 3], 0],
           FontFamily->"Helvetica",
           FontSize->Scaled[0.3],
           FontWeight->Bold,
           FontColor->RGBColor[0, 
             Rational[2, 3], 0]], {0, 0}], {{{
          0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
          0.766044443118978}}, Center}], {1., 0}],
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
            SparseArray[
            Automatic, {7, 7}, 0, {
             1, {{0, 4, 8, 12, 16, 20, 24, 28}, {{4}, {5}, {6}, {7}, {3}, {
               5}, {6}, {7}, {2}, {5}, {6}, {7}, {1}, {5}, {6}, {7}, {1}, {
               2}, {3}, {4}, {1}, {2}, {3}, {4}, {1}, {2}, {3}, {4}}}, 
              Pattern}]}, {
           GraphHighlight -> {3, 1, 5, 4, 7, 2, 6}, 
            GraphHighlightStyle -> {
             6 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              4 -> {VertexStyle -> Hue[0.14, 1, 0.9]}, 
              5 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              2 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
              1 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
              7 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              3 -> {VertexStyle -> Hue[0.14, 1, 0.9]}}, ImageSize -> 
            Scaled[1.], VertexSize -> {0.2}}]], Typeset`boxes, 
         Typeset`boxes$s2d = GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.0001937884754836805, 0.31823716684075093`}, 
               0.06415272600389244], 
              Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{1.6946654040242253`, 0.3189627344256111}, 
               0.06415272600389244], 
              Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$2"], 
            TagBox[
             StyleBox[
              
              DiskBox[{1.6949416592011364`, 0.9654747332116507}, 
               0.06415272600389244], 
              Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"], 
            TagBox[
             StyleBox[
              DiskBox[{0., 0.9648215660605998}, 0.06415272600389244], 
              Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$4"], 
            TagBox[
             StyleBox[
              DiskBox[{0.8485113459102751, 0.}, 0.06415272600389244], 
              Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$5"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8466491549206725, 1.2833113220558312`}, 
               0.06415272600389244], 
              Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$6"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8477109312976009, 0.6417849406778126}, 
               0.06415272600389244], 
              Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$7"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{4.640000000000001, 
            277.35999999999996`}, {-108.5856, 103.014563754606}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]],
      Background->Opacity[0.5, 
        RGBColor[0, 1, 0]],
      StripOnInput->False]},
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{{1}, {{
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}}, {{
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 1}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 1], 2}, {
             DirectedEdge[1, 2], 2}, {
             DirectedEdge[2, 3], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}, {
             DirectedEdge[1, 2], 2}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 1], 1}, {
             DirectedEdge[1, 3], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 1}}, {{
             DirectedEdge[1, 3], 1}, {
             DirectedEdge[3, 2], 1}, {
             DirectedEdge[2, 3], 2}, {
             DirectedEdge[3, 1], 2}}}, {
          Null, {{1, 2}, {1, 3}, {1, 4}, {2, 5}, {2, 6}, {3, 7}, {3, 8}, {4, 
           9}, {4, 10}, {5, 11}, {5, 12}, {6, 13}, {6, 14}, {7, 15}, {7, 
           16}, {8, 17}, {8, 18}, {9, 19}, {9, 20}, {10, 21}, {10, 22}, {11, 
           23}, {11, 24}, {12, 25}, {12, 26}, {13, 27}, {13, 28}, {14, 29}, {
           14, 30}, {15, 31}, {15, 32}, {16, 33}, {16, 34}, {17, 35}, {17, 
           36}, {18, 37}, {18, 38}, {19, 39}, {19, 40}, {20, 41}, {20, 42}, {
           21, 43}, {21, 44}, {22, 45}, {22, 46}}}, {
          GraphLayout -> "RadialEmbedding", ImageSize -> Scaled[1.], 
           VertexShapeFunction -> {{{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {1} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> Automatic, {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> Automatic, {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> Automatic}, VertexSize -> {0.3}, 
           VertexStyle -> {{{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}, {
                DirectedEdge[1, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}} -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], {{
                DirectedEdge[1, 2], 2}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {1} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 3], 1}, {
                DirectedEdge[3, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}} -> RGBColor[
               Rational[4, 5], 0, 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 2}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 2}, {
                DirectedEdge[1, 2], 2}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], {{
                DirectedEdge[1, 2], 1}, {
                DirectedEdge[2, 3], 1}, {
                DirectedEdge[3, 1], 1}, {
                DirectedEdge[1, 2], 1}} -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], 
           LineBox[{{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$2", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}, {
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}, {
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}, {
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$8", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$9", Automatic, Center]}, {
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$10", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$11", Automatic, Center]}, {
              DynamicLocation["VertexID$5", Automatic, Center], 
              DynamicLocation["VertexID$12", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$13", Automatic, Center]}, {
              DynamicLocation["VertexID$6", Automatic, Center], 
              DynamicLocation["VertexID$14", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$15", Automatic, Center]}, {
              DynamicLocation["VertexID$7", Automatic, Center], 
              DynamicLocation["VertexID$16", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$17", Automatic, Center]}, {
              DynamicLocation["VertexID$8", Automatic, Center], 
              DynamicLocation["VertexID$18", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$19", Automatic, Center]}, {
              DynamicLocation["VertexID$9", Automatic, Center], 
              DynamicLocation["VertexID$20", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$21", Automatic, Center]}, {
              DynamicLocation["VertexID$10", Automatic, Center], 
              DynamicLocation["VertexID$22", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$23", Automatic, Center]}, {
              DynamicLocation["VertexID$11", Automatic, Center], 
              DynamicLocation["VertexID$24", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$25", Automatic, Center]}, {
              DynamicLocation["VertexID$12", Automatic, Center], 
              DynamicLocation["VertexID$26", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$27", Automatic, Center]}, {
              DynamicLocation["VertexID$13", Automatic, Center], 
              DynamicLocation["VertexID$28", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$29", Automatic, Center]}, {
              DynamicLocation["VertexID$14", Automatic, Center], 
              DynamicLocation["VertexID$30", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$31", Automatic, Center]}, {
              DynamicLocation["VertexID$15", Automatic, Center], 
              DynamicLocation["VertexID$32", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$33", Automatic, Center]}, {
              DynamicLocation["VertexID$16", Automatic, Center], 
              DynamicLocation["VertexID$34", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$35", Automatic, Center]}, {
              DynamicLocation["VertexID$17", Automatic, Center], 
              DynamicLocation["VertexID$36", Automatic, Center]}, {
              DynamicLocation["VertexID$18", Automatic, Center], 
              DynamicLocation["VertexID$37", Automatic, Center]}, {
              DynamicLocation["VertexID$18", Automatic, Center], 
              DynamicLocation["VertexID$38", Automatic, Center]}, {
              DynamicLocation["VertexID$19", Automatic, Center], 
              DynamicLocation["VertexID$39", Automatic, Center]}, {
              DynamicLocation["VertexID$19", Automatic, Center], 
              DynamicLocation["VertexID$40", Automatic, Center]}, {
              DynamicLocation["VertexID$20", Automatic, Center], 
              DynamicLocation["VertexID$41", Automatic, Center]}, {
              DynamicLocation["VertexID$20", Automatic, Center], 
              DynamicLocation["VertexID$42", Automatic, Center]}, {
              DynamicLocation["VertexID$21", Automatic, Center], 
              DynamicLocation["VertexID$43", Automatic, Center]}, {
              DynamicLocation["VertexID$21", Automatic, Center], 
              DynamicLocation["VertexID$44", Automatic, Center]}, {
              DynamicLocation["VertexID$22", Automatic, Center], 
              DynamicLocation["VertexID$45", Automatic, Center]}, {
              DynamicLocation["VertexID$22", Automatic, Center], 
              DynamicLocation["VertexID$46", Automatic, Center]}}]}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.491679184531429, 3.491679184531429}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$1"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.7291852240807537`, 3.9319052778530903`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$2"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.491679184531429, 2.611226997888106}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$3"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.254173144982104, 3.9319052778530894`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$4"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.6112269978881066`, 5.016667105432779}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$5"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.7307748112447838`, 3.4916791845314297`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$6"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.6112269978881057`, 1.9666912636300786`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$7"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.37213137117475, 1.9666912636300775`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$8"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.252583557818074, 3.4916791845314283`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$9"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.372131371174753, 5.016667105432779}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$10"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.8080458019150756`, 6.043033702205834}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$11"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.6239580494733776`, 5.35940031958948}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$12"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9403246668570246, 4.175312567147784}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$13"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.9403246668570238, 2.8080458019150765`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$14"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.6239580494733772`, 1.6239580494733776`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$15"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.8080458019150756`, 0.9403246668570238}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$16"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.175312567147781, 0.9403246668570238}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$17"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.359400319589478, 1.6239580494733752`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$18"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.043033702205834, 2.8080458019150756`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$19"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.043033702205834, 4.175312567147781}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$20"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.359400319589483, 5.359400319589478}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$21"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.175312567147782, 6.043033702205834}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$22"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.0319908991139455`, 6.983358369062858}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$23"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.1439413252593678`, 6.74540620290972}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$24"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.3477378592720615`, 6.285717917492237}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$25"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.6976404515706216, 5.635620509790797}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$26"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.23795216615313786`, 4.839417043803492}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$27"], 
           TagBox[
            StyleBox[
             
             DiskBox[{8.881784197001252*^-16, 3.951367469948916}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$28"], 
           TagBox[
            StyleBox[
             DiskBox[{0., 3.0319908991139455`}, 0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$29"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.23795216615313608`, 2.1439413252593695`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$30"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.6976404515706212, 1.3477378592720615`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$31"], 
           TagBox[
            StyleBox[
             
             DiskBox[{1.3477378592720606`, 0.697640451570622}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$32"], 
           TagBox[
            StyleBox[
             
             DiskBox[{2.1439413252593655`, 0.23795216615313786`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$33"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.0319908991139446`, 4.440892098500626*^-16}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$34"], 
           TagBox[
            StyleBox[
             DiskBox[{3.951367469948912, 0.}, 0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$35"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.839417043803488, 0.23795216615313608`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$36"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.635620509790794, 0.6976404515706189}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$37"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.285717917492233, 1.347737859272058}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$38"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.74540620290972, 2.143941325259365}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$39"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.983358369062858, 3.031990899113944}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$40"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.983358369062858, 3.9513674699489116`}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$41"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.745406202909722, 4.839417043803488}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$42"], 
           TagBox[
            StyleBox[
             
             DiskBox[{6.285717917492239, 5.635620509790794}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$43"], 
           TagBox[
            StyleBox[
             
             DiskBox[{5.635620509790799, 6.285717917492233}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$44"], 
           TagBox[
            StyleBox[
             
             DiskBox[{4.8394170438034925`, 6.74540620290972}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$45"], 
           TagBox[
            StyleBox[
             
             DiskBox[{3.9513674699489134`, 6.983358369062858}, 
              0.13206782799649835`], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$46"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{4.64, 277.35999999999996`}, {-139.5856000000001, 
           133.13439999999997`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[1.]], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     OverlayBox[{
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3}, {
            SparseArray[
            Automatic, {3, 3}, 0, {
             1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
            Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
            EdgeShapeFunction -> {
              GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
            EdgeWeight -> {2, 1, 1, 2, 2, 1}, ImageSize -> Scaled[1.], 
            VertexSize -> {0.09}, VertexStyle -> {2 -> RGBColor[
                Rational[46, 51], 
                Rational[193, 255], 0], 1 -> RGBColor[
                Rational[4, 5], 0, 0], 3 -> RGBColor[
                Rational[12, 17], 
                Rational[82, 255], 
                Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
         GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                0.3954100979887313, -0.37993503101780424`}, {
                0.44429670652560765`, -0.38346806780211296`}, {
                0.49295692129322827`, -0.38934738255181967`}, {
                0.5412782000680146, -0.3975593774815831}, {
                0.5891487845236741, -0.408085059741211}, {
                0.6364579587078756, -0.42090008534266654`}, {
                0.6830963051081035, -0.43597481546328354`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$1"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$1", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                0.010621778264911619`}, {-0.3648076211353314, 
                0.610621778264911}, {-0.33928696614102627`, 
                0.6524676742622335}, {-0.31178396226487193`, 
                0.6930382007678794}, {-0.28236221895097113`, 
                0.7322395255353922}, {-0.25108978333865395`, 
                0.7699809830328253}, {-0.21803898288182322`, 
                0.8061752841356209}, {-0.18328625806871401`, 
                0.8407387180104745}, {-0.14691198562895147`, 
                0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$2"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$2", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.6830963051081028, -0.5640251845367187}, {
                0.636457958707875, -0.5790999146573355}, {
                0.5891487845236735, -0.5919149402587909}, {
                0.5412782000680137, -0.6024406225184188}, {
                0.4929569212932275, -0.6106526174481819}, {
                0.4442967065256069, -0.6165319321978884}, {
                0.39541009798873045`, -0.6200649689821971}, {
                0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$3"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$3", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.7191134181554866, -0.3735913457232625}, {
                0.682739145715724, -0.34073871801047506`}, {
                0.647986420902615, -0.30617528413562134`}, {
                0.6149356204457841, -0.2699809830328256}, {
                0.583663184833467, -0.2322395255353924}, {
                0.5542414415195662, -0.1930382007678796}, {
                0.5267384376434119, -0.15246767426223357`}, {
                0.5012177826491069, -0.11062177826491115`}, {
                0.15480762113533175`, 0.48937822173508894`}, {
                0.13132833965468138`, 0.5324027052800367}, {
                0.1099447349939594, 0.5765062685699912}, {0.09070626354023958,
                 0.6215869080872107}, {0.07365742037777057, 
                0.6675403605144072}, {0.05883763637894179, 
                0.7142603438768308}, {0.046281187007849445`, 
                0.76163880335314}, {0.036017113047383975`, 
                0.8095661611865443}, {1.8369701987210297`*^-16, 1.}}]}, 
              "DynamicName", BoxID -> "EdgeLabelID$4"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$4", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 
                1.}, {-0.03601711304738375, 
                0.8095661611865439}, {-0.046281187007849, 
                0.7616388033531397}, {-0.05883763637894135, 
                0.7142603438768306}, {-0.07365742037777012, 
                0.667540360514407}, {-0.09070626354023947, 
                0.6215869080872107}, {-0.10994473499395929`, 
                0.5765062685699913}, {-0.1313283396546815, 
                0.5324027052800367}, {-0.15480762113533164`, 
                0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, "DynamicName", BoxID -> 
              "EdgeLabelID$5"], 
             InsetBox[
              FormBox[
               StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$5", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
             TagBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                0.14691198562895247`, 0.8735913457232614}, {0.183286258068715,
                 0.840738718010474}, {0.21803898288182422`, 
                0.8061752841356202}, {0.25108978333865495`, 
                0.7699809830328245}, {0.282362218950972, 
                0.7322395255353913}, {0.3117839622648728, 
                0.6930382007678785}, {0.33928696614102716`, 
                0.6524676742622324}, {0.36480762113533227`, 
                0.61062177826491}, {0.7112177826491075, 
                0.010621778264909898`}, {
                0.7346970641297578, -0.03240270528003786}, {
                0.7560806687904799, -0.07650626856999232}, {
                0.7753191402441997, -0.12158690808721184`}, {
                0.7923679834066687, -0.16754036051440824`}, {
                0.8071877674054975, -0.2142603438768319}, {
                0.8197442167765898, -0.2616388033531412}, {
                0.8300082907370552, -0.30956616118654545`}, {
                0.8660254037844389, -0.5000000000000012}}]}, "DynamicName", 
              BoxID -> "EdgeLabelID$6"], 
             InsetBox[
              FormBox[
               StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
              Offset[{0, 2}, 
               DynamicLocation["EdgeLabelID$6", Automatic, 
                Scaled[0.5]]], 
              ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
               0.07794228634059945], 
              RGBColor[
               Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8660254037844389, -0.5000000000000012}, 
               0.07794228634059945], 
              RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$2"], 
            TagBox[
             StyleBox[
              DiskBox[{1.8369701987210297`*^-16, 1.}, 0.07794228634059945], 
              RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{2.400693309010096, 
            279.5993066909899}, {-127.82490669098988`, 123.2393066909899}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[1.]], 
      GraphicsBox[
       GeometricTransformationBox[GeometricTransformationBox[InsetBox[
          StyleBox["\<\"Bad\"\>",
           StripOnInput->False,
           LineColor->RGBColor[1, 0, 0],
           FrontFaceColor->RGBColor[1, 0, 0],
           BackFaceColor->RGBColor[1, 0, 0],
           GraphicsColor->RGBColor[1, 0, 0],
           FontFamily->"Helvetica",
           FontSize->Scaled[0.3],
           FontWeight->Bold,
           FontColor->RGBColor[1, 0, 0]], {0, 0}], {{{
          0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
          0.766044443118978}}, Center}], {1., 0}],
       ImageSize->Scaled[1.]]}], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"\[Times]\"\>",
          StripOnInput->False,
          TextAlignment->Center,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->Scaled[0.6],
          FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
       Text[
        Style["\[Times]", 
         RGBColor[1, 0, 0], FontSize -> Scaled[0.6], TextAlignment -> 
         Center]]],
      Background->Opacity[0.3, 
        RGBColor[1, 0, 0]],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       GrayLevel[1], 
       GrayLevel[1], 
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25], 
       Scaled[0.1], 
       Scaled[0.25]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.01]}}, "Rows" -> {{
        Scaled[0.02]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.5844047547250843`*^9, 3.5844047866882677`*^9}, {
   3.584404887828841*^9, 3.584404953184533*^9}, {3.584405135170412*^9, 
   3.5844051512665987`*^9}, 3.5844051892293177`*^9, {3.5844052385191507`*^9, 
   3.58440526353485*^9}, {3.584405426967922*^9, 3.5844054404532022`*^9}, {
   3.5844055212728453`*^9, 3.584405540975202*^9}, 3.5844062697166653`*^9, 
   3.5844065689521923`*^9, 3.584407018299097*^9, 3.584444741250002*^9, 
   3.584444894809885*^9, 3.584447506502994*^9, {3.584448873135786*^9, 
   3.584448893062598*^9}, 3.584450779206916*^9, 3.5844523361378717`*^9, 
   3.5844525889820957`*^9, 3.584453627006011*^9, 3.584453761648127*^9, 
   3.584453925037734*^9, 3.584455436761586*^9, 3.584455502602189*^9, 
   3.584473842639402*^9, 3.584475988226904*^9, 3.5844765253436747`*^9, 
   3.58447690872103*^9, 3.584477723713807*^9, 3.584798599536611*^9, 
   3.584904960745356*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"badOrbi", " ", "=", " ", 
    RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AdjacencyOrbigraph", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "3", ",", "1"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"3", ",", "1", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"VertexSize", " ", "\[Rule]", " ", ".1"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"EdgeStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Thick", ",", " ", "Black"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"EdgeLabelStyle", "\[Rule]", "20"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"EdgeShapeFunction", "\[Rule]", 
         RowBox[{"GraphElementData", "[", 
          RowBox[{"\"\<FilledArrow\>\"", ",", " ", 
           RowBox[{"\"\<ArrowSize\>\"", "\[Rule]", ".1"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"1", " ", "\[Rule]", " ", 
            RowBox[{"RGBColor", "[", 
             RowBox[{
              RowBox[{"204", "/", "255"}], ",", " ", "0", ",", "0"}], "]"}]}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"2", "\[Rule]", " ", 
            RowBox[{"RGBColor", "[", 
             RowBox[{
              RowBox[{"230", "/", "255"}], ",", " ", 
              RowBox[{"193", "/", "255"}], ",", " ", "0"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"3", "\[Rule]", 
            RowBox[{"RGBColor", "[", 
             RowBox[{
              RowBox[{"180", "/", "255"}], ",", " ", 
              RowBox[{"82", "/", "255"}], ",", " ", 
              RowBox[{"204", "/", "255"}]}], "]"}]}]}], "\[IndentingNewLine]",
           "}"}]}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"goodOrbi", " ", "=", " ", 
    RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"AdjacencyOrbigraph", "[", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"{", 
          RowBox[{"0", ",", "1", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"1", ",", "0", ",", "3"}], "}"}], ",", 
         RowBox[{"{", 
          RowBox[{"2", ",", "2", ",", "0"}], "}"}]}], "}"}], "]"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"VertexSize", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
        RowBox[{"EdgeStyle", "\[Rule]", 
         RowBox[{"Directive", "[", 
          RowBox[{"Thick", ",", " ", "Black"}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"EdgeLabelStyle", "\[Rule]", "20"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"EdgeShapeFunction", "\[Rule]", 
         RowBox[{"GraphElementData", "[", 
          RowBox[{"\"\<FilledArrow\>\"", ",", " ", 
           RowBox[{"\"\<ArrowSize\>\"", "\[Rule]", ".1"}]}], "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"1", " ", "\[Rule]", " ", 
            RowBox[{"RGBColor", "[", 
             RowBox[{
              RowBox[{"204", "/", "255"}], ",", " ", "0", ",", "0"}], "]"}]}],
            ",", "\[IndentingNewLine]", 
           RowBox[{"2", "\[Rule]", " ", 
            RowBox[{"RGBColor", "[", 
             RowBox[{
              RowBox[{"230", "/", "255"}], ",", " ", 
              RowBox[{"193", "/", "255"}], ",", " ", "0"}], "]"}]}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"3", "\[Rule]", 
            RowBox[{"RGBColor", "[", 
             RowBox[{
              RowBox[{"180", "/", "255"}], ",", " ", 
              RowBox[{"82", "/", "255"}], ",", " ", 
              RowBox[{"204", "/", "255"}]}], "]"}]}]}], "\[IndentingNewLine]",
           "}"}]}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
     "]"}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"dwnArrw", " ", "=", " ", 
    RowBox[{"Graphics", "[", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Arrowheads", "[", ".1", "]"}], ",", 
       RowBox[{"Arrow", "[", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"0", ",", ".3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"0", ",", 
            RowBox[{"-", ".3"}]}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edgesToHighlight", " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", " ", "Green"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[DirectedEdge]", "2"}], ",", " ", "Green"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[DirectedEdge]", "3"}], ",", " ", "Green"}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[DirectedEdge]", "1"}], ",", "Green"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[DirectedEdge]", "3"}], ",", "Red"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[DirectedEdge]", "2"}], ",", "Red"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[DirectedEdge]", "1"}], ",", "Red"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", " ", "Green"}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"textFrames", " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<3\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<3\[Times]3\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<3\[Times]3\[Times]3\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<3\[Times]3\[Times]3\[NotEqual]1\>\"", ",", " ", 
        "\"\<Subsection\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<3\[Times]3\[Times]3\[NotEqual]1\[Times]1\>\"", ",", " ", 
        "\"\<Subsection\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<3\[Times]3\[Times]3\[NotEqual]1\[Times]1\[Times]1\>\"", ",", " ", 
        "\"\<Subsection\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<3\[Times]3\[Times]3\[NotEqual]1\[Times]1\[Times]1\>\"", ",", " ", 
        "\"\<Subsection\>\""}], "}"}], ","}], "\[IndentingNewLine]", "}"}]}], 
   ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"edgesToHighlight2", " ", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", " ", "Green"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", "}"}], ",", " ", "Green"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[DirectedEdge]", "2"}], ",", "Green"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[DirectedEdge]", "3"}], ",", "Green"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[DirectedEdge]", "1"}], ",", "Green"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"1", "\[DirectedEdge]", "3"}], ",", "Red"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"3", "\[DirectedEdge]", "2"}], ",", "Red"}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"2", "\[DirectedEdge]", "1"}], ",", "Red"}], "}"}]}], 
     "\[IndentingNewLine]", "}"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"textFrames2", "=", " ", 
    RowBox[{"{", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"\"\<\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<1\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"\"\<1\[Times]3\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}], 
      ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1\[Times]3\[Times]2\>\"", ",", " ", "\"\<Subsection\>\""}], "}"}],
       ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1\[Times]3\[Times]2=3\>\"", ",", " ", "\"\<Subsection\>\""}], 
       "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1\[Times]3\[Times]2=3\[Times]2\>\"", ",", " ", 
        "\"\<Subsection\>\""}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
       "\"\<1\[Times]3\[Times]2=3\[Times]2\[Times]1\>\"", ",", " ", 
        "\"\<Subsection\>\""}], "}"}]}], "\[IndentingNewLine]", "}"}]}], 
   ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"DisplayCycleGrid", "[", "slide_Integer", "]"}], ":=", 
    "\[IndentingNewLine]", 
    RowBox[{"Grid", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Item", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Good Orbigraph\>\"", ",", " ", "\"\<Subsection\>\"", ",", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Background", "\[Rule]", "White"}]}], "]"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"Item", "[", 
           RowBox[{
            RowBox[{"Spacer", "[", "1", "]"}], ",", 
            RowBox[{"Frame", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"True", ",", " ", "True"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
           "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slide", " ", "<", " ", "2"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Finite k-Regular Cover\>\"", ",", " ", "\"\<Subsection\>\"",
               ",", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Finite k-Regular Cover?\>\"", ",", " ", 
              "\"\<Subsection\>\"", ",", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Overlay", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"HighlightGraph", "[", 
                   RowBox[{"goodOrbi", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Style", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"First", "@", 
                    RowBox[{
                    "edgesToHighlight2", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Last", "@", 
                    RowBox[{
                    "edgesToHighlight2", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}]}], ",", " ", "Thick"}], "]"}]}],
                     "\[IndentingNewLine]", "]"}], "&"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Min", "[", 
                    RowBox[{"slide", ",", " ", "8"}], "]"}], "]"}]}]}], 
                   "\[IndentingNewLine]", "]"}], ",", " ", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"Scaled", "[", ".5", "]"}]}]}], 
                 "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"slide", " ", ">", " ", "8"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"(*", 
                    RowBox[{
                    RowBox[{"Translate", "[", 
                    RowBox[{
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Text", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Bad\>\"", ",", " ", "Bold", ",", " ", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], 
                    ",", " ", 
                    RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".3", "]"}]}], ",", " ", "Red"}], 
                    "]"}], "]"}], ",", " ", 
                    RowBox[{"40", "Degree"}]}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{"1.0", ",", "0"}], "}"}]}], "]"}], ","}], "*)"}], 
                    "\[IndentingNewLine]", 
                    RowBox[{"Translate", "[", 
                    RowBox[{
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Text", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Good\>\"", ",", " ", "Bold", ",", " ", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], 
                    ",", " ", 
                    RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".5", "]"}]}], ",", " ", 
                    RowBox[{"Darker", "@", "Green"}]}], "]"}], "]"}], ",", 
                    " ", 
                    RowBox[{"40", "Degree"}]}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{".5", ",", "0"}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
                  " ", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"Scaled", "[", ".5", "]"}]}]}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Style", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"First", "@", 
                RowBox[{"textFrames2", "\[LeftDoubleBracket]", 
                 RowBox[{"Min", "[", 
                  RowBox[{"slide", ",", " ", "8"}], "]"}], 
                 "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Last", "@", 
                RowBox[{"textFrames2", "\[LeftDoubleBracket]", 
                 RowBox[{"Min", "[", 
                  RowBox[{"slide", ",", " ", "8"}], "]"}], 
                 "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"Scaled", "[", ".020", "]"}]}]}], 
              "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Item", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Arrowheads", "[", ".3", "]"}], ",", 
                RowBox[{"Thickness", "[", ".05", "]"}], ",", 
                RowBox[{"Arrow", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{".3", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".3"}], ",", "0"}], "}"}]}], "}"}], "]"}]}], 
               "}"}], ",", " ", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", ".3"}], ",", " ", ".3"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"True", ",", " ", "True"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Item", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"slide", " ", "<", " ", "2"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"SetProperty", "[", 
               RowBox[{
                RowBox[{"CreateFiniteCoveringGraph", "[", 
                 RowBox[{"Normal", "@", 
                  RowBox[{"WeightedAdjacencyMatrix", "@", "goodOrbi"}]}], 
                 "]"}], ",", 
                RowBox[{"{", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", ".5", "]"}]}], "}"}]}], "]"}], " ", 
              ",", "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<?\>\"", ",", " ", "Black", ",", 
                 RowBox[{"FontSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", ".5", "]"}]}]}], "]"}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Background", " ", "\[Rule]", " ", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"slide", " ", "<", " ", "2"}], ",", " ", 
               RowBox[{"Opacity", "[", 
                RowBox[{".6", ",", " ", "Green"}], "]"}], ",", " ", "White"}],
               "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Item", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<Bad Orbigraph\>\"", ",", " ", "\[IndentingNewLine]", 
              "\"\<Subsection\>\"", ",", "\[IndentingNewLine]", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"Scaled", "[", ".02", "]"}]}]}], "\[IndentingNewLine]",
              "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Background", "\[Rule]", "White"}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          "\[IndentingNewLine]", 
          RowBox[{"Item", "[", 
           RowBox[{
            RowBox[{"Spacer", "[", "1", "]"}], ",", 
            RowBox[{"Frame", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"True", ",", " ", "True"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
           "]"}], ",", "\[IndentingNewLine]", "\[IndentingNewLine]", 
          RowBox[{"If", "[", 
           RowBox[{
            RowBox[{"slide", " ", "<", " ", "2"}], ",", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<No Finite k-Regular Cover\>\"", ",", " ", 
              "\"\<Subsection\>\"", ",", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}], ",", " ", 
            RowBox[{"Style", "[", 
             RowBox[{
             "\"\<No Finite k-Regular Cover?\>\"", ",", " ", 
              "\"\<Subsection\>\"", ",", 
              RowBox[{"FontSize", "\[Rule]", 
               RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}]}], 
           "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"Column", "[", 
           RowBox[{"{", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"Overlay", "[", 
              RowBox[{"{", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"HighlightGraph", "[", 
                   RowBox[{"badOrbi", ",", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"Style", "[", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"First", "@", 
                    RowBox[{
                    "edgesToHighlight", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"Last", "@", 
                    RowBox[{
                    "edgesToHighlight", "\[LeftDoubleBracket]", "#", 
                    "\[RightDoubleBracket]"}]}], ",", " ", "Thick"}], "]"}]}],
                     "\[IndentingNewLine]", "]"}], "&"}], "/@", 
                    RowBox[{"Range", "[", 
                    RowBox[{"Max", "[", 
                    RowBox[{
                    RowBox[{"slide", " ", "-", "8"}], ",", " ", "1"}], "]"}], 
                    "]"}]}]}], "\[IndentingNewLine]", "]"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"Scaled", "[", ".5", "]"}]}]}], 
                 "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
                RowBox[{"Graphics", "[", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"If", "[", 
                   RowBox[{
                    RowBox[{"slide", " ", ">", " ", "15"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"Translate", "[", 
                    RowBox[{
                    RowBox[{"Rotate", "[", 
                    RowBox[{
                    RowBox[{"Text", "[", 
                    RowBox[{"Style", "[", 
                    RowBox[{"\"\<Bad\>\"", ",", " ", "Bold", ",", " ", 
                    RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}], 
                    ",", " ", 
                    RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".5", "]"}]}], ",", " ", "Red"}], 
                    "]"}], "]"}], ",", " ", 
                    RowBox[{"40", "Degree"}]}], "]"}], ",", " ", 
                    RowBox[{"{", 
                    RowBox[{".5", ",", "0"}], "}"}]}], "]"}], ",", 
                    "\[IndentingNewLine]", 
                    RowBox[{"{", "}"}]}], "\[IndentingNewLine]", "]"}], ",", 
                  " ", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"Scaled", "[", ".5", "]"}]}]}], "]"}]}], 
               "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Style", "[", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"First", "@", 
                RowBox[{"textFrames", "\[LeftDoubleBracket]", 
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{"slide", " ", "-", "8"}], ",", " ", "1"}], "]"}], 
                 "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"Last", "@", 
                RowBox[{"textFrames", "\[LeftDoubleBracket]", 
                 RowBox[{"Max", "[", 
                  RowBox[{
                   RowBox[{"slide", "-", "8"}], " ", ",", " ", "1"}], "]"}], 
                 "\[RightDoubleBracket]"}]}], ",", "\[IndentingNewLine]", 
               RowBox[{"FontSize", "\[Rule]", 
                RowBox[{"Scaled", "[", ".02", "]"}]}]}], 
              "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", "}"}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Item", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"Graphics", "[", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"Arrowheads", "[", ".3", "]"}], ",", 
                RowBox[{"Thickness", "[", ".05", "]"}], ",", 
                RowBox[{"Arrow", "[", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{".3", ",", "0"}], "}"}], ",", 
                   RowBox[{"{", 
                    RowBox[{
                    RowBox[{"-", ".3"}], ",", "0"}], "}"}]}], "}"}], "]"}]}], 
               "}"}], ",", " ", 
              RowBox[{"PlotRange", "\[Rule]", 
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", ".3"}], ",", " ", ".3"}], "}"}], ",", " ", 
                 RowBox[{"{", 
                  RowBox[{
                   RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], "}"}]}], ",", 
              RowBox[{"ImageSize", "\[Rule]", 
               RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"Frame", "\[Rule]", 
             RowBox[{"{", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{"True", ",", " ", "True"}], "}"}], ",", " ", 
               RowBox[{"{", 
                RowBox[{"False", ",", " ", "False"}], "}"}]}], "}"}]}]}], 
           "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
          RowBox[{"Item", "[", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{"slide", " ", "<", " ", "2"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<\[Times]\>\"", ",", " ", "Red", ",", 
                 RowBox[{"FontSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", ".3", "]"}]}], ",", " ", 
                 RowBox[{"TextAlignment", "\[Rule]", "Center"}]}], "]"}], 
               "]"}], ",", "\[IndentingNewLine]", 
              RowBox[{"Text", "[", 
               RowBox[{"Style", "[", 
                RowBox[{"\"\<?\>\"", ",", " ", "Black", ",", 
                 RowBox[{"FontSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", ".5", "]"}]}]}], "]"}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
            RowBox[{"Background", "\[Rule]", 
             RowBox[{"If", "[", 
              RowBox[{
               RowBox[{"slide", " ", "<", " ", "2"}], ",", " ", 
               RowBox[{"Opacity", "[", 
                RowBox[{".3", ",", " ", "Red"}], "]"}], ",", " ", "White"}], 
              "]"}]}]}], "\[IndentingNewLine]", "]"}]}], 
         "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], ",", 
      "\[IndentingNewLine]", 
      StyleBox[
       RowBox[{"Alignment", "\[Rule]", "Center"}],
       CellOpen->False], 
      StyleBox[",",
       CellOpen->False], 
      StyleBox["\[IndentingNewLine]",
       CellOpen->False], 
      StyleBox[
       RowBox[{"ItemSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"{", " ", 
          RowBox[{
           RowBox[{"Scaled", "[", ".45", "]"}], ",", 
           RowBox[{"Scaled", "[", ".10", "]"}], ",", 
           RowBox[{"Scaled", "[", ".45", " ", "]"}]}], "}"}], "}"}]}],
       CellOpen->False], 
      StyleBox[",",
       CellOpen->False], 
      StyleBox["\[IndentingNewLine]",
       CellOpen->False], 
      StyleBox[
       RowBox[{"Spacings", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Scaled", "[", ".03", "]"}], ",", " ", 
          RowBox[{"Scaled", "[", ".009", "]"}]}], "}"}]}],
       CellOpen->False], 
      StyleBox[",",
       CellOpen->False], 
      StyleBox["\[IndentingNewLine]",
       CellOpen->False], 
      RowBox[{
       StyleBox["Background",
        CellOpen->False], 
       StyleBox["\[Rule]",
        CellOpen->False], 
       RowBox[{
        StyleBox["{",
         CellOpen->False], 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"RGBColor", "[", 
           RowBox[{
            RowBox[{"255", "/", "255"}], ",", " ", 
            RowBox[{"246", "/", "255"}], ",", 
            RowBox[{"238", "/", "255"}]}], "]"}], ",", " ", "White"}], "}"}], 
        "}"}]}], ",", 
      StyleBox["\[IndentingNewLine]",
       CellOpen->False], 
      RowBox[{
       StyleBox["Frame",
        CellOpen->False], 
       StyleBox["\[Rule]",
        CellOpen->False], "All"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"DisplayCycleGrid", "[", "1", "]"}]}], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476406361903*^9}, {3.5844764391961393`*^9, 3.5844764395328608`*^9}, {
   3.5844771601158133`*^9, 3.584477227290799*^9}, {3.5844772597279253`*^9, 
   3.584477370080484*^9}, {3.584477408557353*^9, 3.584477410397553*^9}, {
   3.584477450088725*^9, 3.5844775460109787`*^9}, 3.5845548334369373`*^9, {
   3.584798712569131*^9, 3.584798713832857*^9}, 3.584798748496574*^9, {
   3.584798847647275*^9, 3.584798859934664*^9}, {3.584904941162057*^9, 
   3.5849049473753977`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                ImageSize -> Scaled[0.5], VertexSize -> {0.1}, 
                VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      GraphicsBox[
       NamespaceBox["NetworkGraphics",
        DynamicModuleBox[{Typeset`graph = HoldComplete[
          Graph[{1, 2, 3, 4, 5, 6, 7}, {Null, 
            SparseArray[
            Automatic, {7, 7}, 0, {
             1, {{0, 4, 8, 12, 16, 20, 24, 28}, {{4}, {5}, {6}, {7}, {3}, {
               5}, {6}, {7}, {2}, {5}, {6}, {7}, {1}, {5}, {6}, {7}, {1}, {
               2}, {3}, {4}, {1}, {2}, {3}, {4}, {1}, {2}, {3}, {4}}}, 
              Pattern}]}, {
           GraphHighlight -> {3, 1, 5, 4, 7, 2, 6}, 
            GraphHighlightStyle -> {
             6 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              4 -> {VertexStyle -> Hue[0.14, 1, 0.9]}, 
              5 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              2 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
              1 -> {VertexStyle -> Hue[0, 1, 0.8]}, 
              7 -> {VertexStyle -> Hue[0.8, 0.6, 0.8]}, 
              3 -> {VertexStyle -> Hue[0.14, 1, 0.9]}}, ImageSize -> 
            Scaled[0.5], VertexSize -> {0.2}}]], Typeset`boxes, 
         Typeset`boxes$s2d = GraphicsGroupBox[{{
            Directive[
             Opacity[0.7], 
             Hue[0.6, 0.7, 0.5]], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$4", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$1", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$3", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$2", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$3", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$5", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$6", Automatic, Center]}], 
            LineBox[{
              DynamicLocation["VertexID$4", Automatic, Center], 
              DynamicLocation["VertexID$7", Automatic, Center]}]}, {
            Directive[
             Hue[0.6, 0.2, 0.8], 
             EdgeForm[
              Directive[
               GrayLevel[0], 
               Opacity[0.7]]]], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.0001937884754836805, 0.31823716684075093`}, 
               0.06415272600389244], 
              Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$1"], 
            TagBox[
             StyleBox[
              
              DiskBox[{1.6946654040242253`, 0.3189627344256111}, 
               0.06415272600389244], 
              Hue[0, 1, 0.8], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$2"], 
            TagBox[
             StyleBox[
              
              DiskBox[{1.6949416592011364`, 0.9654747332116507}, 
               0.06415272600389244], 
              Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$3"], 
            TagBox[
             StyleBox[
              DiskBox[{0., 0.9648215660605998}, 0.06415272600389244], 
              Hue[0.14, 1, 0.9], StripOnInput -> False], "DynamicName", BoxID -> 
             "VertexID$4"], 
            TagBox[
             StyleBox[
              DiskBox[{0.8485113459102751, 0.}, 0.06415272600389244], 
              Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$5"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8466491549206725, 1.2833113220558312`}, 
               0.06415272600389244], 
              Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$6"], 
            TagBox[
             StyleBox[
              
              DiskBox[{0.8477109312976009, 0.6417849406778126}, 
               0.06415272600389244], 
              Hue[0.8, 0.6, 0.8], StripOnInput -> False], "DynamicName", 
             BoxID -> "VertexID$7"]}}], $CellContext`flag}, 
         TagBox[
          
          DynamicBox[GraphComputation`NetworkGraphicsBox[
           3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
           CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
            SynchronousUpdating -> False, 
            TrackedSymbols :> {$CellContext`flag}},
           
           ImageSizeCache->{{3.8900000000000006`, 
            240.60999999999996`}, {-94.30560000000001, 89.42220155319562}}],
          MouseAppearanceTag["NetworkGraphics"]],
         AllowKernelInitialization->False,
         UnsavedVariables:>{$CellContext`flag}]],
       DefaultBaseStyle->{
        "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
         Hue[0.8, 1., 0.6]},
       FrameTicks->None,
       ImageSize->Scaled[0.5]],
      Background->Opacity[0.6, 
        RGBColor[0, 1, 0]],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                ImageSize -> Scaled[0.5], VertexSize -> {0.1}, 
                VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"\[Times]\"\>",
          StripOnInput->False,
          TextAlignment->Center,
          LineColor->RGBColor[1, 0, 0],
          FrontFaceColor->RGBColor[1, 0, 0],
          BackFaceColor->RGBColor[1, 0, 0],
          GraphicsColor->RGBColor[1, 0, 0],
          FontSize->Scaled[0.3],
          FontColor->RGBColor[1, 0, 0]], TextForm]], "InlineText"],
       Text[
        Style["\[Times]", 
         RGBColor[1, 0, 0], FontSize -> Scaled[0.3], TextAlignment -> 
         Center]]],
      Background->Opacity[0.3, 
        RGBColor[1, 0, 0]],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, 3.5844764400078278`*^9, 3.584476525503324*^9, 
   3.5844769088827343`*^9, {3.584477233861491*^9, 3.5844772609944077`*^9}, {
   3.5844772915935163`*^9, 3.584477315785438*^9}, 3.584477371064695*^9, 
   3.584477411493589*^9, 3.584477462054413*^9, {3.584477540185454*^9, 
   3.584477546605587*^9}, 3.584477727035912*^9, 3.5845548347994623`*^9, 
   3.584798600199401*^9, 3.584798780939246*^9, 3.5847988609066467`*^9, {
   3.584904942683071*^9, 3.584904960977744*^9}}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayCycleGrid", "[", "2", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476430252431*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                ImageSize -> Scaled[0.5], VertexSize -> {0.1}, 
                VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                ImageSize -> Scaled[0.5], VertexSize -> {0.1}, 
                VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, 3.584476444566979*^9, 3.584476525620183*^9, 
   3.58447690899286*^9, 3.584477730419437*^9, 3.584798600343265*^9, 
   3.5849049611284323`*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell["\<\
Good/Bad Orbigraph Characterization (G., Stanhope, S., 2013)\
\>", "Title",
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476430252431*^9}, {3.584554860886509*^9, 3.584554927643181*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayCycleGrid", "[", "3", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.5844764519785547`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                GraphHighlight -> {
                  DirectedEdge[1, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {1 -> RGBColor[
                    Rational[4, 5], 0, 0], 2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"1\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                ImageSize -> Scaled[0.5], VertexSize -> {0.1}, 
                VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, 3.584476525687476*^9, 3.584476909176059*^9, 
   3.58447773322771*^9, 3.5847986004498863`*^9, 3.584904961787552*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayCycleGrid", "[", "4", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476458080216*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                GraphHighlight -> {
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {1 -> RGBColor[
                    Rational[4, 5], 0, 0], 2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"1\[Times]3\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                ImageSize -> Scaled[0.5], VertexSize -> {0.1}, 
                VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, 3.584476525788042*^9, 3.58447690927293*^9, 
   3.584477736628392*^9, 3.584798600576436*^9, 3.584904961945024*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayCycleGrid", "[", "5", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476430252431*^9}, {3.584476463595262*^9, 3.584476464413776*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                GraphHighlight -> {
                  DirectedEdge[2, 3], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[1, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {1 -> RGBColor[
                    Rational[4, 5], 0, 0], 2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"1\[Times]3\[Times]2\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                ImageSize -> Scaled[0.5], VertexSize -> {0.1}, 
                VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, 3.58447652597746*^9, 3.584476909387785*^9, 
   3.584477737466181*^9, 3.5847986011196747`*^9, 3.58490496209503*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayCycleGrid", "[", "6", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476430252431*^9}, {3.5844764682262506`*^9, 3.5844764684148407`*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                GraphHighlight -> {
                  DirectedEdge[1, 2], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 3]}, 
                GraphHighlightStyle -> {DirectedEdge[1, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"1\[Times]3\[Times]2=3\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                ImageSize -> Scaled[0.5], VertexSize -> {0.1}, 
                VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, 3.584476526080248*^9, 3.584476909489976*^9, 
   3.5844777408507433`*^9, 3.584798601257608*^9, 3.5849049623550777`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayCycleGrid", "[", "7", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476430252431*^9}, {3.584476473248938*^9, 3.584476473944303*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                GraphHighlight -> {
                  DirectedEdge[1, 2], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 3], 
                  DirectedEdge[3, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[1, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"1\[Times]3\[Times]2=3\[Times]2\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                ImageSize -> Scaled[0.5], VertexSize -> {0.1}, 
                VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, 3.584476526190031*^9, 3.58447690960819*^9, 
   3.584477741687065*^9, 3.584798601490449*^9, 3.58490496250698*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayCycleGrid", "[", "8", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476430252431*^9}, {3.584476478066454*^9, 3.584476478352087*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                GraphHighlight -> {
                  DirectedEdge[2, 1], 
                  DirectedEdge[1, 2], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 3], 
                  DirectedEdge[3, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[2, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"1\[Times]3\[Times]2=3\[Times]2\[Times]1\"\>", 
          "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                ImageSize -> Scaled[0.5], VertexSize -> {0.1}, 
                VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, 3.58447652629421*^9, 3.58447690971305*^9, 
   3.5844777451381273`*^9, 3.584798601609654*^9, 3.584904962658696*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayCycleGrid", "[", "9", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476430252431*^9}, {3.58447648305608*^9, 3.584476483287877*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                GraphHighlight -> {
                  DirectedEdge[2, 1], 
                  DirectedEdge[1, 2], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 3], 
                  DirectedEdge[3, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[2, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[
           GeometricTransformationBox[GeometricTransformationBox[InsetBox[
              StyleBox["\<\"Good\"\>",
               StripOnInput->False,
               LineColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FrontFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               BackFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               GraphicsColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FontFamily->"Helvetica",
               FontSize->Scaled[0.5],
               FontWeight->Bold,
               FontColor->RGBColor[0, 
                 Rational[2, 3], 0]], {0, 0}], {{{
              0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
              0.766044443118978}}, Center}], {0.5, 0}],
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"1\[Times]3\[Times]2=3\[Times]2\[Times]1\"\>", 
          "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                ImageSize -> Scaled[0.5], VertexSize -> {0.1}, 
                VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, 3.584476526395455*^9, 3.584476909811314*^9, 
   3.584477247743369*^9, 3.5844775735011463`*^9, 3.5844777460027437`*^9, 
   3.584798602176194*^9, 3.58490496280927*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayCycleGrid", "[", "10", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476430252431*^9}, {3.5844764869285*^9, 3.584476487489234*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                GraphHighlight -> {
                  DirectedEdge[2, 1], 
                  DirectedEdge[1, 2], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 3], 
                  DirectedEdge[3, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[2, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[
           GeometricTransformationBox[GeometricTransformationBox[InsetBox[
              StyleBox["\<\"Good\"\>",
               StripOnInput->False,
               LineColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FrontFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               BackFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               GraphicsColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FontFamily->"Helvetica",
               FontSize->Scaled[0.5],
               FontWeight->Bold,
               FontColor->RGBColor[0, 
                 Rational[2, 3], 0]], {0, 0}], {{{
              0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
              0.766044443118978}}, Center}], {0.5, 0}],
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"1\[Times]3\[Times]2=3\[Times]2\[Times]1\"\>", 
          "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                GraphHighlight -> {
                  DirectedEdge[1, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {1 -> RGBColor[
                    Rational[4, 5], 0, 0], 2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"3\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, 3.5844765265067368`*^9, 3.5844769099041443`*^9, 
   3.584477749388702*^9, 3.584798602298654*^9, 3.5849049629654503`*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayCycleGrid", "[", "11", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476430252431*^9}, {3.584476492040002*^9, 3.584476492310424*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                GraphHighlight -> {
                  DirectedEdge[2, 1], 
                  DirectedEdge[1, 2], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 3], 
                  DirectedEdge[3, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[2, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[
           GeometricTransformationBox[GeometricTransformationBox[InsetBox[
              StyleBox["\<\"Good\"\>",
               StripOnInput->False,
               LineColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FrontFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               BackFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               GraphicsColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FontFamily->"Helvetica",
               FontSize->Scaled[0.5],
               FontWeight->Bold,
               FontColor->RGBColor[0, 
                 Rational[2, 3], 0]], {0, 0}], {{{
              0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
              0.766044443118978}}, Center}], {0.5, 0}],
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"1\[Times]3\[Times]2=3\[Times]2\[Times]1\"\>", 
          "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                GraphHighlight -> {
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {1 -> RGBColor[
                    Rational[4, 5], 0, 0], 2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"3\[Times]3\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, 3.5844765266233187`*^9, 3.584476910007119*^9, 
   3.584477750257689*^9, 3.584798602416375*^9, 3.584904963178446*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayCycleGrid", "[", "12", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476430252431*^9}, 3.584476496182252*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                GraphHighlight -> {
                  DirectedEdge[2, 1], 
                  DirectedEdge[1, 2], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 3], 
                  DirectedEdge[3, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[2, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[
           GeometricTransformationBox[GeometricTransformationBox[InsetBox[
              StyleBox["\<\"Good\"\>",
               StripOnInput->False,
               LineColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FrontFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               BackFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               GraphicsColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FontFamily->"Helvetica",
               FontSize->Scaled[0.5],
               FontWeight->Bold,
               FontColor->RGBColor[0, 
                 Rational[2, 3], 0]], {0, 0}], {{{
              0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
              0.766044443118978}}, Center}], {0.5, 0}],
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"1\[Times]3\[Times]2=3\[Times]2\[Times]1\"\>", 
          "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                GraphHighlight -> {
                  DirectedEdge[2, 3], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[1, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {1 -> RGBColor[
                    Rational[4, 5], 0, 0], 2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"3\[Times]3\[Times]3\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, 3.584476526727051*^9, 3.584476910186489*^9, 
   3.584477753652782*^9, 3.584798602547669*^9, 3.58490496338879*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayCycleGrid", "[", "13", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476430252431*^9}, {3.584476501322044*^9, 3.584476502767881*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                GraphHighlight -> {
                  DirectedEdge[2, 1], 
                  DirectedEdge[1, 2], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 3], 
                  DirectedEdge[3, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[2, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[
           GeometricTransformationBox[GeometricTransformationBox[InsetBox[
              StyleBox["\<\"Good\"\>",
               StripOnInput->False,
               LineColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FrontFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               BackFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               GraphicsColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FontFamily->"Helvetica",
               FontSize->Scaled[0.5],
               FontWeight->Bold,
               FontColor->RGBColor[0, 
                 Rational[2, 3], 0]], {0, 0}], {{{
              0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
              0.766044443118978}}, Center}], {0.5, 0}],
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"1\[Times]3\[Times]2=3\[Times]2\[Times]1\"\>", 
          "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                GraphHighlight -> {
                  DirectedEdge[1, 2], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 3]}, 
                GraphHighlightStyle -> {DirectedEdge[1, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"3\[Times]3\[Times]3\[NotEqual]1\"\>", "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, {3.5844765106425467`*^9, 3.584476526828042*^9}, 
   3.5844769102910347`*^9, 3.584477754493524*^9, 3.5847986026639233`*^9, 
   3.584904963581727*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayCycleGrid", "[", "14", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476430252431*^9}, {3.58447650772845*^9, 3.584476508094309*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                GraphHighlight -> {
                  DirectedEdge[2, 1], 
                  DirectedEdge[1, 2], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 3], 
                  DirectedEdge[3, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[2, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[
           GeometricTransformationBox[GeometricTransformationBox[InsetBox[
              StyleBox["\<\"Good\"\>",
               StripOnInput->False,
               LineColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FrontFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               BackFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               GraphicsColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FontFamily->"Helvetica",
               FontSize->Scaled[0.5],
               FontWeight->Bold,
               FontColor->RGBColor[0, 
                 Rational[2, 3], 0]], {0, 0}], {{{
              0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
              0.766044443118978}}, Center}], {0.5, 0}],
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"1\[Times]3\[Times]2=3\[Times]2\[Times]1\"\>", 
          "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                GraphHighlight -> {
                  DirectedEdge[1, 2], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 3], 
                  DirectedEdge[3, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[1, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
                   Directive[
                    Thickness[Large], 
                    GrayLevel[0]], StripOnInput -> False], "DynamicName", 
                  BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"3\[Times]3\[Times]3\[NotEqual]1\[Times]1\"\>", 
          "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, {3.5844765085283337`*^9, 3.584476527009116*^9}, 
   3.584476910419587*^9, 3.584477757921747*^9, 3.584798603221588*^9, 
   3.58490496376394*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayCycleGrid", "[", "15", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476430252431*^9}, {3.58447650772845*^9, 3.584476508094309*^9}, {
   3.584477593635867*^9, 3.584477595122636*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                GraphHighlight -> {
                  DirectedEdge[2, 1], 
                  DirectedEdge[1, 2], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 3], 
                  DirectedEdge[3, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[2, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[
           GeometricTransformationBox[GeometricTransformationBox[InsetBox[
              StyleBox["\<\"Good\"\>",
               StripOnInput->False,
               LineColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FrontFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               BackFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               GraphicsColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FontFamily->"Helvetica",
               FontSize->Scaled[0.5],
               FontWeight->Bold,
               FontColor->RGBColor[0, 
                 Rational[2, 3], 0]], {0, 0}], {{{
              0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
              0.766044443118978}}, Center}], {0.5, 0}],
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"1\[Times]3\[Times]2=3\[Times]2\[Times]1\"\>", 
          "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                GraphHighlight -> {
                  DirectedEdge[2, 1], 
                  DirectedEdge[1, 2], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 3], 
                  DirectedEdge[3, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[2, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[{},
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"3\[Times]3\[Times]3\[NotEqual]1\[Times]1\[Times]1\"\>",
           "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, {3.5844765085283337`*^9, 3.584476527009116*^9}, 
   3.584476910419587*^9, 3.584477596495287*^9, 3.584477758773635*^9, 
   3.5847986033532333`*^9, {3.5847987742639627`*^9, 3.5847988035423822`*^9}, 
   3.584904963911834*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"DisplayCycleGrid", "[", "16", "]"}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, 3.5837634547767067`*^9, {
   3.583763490781982*^9, 3.583763518282522*^9}, {3.583763584240382*^9, 
   3.583763586490067*^9}, {3.583763635433506*^9, 3.5837636382762423`*^9}, {
   3.583763924568665*^9, 3.583763976144964*^9}, {3.583764009303698*^9, 
   3.583764065124098*^9}, {3.583764126071965*^9, 3.5837642284233294`*^9}, {
   3.5837643411094913`*^9, 3.583764356284862*^9}, {3.583764398576096*^9, 
   3.583764403797978*^9}, {3.583764610295294*^9, 3.5837646478082323`*^9}, {
   3.583764684728592*^9, 3.583764886967883*^9}, {3.583765009892171*^9, 
   3.5837650311481457`*^9}, {3.583765790861753*^9, 3.5837658413474913`*^9}, {
   3.5837659221973658`*^9, 3.5837659431551943`*^9}, {3.5837659981397667`*^9, 
   3.583766128183428*^9}, {3.5837681972096443`*^9, 3.583768197790884*^9}, {
   3.583768244502513*^9, 3.5837682507321777`*^9}, {3.583768293428917*^9, 
   3.583768373275227*^9}, {3.583768409660212*^9, 3.5837684287698402`*^9}, {
   3.5837684602417383`*^9, 3.5837685523848867`*^9}, {3.583768591959345*^9, 
   3.583768625283163*^9}, {3.5841049667698917`*^9, 3.584105014337554*^9}, {
   3.584188199300674*^9, 3.584188206336381*^9}, {3.584188301354211*^9, 
   3.5841883257507753`*^9}, {3.584188369421867*^9, 3.584188440745823*^9}, {
   3.5841884728915243`*^9, 3.584188474031283*^9}, {3.584188518756118*^9, 
   3.58418854275069*^9}, {3.584188652247216*^9, 3.584188698082613*^9}, {
   3.5841888357565203`*^9, 3.584188904726115*^9}, {3.584189121205553*^9, 
   3.5841891703859663`*^9}, {3.584193728039349*^9, 3.584193758550099*^9}, {
   3.5842129204533997`*^9, 3.5842129442459373`*^9}, {3.5842838749780188`*^9, 
   3.584283886044766*^9}, {3.584283926776535*^9, 3.5842840285672617`*^9}, {
   3.584300546480483*^9, 3.58430062988657*^9}, {3.58430071306138*^9, 
   3.584300734280632*^9}, {3.584300768090992*^9, 3.5843007697298*^9}, 
   3.584300804771578*^9, {3.584300851453919*^9, 3.5843008794049873`*^9}, {
   3.5843009260809813`*^9, 3.58430160247917*^9}, {3.584304298073558*^9, 
   3.584304309649638*^9}, {3.5844060508575068`*^9, 3.584406072198804*^9}, {
   3.584406279575872*^9, 3.584406380084247*^9}, {3.584406441892029*^9, 
   3.584406517066938*^9}, {3.5844065976428623`*^9, 3.584406603353159*^9}, {
   3.584406638338868*^9, 3.584406742151236*^9}, {3.584406780021289*^9, 
   3.584406789752263*^9}, 3.584406973108364*^9, {3.584407029732964*^9, 
   3.584407047691936*^9}, {3.584407095411919*^9, 3.584407145017396*^9}, {
   3.584407185023877*^9, 3.5844072225682697`*^9}, {3.584444938693039*^9, 
   3.5844450477750883`*^9}, {3.584450797671687*^9, 3.584450864595626*^9}, {
   3.584450984222546*^9, 3.584450993360551*^9}, {3.584451033942576*^9, 
   3.584451073670115*^9}, {3.584454923494174*^9, 3.584454997054123*^9}, {
   3.58445629632061*^9, 3.5844562982834272`*^9}, {3.5844568770294523`*^9, 
   3.584457046092224*^9}, {3.584457689760953*^9, 3.584457716766202*^9}, {
   3.5844577479274673`*^9, 3.584457785893757*^9}, {3.584461584832556*^9, 
   3.584461589126479*^9}, {3.584461620589003*^9, 3.584461624422777*^9}, {
   3.584461678846202*^9, 3.584461695882718*^9}, {3.584473949727111*^9, 
   3.584474043089867*^9}, {3.584474146699565*^9, 3.584474212741683*^9}, {
   3.584474264271348*^9, 3.58447427059277*^9}, {3.5844743840042267`*^9, 
   3.5844743942473907`*^9}, {3.5844760441021357`*^9, 
   3.5844760628977127`*^9}, {3.584476093064836*^9, 3.58447615001434*^9}, {
   3.584476221444129*^9, 3.584476371820498*^9}, {3.5844764025262823`*^9, 
   3.584476430252431*^9}, {3.58447650772845*^9, 3.584476508094309*^9}, {
   3.584477593635867*^9, 3.584477595122636*^9}, {3.584798813306616*^9, 
   3.584798813562117*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      StyleBox["\<\"Good Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, 
                GraphHighlight -> {
                  DirectedEdge[2, 1], 
                  DirectedEdge[1, 2], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 3], 
                  DirectedEdge[3, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[2, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"2\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[
           GeometricTransformationBox[GeometricTransformationBox[InsetBox[
              StyleBox["\<\"Good\"\>",
               StripOnInput->False,
               LineColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FrontFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               BackFaceColor->RGBColor[0, 
                 Rational[2, 3], 0],
               GraphicsColor->RGBColor[0, 
                 Rational[2, 3], 0],
               FontFamily->"Helvetica",
               FontSize->Scaled[0.5],
               FontWeight->Bold,
               FontColor->RGBColor[0, 
                 Rational[2, 3], 0]], {0, 0}], {{{
              0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
              0.766044443118978}}, Center}], {0.5, 0}],
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"1\[Times]3\[Times]2=3\[Times]2\[Times]1\"\>", 
          "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]},
    {
     ItemBox[
      StyleBox["\<\"Bad Orbigraph\"\>", "Subsection",
       StripOnInput->False,
       FontSize->Scaled[0.02]],
      Background->GrayLevel[1],
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[
       StyleBox[
        GraphicsBox[{},
         BaselinePosition->Baseline,
         ImageSize->{1, 0}],
        CacheGraphics->False],
       Spacer[1]],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     StyleBox["\<\"No Finite k-Regular Cover?\"\>", "Subsection",
      StripOnInput->False,
      FontSize->Scaled[0.02]]},
    {
     TagBox[GridBox[{
        {
         OverlayBox[{
          GraphicsBox[
           NamespaceBox["NetworkGraphics",
            DynamicModuleBox[{Typeset`graph = HoldComplete[
              Graph[{1, 2, 3}, {
                SparseArray[
                Automatic, {3, 3}, 0, {
                 1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}],
                 Null}, {
               EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
                EdgeShapeFunction -> {
                  GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, 
                EdgeStyle -> {
                  Directive[
                   Thickness[Large], 
                   GrayLevel[0]]}, EdgeWeight -> {3, 1, 1, 3, 3, 1}, 
                GraphHighlight -> {
                  DirectedEdge[2, 1], 
                  DirectedEdge[1, 2], 
                  DirectedEdge[3, 1], 
                  DirectedEdge[2, 3], 
                  DirectedEdge[1, 3], 
                  DirectedEdge[3, 2]}, 
                GraphHighlightStyle -> {DirectedEdge[2, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[2, 3] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[1, 2] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}, 
                  DirectedEdge[3, 1] -> {EdgeStyle -> {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}}}, ImageSize -> Scaled[0.5], 
                VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], 1 -> RGBColor[
                    Rational[4, 5], 0, 0], 3 -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
             GraphicsGroupBox[{{
                Directive[
                 Opacity[0.7], 
                 Hue[0.6, 0.7, 0.5]], {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                    0.3954100979887313, -0.37993503101780424`}, {
                    0.44429670652560765`, -0.38346806780211296`}, {
                    0.49295692129322827`, -0.38934738255181967`}, {
                    0.5412782000680146, -0.3975593774815831}, {
                    0.5891487845236741, -0.408085059741211}, {
                    0.6364579587078756, -0.42090008534266654`}, {
                    0.6830963051081035, -0.43597481546328354`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$1"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$1", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                    0.010621778264911619`}, {-0.3648076211353314, 
                    0.610621778264911}, {-0.33928696614102627`, 
                    0.6524676742622335}, {-0.31178396226487193`, 
                    0.6930382007678794}, {-0.28236221895097113`, 
                    0.7322395255353922}, {-0.25108978333865395`, 
                    0.7699809830328253}, {-0.21803898288182322`, 
                    0.8061752841356209}, {-0.18328625806871401`, 
                    0.8407387180104745}, {-0.14691198562895147`, 
                    0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$2"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$2", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.6830963051081028, -0.5640251845367187}, {
                    0.636457958707875, -0.5790999146573355}, {
                    0.5891487845236735, -0.5919149402587909}, {
                    0.5412782000680137, -0.6024406225184188}, {
                    0.4929569212932275, -0.6106526174481819}, {
                    0.4442967065256069, -0.6165319321978884}, {
                    0.39541009798873045`, -0.6200649689821971}, {
                    0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$3"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$3", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                    0.7191134181554866, -0.3735913457232625}, {
                    0.682739145715724, -0.34073871801047506`}, {
                    0.647986420902615, -0.30617528413562134`}, {
                    0.6149356204457841, -0.2699809830328256}, {
                    0.583663184833467, -0.2322395255353924}, {
                    0.5542414415195662, -0.1930382007678796}, {
                    0.5267384376434119, -0.15246767426223357`}, {
                    0.5012177826491069, -0.11062177826491115`}, {
                    0.15480762113533175`, 0.48937822173508894`}, {
                    0.13132833965468138`, 0.5324027052800367}, {
                    0.1099447349939594, 0.5765062685699912}, {
                    0.09070626354023958, 0.6215869080872107}, {
                    0.07365742037777057, 0.6675403605144072}, {
                    0.05883763637894179, 0.7142603438768308}, {
                    0.046281187007849445`, 0.76163880335314}, {
                    0.036017113047383975`, 0.8095661611865443}, {
                    1.8369701987210297`*^-16, 1.}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$4"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$4", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 
                    1.}, {-0.03601711304738375, 
                    0.8095661611865439}, {-0.046281187007849, 
                    0.7616388033531397}, {-0.05883763637894135, 
                    0.7142603438768306}, {-0.07365742037777012, 
                    0.667540360514407}, {-0.09070626354023947, 
                    0.6215869080872107}, {-0.10994473499395929`, 
                    0.5765062685699913}, {-0.1313283396546815, 
                    0.5324027052800367}, {-0.15480762113533164`, 
                    0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, {
                    Directive[
                    RGBColor[0, 1, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$5"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"3\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$5", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
                 TagBox[
                  StyleBox[{
                    Arrowheads[{{0.1, 1, {
                    GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
                    
                    
                    ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                    0.14691198562895247`, 0.8735913457232614}, {
                    0.183286258068715, 0.840738718010474}, {
                    0.21803898288182422`, 0.8061752841356202}, {
                    0.25108978333865495`, 0.7699809830328245}, {
                    0.282362218950972, 0.7322395255353913}, {
                    0.3117839622648728, 0.6930382007678785}, {
                    0.33928696614102716`, 0.6524676742622324}, {
                    0.36480762113533227`, 0.61062177826491}, {
                    0.7112177826491075, 0.010621778264909898`}, {
                    0.7346970641297578, -0.03240270528003786}, {
                    0.7560806687904799, -0.07650626856999232}, {
                    0.7753191402441997, -0.12158690808721184`}, {
                    0.7923679834066687, -0.16754036051440824`}, {
                    0.8071877674054975, -0.2142603438768319}, {
                    0.8197442167765898, -0.2616388033531412}, {
                    0.8300082907370552, -0.30956616118654545`}, {
                    0.8660254037844389, -0.5000000000000012}}]}, {
                    Directive[
                    RGBColor[1, 0, 0], 
                    Thickness[Large]]}, StripOnInput -> False], "DynamicName",
                   BoxID -> "EdgeLabelID$6"], 
                 InsetBox[
                  FormBox[
                   StyleBox["\"1\"", 20, StripOnInput -> False], 
                   TraditionalForm], 
                  Offset[{0, 2}, 
                   DynamicLocation["EdgeLabelID$6", Automatic, 
                    Scaled[0.5]]], 
                  ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
                Directive[
                 Hue[0.6, 0.2, 0.8], 
                 EdgeForm[
                  Directive[
                   GrayLevel[0], 
                   Opacity[0.7]]]], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[4, 5], 0, 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$1"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{0.8660254037844389, -0.5000000000000012}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[46, 51], 
                   Rational[193, 255], 0], StripOnInput -> False], 
                 "DynamicName", BoxID -> "VertexID$2"], 
                TagBox[
                 StyleBox[
                  
                  DiskBox[{1.8369701987210297`*^-16, 1.}, 
                   0.08660254037844384], 
                  RGBColor[
                   Rational[12, 17], 
                   Rational[82, 255], 
                   Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                 BoxID -> "VertexID$3"]}}], $CellContext`flag}, 
             TagBox[
              
              DynamicBox[GraphComputation`NetworkGraphicsBox[
               3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
               CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                SynchronousUpdating -> False, 
                TrackedSymbols :> {$CellContext`flag}},
               
               ImageSizeCache->{{-0.46042400768322445`, 
                249.44001584441793`}, {-115.65960768115261`, 
                109.80433853533654`}}],
              MouseAppearanceTag["NetworkGraphics"]],
             AllowKernelInitialization->False,
             UnsavedVariables:>{$CellContext`flag}]],
           
           DefaultBaseStyle->{
            "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
             Hue[0.8, 1., 0.6]},
           FrameTicks->None,
           ImageSize->Scaled[0.5]], 
          GraphicsBox[
           GeometricTransformationBox[GeometricTransformationBox[InsetBox[
              StyleBox["\<\"Bad\"\>",
               StripOnInput->False,
               LineColor->RGBColor[1, 0, 0],
               FrontFaceColor->RGBColor[1, 0, 0],
               BackFaceColor->RGBColor[1, 0, 0],
               GraphicsColor->RGBColor[1, 0, 0],
               FontFamily->"Helvetica",
               FontSize->Scaled[0.5],
               FontWeight->Bold,
               FontColor->RGBColor[1, 0, 0]], {0, 0}], {{{
              0.766044443118978, -0.6427876096865393}, {0.6427876096865393, 
              0.766044443118978}}, Center}], {0.5, 0}],
           ImageSize->Scaled[0.5]]}]},
        {
         StyleBox["\<\"3\[Times]3\[Times]3\[NotEqual]1\[Times]1\[Times]1\"\>",
           "Subsection",
          StripOnInput->False,
          FontSize->Scaled[0.02]]}
       },
       DefaultBaseStyle->"Column",
       GridBoxAlignment->{"Columns" -> {{Left}}},
       GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
      "Column"], 
     ItemBox[
      GraphicsBox[
       {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{0.3, 0}, {-0.3, 0}}]},
       ImageSize->Scaled[1.],
       PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}],
      Frame->{{True, True}, {False, False}},
      StripOnInput->False], 
     ItemBox[
      InterpretationBox[Cell[BoxData[
        FormBox[
         StyleBox["\<\"?\"\>",
          StripOnInput->False,
          LineColor->GrayLevel[0],
          FrontFaceColor->GrayLevel[0],
          BackFaceColor->GrayLevel[0],
          GraphicsColor->GrayLevel[0],
          FontSize->Scaled[0.5],
          FontColor->GrayLevel[0]], TextForm]], "InlineText"],
       Text[
        Style["?", 
         GrayLevel[0], FontSize -> Scaled[0.5]]]],
      Background->GrayLevel[1],
      StripOnInput->False]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxBackground->{"Columns" -> {
       RGBColor[1, 
        Rational[82, 85], 
        Rational[14, 15]], 
       GrayLevel[1]}},
   GridBoxFrame->{"Columns" -> {{True}}, "Rows" -> {{True}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.45], 
       Scaled[0.1], 
       Scaled[0.45]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.03]}}, "Rows" -> {{
        Scaled[0.009]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{{3.584451064392708*^9, 3.58445107421277*^9}, 
   3.584452336602242*^9, 3.58445259313981*^9, 3.584453627369631*^9, 
   3.5844537620535507`*^9, 3.584453925477407*^9, {3.5844549299757757`*^9, 
   3.5844549980263844`*^9}, 3.5844554408959312`*^9, 3.584455506778996*^9, 
   3.5844562992897863`*^9, 3.5844568810669727`*^9, {3.5844569683755293`*^9, 
   3.5844569927769537`*^9}, {3.584457029760947*^9, 3.584457046645014*^9}, 
   3.584457725134059*^9, 3.5844577864650383`*^9, 3.584461712876459*^9, 
   3.584474215541794*^9, 3.584476199112089*^9, {3.5844762518721848`*^9, 
   3.584476372496511*^9}, {3.5844765085283337`*^9, 3.584476527009116*^9}, 
   3.584476910419587*^9, 3.584477596495287*^9, 3.584477758773635*^9, 
   3.5847986033532333`*^9, {3.5847987742639627`*^9, 3.5847988139397593`*^9}, 
   3.584904964098412*^9}]
}, Open  ]],

Cell[BoxData[""], "Input",
 CellChangeTimes->{{3.583766067224943*^9, 3.5837660682111998`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["\<\
Example: Randomly Generating Orbigraphs and Finite Covers\
\>", "Section",
 CellChangeTimes->{{3.583504537673525*^9, 3.583504582132621*^9}, {
  3.583509437760704*^9, 3.583509440334321*^9}, {3.583604913812951*^9, 
  3.5836049144171343`*^9}, {3.583604949342388*^9, 3.583604952190271*^9}, {
  3.583611444032045*^9, 3.5836114865967817`*^9}, {3.5836753545761843`*^9, 
  3.583675361473876*^9}, {3.584408003023486*^9, 3.584408016581757*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"GenerateRandomReversibleOrbigraph", "[", 
     RowBox[{"n_", ",", " ", "k_"}], "]"}], " ", ":=", " ", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"randOrbi", " ", "=", " ", 
         RowBox[{"GenerateRandomOrbigraph", "[", 
          RowBox[{"n", ",", " ", "k"}], "]"}]}], ",", " ", 
        RowBox[{"tries", "=", "0"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"While", "[", 
        RowBox[{
         RowBox[{
          RowBox[{
           RowBox[{"tries", " ", "\[LessEqual]", " ", "400"}], " ", "&&", " ", 
           RowBox[{"Not", "[", 
            RowBox[{"ConnectedOrbigraphQ", "[", "randOrbi", "]"}], "]"}]}], 
          " ", "||", " ", 
          RowBox[{"Not", "[", 
           RowBox[{"OrbigraphReversibleQ", "[", "randOrbi", "]"}], "]"}]}], 
         ",", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"randOrbi", " ", "=", " ", 
           RowBox[{"GenerateRandomOrbigraph", "[", 
            RowBox[{"n", ",", " ", "k"}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"tries", "++"}], ";"}]}], "\[IndentingNewLine]", "]"}], ";",
        "\[IndentingNewLine]", 
       RowBox[{"Return", "[", "randOrbi", "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"randOrbi", " ", "=", " ", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", "}"}], ",", " ", 
       RowBox[{"ImageSize", "\[Rule]", " ", "600"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"coveringGraph", " ", "=", " ", 
     RowBox[{"Graph", "[", 
      RowBox[{
       RowBox[{"{", "1", "}"}], ",", 
       RowBox[{"{", "}"}]}], "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Item", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"VertexCount", "@", "randOrbi"}], " ", ">", " ", "1"}],
               ",", " ", "\[IndentingNewLine]", 
              RowBox[{"SetProperty", "[", 
               RowBox[{"randOrbi", ",", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", " ", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}], ",", 
         "\[IndentingNewLine]", " ", 
         RowBox[{"Graphics", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"Arrowheads", "[", ".3", "]"}], ",", 
             RowBox[{"Thickness", "[", ".05", "]"}], ",", 
             RowBox[{"Arrow", "[", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"-", ".3"}], ",", "0"}], "}"}], ",", 
                RowBox[{"{", 
                 RowBox[{".3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
           ",", " ", 
           RowBox[{"PlotRange", "\[Rule]", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", ".3"}], ",", " ", ".3"}], "}"}], ",", " ", 
              RowBox[{"{", 
               RowBox[{
                RowBox[{"-", ".1"}], ",", ".1"}], "}"}]}], "}"}]}], ",", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"Item", "[", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
            RowBox[{"If", "[", 
             RowBox[{
              RowBox[{
               RowBox[{"VertexCount", "@", "coveringGraph"}], " ", ">", " ", 
               "1"}], ",", " ", "\[IndentingNewLine]", 
              RowBox[{"SetProperty", "[", 
               RowBox[{"coveringGraph", ",", " ", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Graphics", "[", 
               RowBox[{
                RowBox[{"{", "}"}], ",", " ", 
                RowBox[{"ImageSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", "]"}], ",", 
           "\[IndentingNewLine]", 
           RowBox[{"Frame", "\[Rule]", "All"}]}], "]"}]}], 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"Button", "[", 
          RowBox[{
          "\"\<Generate Random Orbigraph\>\"", ",", " ", 
           "\[IndentingNewLine]", 
           RowBox[{"Dynamic", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"coveringGraph", " ", "=", " ", 
              RowBox[{"Graph", "[", 
               RowBox[{
                RowBox[{"{", "1", "}"}], ",", 
                RowBox[{"{", "}"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
             RowBox[{"randOrbi", " ", "=", " ", 
              RowBox[{"GenerateRandomReversibleOrbigraph", "[", 
               RowBox[{"3", ",", "3"}], "]"}]}], ";", "\[IndentingNewLine]", 
             "\[IndentingNewLine]", 
             RowBox[{"randOrbi", " ", "=", " ", 
              RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"AdjacencyOrbigraph", "@", "randOrbi"}], ",", 
                "\[IndentingNewLine]", 
                RowBox[{"{", "\[IndentingNewLine]", 
                 RowBox[{
                  RowBox[{"VertexSize", "\[Rule]", ".3"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"Scaled", "[", "1.0", "]"}]}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"EdgeLabelStyle", "\[Rule]", "15"}], ",", 
                  "\[IndentingNewLine]", 
                  RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
                   RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"1", " ", "\[Rule]", " ", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    RowBox[{"204", "/", "255"}], ",", " ", "0", ",", "0"}], 
                    "]"}]}], ",", "\[IndentingNewLine]", 
                    RowBox[{"2", "\[Rule]", " ", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    RowBox[{"230", "/", "255"}], ",", " ", 
                    RowBox[{"193", "/", "255"}], ",", " ", "0"}], "]"}]}], 
                    ",", "\[IndentingNewLine]", 
                    RowBox[{"3", "\[Rule]", 
                    RowBox[{"RGBColor", "[", 
                    RowBox[{
                    RowBox[{"180", "/", "255"}], ",", " ", 
                    RowBox[{"82", "/", "255"}], ",", " ", 
                    RowBox[{"204", "/", "255"}]}], "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}]}]}], "\[IndentingNewLine]", 
                 "}"}]}], "\[IndentingNewLine]", "]"}]}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "\[IndentingNewLine]", 
          "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Spacer", "[", "1", "]"}], ",", "\[IndentingNewLine]", 
         RowBox[{"Button", "[", 
          RowBox[{
          "\"\<Generate Finite Covering\>\"", ",", "\[IndentingNewLine]", 
           RowBox[{"Dynamic", "[", 
            RowBox[{
             RowBox[{"coveringGraph", " ", "=", " ", 
              RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
               RowBox[{
                RowBox[{"CreateFiniteCoveringGraph", "[", 
                 RowBox[{"WeightedAdjacencyMatrix", "@", "randOrbi"}], "]"}], 
                ",", "\[IndentingNewLine]", 
                RowBox[{"{", 
                 RowBox[{
                  RowBox[{"ImageSize", "\[Rule]", 
                   RowBox[{"Scaled", "[", "1.0", "]"}]}], ",", " ", 
                  RowBox[{
                  "GraphLayout", "\[Rule]", "\"\<SpringEmbedding\>\""}]}], 
                 "}"}]}], "\[IndentingNewLine]", "]"}]}], ";"}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"ImageSize", "\[Rule]", 
            RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "\[IndentingNewLine]", 
          "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}]}], 
      "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
     StyleBox[
      RowBox[{"Alignment", "\[Rule]", " ", "Center"}],
      CellOpen->False], 
     StyleBox[",",
      CellOpen->False], 
     StyleBox["\[IndentingNewLine]",
      CellOpen->False], 
     StyleBox[
      RowBox[{"ItemSize", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"Scaled", "[", ".43", "]"}], ",", " ", 
          RowBox[{"Scaled", "[", ".10", "]"}], ",", " ", 
          RowBox[{"Scaled", "[", ".43", "]"}]}], "}"}], "}"}]}],
      CellOpen->False], 
     StyleBox[",",
      CellOpen->False], 
     StyleBox["\[IndentingNewLine]",
      CellOpen->False], 
     StyleBox[
      RowBox[{"Spacings", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{
         RowBox[{"Scaled", "[", ".1", "]"}], ",", " ", 
         RowBox[{"Scaled", "[", ".05", "]"}]}], "}"}]}],
      CellOpen->False]}], "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, {3.5836764090262957`*^9, 
   3.583676481383636*^9}, {3.583676548600483*^9, 3.583676548748131*^9}, {
   3.583676613567326*^9, 3.5836766413915653`*^9}, {3.583676682809504*^9, 
   3.583676704931024*^9}, {3.583676735013506*^9, 3.583676799455542*^9}, {
   3.583676906080701*^9, 3.5836769404670763`*^9}, {3.583677027032062*^9, 
   3.583677137608968*^9}, {3.5836771769495783`*^9, 3.5836773162990017`*^9}, {
   3.5836773501335506`*^9, 3.583677361137568*^9}, {3.5836774400790033`*^9, 
   3.5836776383375874`*^9}, {3.5836777339061193`*^9, 3.58367779190267*^9}, {
   3.583677877519021*^9, 3.58367796150695*^9}, {3.583677997194104*^9, 
   3.583677999201078*^9}, {3.583678119386209*^9, 3.583678125514632*^9}, {
   3.5836866903700323`*^9, 3.583686719505563*^9}, {3.5837751936560583`*^9, 
   3.583775196075613*^9}, {3.583783217061591*^9, 3.5837832204543324`*^9}, {
   3.5837832518353853`*^9, 3.5837833527589827`*^9}, {3.5837870373818827`*^9, 
   3.5837870380067463`*^9}, 3.583950626225877*^9, {3.5839506660673532`*^9, 
   3.5839506927458887`*^9}, {3.583950762121608*^9, 3.583950770747435*^9}, {
   3.583950829515133*^9, 3.583950864735855*^9}, {3.5841051380120363`*^9, 
   3.584105159818038*^9}, {3.5841053890575533`*^9, 3.584105390841195*^9}, {
   3.5841054635120583`*^9, 3.584105489063031*^9}, {3.584105524619287*^9, 
   3.5841055249636507`*^9}, {3.5842130019951267`*^9, 3.584213007321607*^9}, {
   3.584301615029738*^9, 3.5843018415395393`*^9}, {3.584303129545002*^9, 
   3.5843031445751753`*^9}, {3.5843032137107067`*^9, 
   3.5843032265200663`*^9}, {3.584407295638577*^9, 3.5844075971940727`*^9}, {
   3.5844076409765778`*^9, 3.584407908865851*^9}, {3.5844079450299683`*^9, 
   3.584407966320622*^9}, {3.584446250648493*^9, 3.584446290553433*^9}, {
   3.584446351050975*^9, 3.584446355696699*^9}, {3.584446453286106*^9, 
   3.584446460813931*^9}, {3.584446502883842*^9, 3.584446535723275*^9}, 
   3.5844465785383453`*^9, {3.584446818101553*^9, 3.5844468627986107`*^9}, {
   3.5844469838750687`*^9, 3.58444704358759*^9}, {3.5844471007438097`*^9, 
   3.584447100856979*^9}, {3.584447206742931*^9, 3.584447220145091*^9}, {
   3.5844473053487473`*^9, 3.584447402961382*^9}, {3.584447449787904*^9, 
   3.5844474534120693`*^9}, 3.584455281152383*^9}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     ItemBox[
      DynamicBox[ToBoxes[
        If[VertexCount[$CellContext`randOrbi] > 1, 
         SetProperty[$CellContext`randOrbi, ImageSize -> Scaled[1.]], 
         Graphics[{}, ImageSize -> Scaled[1.]]], StandardForm],
       ImageSizeCache->{401., {52., 57.}}],
      Frame->All,
      StripOnInput->False], 
     GraphicsBox[
      {Thickness[0.05], Arrowheads[0.3], ArrowBox[{{-0.3, 0}, {0.3, 0}}]},
      ImageSize->Scaled[1.],
      PlotRange->{{-0.3, 0.3}, {-0.1, 0.1}}], 
     ItemBox[
      DynamicBox[ToBoxes[
        If[VertexCount[$CellContext`coveringGraph] > 1, 
         SetProperty[$CellContext`coveringGraph, ImageSize -> Scaled[1.]], 
         Graphics[{}, ImageSize -> Scaled[1.]]], StandardForm],
       ImageSizeCache->{401., {181., 186.}}],
      Frame->All,
      StripOnInput->False]},
    {
     ButtonBox["\<\"Generate Random Orbigraph\"\>",
      Appearance->Automatic,
      ButtonFunction:>
       Dynamic[$CellContext`coveringGraph = 
         Graph[{1}, {}]; $CellContext`randOrbi = \
$CellContext`GenerateRandomReversibleOrbigraph[3, 3]; $CellContext`randOrbi = 
         SetProperty[
           Orbigraphs`AdjacencyOrbigraph[$CellContext`randOrbi], {
           VertexSize -> 0.3, ImageSize -> Scaled[1.], EdgeLabelStyle -> 15, 
            VertexStyle -> {
             1 -> RGBColor[204/255, 0, 0], 2 -> RGBColor[230/255, 193/255, 0],
               3 -> RGBColor[180/255, 82/255, 204/255]}}]],
      Evaluator->Automatic,
      ImageSize->Scaled[1.],
      Method->"Preemptive"], 
     InterpretationBox[
      StyleBox[
       GraphicsBox[{},
        BaselinePosition->Baseline,
        ImageSize->{1, 0}],
       CacheGraphics->False],
      Spacer[1]], 
     ButtonBox["\<\"Generate Finite Covering\"\>",
      Appearance->Automatic,
      ButtonFunction:>Dynamic[$CellContext`coveringGraph = SetProperty[
           OrbigraphCovers`CreateFiniteCoveringGraph[
            WeightedAdjacencyMatrix[$CellContext`randOrbi]], {
           ImageSize -> Scaled[1.], GraphLayout -> "SpringEmbedding"}]; Null],
      
      Evaluator->Automatic,
      ImageSize->Scaled[1.],
      Method->"Preemptive"]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {{Center}}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.43], 
       Scaled[0.1], 
       Scaled[0.43]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.1]}}, "Rows" -> {{
        Scaled[0.05]}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.5844472207455587`*^9, {3.584447313193145*^9, 3.584447403596702*^9}, 
   3.5844474541163054`*^9, 3.5844523368152447`*^9, 3.584452594688085*^9, 
   3.5844536276436977`*^9, 3.58445376227173*^9, 3.5844539256852818`*^9, 
   3.5844552822001534`*^9, 3.584455442989139*^9, 3.58445550899261*^9, 
   3.584476527097386*^9, 3.584476910482809*^9, 3.584477762130932*^9, 
   3.58479860346975*^9, 3.584904964268434*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Universal Covering Tree", "Section",
 CellChangeTimes->{{3.583504537673525*^9, 3.583504582132621*^9}, {
  3.583509437760704*^9, 3.583509440334321*^9}, {3.583604913812951*^9, 
  3.5836049144171343`*^9}, {3.584198228210197*^9, 3.584198235305292*^9}, {
  3.584299484336187*^9, 3.584299486782975*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
  
  RowBox[{
   RowBox[{
    RowBox[{"sizes", " ", "=", " ", 
     RowBox[{
      RowBox[{
       RowBox[{"SetProperty", "[", 
        RowBox[{
         RowBox[{"CreateUniversalCovering", "[", 
          RowBox[{"goodOrbi", ",", " ", "#"}], "]"}], ",", " ", 
         RowBox[{"VertexSize", "\[Rule]", " ", ".2"}]}], "]"}], " ", "&"}], "/@",
       " ", 
      RowBox[{"Range", "[", "3", "]"}]}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GraphPlotRange", "[", "graph_Graph", "]"}], " ", ":=", " ", 
    RowBox[{"With", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"embedding", " ", "=", " ", 
        RowBox[{"GraphEmbedding", "@", "graph"}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{"First", " ", "/@", " ", "embedding"}], "]"}], "-", "1"}],
           ",", " ", 
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"First", "/@", "embedding"}], "]"}], "+", "1"}]}], "}"}], 
        ",", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{
           RowBox[{"Min", "[", 
            RowBox[{"Last", "/@", "embedding"}], "]"}], "-", "1"}], ",", " ", 
          
          RowBox[{
           RowBox[{"Max", "[", 
            RowBox[{"Last", "/@", "embedding"}], "]"}], "+", "1"}]}], "}"}]}],
        "}"}]}], "]"}]}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Grid", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"SetProperty", "[", 
         RowBox[{"goodOrbi", ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"EdgeLabelStyle", "\[Rule]", "20"}], ",", 
            RowBox[{"ImageSize", "\[Rule]", 
             RowBox[{"Scaled", "[", ".5", "]"}]}]}], "}"}]}], "]"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ListAnimate", "[", 
         RowBox[{"sizes", ",", " ", 
          RowBox[{"DefaultDuration", "\[Rule]", "3"}], ",", " ", 
          RowBox[{"ImageSize", "\[Rule]", 
           RowBox[{"Scaled", "[", "1.0", "]"}]}]}], "]"}]}], 
       "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Alignment", "\[Rule]", " ", 
      RowBox[{"{", 
       RowBox[{"{", 
        RowBox[{"Right", ",", " ", "Left"}], "}"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"ItemSize", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"Scaled", "[", ".5", "]"}], ",", " ", 
         RowBox[{"Scaled", "[", ".5", "]"}]}], "}"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Spacings", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Scaled", "[", ".1", "]"}], ",", " ", "0"}], "}"}]}]}], 
    "\[IndentingNewLine]", "]"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, {
   3.583761360477338*^9, 3.5837614259457207`*^9}, {3.5837618346740417`*^9, 
   3.5837618899534597`*^9}, {3.583762127115325*^9, 3.583762177566827*^9}, {
   3.583762559882112*^9, 3.5837625688253813`*^9}, {3.5837651873977118`*^9, 
   3.583765216202577*^9}, 3.583951101617882*^9, {3.5839513736268377`*^9, 
   3.5839514482578297`*^9}, {3.5841044971600523`*^9, 
   3.5841045451374083`*^9}, {3.584208705656846*^9, 3.5842087166706047`*^9}, {
   3.584299799156002*^9, 3.584299823188484*^9}, {3.584299864965108*^9, 
   3.584299865477852*^9}, {3.584299902377254*^9, 3.584300059953788*^9}, {
   3.584455304421133*^9, 3.5844553594562883`*^9}, {3.584798898705433*^9, 
   3.584798915913085*^9}}],

Cell[BoxData[
 TagBox[GridBox[{
    {
     GraphicsBox[
      NamespaceBox["NetworkGraphics",
       DynamicModuleBox[{Typeset`graph = HoldComplete[
         Graph[{1, 2, 3}, {
           SparseArray[
           Automatic, {3, 3}, 0, {
            1, {{0, 2, 4, 6}, {{2}, {3}, {1}, {3}, {1}, {2}}}, Pattern}], 
           Null}, {EdgeLabels -> {"EdgeWeight"}, EdgeLabelStyle -> {20}, 
           EdgeShapeFunction -> {
             GraphElementData["FilledArrow", "ArrowSize" -> 0.1]}, EdgeStyle -> {
             Directive[
              Thickness[Large], 
              GrayLevel[0]]}, EdgeWeight -> {1, 3, 1, 3, 2, 2}, ImageSize -> 
           Scaled[0.5], VertexSize -> {0.1}, VertexStyle -> {2 -> RGBColor[
               Rational[46, 51], 
               Rational[193, 255], 0], 1 -> RGBColor[
               Rational[4, 5], 0, 0], 3 -> RGBColor[
               Rational[12, 17], 
               Rational[82, 255], 
               Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
        GraphicsGroupBox[{{
           Directive[
            Opacity[0.7], 
            Hue[0.6, 0.7, 0.5]], {
            TagBox[
             StyleBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.6830963051081023, -0.435974815463282}, {-0.6364579587078745, \
-0.42090008534266543`}, {-0.5891487845236729, -0.40808505974121}, \
{-0.5412782000680133, -0.397559377481582}, {-0.492956921293227, \
-0.3893473825518188}, {-0.4442967065256064, -0.3834680678021125}, \
{-0.39541009798872995`, -0.3799350310178038}, {-0.34641016151377463`, \
-0.37875644347017867`}, {0.3464101615137759, -0.3787564434701791}, {
                0.3954100979887313, -0.37993503101780424`}, {
                0.44429670652560765`, -0.38346806780211296`}, {
                0.49295692129322827`, -0.38934738255181967`}, {
                0.5412782000680146, -0.3975593774815831}, {
                0.5891487845236741, -0.408085059741211}, {
                0.6364579587078756, -0.42090008534266654`}, {
                0.6830963051081035, -0.43597481546328354`}, {
                0.8660254037844389, -0.5000000000000012}}]}, 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$1"], 
            InsetBox[
             FormBox[
              StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$1", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{-0.8660254037844384, -0.4999999999999994}, \
{-0.8300082907370546, -0.3095661611865432}, {-0.8197442167765894, \
-0.26163880335313905`}, {-0.807187767405497, -0.2142603438768299}, \
{-0.7923679834066683, -0.16754036051440624`}, {-0.7753191402441989, \
-0.12158690808720984`}, {-0.7560806687904791, -0.07650626856999054}, \
{-0.734697064129757, -0.03240270528003597}, {-0.7112177826491067, 
                0.010621778264911619`}, {-0.3648076211353314, 
                0.610621778264911}, {-0.33928696614102627`, 
                0.6524676742622335}, {-0.31178396226487193`, 
                0.6930382007678794}, {-0.28236221895097113`, 
                0.7322395255353922}, {-0.25108978333865395`, 
                0.7699809830328253}, {-0.21803898288182322`, 
                0.8061752841356209}, {-0.18328625806871401`, 
                0.8407387180104745}, {-0.14691198562895147`, 
                0.873591345723262}, {1.8369701987210297`*^-16, 1.}}]}, 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$2"], 
            InsetBox[
             FormBox[
              StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$2", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.6830963051081028, -0.5640251845367187}, {
                0.636457958707875, -0.5790999146573355}, {
                0.5891487845236735, -0.5919149402587909}, {
                0.5412782000680137, -0.6024406225184188}, {
                0.4929569212932275, -0.6106526174481819}, {
                0.4442967065256069, -0.6165319321978884}, {
                0.39541009798873045`, -0.6200649689821971}, {
                0.34641016151377513`, -0.6212435565298221}, \
{-0.3464101615137754, -0.6212435565298214}, {-0.3954100979887308, \
-0.6200649689821962}, {-0.4442967065256072, -0.6165319321978875}, \
{-0.49295692129322777`, -0.610652617448181}, {-0.5412782000680142, \
-0.6024406225184175}, {-0.5891487845236736, -0.5919149402587895}, \
{-0.636457958707875, -0.5790999146573339}, {-0.683096305108103, \
-0.5640251845367171}, {-0.8660254037844384, -0.4999999999999994}}]}, 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$3"], 
            InsetBox[
             FormBox[
              StyleBox["\"1\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$3", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{0.8660254037844389, -0.5000000000000012}, {
                0.7191134181554866, -0.3735913457232625}, {
                0.682739145715724, -0.34073871801047506`}, {
                0.647986420902615, -0.30617528413562134`}, {
                0.6149356204457841, -0.2699809830328256}, {
                0.583663184833467, -0.2322395255353924}, {
                0.5542414415195662, -0.1930382007678796}, {
                0.5267384376434119, -0.15246767426223357`}, {
                0.5012177826491069, -0.11062177826491115`}, {
                0.15480762113533175`, 0.48937822173508894`}, {
                0.13132833965468138`, 0.5324027052800367}, {
                0.1099447349939594, 0.5765062685699912}, {0.09070626354023958,
                 0.6215869080872107}, {0.07365742037777057, 
                0.6675403605144072}, {0.05883763637894179, 
                0.7142603438768308}, {0.046281187007849445`, 
                0.76163880335314}, {0.036017113047383975`, 
                0.8095661611865443}, {1.8369701987210297`*^-16, 1.}}]}, 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$4"], 
            InsetBox[
             FormBox[
              StyleBox["\"3\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$4", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 
                1.}, {-0.03601711304738375, 
                0.8095661611865439}, {-0.046281187007849, 
                0.7616388033531397}, {-0.05883763637894135, 
                0.7142603438768306}, {-0.07365742037777012, 
                0.667540360514407}, {-0.09070626354023947, 
                0.6215869080872107}, {-0.10994473499395929`, 
                0.5765062685699913}, {-0.1313283396546815, 
                0.5324027052800367}, {-0.15480762113533164`, 
                0.48937822173508916`}, {-0.501217782649107, \
-0.11062177826491032`}, {-0.5267384376434122, -0.1524676742622328}, \
{-0.5542414415195666, -0.1930382007678786}, {-0.5836631848334672, \
-0.2322395255353915}, {-0.6149356204457845, -0.2699809830328245}, \
{-0.6479864209026153, -0.3061752841356201}, {-0.6827391457157242, \
-0.3407387180104738}, {-0.7191134181554869, -0.37359134572326125`}, \
{-0.8660254037844384, -0.4999999999999994}}]}, 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$5"], 
            InsetBox[
             FormBox[
              StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$5", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}, {
            TagBox[
             StyleBox[{
               Arrowheads[{{0.1, 1, {
                   GraphicsBox[
                    
                    FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 
                    
                    0}}}, {{{-1., -0.31249915682968066`}, \
{-0.8749949409780775, -8.881784197001252*^-16}, {-1., 0.3124991568296789}, {
                    0., -8.881784197001252*^-16}}}]], 0.8749949409780782}}}], 
               
               
               ArrowBox[{{1.8369701987210297`*^-16, 1.}, {
                0.14691198562895247`, 0.8735913457232614}, {0.183286258068715,
                 0.840738718010474}, {0.21803898288182422`, 
                0.8061752841356202}, {0.25108978333865495`, 
                0.7699809830328245}, {0.282362218950972, 
                0.7322395255353913}, {0.3117839622648728, 
                0.6930382007678785}, {0.33928696614102716`, 
                0.6524676742622324}, {0.36480762113533227`, 
                0.61062177826491}, {0.7112177826491075, 
                0.010621778264909898`}, {
                0.7346970641297578, -0.03240270528003786}, {
                0.7560806687904799, -0.07650626856999232}, {
                0.7753191402441997, -0.12158690808721184`}, {
                0.7923679834066687, -0.16754036051440824`}, {
                0.8071877674054975, -0.2142603438768319}, {
                0.8197442167765898, -0.2616388033531412}, {
                0.8300082907370552, -0.30956616118654545`}, {
                0.8660254037844389, -0.5000000000000012}}]}, 
              Directive[
               Thickness[Large], 
               GrayLevel[0]], StripOnInput -> False], "DynamicName", BoxID -> 
             "EdgeLabelID$6"], 
            InsetBox[
             FormBox[
              StyleBox["\"2\"", 20, StripOnInput -> False], TraditionalForm], 
             
             Offset[{0, 2}, 
              DynamicLocation["EdgeLabelID$6", Automatic, 
               Scaled[0.5]]], 
             ImageScaled[{0.5, 0}], BaseStyle -> "Graphics"]}}, {
           Directive[
            Hue[0.6, 0.2, 0.8], 
            EdgeForm[
             Directive[
              GrayLevel[0], 
              Opacity[0.7]]]], 
           TagBox[
            StyleBox[
             
             DiskBox[{-0.8660254037844384, -0.4999999999999994}, 
              0.08660254037844384], 
             RGBColor[
              Rational[4, 5], 0, 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$1"], 
           TagBox[
            StyleBox[
             
             DiskBox[{0.8660254037844389, -0.5000000000000012}, 
              0.08660254037844384], 
             RGBColor[
              Rational[46, 51], 
              Rational[193, 255], 0], StripOnInput -> False], "DynamicName", 
            BoxID -> "VertexID$2"], 
           TagBox[
            StyleBox[
             DiskBox[{1.8369701987210297`*^-16, 1.}, 0.08660254037844384], 
             RGBColor[
              Rational[12, 17], 
              Rational[82, 255], 
              Rational[4, 5]], StripOnInput -> False], "DynamicName", BoxID -> 
            "VertexID$3"]}}], $CellContext`flag}, 
        TagBox[
         DynamicBox[GraphComputation`NetworkGraphicsBox[
          3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
          CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
           SynchronousUpdating -> False, 
           TrackedSymbols :> {$CellContext`flag}},
          
          ImageSizeCache->{{0.019167829051422558`, 
           272.94001584441787`}, {-125.19919951788731`, 120.95777470161408`}}],
         MouseAppearanceTag["NetworkGraphics"]],
        AllowKernelInitialization->False,
        UnsavedVariables:>{$CellContext`flag}]],
      DefaultBaseStyle->{
       "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
        Hue[0.8, 1., 0.6]},
      FrameTicks->None,
      ImageSize->Scaled[0.5],
      ImageCache->GraphicsData["CompressedBitmap", "\<\
eJylnQuYllW1x1+YGS4eNe9Hjyaads7JdMw7diylUygqjqJ4HRBEEO9456KG
o6aQpXglM7DLWKiZpEkqIGLlaJKJFZlYaNKFbLQxm2yqfdZv7/V/v/29zGg+
h+eBmW9/e6+99tr/dd37fRk5/sLJE88ef+HpE8bvcPD546dMPn3CBTsMP/d8
a2roVxT9NiqKonuHgt+D/er/xD8b849/eA+//3f80RD+8Y9/BP9T7BD/3Tj8
+c9/Dq+++mpYtWpVePrpp8OSJUvC/fffH7761a+G2267LcyZMyd87nOfC9de
e2246qqrwsyZM8Oll146LkydOtWG26+x6eqrrw6zZs2KXRkyd+7c8LWvfS2S
Wrp0aSTNFExlUw5PjP2XM/arX/0qXHfddfHTNvHfQeHtt98Oq1evDsuXLw/3
3ntvuPXWW+NMZ555Zjj22GMvDYcffrh1s1/DWWedFdra2uKk3/zmN8MTTzwR
fvnLX4a//e1vH08T/adP9NBDD4VRo0aFadOmFVvEtoFRKi+//HJ4/PHH46pZ
5aRJk8IRRxxh3zLLxnGW0047LVx00UXhiiuuCJ///OfDF7/4xfCNb3wjPPjg
g+HRRx8Ny5YtC9/73vdCR0dHeOaZZ8KPf/zjceEnP/mJDbdfY9OTTz4ZmXvs
scfiEIZCAlKQhPSFF14Yp7cp0+wDQ0tLS5wdISNURPLKK6+Ef/7zn8XQtMCd
44+m8Je//CVulQ2Mf01ixSb+3RtvvBGeeuqp8OUvfzlMnz49jB492lqTGI88
8sgo2WuuuSZ86UtfCg888EDsy87Yfl3qmwJakCxr/Pa3vx27fuYznwmnn346
XCZqTVFcIANxsvN/+tOfir0Tozv5Trz44ovh1FNPjQP6x38bIoCEzw3iv43h
9ddfjwBCPNY/zTAgTJw4MU6MOJAoG/j3v/99dhw1IPT09IQ1a9ZEScEEkpsw
YUIa3Rjle8MNN8QtM6l8JLG2UfwxOPz0pz8N82+/PVx88slhzEEHhdFDh8af
fKbdvi829GUghKOOOsoXkP4F/1rGAF/GX//617BixYooMINrYyaoGTNmhK98
5SuloG717WLlyJntMryGY445xqdoCiNHjgznnHNOmD9/fnj22WdBerFtxv6d
828P0y48OYw/6aBwwtFD408+0w77g9KKk5DfB5CiLMaPGBHGDBkSrmpoCO1m
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\
\>"]], 
     TagBox[
      StyleBox[
       DynamicModuleBox[{$CellContext`i5$$ = 1, Typeset`show$$ = True, 
        Typeset`bookmarkList$$ = {
        "\"min\"" :> {$CellContext`i5$$ = 1}, 
         "\"max\"" :> {$CellContext`i5$$ = 3}}, Typeset`bookmarkMode$$ = 
        "Menu", Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
        "\"untitled\"", Typeset`specs$$ = {{{
           Hold[$CellContext`i5$$], 1, ""}, 1, 3, 1}}, Typeset`size$$ = 
        Automatic, Typeset`update$$ = 0, Typeset`initDone$$, 
        Typeset`skipInitDone$$ = True, $CellContext`i5$20862$$ = 0}, 
        PaneBox[
         PanelBox[
          DynamicWrapperBox[GridBox[{
             {
              ItemBox[
               ItemBox[
                TagBox[
                 StyleBox[GridBox[{
                    {"\<\"\"\>", 
                    AnimatorBox[Dynamic[$CellContext`i5$$], {1, 3, 1},
                    AnimationRate->Automatic,
                    
                    AppearanceElements->{
                    "ProgressSlider", "PlayPauseButton", 
                    "FasterSlowerButtons", "DirectionButton"},
                    AutoAction->False,
                    DefaultDuration->3,
                    DisplayAllSteps->True,
                    PausedTime->1583.5287790298462`]}
                   },
                   AutoDelete->False,
                   
                   GridBoxAlignment->{
                    "Columns" -> {Right, {Left}}, "ColumnsIndexed" -> {}, 
                    "Rows" -> {{Baseline}}, "RowsIndexed" -> {}},
                   
                   GridBoxItemSize->{
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                  "ListAnimateLabel",
                  StripOnInput->False],
                 {"ControlArea", Top}],
                Alignment->{Automatic, Inherited},
                StripOnInput->False],
               Background->None,
               StripOnInput->False]},
             {
              ItemBox[
               TagBox[
                StyleBox[
                 PaneBox[
                  TagBox[
                   PaneSelectorBox[{1->
                    GraphicsBox[
                    NamespaceBox["NetworkGraphics",
                    DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{{1}, {{
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 3], 2}}, {{
                    DirectedEdge[1, 3], 3}}}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}}}, {
                    GraphLayout -> "RadialEmbedding", 
                    VertexShapeFunction -> {{1} -> Automatic, {{
                    DirectedEdge[1, 2], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}} -> Automatic}, 
                    VertexSize -> {0.2}, VertexStyle -> {{{
                    DirectedEdge[1, 3], 3}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 1}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 2], 1}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {1} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 3], 2}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]]}}]], Typeset`boxes, Typeset`boxes$s2d = 
                    GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.7071067811865477, 0.7071067811865477}, 
                    0.09999999999999998], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$1"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{2.220446049250313*^-16, 1.4142135623730954`}, 
                    0.09999999999999998], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$2"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0., 2.220446049250313*^-16}, 
                    0.09999999999999998], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    TagBox[
                    StyleBox[
                    DiskBox[{1.414213562373095, 0.}, 0.09999999999999998], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1.4142135623730954`, 1.414213562373095}, 
                    0.09999999999999998], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"]}}], $CellContext`flag}, 
                    TagBox[
                    
                    DynamicBox[GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                    
                    ImageSizeCache->{{6.180000000000003, 
                    352.81999999999994`}, {-176.10719999999998`, 
                    170.53279999999995`}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                    AllowKernelInitialization->False,
                    UnsavedVariables:>{$CellContext`flag}]],
                    
                    DefaultBaseStyle->{
                    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]},
                    FrameTicks->None], 2->
                    GraphicsBox[
                    NamespaceBox["NetworkGraphics",
                    DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{{1}, {{
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 3], 2}}, {{
                    DirectedEdge[1, 3], 3}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 2}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 3}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 2}}, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 1], 2}}, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 1}}, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 2}}, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 1], 2}}, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 1}}, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 2}}}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 6}, {2, 7}, {2,
                     8}, {3, 9}, {3, 10}, {3, 11}, {4, 12}, {4, 13}, {4, 
                    14}, {5, 15}, {5, 16}, {5, 17}}}, {
                    GraphLayout -> "RadialEmbedding", 
                    VertexShapeFunction -> {{{
                    DirectedEdge[1, 2], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 1], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 1], 2}} -> Automatic, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 3}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 2}} -> Automatic, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 1}} -> Automatic, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 1}} -> Automatic, {1} -> 
                    Automatic, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}} -> Automatic}, 
                    VertexSize -> {0.2}, VertexStyle -> {{{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 2}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> RGBColor[
                    Rational[4, 5], 0, 0], {1} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 3}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 2], 1}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 2}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 2}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 3}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 1}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 2}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 3], 1}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 1}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 1], 2}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 2}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 1], 2}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0]}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$7", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$8", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$9", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$10", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$11", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$12", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$13", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$14", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$15", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$16", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$17", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1.715626903780092, 1.715626903780092}, 
                    0.08880738339771152], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$1"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1.0876638735805377`, 2.343589933979646}, 
                    0.08880738339771152], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$2"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1.0876638735805375`, 1.0876638735805377`}, 
                    0.08880738339771152], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{2.343589933979646, 1.0876638735805375`}, 
                    0.08880738339771152], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{2.343589933979646, 2.343589933979646}, 
                    0.08880738339771152], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1.2559260603991091`, 3.431253807560184}, 
                    0.08880738339771152], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.4597008433809835, 2.9715529641792005`}, 
                    0.08880738339771152], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$7"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{6.661338147750939*^-16, 2.1753277471610764`}, 
                    0.08880738339771152], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$8"], 
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 1.2559260603991096`}, 0.08880738339771152], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$9"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.45970084338098305`, 0.4597008433809835}, 
                    0.08880738339771152], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$10"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1.2559260603991091`, 2.220446049250313*^-16}, 
                    0.08880738339771152], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$11"], 
                    TagBox[
                    StyleBox[
                    DiskBox[{2.175327747161074, 0.}, 0.08880738339771152], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$12"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{2.9715529641792013`, 0.45970084338098416`}, 
                    0.08880738339771152], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$13"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{3.431253807560184, 1.2559260603991091`}, 
                    0.08880738339771152], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$14"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{3.431253807560184, 2.175327747161074}, 
                    0.08880738339771152], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$15"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{2.9715529641792, 2.9715529641792013`}, 
                    0.08880738339771152], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$16"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{2.175327747161075, 3.431253807560184}, 
                    0.08880738339771152], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> 
                    "VertexID$17"]}}], $CellContext`flag}, 
                    TagBox[
                    
                    DynamicBox[GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}},
                    
                    ImageSizeCache->{{6.1800000000000015`, 
                    352.81999999999994`}, {-176.10719999999995`, 
                    170.53280000000004`}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                    AllowKernelInitialization->False,
                    UnsavedVariables:>{$CellContext`flag}]],
                    
                    DefaultBaseStyle->{
                    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]},
                    FrameTicks->None], 3->
                    GraphicsBox[
                    NamespaceBox["NetworkGraphics",
                    DynamicModuleBox[{Typeset`graph = HoldComplete[
                    Graph[{{1}, {{
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 3], 1}}, {{
                    DirectedEdge[1, 3], 2}}, {{
                    DirectedEdge[1, 3], 3}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 2}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 3}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 2}}, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 1], 2}}, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 1}}, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 2}}, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 1], 2}}, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 1}}, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 2}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 1}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 2}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 2], 2}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 2}, {
                    DirectedEdge[3, 1], 1}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 2}, {
                    DirectedEdge[3, 1], 2}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 2}, {
                    DirectedEdge[3, 2], 2}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 3}, {
                    DirectedEdge[3, 1], 1}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 3}, {
                    DirectedEdge[3, 1], 2}}, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 3}, {
                    DirectedEdge[3, 2], 2}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 2}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 3}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 1}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 2}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 3}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 1], 1}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 2}}, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 3}}, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 2}}, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 3}}, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 1}}, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 2}}, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 3}}, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 1], 1}}, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 2}}, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 3}}, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 2], 1}}, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 2}}, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 3}}, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 1}}, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 2}}, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 3}}, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 1], 1}}, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 2}}, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 3}}}, {
                    Null, {{1, 2}, {1, 3}, {1, 4}, {1, 5}, {2, 6}, {2, 7}, {2,
                     8}, {3, 9}, {3, 10}, {3, 11}, {4, 12}, {4, 13}, {4, 
                    14}, {5, 15}, {5, 16}, {5, 17}, {6, 18}, {6, 19}, {6, 
                    20}, {7, 21}, {7, 22}, {7, 23}, {8, 24}, {8, 25}, {8, 
                    26}, {9, 27}, {9, 28}, {9, 29}, {10, 30}, {10, 31}, {10, 
                    32}, {11, 33}, {11, 34}, {11, 35}, {12, 36}, {12, 37}, {
                    12, 38}, {13, 39}, {13, 40}, {13, 41}, {14, 42}, {14, 
                    43}, {14, 44}, {15, 45}, {15, 46}, {15, 47}, {16, 48}, {
                    16, 49}, {16, 50}, {17, 51}, {17, 52}, {17, 53}}}, {
                    GraphLayout -> "RadialEmbedding", 
                    VertexShapeFunction -> {{{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 3}} -> Automatic, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 3}} -> Automatic, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 2], 2}} -> Automatic, {{
                    DirectedEdge[1, 2], 1}} -> Automatic, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 2}, {
                    DirectedEdge[3, 2], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}} -> Automatic, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 3}, {
                    DirectedEdge[3, 1], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 3}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> Automatic, {1} -> 
                    Automatic, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 3}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 3}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 2}} -> Automatic, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 1], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 1], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 3}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 1], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 3}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> Automatic, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}} -> Automatic, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 3}, {
                    DirectedEdge[3, 2], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 3}} -> Automatic, {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 1], 1}} -> Automatic, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 3}} -> Automatic, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 2}, {
                    DirectedEdge[3, 1], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 1], 1}} -> Automatic, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 2}, {
                    DirectedEdge[3, 1], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 2}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 2}} -> Automatic, {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 3}, {
                    DirectedEdge[3, 1], 1}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}} -> Automatic, {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 3}} -> Automatic}, 
                    VertexSize -> {0.2}, VertexStyle -> {{{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 2}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 2}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 3}, {
                    DirectedEdge[3, 1], 2}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 3}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 2}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 1}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 1], 2}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 2], 2}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 2}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 2}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 3}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 1], 1}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 3}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 2}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 2}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 2}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 3}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 2], 1}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 3], 2}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 2}, {
                    DirectedEdge[3, 1], 2}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 3}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 2}, {
                    DirectedEdge[3, 1], 1}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 2], 1}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 2}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 1}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 3], 3}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 2}, {
                    DirectedEdge[3, 2], 2}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 3}, {
                    DirectedEdge[3, 1], 1}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 1], 2}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 3}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 3}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 1}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}, {
                    DirectedEdge[3, 1], 1}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 3}, {
                    DirectedEdge[3, 2], 2}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 3], 3}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 2}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 2], 1}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 2}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 2}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 1}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 3}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 2}} -> RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], {{
                    DirectedEdge[1, 2], 1}, {
                    DirectedEdge[2, 3], 1}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 3], 2}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {1} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 1}, {
                    DirectedEdge[2, 1], 1}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 3], 1}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 1], 1}} -> RGBColor[
                    Rational[4, 5], 0, 0], {{
                    DirectedEdge[1, 3], 2}, {
                    DirectedEdge[3, 1], 2}, {
                    DirectedEdge[1, 3], 3}} -> RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], {{
                    DirectedEdge[1, 3], 3}, {
                    DirectedEdge[3, 2], 2}, {
                    DirectedEdge[2, 1], 1}} -> RGBColor[
                    Rational[4, 5], 0, 0]}}]], Typeset`boxes, 
                    Typeset`boxes$s2d = GraphicsGroupBox[{{
                    Directive[
                    Opacity[0.7], 
                    Hue[0.6, 0.7, 0.5]], 
                    LineBox[{{
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$2", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$3", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$4", Automatic, Center]}, {
                    DynamicLocation["VertexID$1", Automatic, Center], 
                    DynamicLocation["VertexID$5", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$6", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$7", Automatic, Center]}, {
                    DynamicLocation["VertexID$2", Automatic, Center], 
                    DynamicLocation["VertexID$8", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$9", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$10", Automatic, Center]}, {
                    DynamicLocation["VertexID$3", Automatic, Center], 
                    DynamicLocation["VertexID$11", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$12", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$13", Automatic, Center]}, {
                    DynamicLocation["VertexID$4", Automatic, Center], 
                    DynamicLocation["VertexID$14", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$15", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$16", Automatic, Center]}, {
                    DynamicLocation["VertexID$5", Automatic, Center], 
                    DynamicLocation["VertexID$17", Automatic, Center]}, {
                    DynamicLocation["VertexID$6", Automatic, Center], 
                    DynamicLocation["VertexID$18", Automatic, Center]}, {
                    DynamicLocation["VertexID$6", Automatic, Center], 
                    DynamicLocation["VertexID$19", Automatic, Center]}, {
                    DynamicLocation["VertexID$6", Automatic, Center], 
                    DynamicLocation["VertexID$20", Automatic, Center]}, {
                    DynamicLocation["VertexID$7", Automatic, Center], 
                    DynamicLocation["VertexID$21", Automatic, Center]}, {
                    DynamicLocation["VertexID$7", Automatic, Center], 
                    DynamicLocation["VertexID$22", Automatic, Center]}, {
                    DynamicLocation["VertexID$7", Automatic, Center], 
                    DynamicLocation["VertexID$23", Automatic, Center]}, {
                    DynamicLocation["VertexID$8", Automatic, Center], 
                    DynamicLocation["VertexID$24", Automatic, Center]}, {
                    DynamicLocation["VertexID$8", Automatic, Center], 
                    DynamicLocation["VertexID$25", Automatic, Center]}, {
                    DynamicLocation["VertexID$8", Automatic, Center], 
                    DynamicLocation["VertexID$26", Automatic, Center]}, {
                    DynamicLocation["VertexID$9", Automatic, Center], 
                    DynamicLocation["VertexID$27", Automatic, Center]}, {
                    DynamicLocation["VertexID$9", Automatic, Center], 
                    DynamicLocation["VertexID$28", Automatic, Center]}, {
                    DynamicLocation["VertexID$9", Automatic, Center], 
                    DynamicLocation["VertexID$29", Automatic, Center]}, {
                    DynamicLocation["VertexID$10", Automatic, Center], 
                    DynamicLocation["VertexID$30", Automatic, Center]}, {
                    DynamicLocation["VertexID$10", Automatic, Center], 
                    DynamicLocation["VertexID$31", Automatic, Center]}, {
                    DynamicLocation["VertexID$10", Automatic, Center], 
                    DynamicLocation["VertexID$32", Automatic, Center]}, {
                    DynamicLocation["VertexID$11", Automatic, Center], 
                    DynamicLocation["VertexID$33", Automatic, Center]}, {
                    DynamicLocation["VertexID$11", Automatic, Center], 
                    DynamicLocation["VertexID$34", Automatic, Center]}, {
                    DynamicLocation["VertexID$11", Automatic, Center], 
                    DynamicLocation["VertexID$35", Automatic, Center]}, {
                    DynamicLocation["VertexID$12", Automatic, Center], 
                    DynamicLocation["VertexID$36", Automatic, Center]}, {
                    DynamicLocation["VertexID$12", Automatic, Center], 
                    DynamicLocation["VertexID$37", Automatic, Center]}, {
                    DynamicLocation["VertexID$12", Automatic, Center], 
                    DynamicLocation["VertexID$38", Automatic, Center]}, {
                    DynamicLocation["VertexID$13", Automatic, Center], 
                    DynamicLocation["VertexID$39", Automatic, Center]}, {
                    DynamicLocation["VertexID$13", Automatic, Center], 
                    DynamicLocation["VertexID$40", Automatic, Center]}, {
                    DynamicLocation["VertexID$13", Automatic, Center], 
                    DynamicLocation["VertexID$41", Automatic, Center]}, {
                    DynamicLocation["VertexID$14", Automatic, Center], 
                    DynamicLocation["VertexID$42", Automatic, Center]}, {
                    DynamicLocation["VertexID$14", Automatic, Center], 
                    DynamicLocation["VertexID$43", Automatic, Center]}, {
                    DynamicLocation["VertexID$14", Automatic, Center], 
                    DynamicLocation["VertexID$44", Automatic, Center]}, {
                    DynamicLocation["VertexID$15", Automatic, Center], 
                    DynamicLocation["VertexID$45", Automatic, Center]}, {
                    DynamicLocation["VertexID$15", Automatic, Center], 
                    DynamicLocation["VertexID$46", Automatic, Center]}, {
                    DynamicLocation["VertexID$15", Automatic, Center], 
                    DynamicLocation["VertexID$47", Automatic, Center]}, {
                    DynamicLocation["VertexID$16", Automatic, Center], 
                    DynamicLocation["VertexID$48", Automatic, Center]}, {
                    DynamicLocation["VertexID$16", Automatic, Center], 
                    DynamicLocation["VertexID$49", Automatic, Center]}, {
                    DynamicLocation["VertexID$16", Automatic, Center], 
                    DynamicLocation["VertexID$50", Automatic, Center]}, {
                    DynamicLocation["VertexID$17", Automatic, Center], 
                    DynamicLocation["VertexID$51", Automatic, Center]}, {
                    DynamicLocation["VertexID$17", Automatic, Center], 
                    DynamicLocation["VertexID$52", Automatic, Center]}, {
                    DynamicLocation["VertexID$17", Automatic, Center], 
                    DynamicLocation["VertexID$53", Automatic, Center]}}]}, {
                    Directive[
                    Hue[0.6, 0.2, 0.8], 
                    EdgeForm[
                    Directive[
                    GrayLevel[0], 
                    Opacity[0.7]]]], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{2.76698500973869, 2.76698500973869}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$1"], 
                    TagBox[
                    StyleBox[
                    DiskBox[{2.112309149161229, 3.421660870316151}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$2"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{2.1123091491612285`, 2.112309149161229}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$3"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{3.421660870316151, 2.1123091491612285`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$4"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{3.4216608703161513`, 3.421660870316151}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$5"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{2.28772901730711, 4.5555927233251925`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$6"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1.4576332885837677`, 4.076336730893612}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$7"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.9783772961521879, 3.2462410021702715`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$8"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.9783772961521873, 2.2877290173071105`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$9"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1.4576332885837673`, 1.4576332885837677`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$10"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{2.28772901730711, 0.9783772961521875}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$11"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{3.2462410021702692`, 0.9783772961521873}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$12"], 
                    TagBox[
                    StyleBox[
                    DiskBox[{4.076336730893614, 1.4576332885837686`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$13"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{4.5555927233251925`, 2.28772901730711}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$14"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{4.5555927233251925`, 3.2462410021702692`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$15"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{4.076336730893612, 4.076336730893613}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$16"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{3.24624100217027, 4.5555927233251925`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$17"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{2.5249051892403864`, 5.53397001947738}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$18"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{2.0481010210913193`, 5.449896580118444}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$19"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1.5931397791644533`, 5.28430423031228}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$20"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1.1738452305742377`, 5.042224409813977}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$21"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.8029574280063074, 4.731012591471075}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$22"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.4917456096634054, 4.3601247889031445`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$23"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.24966578916510107`, 3.940830240312928}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$24"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.08407343935893685, 3.4858689983860622`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$25"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{4.440892098500626*^-16, 3.009064830236996}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$26"], 
                    TagBox[
                    StyleBox[
                    DiskBox[{0., 2.524905189240387}, 0.04841596409966066], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$27"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.08407343935893596, 2.0481010210913206`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$28"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.2496657891650993, 1.5931397791644544`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$29"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.4917456096634032, 1.1738452305742377`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$30"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{0.8029574280063063, 0.8029574280063068}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$31"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1.1738452305742364`, 0.4917456096634045}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$32"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{1.5931397791644515`, 0.24966578916510107`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$33"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{2.0481010210913175`, 0.08407343935893685}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$34"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{2.5249051892403833`, 4.440892098500626*^-16}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$35"], 
                    TagBox[
                    StyleBox[
                    DiskBox[{3.009064830236993, 0.}, 0.04841596409966066], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$36"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{3.4858689983860587`, 0.08407343935893596}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$37"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{3.940830240312925, 0.2496657891650993}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$38"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{4.360124788903143, 0.4917456096634041}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$39"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{4.731012591471073, 0.8029574280063063}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$40"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{5.042224409813976, 1.173845230574236}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$41"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{5.28430423031228, 1.5931397791644537`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$42"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{5.449896580118444, 2.0481010210913198`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$43"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{5.53397001947738, 2.5249051892403855`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$44"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{5.53397001947738, 3.009064830236993}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[46, 51], 
                    Rational[193, 255], 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$45"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{5.449896580118444, 3.4858689983860587`}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$46"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{5.28430423031228, 3.940830240312925}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$47"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{5.042224409813976, 4.360124788903143}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$48"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{4.731012591471074, 4.731012591471073}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$49"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{4.360124788903144, 5.042224409813975}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$50"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{3.940830240312926, 5.28430423031228}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[4, 5], 0, 0], StripOnInput -> False], 
                    "DynamicName", BoxID -> "VertexID$51"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{3.48586899838606, 5.449896580118444}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$52"], 
                    TagBox[
                    StyleBox[
                    
                    DiskBox[{3.0090648302369942`, 5.53397001947738}, 
                    0.04841596409966066], 
                    RGBColor[
                    Rational[12, 17], 
                    Rational[82, 255], 
                    Rational[4, 5]], StripOnInput -> False], "DynamicName", 
                    BoxID -> "VertexID$53"]}}], $CellContext`flag}, 
                    TagBox[
                    
                    DynamicBox[GraphComputation`NetworkGraphicsBox[
                    3, Typeset`graph, Typeset`boxes, $CellContext`flag], {
                    CachedValue :> Typeset`boxes, SingleEvaluation -> True, 
                    SynchronousUpdating -> False, 
                    TrackedSymbols :> {$CellContext`flag}}],
                    MouseAppearanceTag["NetworkGraphics"]],
                    AllowKernelInitialization->False,
                    UnsavedVariables:>{$CellContext`flag}]],
                    
                    DefaultBaseStyle->{
                    "NetworkGraphics", FrontEnd`GraphicsHighlightColor -> 
                    Hue[0.8, 1., 0.6]},
                    FrameTicks->None]}, Dynamic[$CellContext`i5$$],
                    Alignment->Automatic,
                    ImageSize->Scaled[1.]],
                   Identity,
                   Editable->True,
                   Selectable->True],
                  ImageMargins->10],
                 Deployed->False,
                 StripOnInput->False,
                 ScriptLevel->0,
                 GraphicsBoxOptions->{PreserveImageOptions->True},
                 Graphics3DBoxOptions->{PreserveImageOptions->True}],
                Identity,
                Editable->False,
                Selectable->False],
               Alignment->{Left, Center},
               Background->GrayLevel[1],
               Frame->1,
               FrameStyle->GrayLevel[0, 0.2],
               ItemSize->Automatic,
               StripOnInput->False]}
            },
            AutoDelete->False,
            
            GridBoxAlignment->{
             "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Top}},
               "RowsIndexed" -> {}},
            
            GridBoxDividers->{
             "Columns" -> {{False}}, "ColumnsIndexed" -> {}, 
              "Rows" -> {{False}}, "RowsIndexed" -> {}},
            
            GridBoxItemSize->{
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
            GridBoxSpacings->{"Columns" -> {
                Offset[0.7], {
                 Offset[0.5599999999999999]}, 
                Offset[0.7]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.4], {
                 Offset[0.8]}, 
                Offset[0.4]}, "RowsIndexed" -> {}}], If[
            CurrentValue["SelectionOver"], 
            Manipulate`Dump`ReadControllerState[
             Map[Manipulate`Dump`updateOneVar[#, 
               CurrentValue["PreviousFormatTime"], 
               CurrentValue["CurrentFormatTime"]]& , {
               
               Manipulate`Dump`controllerLink[{$CellContext`i5$$, \
$CellContext`i5$20862$$}, "X1", 
                If["DefaultAbsolute", True, "JB1"], False, {1, 3, 1}, 3, 
                1.]}], 
             
             CurrentValue[{
              "ControllerData", {
               "Gamepad", "Joystick", "Multi-Axis Controller"}}], {}]],
           ImageSizeCache->{526., {209.375, 218.125}}],
          DefaultBaseStyle->{},
          FrameMargins->{{5, 5}, {5, 5}}],
         BaselinePosition->Automatic,
         ImageMargins->0],
        Deinitialization:>None,
        DynamicModuleValues:>{},
        SynchronousInitialization->True,
        UnsavedVariables:>{Typeset`initDone$$},
        UntrackedVariables:>{Typeset`size$$}], "ListAnimate",
       Deployed->True,
       StripOnInput->False],
      Manipulate`InterpretManipulate[1]]}
   },
   AutoDelete->False,
   GridBoxAlignment->{"Columns" -> {Right, Left}},
   GridBoxItemSize->{"Columns" -> {
       Scaled[0.5], 
       Scaled[0.5]}},
   GridBoxSpacings->{"Columns" -> {{
        Scaled[0.1]}}, "Rows" -> {{0}}}],
  "Grid"]], "Output",
 CellChangeTimes->{
  3.584299812517757*^9, 3.584299866099429*^9, {3.584299906346855*^9, 
   3.584300060553175*^9}, 3.5843005349856873`*^9, 3.584452337008058*^9, 
   3.584452596320166*^9, 3.584453627933475*^9, 3.584453762471374*^9, 
   3.5844539259005823`*^9, {3.584455305961988*^9, 3.5844553602496758`*^9}, 
   3.584455445498825*^9, 3.5844555107601767`*^9, 3.584476527280594*^9, 
   3.5844769107046347`*^9, 3.584477765154737*^9, 3.5847986055536833`*^9, 
   3.584798916398961*^9, 3.584904964880804*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["How did we discover and prove this connection?", "Section",
 CellChangeTimes->{{3.583504537673525*^9, 3.583504582132621*^9}, {
  3.583509437760704*^9, 3.583509440334321*^9}, {3.583604913812951*^9, 
  3.5836049144171343`*^9}, {3.583604949342388*^9, 3.583604952190271*^9}, {
  3.583611444032045*^9, 3.5836114865967817`*^9}, {3.5836753545761843`*^9, 
  3.583675361473876*^9}, {3.583678168528171*^9, 3.583678183381459*^9}, {
  3.583687813332683*^9, 3.5836878140960913`*^9}}],

Cell[CellGroupData[{

Cell["\<\
Comes from Markov chain property \[OpenCurlyDoubleQuote]reversibility\
\[CloseCurlyDoubleQuote]\
\>", "Item",
 CellChangeTimes->{{3.583603153527471*^9, 3.5836031912009563`*^9}, {
  3.583604909628951*^9, 3.583604921172461*^9}, {3.583605049452754*^9, 
  3.583605149692397*^9}, {3.583611519709037*^9, 3.583611520364934*^9}, {
  3.583611614267494*^9, 3.583611621170806*^9}, {3.5836117425548553`*^9, 
  3.583611750895398*^9}, {3.583675364823827*^9, 3.583675382895338*^9}, {
  3.583678186228922*^9, 3.5836781970588617`*^9}, {3.583687776296733*^9, 
  3.583687776302123*^9}, {3.584105640363225*^9, 3.5841056437478447`*^9}}],

Cell[TextData[{
 "Reversible Markov chains satisfy the ",
 StyleBox["detailed balance equations",
  FontSlant->"Italic"],
 ": ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{
     SubscriptBox["\[Pi]", "i"], 
     SubscriptBox["P", 
      RowBox[{"i", ",", " ", "j"}]]}], "=", " ", 
    RowBox[{
     SubscriptBox["\[Pi]", "j"], 
     SubscriptBox["P", 
      RowBox[{"j", ",", "i"}]]}]}], TraditionalForm]]]
}], "Item",
 CellChangeTimes->{{3.583603153527471*^9, 3.5836031912009563`*^9}, {
  3.583604909628951*^9, 3.583604921172461*^9}, {3.583605049452754*^9, 
  3.583605149692397*^9}, {3.583611519709037*^9, 3.583611520364934*^9}, {
  3.583611614267494*^9, 3.583611621170806*^9}, {3.5836117425548553`*^9, 
  3.583611750895398*^9}, {3.583675364823827*^9, 3.583675382895338*^9}, {
  3.583678186228922*^9, 3.5836781970588617`*^9}, {3.583687776296733*^9, 
  3.583687807806933*^9}, {3.5841905614485807`*^9, 3.584190582780612*^9}, {
  3.584213893953373*^9, 3.584213897055828*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"rightArrw", " ", "=", " ", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Arrowheads", "[", ".1", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{
             RowBox[{"-", "1.5"}], ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{"1.5", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"shortRightArrw", " ", "=", " ", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Arrowheads", "[", ".1", "]"}], ",", 
        RowBox[{"Arrow", "[", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"0", ",", "0"}], "}"}], ",", 
           RowBox[{"{", 
            RowBox[{".3", ",", "0"}], "}"}]}], "}"}], "]"}]}], "}"}], "]"}]}],
     ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ro", " ", "=", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"{", 
        RowBox[{"0", ",", "2", ",", "1"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"3", ",", "0", ",", "0"}], "}"}], ",", 
       RowBox[{"{", 
        RowBox[{"2", ",", "0", ",", "1"}], "}"}]}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"P", " ", "=", " ", 
     RowBox[{"ro", "/", "3"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"markovChain", " ", "=", " ", 
     RowBox[{"MarkovProcessFromOrbigraph", "@", "ro"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ro", " ", "=", " ", 
     RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"AdjacencyOrbigraph", "@", "ro"}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"ImageSize", "\[Rule]", 
          RowBox[{"Scaled", "[", ".3", "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"VertexSize", "\[Rule]", ".1"}], ",", "\[IndentingNewLine]", 
         
         RowBox[{"VertexStyle", "\[Rule]", "\[IndentingNewLine]", 
          RowBox[{"{", "\[IndentingNewLine]", 
           RowBox[{
            RowBox[{"1", "\[Rule]", " ", "Red"}], ",", " ", 
            "\[IndentingNewLine]", 
            RowBox[{"2", "\[Rule]", " ", "Yellow"}], ",", 
            "\[IndentingNewLine]", 
            RowBox[{"3", "\[Rule]", "Purple"}]}], "\[IndentingNewLine]", 
           "}"}]}]}], "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
      "]"}]}], ";"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"totalCounts", " ", "=", " ", "0"}], ";"}], "\[IndentingNewLine]",
    "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"GenerateRandomWalk", "[", 
     RowBox[{"chain_DiscreteMarkovProcess", ",", " ", "len_Integer"}], "]"}], 
    " ", ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"counts", " ", ",", 
        RowBox[{"walk", "=", " ", 
         RowBox[{"{", "}"}]}], ",", " ", 
        RowBox[{"cur", "=", "1"}], ",", "next", ",", "i", ",", "  ", 
        RowBox[{"G", " ", "=", " ", 
         RowBox[{"Graph", "@", "chain"}]}], ",", " ", 
        RowBox[{"T", "=", 
         RowBox[{"Normal", "@", 
          RowBox[{"MarkovProcessProperties", "[", 
           RowBox[{"chain", ",", " ", "\"\<TransitionMatrix\>\""}], 
           "]"}]}]}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"cur", " ", "=", " ", 
        RowBox[{"RandomChoice", "[", 
         RowBox[{"VertexList", "@", "G"}], "]"}]}], ";", 
       "\[IndentingNewLine]", 
       RowBox[{"counts", " ", "=", " ", 
        RowBox[{"{", 
         RowBox[{"ConstantArray", "[", 
          RowBox[{"0", ",", " ", 
           RowBox[{"VertexCount", "@", "G"}]}], "]"}], "}"}]}], ";", 
       "\[IndentingNewLine]", "\[IndentingNewLine]", " ", 
       RowBox[{"For", "[", 
        RowBox[{
         RowBox[{"i", " ", "=", " ", "0"}], ",", " ", 
         RowBox[{"i", " ", "<", " ", "len"}], ",", " ", 
         RowBox[{"i", "++"}], ",", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"next", " ", "=", " ", 
           RowBox[{"RandomChoice", "[", 
            RowBox[{
             RowBox[{"Cases", "[", 
              RowBox[{
               RowBox[{
               "T", "\[LeftDoubleBracket]", "cur", "\[RightDoubleBracket]"}], 
               ",", " ", 
               RowBox[{"x_", "/;", 
                RowBox[{"x", " ", "\[NotEqual]", " ", "0"}]}]}], "]"}], 
             "\[Rule]", " ", 
             RowBox[{"Flatten", "[", 
              RowBox[{
               RowBox[{"Position", "[", 
                RowBox[{
                 RowBox[{
                 "T", "\[LeftDoubleBracket]", "cur", 
                  "\[RightDoubleBracket]"}], ",", " ", 
                 RowBox[{"x_", "/;", 
                  RowBox[{"x", " ", "\[NotEqual]", " ", "0"}]}]}], "]"}], ",",
                "1"}], "]"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"walk", " ", "=", " ", 
           RowBox[{"Append", "[", 
            RowBox[{"walk", ",", " ", "next"}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{"counts", " ", "=", " ", 
           RowBox[{"Append", "[", 
            RowBox[{"counts", ",", " ", 
             RowBox[{"Last", "@", "counts"}]}], "]"}]}], ";", 
          "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"counts", "\[LeftDoubleBracket]", 
            RowBox[{
             RowBox[{"Length", "@", "counts"}], ",", "next"}], 
            "\[RightDoubleBracket]"}], "++"}], ";", " ", 
          "\[IndentingNewLine]", 
          RowBox[{"cur", " ", "=", " ", "next"}], ";"}]}], 
        "\[IndentingNewLine]", "]"}], ";", "\[IndentingNewLine]", 
       "\[IndentingNewLine]", 
       RowBox[{"Return", "[", 
        RowBox[{"{", 
         RowBox[{"walk", ",", " ", "counts"}], "}"}], "]"}], ";"}]}], 
     "\[IndentingNewLine]", "]"}]}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"w", " ", "=", " ", 
     RowBox[{"GenerateRandomWalk", "[", 
      RowBox[{"markovChain", ",", " ", "5000"}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Grid", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"HighlightGraph", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"SetProperty", "[", "\[IndentingNewLine]", 
              RowBox[{"ro", ",", " ", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"EdgeWeight", "\[Rule]", " ", 
                  RowBox[{"N", "[", 
                   RowBox[{
                    RowBox[{"PropertyValue", "[", 
                    RowBox[{"ro", ",", " ", "EdgeWeight"}], "]"}], "/", "3"}],
                    "]"}]}], ",", "\[IndentingNewLine]", 
                 RowBox[{"EdgeLabelStyle", "\[Rule]", " ", "10"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"EdgeStyle", "\[Rule]", "Medium"}], ",", " ", 
                 "\[IndentingNewLine]", 
                 RowBox[{"VertexSize", "\[Rule]", ".3"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"ImageSize", "\[Rule]", 
                  RowBox[{"Scaled", "[", "1.0", "]"}]}]}], 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "]"}], 
             "\[IndentingNewLine]", ",", " ", 
             RowBox[{"{", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{
                 RowBox[{"(", 
                  RowBox[{"First", "@", "w"}], ")"}], "\[LeftDoubleBracket]", 
                 "t", "\[RightDoubleBracket]"}], ",", " ", 
                RowBox[{"Lighter", "@", "Pink"}]}], "]"}], "}"}]}], "]"}], 
           ",", "\[IndentingNewLine]", 
           RowBox[{"Column", "[", 
            RowBox[{"{", "\[IndentingNewLine]", 
             RowBox[{
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"StringJoin", "@", 
                 RowBox[{"{", 
                  RowBox[{"\"\<\[Pi] = [\>\"", ",", 
                   RowBox[{"Riffle", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{
                    RowBox[{"ToString", "@", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{"#", ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], "&"}], "/@", 
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Last", "@", "w"}], ")"}], "\[LeftDoubleBracket]",
                     "t", "\[RightDoubleBracket]"}], "/", "t"}], "]"}]}], 
                    ",", "\"\<, \>\"", ",", " ", "2"}], "]"}], ",", " ", 
                   "\"\<]\>\""}], "}"}]}], ",", " ", "\"\<Subsubsection\>\"", 
                ",", 
                RowBox[{"FontSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}], ",", 
              "\[IndentingNewLine]", 
              RowBox[{"Style", "[", 
               RowBox[{
                RowBox[{"StringJoin", "@", 
                 RowBox[{"{", 
                  RowBox[{"\"\<Steps: \>\"", ",", 
                   RowBox[{"ToString", "@", "t"}]}], "}"}]}], ",", " ", 
                "\"\<Subsubsection\>\"", ",", 
                RowBox[{"FontSize", "\[Rule]", 
                 RowBox[{"Scaled", "[", ".015", "]"}]}]}], "]"}]}], 
             "\[IndentingNewLine]", "}"}], "\[IndentingNewLine]", "]"}]}], 
          "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
         RowBox[{"{", "\[IndentingNewLine]", 
          RowBox[{
           RowBox[{"Grid", "[", "\[IndentingNewLine]", 
            RowBox[{
             RowBox[{"{", "\[IndentingNewLine]", 
              RowBox[{
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Pi]\), \
\(1\)]\)\!\(\*SubscriptBox[\(P\), \(1, 2\)]\) = \!\(\*SubscriptBox[\(\[Pi]\), \
\(2\)]\)\!\(\*SubscriptBox[\(P\), \(2, 1\)]\)\>\"", ",", " ", 
                   "\"\<Subsubsection\>\"", ",", 
                   RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}], ",", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                  "\"\<\!\(\*SubscriptBox[\(\[Pi]\), \
\(1\)]\)\!\(\*SubscriptBox[\(P\), \(1, 3\)]\) = \!\(\*SubscriptBox[\(\[Pi]\), \
\(3\)]\)\!\(\*SubscriptBox[\(P\), \(3, 1\)]\)\>\"", ",", " ", 
                   "\"\<Subsubsection\>\"", ",", 
                   RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}]}], 
                "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
               RowBox[{"{", "\[IndentingNewLine]", 
                RowBox[{
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"StringJoin", "@", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "@", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", " ", "\[GreaterEqual]", " ", "4500"}], ",", 
                    " ", ".31", ",", " ", 
                    RowBox[{
                    RowBox[{"P", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "2"}], "\[RightDoubleBracket]"}], " ", 
                    "*", " ", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Last", "@", "w"}], ")"}], "\[LeftDoubleBracket]",
                     "t", "\[RightDoubleBracket]"}], "/", "t"}], "]"}], 
                    "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", "\"\< = \>\"", ",", " ", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", " ", "\[GreaterEqual]", " ", "4500"}], ",", 
                    " ", ".31", ",", " ", 
                    RowBox[{
                    RowBox[{"P", "\[LeftDoubleBracket]", 
                    RowBox[{"2", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
                    "*", " ", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Last", "@", "w"}], ")"}], "\[LeftDoubleBracket]",
                     "t", "\[RightDoubleBracket]"}], "/", "t"}], "]"}], 
                    "\[LeftDoubleBracket]", "2", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}]}], ",", 
                   "\[IndentingNewLine]", "\"\<Subsubsection\>\"", ",", 
                   RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}], ",", 
                 "\[IndentingNewLine]", 
                 RowBox[{"Style", "[", 
                  RowBox[{
                   RowBox[{"StringJoin", "@", 
                    RowBox[{"{", "\[IndentingNewLine]", 
                    RowBox[{
                    RowBox[{"ToString", "@", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"If", "[", 
                    RowBox[{
                    RowBox[{"t", " ", "\[GreaterEqual]", " ", "4500"}], ",", 
                    " ", ".16", ",", " ", 
                    RowBox[{
                    RowBox[{"P", "\[LeftDoubleBracket]", 
                    RowBox[{"1", ",", "3"}], "\[RightDoubleBracket]"}], " ", 
                    "*", " ", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Last", "@", "w"}], ")"}], "\[LeftDoubleBracket]",
                     "t", "\[RightDoubleBracket]"}], "/", "t"}], "]"}], 
                    "\[LeftDoubleBracket]", "1", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}], ",", 
                    "\[IndentingNewLine]", "\"\< = \>\"", ",", " ", 
                    "\[IndentingNewLine]", 
                    RowBox[{"ToString", "@", 
                    RowBox[{"NumberForm", "[", 
                    RowBox[{
                    RowBox[{"If", "[", " ", 
                    RowBox[{
                    RowBox[{"t", " ", "\[GreaterEqual]", " ", "4500"}], ",", 
                    " ", ".16", ",", " ", 
                    RowBox[{
                    RowBox[{"P", "\[LeftDoubleBracket]", 
                    RowBox[{"3", ",", "1"}], "\[RightDoubleBracket]"}], " ", 
                    "*", " ", 
                    RowBox[{
                    RowBox[{"N", "[", 
                    RowBox[{
                    RowBox[{
                    RowBox[{"(", 
                    RowBox[{"Last", "@", "w"}], ")"}], "\[LeftDoubleBracket]",
                     "t", "\[RightDoubleBracket]"}], "/", "t"}], "]"}], 
                    "\[LeftDoubleBracket]", "3", 
                    "\[RightDoubleBracket]"}]}]}], "]"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"2", ",", "2"}], "}"}]}], "]"}]}]}], 
                    "\[IndentingNewLine]", "}"}]}], ",", 
                   "\[IndentingNewLine]", "\"\<Subsubsection\>\"", ",", 
                   "\[IndentingNewLine]", 
                   RowBox[{"FontSize", "\[Rule]", 
                    RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}]}], 
                "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", "}"}], 
             ",", "\[IndentingNewLine]", 
             RowBox[{"Frame", "\[Rule]", "All"}], ",", "\[IndentingNewLine]", 
             
             RowBox[{"Spacings", "\[Rule]", 
              RowBox[{"{", 
               RowBox[{"3", ",", "1"}], "}"}]}], ",", "\[IndentingNewLine]", 
             RowBox[{"Alignment", "\[Rule]", "Center"}]}], 
            "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
           RowBox[{"Style", "[", 
            RowBox[{
             RowBox[{"MatrixForm", "[", 
              RowBox[{
               RowBox[{"Normal", "[", 
                RowBox[{"WeightedAdjacencyMatrix", "[", "ro", "]"}], "]"}], 
               " ", "/", " ", "3"}], "]"}], ",", " ", "\"\<Subsubsection\>\"",
              ",", 
             RowBox[{"FontSize", "\[Rule]", 
              RowBox[{"Scaled", "[", ".02", "]"}]}]}], "]"}]}], 
          "\[IndentingNewLine]", "}"}]}], "\[IndentingNewLine]", 
        "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"Alignment", "\[Rule]", " ", "Center"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ItemSize", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{"{", 
          RowBox[{
           RowBox[{"Scaled", "[", ".50", "]"}], ",", " ", 
           RowBox[{"Scaled", "[", ".50", "]"}]}], "}"}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"t", ",", " ", "1", ",", " ", 
       RowBox[{"Length", "@", 
        RowBox[{"First", "@", "w"}]}], ",", " ", "1"}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Alignment", "\[Rule]", "Center"}]}], "\[IndentingNewLine]", 
    "]"}], "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   "\[IndentingNewLine]"}]}]], "Input",
 CellOpen->False,
 CellChangeTimes->{{3.583504944724468*^9, 3.5835049592416162`*^9}, {
   3.5835049927540073`*^9, 3.583505053865456*^9}, {3.583505222942459*^9, 
   3.583505241869524*^9}, {3.5835054829201117`*^9, 3.583505569151123*^9}, {
   3.583505736571486*^9, 3.583505791465477*^9}, {3.583505966062635*^9, 
   3.58350597062294*^9}, {3.5835060884056*^9, 3.58350609657927*^9}, {
   3.58350634765458*^9, 3.58350642598237*^9}, {3.583506503115983*^9, 
   3.583506599627789*^9}, {3.583506975530591*^9, 3.58350701624997*^9}, {
   3.5835070866885147`*^9, 3.5835072337917957`*^9}, {3.583507382884967*^9, 
   3.583507581783242*^9}, {3.583507611928054*^9, 3.583507757178371*^9}, {
   3.583507801074963*^9, 3.583507912632885*^9}, {3.583507944307445*^9, 
   3.583508018584435*^9}, {3.5835089710368347`*^9, 3.5835089808353148`*^9}, {
   3.583509036635407*^9, 3.583509041090455*^9}, {3.583509077009577*^9, 
   3.58350908729753*^9}, {3.5835091294576683`*^9, 3.583509141560104*^9}, {
   3.583509248894765*^9, 3.583509253845396*^9}, {3.583509488665283*^9, 
   3.5835095038468847`*^9}, {3.583511423096323*^9, 3.583511565989129*^9}, {
   3.583513828523304*^9, 3.5835138470916357`*^9}, {3.5835143482647057`*^9, 
   3.5835143613602858`*^9}, {3.583514547106325*^9, 3.583514581296501*^9}, {
   3.5835146660939903`*^9, 3.583514688178154*^9}, {3.583514809012204*^9, 
   3.5835148537166433`*^9}, {3.583514911777981*^9, 3.583514938576725*^9}, {
   3.5835149967354383`*^9, 3.583515087119169*^9}, {3.583515161333404*^9, 
   3.5835152123477907`*^9}, {3.583515368944729*^9, 3.583515423168466*^9}, {
   3.583515457031969*^9, 3.583515474702992*^9}, {3.583515529454176*^9, 
   3.5835156287868147`*^9}, 3.58351569717947*^9, {3.583515751937457*^9, 
   3.583515765166383*^9}, {3.583515842954213*^9, 3.583515865390348*^9}, {
   3.583515897550774*^9, 3.583515905480852*^9}, {3.5835165467699413`*^9, 
   3.583516591806279*^9}, {3.583516680606122*^9, 3.5835167003583393`*^9}, {
   3.583517198428335*^9, 3.583517254564885*^9}, {3.5835175064851713`*^9, 
   3.583517581643581*^9}, {3.583517628732957*^9, 3.583517643689509*^9}, {
   3.583521833550868*^9, 3.5835218362706757`*^9}, {3.5835236927229137`*^9, 
   3.5835237037387667`*^9}, {3.58352460889541*^9, 3.583524611091569*^9}, {
   3.583524668813601*^9, 3.5835246706872253`*^9}, {3.5835247443577538`*^9, 
   3.583524881995575*^9}, {3.583524956938699*^9, 3.583524997448794*^9}, {
   3.5835250402165203`*^9, 3.583525195900112*^9}, {3.583525509647999*^9, 
   3.58352556753292*^9}, {3.5835256771322117`*^9, 3.583525740599876*^9}, {
   3.583526020236393*^9, 3.583526043483322*^9}, {3.5835260835152197`*^9, 
   3.583526145184979*^9}, {3.5835262240238247`*^9, 3.583526273165412*^9}, {
   3.583526443214428*^9, 3.583526472444624*^9}, {3.583526532074785*^9, 
   3.583526568012516*^9}, {3.583526603163302*^9, 3.583526663928062*^9}, {
   3.583526714086712*^9, 3.5835268056137667`*^9}, {3.583526840675075*^9, 
   3.583526890628715*^9}, {3.583526954115641*^9, 3.583527137566971*^9}, {
   3.583527222604545*^9, 3.583527320330392*^9}, {3.583527359370315*^9, 
   3.583527371993815*^9}, {3.5835274136648283`*^9, 3.583527640437421*^9}, {
   3.583528035288609*^9, 3.5835280653090677`*^9}, {3.5835281154766493`*^9, 
   3.583528179634451*^9}, {3.583528252521051*^9, 3.583528274608552*^9}, {
   3.583528387406331*^9, 3.58352842448392*^9}, {3.583528477612151*^9, 
   3.5835288453014307`*^9}, 3.583530379399987*^9, {3.58353069240977*^9, 
   3.583530709811276*^9}, {3.5835307878087997`*^9, 3.583530797476122*^9}, {
   3.583531386321269*^9, 3.583531795145163*^9}, {3.5835320674353943`*^9, 
   3.583532095834298*^9}, {3.583532128082847*^9, 3.5835321534596157`*^9}, {
   3.583532377128251*^9, 3.583532406332727*^9}, {3.583532452005969*^9, 
   3.583532457836699*^9}, {3.583532588658032*^9, 3.583532635203437*^9}, {
   3.583532679769361*^9, 3.583532725462553*^9}, {3.583534990723576*^9, 
   3.5835350099935093`*^9}, {3.583535041616453*^9, 3.583535125743266*^9}, {
   3.583535177669486*^9, 3.583535195093073*^9}, {3.583535229754916*^9, 
   3.583535248316104*^9}, {3.583535311242296*^9, 3.583535313085679*^9}, 
   3.583535360440584*^9, {3.583535406552835*^9, 3.583535436136731*^9}, {
   3.583535544167017*^9, 3.5835356204086742`*^9}, {3.5835357307467127`*^9, 
   3.5835357484648943`*^9}, {3.5835358234156523`*^9, 3.583535829602228*^9}, {
   3.58353593467024*^9, 3.5835359687767344`*^9}, {3.583536027835637*^9, 
   3.583536103497898*^9}, {3.583537603515522*^9, 3.583537679051919*^9}, {
   3.58359019173496*^9, 3.5835902214749413`*^9}, {3.583590273995901*^9, 
   3.5835903084980927`*^9}, {3.5835903597292233`*^9, 
   3.5835904180874147`*^9}, {3.583590483268821*^9, 3.583590484838483*^9}, 
   3.58359051787752*^9, {3.583590922874465*^9, 3.5835909575371113`*^9}, {
   3.5835910007219143`*^9, 3.583591002233374*^9}, {3.5835910415461283`*^9, 
   3.583591226189279*^9}, {3.583591283684677*^9, 3.5835913088443813`*^9}, 
   3.583591379834833*^9, {3.5835915177388277`*^9, 3.583591568836029*^9}, {
   3.583591745005522*^9, 3.583591881078197*^9}, {3.583591912759396*^9, 
   3.583591913392231*^9}, {3.583592009609057*^9, 3.5835920130196867`*^9}, {
   3.5835920848695593`*^9, 3.583592137060684*^9}, {3.583592173075921*^9, 
   3.583592194538849*^9}, {3.5835922563359613`*^9, 3.5835922722646723`*^9}, {
   3.5835923215833073`*^9, 3.5835923953440866`*^9}, 3.583592593811945*^9, {
   3.5835927656128817`*^9, 3.5835927657985153`*^9}, {3.583592799330533*^9, 
   3.58359294457218*^9}, {3.583593035030363*^9, 3.5835933066756153`*^9}, 
   3.583593708246862*^9, {3.583593738550124*^9, 3.583593739923765*^9}, {
   3.583593820135426*^9, 3.583593960071262*^9}, {3.583594325672365*^9, 
   3.583594584369133*^9}, {3.583594617715447*^9, 3.583594665699744*^9}, {
   3.583594717018062*^9, 3.5835947449287767`*^9}, {3.583594798981761*^9, 
   3.583594800999576*^9}, {3.583594854265675*^9, 3.583594934844824*^9}, {
   3.583601127602009*^9, 3.5836012265717897`*^9}, {3.583602068444725*^9, 
   3.5836020769246693`*^9}, {3.583602107196233*^9, 3.5836021080155993`*^9}, {
   3.5836021391383142`*^9, 3.58360216990254*^9}, {3.58360246241577*^9, 
   3.583602472796468*^9}, {3.5836025110302277`*^9, 3.58360263489089*^9}, {
   3.583602714359172*^9, 3.583602769488693*^9}, {3.583602867981946*^9, 
   3.5836029106827803`*^9}, {3.5836030121426086`*^9, 3.583603044337311*^9}, {
   3.583603083772376*^9, 3.58360309692288*^9}, {3.5836042338245687`*^9, 
   3.583604241991658*^9}, {3.5836042906584377`*^9, 3.583604311183337*^9}, {
   3.583604355897971*^9, 3.583604372288039*^9}, {3.583604412175*^9, 
   3.583604432679254*^9}, {3.583604706369153*^9, 3.583604741314386*^9}, {
   3.583604772574151*^9, 3.583604799371385*^9}, {3.583604833466195*^9, 
   3.583604835784227*^9}, {3.583604866539257*^9, 3.583604874402608*^9}, 
   3.583605166483511*^9, {3.583605245575007*^9, 3.583605320923502*^9}, {
   3.583605357193466*^9, 3.583605486989731*^9}, {3.583608078859827*^9, 
   3.583608160953828*^9}, 3.5836083545903*^9, {3.583608455892044*^9, 
   3.583608485641975*^9}, {3.583608591075652*^9, 3.583608601963703*^9}, {
   3.583608676028508*^9, 3.58360871682295*^9}, {3.583608837281521*^9, 
   3.5836088441018753`*^9}, {3.583609014683384*^9, 3.58360903722721*^9}, {
   3.583609089579075*^9, 3.583609138607018*^9}, {3.5836092168459578`*^9, 
   3.583609272732267*^9}, {3.5836094264726467`*^9, 3.583609480896968*^9}, {
   3.583609539065761*^9, 3.5836095779830008`*^9}, {3.5836099421206503`*^9, 
   3.583609997984088*^9}, {3.583610052521035*^9, 3.58361015862053*^9}, {
   3.5836102731098747`*^9, 3.5836103041535378`*^9}, {3.583610441862707*^9, 
   3.5836105226039352`*^9}, {3.583610566516078*^9, 3.583610967412826*^9}, {
   3.583611004579772*^9, 3.583611006350637*^9}, {3.5836117764832487`*^9, 
   3.5836118064047117`*^9}, {3.583611848074044*^9, 3.5836118972590837`*^9}, {
   3.58361201167624*^9, 3.5836120263903427`*^9}, {3.583612063284726*^9, 
   3.583612103873906*^9}, {3.5836121486850233`*^9, 3.5836121491367683`*^9}, {
   3.583612185131898*^9, 3.583612235843004*^9}, {3.583612266155593*^9, 
   3.5836123598047037`*^9}, {3.583612450799273*^9, 3.5836126129725657`*^9}, {
   3.583612649444406*^9, 3.583612659245757*^9}, {3.583612798723405*^9, 
   3.5836130569878187`*^9}, {3.583613184162347*^9, 3.58361326491588*^9}, {
   3.5836137652636223`*^9, 3.5836137697665567`*^9}, {3.583613869494088*^9, 
   3.583613916766377*^9}, {3.583614130329897*^9, 3.583614182535926*^9}, {
   3.583614223191633*^9, 3.583614360301526*^9}, {3.5836144464515343`*^9, 
   3.583614464996048*^9}, {3.58361461640648*^9, 3.583614661463748*^9}, {
   3.583614775082646*^9, 3.583614794483403*^9}, {3.583674893626588*^9, 
   3.583674998183098*^9}, {3.5836750758697653`*^9, 3.583675146509624*^9}, {
   3.5836751994072104`*^9, 3.583675298526833*^9}, {3.5836764090262957`*^9, 
   3.583676481383636*^9}, {3.583676548600483*^9, 3.583676548748131*^9}, {
   3.583676613567326*^9, 3.5836766413915653`*^9}, {3.583676682809504*^9, 
   3.583676704931024*^9}, {3.583676735013506*^9, 3.583676799455542*^9}, {
   3.583676906080701*^9, 3.5836769404670763`*^9}, {3.583677027032062*^9, 
   3.583677137608968*^9}, {3.5836771769495783`*^9, 3.5836773162990017`*^9}, {
   3.5836773501335506`*^9, 3.583677361137568*^9}, {3.5836774400790033`*^9, 
   3.5836776383375874`*^9}, {3.5836777339061193`*^9, 3.58367779190267*^9}, {
   3.583677877519021*^9, 3.58367796150695*^9}, {3.583677997194104*^9, 
   3.583677999201078*^9}, {3.583678119386209*^9, 3.583678125514632*^9}, {
   3.583678361187009*^9, 3.5836785942647953`*^9}, {3.5836786870021048`*^9, 
   3.583678705928645*^9}, {3.58367881565783*^9, 3.583678841084134*^9}, {
   3.58367887702275*^9, 3.583678944983087*^9}, {3.583679232635479*^9, 
   3.583679335655169*^9}, {3.583679366600268*^9, 3.5836793866464787`*^9}, {
   3.5836794658536377`*^9, 3.583679473403458*^9}, {3.583679527049088*^9, 
   3.583679540365937*^9}, {3.583679595815566*^9, 3.5836796192496433`*^9}, {
   3.5836796506575327`*^9, 3.583679656947229*^9}, {3.583679795615613*^9, 
   3.583679852623967*^9}, {3.583679889442295*^9, 3.583679910349654*^9}, {
   3.5836799618573303`*^9, 3.5836800369106293`*^9}, {3.583680068151997*^9, 
   3.5836800721920233`*^9}, {3.58368010645665*^9, 3.5836801429410267`*^9}, {
   3.583680210375046*^9, 3.583680246823821*^9}, {3.583680580005554*^9, 
   3.583680631187379*^9}, {3.583680700006166*^9, 3.583680707779031*^9}, {
   3.583680754915946*^9, 3.5836807680151033`*^9}, {3.583680856666069*^9, 
   3.583680915029519*^9}, {3.58368095100311*^9, 3.5836810857815437`*^9}, {
   3.583681144924734*^9, 3.583681149088915*^9}, {3.583681198010013*^9, 
   3.5836812391291037`*^9}, {3.583681311010866*^9, 3.5836813871058187`*^9}, {
   3.583681432343252*^9, 3.58368144689907*^9}, {3.583681484883464*^9, 
   3.583681552803913*^9}, {3.583681585497806*^9, 3.5836816062501793`*^9}, 
   3.583681655180058*^9, {3.583681709812937*^9, 3.583681820746499*^9}, {
   3.583681852505876*^9, 3.583682015354814*^9}, {3.5836820588903723`*^9, 
   3.583682060346836*^9}, {3.58368209576943*^9, 3.583682164660186*^9}, {
   3.5836822105277023`*^9, 3.583682223019555*^9}, {3.583682292439659*^9, 
   3.583682313064658*^9}, {3.583682362653328*^9, 3.583682381971726*^9}, {
   3.583682423797958*^9, 3.583682590978325*^9}, {3.583682733071864*^9, 
   3.5836827643343143`*^9}, {3.5836828004264917`*^9, 3.58368283163196*^9}, {
   3.583683020715406*^9, 3.583683295888502*^9}, {3.583686778660572*^9, 
   3.583686801101214*^9}, {3.58368686845372*^9, 3.583686893024583*^9}, {
   3.5836869230600557`*^9, 3.583687017689302*^9}, {3.58368707836311*^9, 
   3.583687079748101*^9}, {3.5836871150094337`*^9, 3.583687123178893*^9}, {
   3.583687177477149*^9, 3.583687253920505*^9}, {3.5836873270621433`*^9, 
   3.58368734781453*^9}, {3.583687391253746*^9, 3.5836875774145117`*^9}, {
   3.583687721878086*^9, 3.583687741210043*^9}, {3.583687934846437*^9, 
   3.583688475758307*^9}, 3.5836885877678823`*^9, {3.583688730571269*^9, 
   3.58368873069357*^9}, {3.583760553041141*^9, 3.5837606178295403`*^9}, {
   3.583760672900569*^9, 3.583760673381065*^9}, 3.583768759572474*^9, {
   3.583768797236494*^9, 3.583768861995996*^9}, {3.583774965574102*^9, 
   3.583775007597077*^9}, {3.5837752475990257`*^9, 3.583775251366438*^9}, {
   3.5837753507802362`*^9, 3.583775351074395*^9}, {3.58378171484179*^9, 
   3.583781743123892*^9}, {3.5837817923935328`*^9, 3.58378179264889*^9}, {
   3.5837818347431507`*^9, 3.5837818347882433`*^9}, {3.583782917949067*^9, 
   3.583782965539653*^9}, {3.583786758135909*^9, 3.5837867756958847`*^9}, {
   3.583786830432201*^9, 3.583786854545311*^9}, 3.5837869461968613`*^9, {
   3.583786992898437*^9, 3.583786993188991*^9}, {3.583787063564477*^9, 
   3.583787063864876*^9}, {3.583787197490011*^9, 3.5837872315214863`*^9}, {
   3.583787290702664*^9, 3.583787317212722*^9}, {3.583787362962726*^9, 
   3.583787438561173*^9}, {3.583787469429422*^9, 3.583787477163672*^9}, {
   3.583795439722282*^9, 3.583795440071904*^9}, {3.583848446369478*^9, 
   3.583848448485016*^9}, {3.583948856291999*^9, 3.583948856517352*^9}, {
   3.5839489111061077`*^9, 3.5839490595597687`*^9}, {3.583949108095182*^9, 
   3.58394911156038*^9}, {3.5839491700141983`*^9, 3.5839492610835247`*^9}, {
   3.58394941569631*^9, 3.5839494169597883`*^9}, {3.583949452409182*^9, 
   3.583949452989861*^9}, {3.583949924953377*^9, 3.5839499887730093`*^9}, {
   3.583950075773635*^9, 3.5839500760672398`*^9}, {3.5839501299389267`*^9, 
   3.5839501762494287`*^9}, {3.583950250405734*^9, 3.583950253872793*^9}, {
   3.5839503049531918`*^9, 3.583950307459197*^9}, {3.5839503502398*^9, 
   3.5839503504727182`*^9}, {3.583950425193295*^9, 3.583950441001552*^9}, {
   3.5839506829225407`*^9, 3.5839506856481657`*^9}, {3.584105200513442*^9, 
   3.58410520422014*^9}, {3.5841938153614264`*^9, 3.5841938280366488`*^9}, {
   3.584193865221508*^9, 3.584193951492655*^9}, {3.5841940067637463`*^9, 
   3.584194139753201*^9}, {3.584194184289036*^9, 3.5841943531164093`*^9}, {
   3.584194467839251*^9, 3.584194496770856*^9}, {3.584194554653083*^9, 
   3.584194674924356*^9}, {3.5841947231483183`*^9, 3.5841947408711557`*^9}, {
   3.584194793308148*^9, 3.584194854400416*^9}, {3.584194899613165*^9, 
   3.584194967095475*^9}, {3.584205843462421*^9, 3.5842059799264803`*^9}, {
   3.5842061005884247`*^9, 3.58420610079034*^9}, {3.58420617376169*^9, 
   3.584206204248198*^9}, {3.584213061732684*^9, 3.5842131073276367`*^9}, {
   3.584303277890407*^9, 3.5843033870682373`*^9}, {3.5843034301218367`*^9, 
   3.584303579051386*^9}, {3.584303620185771*^9, 3.584303646781516*^9}, {
   3.5843037126669903`*^9, 3.5843037336695623`*^9}, {3.5843038036750298`*^9, 
   3.584303984878137*^9}, {3.584304033603919*^9, 3.584304095800763*^9}, {
   3.584304344863158*^9, 3.584304360895986*^9}, {3.584798945352722*^9, 
   3.5847989462488422`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`t$$ = 1, Typeset`show$$ = True, 
    Typeset`bookmarkList$$ = {}, Typeset`bookmarkMode$$ = "Menu", 
    Typeset`animator$$, Typeset`animvar$$ = 1, Typeset`name$$ = 
    "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`t$$], 1, 5000, 1}}, Typeset`size$$ = {
    1122., {118.125, 126.875}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`t$20914$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, "Variables" :> {$CellContext`t$$ = 1}, 
      "ControllerVariables" :> {
        Hold[$CellContext`t$$, $CellContext`t$20914$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> Grid[{{
          HighlightGraph[
           
           SetProperty[$CellContext`ro, {
            EdgeWeight -> N[PropertyValue[$CellContext`ro, EdgeWeight]/3], 
             EdgeLabelStyle -> 10, EdgeStyle -> Medium, VertexSize -> 0.3, 
             ImageSize -> Scaled[1.]}], {
            Style[
             Part[
              First[$CellContext`w], $CellContext`t$$], 
             Lighter[Pink]]}], 
          Column[{
            Style[
             StringJoin[{"\[Pi] = [", 
               Riffle[
                Map[ToString[
                  NumberForm[#, {2, 2}]]& , 
                 N[Part[
                    
                    Last[$CellContext`w], \
$CellContext`t$$]/$CellContext`t$$]], ", ", 2], "]"}], "Subsubsection", 
             FontSize -> Scaled[0.02]], 
            Style[
             StringJoin[{"Steps: ", 
               ToString[$CellContext`t$$]}], "Subsubsection", FontSize -> 
             Scaled[0.015]]}]}, {
          Grid[{{
             Style[
             "\!\(\*SubscriptBox[\(\[Pi]\), \(1\)]\)\!\(\*SubscriptBox[\(P\), \
\(1, 2\)]\) = \!\(\*SubscriptBox[\(\[Pi]\), \(2\)]\)\!\(\*SubscriptBox[\(P\), \
\(2, 1\)]\)", "Subsubsection", FontSize -> Scaled[0.02]], 
             Style[
             "\!\(\*SubscriptBox[\(\[Pi]\), \(1\)]\)\!\(\*SubscriptBox[\(P\), \
\(1, 3\)]\) = \!\(\*SubscriptBox[\(\[Pi]\), \(3\)]\)\!\(\*SubscriptBox[\(P\), \
\(3, 1\)]\)", "Subsubsection", FontSize -> Scaled[0.02]]}, {
             Style[
              StringJoin[{
                ToString[
                 NumberForm[
                  
                  If[$CellContext`t$$ >= 4500, 0.31, 
                   Part[$CellContext`P, 1, 2] Part[
                    N[Part[
                    Last[$CellContext`w], $CellContext`t$$]/$CellContext`t$$],
                     1]], {2, 2}]], " = ", 
                ToString[
                 NumberForm[
                  
                  If[$CellContext`t$$ >= 4500, 0.31, 
                   Part[$CellContext`P, 2, 1] Part[
                    N[Part[
                    Last[$CellContext`w], $CellContext`t$$]/$CellContext`t$$],
                     2]], {2, 2}]]}], "Subsubsection", FontSize -> 
              Scaled[0.02]], 
             Style[
              StringJoin[{
                ToString[
                 NumberForm[
                  
                  If[$CellContext`t$$ >= 4500, 0.16, 
                   Part[$CellContext`P, 1, 3] Part[
                    N[Part[
                    Last[$CellContext`w], $CellContext`t$$]/$CellContext`t$$],
                     1]], {2, 2}]], " = ", 
                ToString[
                 NumberForm[
                  
                  If[$CellContext`t$$ >= 4500, 0.16, 
                   Part[$CellContext`P, 3, 1] Part[
                    N[Part[
                    Last[$CellContext`w], $CellContext`t$$]/$CellContext`t$$],
                     3]], {2, 2}]]}], "Subsubsection", FontSize -> 
              Scaled[0.02]]}}, Frame -> All, Spacings -> {3, 1}, Alignment -> 
           Center], 
          Style[
           MatrixForm[Normal[
              WeightedAdjacencyMatrix[$CellContext`ro]]/3], "Subsubsection", 
           FontSize -> Scaled[0.02]]}}, Alignment -> Center, ItemSize -> {{
           Scaled[0.5], 
           Scaled[0.5]}}], 
      "Specifications" :> {{$CellContext`t$$, 1, 5000, 1}}, 
      "Options" :> {Alignment -> Center}, "DefaultOptions" :> {}],
     ImageSizeCache->{1171., {170., 179.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.5843037973611927`*^9, 3.584303835054946*^9}, {
   3.5843038658749228`*^9, 3.584303871882372*^9}, {3.584303946317211*^9, 
   3.584303960923623*^9}, {3.584304053501753*^9, 3.584304096621252*^9}, 
   3.584304364109016*^9, 3.584452337383717*^9, 3.5844525970708838`*^9, 
   3.584453628356131*^9, 3.584453762849379*^9, 3.5844539262750063`*^9, 
   3.58445544779452*^9, 3.584455513068602*^9, 3.584476527676221*^9, 
   3.5844769110718107`*^9, 3.584477768822063*^9, 3.584798606345049*^9, 
   3.5847989468861513`*^9, 3.584904965341049*^9}]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["", "SlideShowNavigationBar",
 TextAlignment->Center,
 CellTags->"SlideShowHeader"],

Cell[CellGroupData[{

Cell["Summary", "Section",
 CellChangeTimes->{{3.583504537673525*^9, 3.583504582132621*^9}, {
  3.583509437760704*^9, 3.583509440334321*^9}, {3.583604913812951*^9, 
  3.5836049144171343`*^9}, {3.583604949342388*^9, 3.583604952190271*^9}, {
  3.583611444032045*^9, 3.5836114865967817`*^9}, {3.5836753545761843`*^9, 
  3.583675361473876*^9}, {3.583678168528171*^9, 3.583678183381459*^9}, {
  3.583687813332683*^9, 3.5836878140960913`*^9}, {3.584798995695676*^9, 
  3.584799002989703*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "The definition of Orbi",
 StyleBox["graphs",
  FontSlant->"Italic"],
 " mirror Orbi",
 StyleBox["folds",
  FontSlant->"Italic"]
}], "Item",
 CellChangeTimes->{{3.583603153527471*^9, 3.5836031912009563`*^9}, {
   3.583604909628951*^9, 3.583604921172461*^9}, {3.583605049452754*^9, 
   3.583605149692397*^9}, {3.583611519709037*^9, 3.583611520364934*^9}, {
   3.583611614267494*^9, 3.583611621170806*^9}, {3.5836117425548553`*^9, 
   3.583611750895398*^9}, {3.583675364823827*^9, 3.583675382895338*^9}, {
   3.583678186228922*^9, 3.5836781970588617`*^9}, {3.583687776296733*^9, 
   3.583687776302123*^9}, {3.584105640363225*^9, 3.5841056437478447`*^9}, {
   3.584799006895961*^9, 3.58479902564552*^9}, 3.584799453990718*^9, {
   3.58480076221166*^9, 3.584800789137259*^9}}],

Cell["\<\
We can distinguish between good and bad orbigraphs\
\>", "Item",
 CellChangeTimes->{{3.583603153527471*^9, 3.5836031912009563`*^9}, {
  3.583604909628951*^9, 3.583604921172461*^9}, {3.583605049452754*^9, 
  3.583605149692397*^9}, {3.583611519709037*^9, 3.583611520364934*^9}, {
  3.583611614267494*^9, 3.583611621170806*^9}, {3.5836117425548553`*^9, 
  3.583611750895398*^9}, {3.583675364823827*^9, 3.583675382895338*^9}, {
  3.583678186228922*^9, 3.5836781970588617`*^9}, {3.583687776296733*^9, 
  3.583687807806933*^9}, {3.5841905614485807`*^9, 3.584190582780612*^9}, {
  3.584213893953373*^9, 3.584213897055828*^9}, {3.58480079638626*^9, 
  3.584800805311966*^9}}],

Cell["\<\
We can bound the number of singular points using the spectrum\
\>", "Item",
 CellChangeTimes->{{3.583603153527471*^9, 3.5836031912009563`*^9}, {
  3.583604909628951*^9, 3.583604921172461*^9}, {3.583605049452754*^9, 
  3.583605149692397*^9}, {3.583611519709037*^9, 3.583611520364934*^9}, {
  3.583611614267494*^9, 3.583611621170806*^9}, {3.5836117425548553`*^9, 
  3.583611750895398*^9}, {3.583675364823827*^9, 3.583675382895338*^9}, {
  3.583678186228922*^9, 3.5836781970588617`*^9}, {3.583687776296733*^9, 
  3.583687807806933*^9}, {3.5841905614485807`*^9, 3.584190582780612*^9}, {
  3.584213893953373*^9, 3.584213897055828*^9}, {3.58480079638626*^9, 
  3.5848008136020203`*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
ScreenStyleEnvironment->"SlideShow",
WindowSize->{Full, Full},
WindowMargins->{{0, Automatic}, {Automatic, 0}},
TaggingRules->{"SlideShow" -> True},
FrontEndVersion->"9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, \
2012)",
StyleDefinitions->Notebook[{
   Cell[
    StyleData[StyleDefinitions -> "Default.nb"]], 
   Cell[
    StyleData["Subtitle"]], 
   Cell[
    StyleData["Subitem"]]}, Visible -> False, FrontEndVersion -> 
  "9.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (November 20, 2012)", 
  StyleDefinitions -> "PrivateStylesheetFormatting.nb"]
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "SlideShowHeader"->{
  Cell[579, 22, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1218, 41, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[2076, 75, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[2497, 90, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[331849, 5609, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[667670, 11220, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[955721, 16238, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1373350, 23143, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[1792542, 30079, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[2211444, 37017, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[2277329, 38387, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[2412927, 41431, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[2554468, 44599, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[2695677, 47765, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[2838406, 50961, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[2981802, 54172, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3068764, 55991, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3118024, 56946, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3130438, 57122, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3180073, 58086, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3230005, 59057, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3280116, 60030, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3330491, 61010, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3381039, 61993, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3431825, 62982, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3483459, 63990, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3535329, 65003, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3587422, 66021, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3639692, 67043, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3692249, 68071, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3745036, 69105, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3798177, 70146, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3852010, 71201, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[3876914, 71685, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[4000427, 74183, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"],
  Cell[4041417, 74982, 88, 2, 1, "SlideShowNavigationBar",
   CellTags->"SlideShowHeader"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"SlideShowHeader", 4044929, 75067}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[579, 22, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[670, 26, 511, 10, 141, "Subtitle"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1218, 41, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[1309, 45, 299, 9, 148, "Title"],
Cell[CellGroupData[{
Cell[1633, 58, 132, 3, 30, "ItemNumbered"],
Cell[1768, 63, 140, 3, 30, "ItemNumbered"],
Cell[1911, 68, 116, 1, 30, "ItemNumbered"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2076, 75, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[2167, 79, 293, 6, 92, "Title"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2497, 90, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2610, 96, 16432, 366, 19, "Input",
 CellOpen->False],
Cell[19045, 464, 312755, 5139, 788, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[331849, 5609, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[331962, 5615, 2569, 39, 19, "Input",
 CellOpen->False],
Cell[334534, 5656, 333087, 5558, 792, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[667670, 11220, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[667783, 11226, 36122, 824, 19, "Input",
 CellOpen->False],
Cell[703908, 12052, 251764, 4180, 690, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[955721, 16238, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[955834, 16244, 3767, 55, 19, "Input",
 CellOpen->False],
Cell[959604, 16301, 413697, 6836, 692, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[1373350, 23143, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1373463, 23149, 4435, 64, 19, "Input",
 CellOpen->False],
Cell[1377901, 23215, 414495, 6855, 692, "Output"]
}, Open  ]],
Cell[1792411, 30073, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[1792542, 30079, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[1792655, 30085, 3646, 53, 19, "Input",
 CellOpen->False],
Cell[1796304, 30140, 415091, 6871, 692, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2211444, 37017, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2211557, 37023, 33656, 657, 19, "Input",
 CellOpen->False],
Cell[2245216, 37682, 32064, 699, 684, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2277329, 38387, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2277442, 38393, 9580, 133, 19, "Input",
 CellOpen->False],
Cell[2287025, 38528, 125853, 2897, 688, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2412927, 41431, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2413040, 41437, 9629, 133, 19, "Input",
 CellOpen->False],
Cell[2422672, 41572, 131747, 3021, 688, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2554468, 44599, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2554581, 44605, 9628, 133, 19, "Input",
 CellOpen->False],
Cell[2564212, 44740, 131416, 3019, 688, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2695677, 47765, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2695790, 47771, 9680, 134, 19, "Input",
 CellOpen->False],
Cell[2705473, 47907, 132884, 3048, 688, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2838406, 50961, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2838519, 50967, 9731, 135, 19, "Input",
 CellOpen->False],
Cell[2848253, 51104, 133500, 3062, 688, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[2981802, 54172, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[2981915, 54178, 43685, 897, 19, "Input",
 CellOpen->False],
Cell[3025603, 55077, 43015, 905, 656, "Output"]
}, Open  ]],
Cell[3068633, 55985, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3068764, 55991, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3068877, 55997, 12242, 167, 19, "Input",
 CellOpen->False],
Cell[3081122, 56166, 36853, 774, 744, "Output"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3118024, 56946, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[3118115, 56950, 12286, 167, 293, "Title"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3130438, 57122, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3130551, 57128, 12244, 167, 19, "Input",
 CellOpen->False],
Cell[3142798, 57297, 37129, 780, 746, "Output"]
}, Open  ]],
Cell[3179942, 58080, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3180073, 58086, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3180186, 58092, 12242, 167, 19, "Input",
 CellOpen->False],
Cell[3192431, 58261, 37331, 784, 746, "Output"]
}, Open  ]],
Cell[3229777, 59048, 94, 1, 44, "Input"],
Cell[3229874, 59051, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3230005, 59057, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3230118, 59063, 12288, 167, 19, "Input",
 CellOpen->False],
Cell[3242409, 59232, 37561, 789, 746, "Output"]
}, Open  ]],
Cell[3279985, 60024, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3280116, 60030, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3280229, 60036, 12292, 167, 19, "Input",
 CellOpen->False],
Cell[3292524, 60205, 37821, 796, 746, "Output"]
}, Open  ]],
Cell[3330360, 61004, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3330491, 61010, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3330604, 61016, 12288, 167, 19, "Input",
 CellOpen->False],
Cell[3342895, 61185, 37998, 799, 746, "Output"]
}, Open  ]],
Cell[3380908, 61987, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3381039, 61993, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3381152, 61999, 12288, 167, 19, "Input",
 CellOpen->False],
Cell[3393443, 62168, 38236, 805, 746, "Output"]
}, Open  ]],
Cell[3431694, 62976, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3431825, 62982, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3431938, 62988, 12287, 167, 19, "Input",
 CellOpen->False],
Cell[3444228, 63157, 39085, 824, 736, "Output"]
}, Open  ]],
Cell[3483328, 63984, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3483459, 63990, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3483572, 63996, 12287, 167, 19, "Input",
 CellOpen->False],
Cell[3495862, 64165, 39321, 829, 738, "Output"]
}, Open  ]],
Cell[3535198, 64997, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3535329, 65003, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3535442, 65009, 12289, 167, 19, "Input",
 CellOpen->False],
Cell[3547734, 65178, 39542, 834, 738, "Output"]
}, Open  ]],
Cell[3587291, 66015, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3587422, 66021, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3587535, 66027, 12265, 167, 19, "Input",
 CellOpen->False],
Cell[3599803, 66196, 39743, 838, 738, "Output"]
}, Open  ]],
Cell[3639561, 67037, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3639692, 67043, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3639805, 67049, 12289, 167, 19, "Input",
 CellOpen->False],
Cell[3652097, 67218, 40006, 844, 738, "Output"]
}, Open  ]],
Cell[3692118, 68065, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3692249, 68071, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3692362, 68077, 12288, 167, 19, "Input",
 CellOpen->False],
Cell[3704653, 68246, 40237, 850, 738, "Output"]
}, Open  ]],
Cell[3744905, 69099, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3745036, 69105, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3745149, 69111, 12338, 168, 19, "Input",
 CellOpen->False],
Cell[3757490, 69281, 40541, 856, 738, "Output"]
}, Open  ]],
Cell[3798046, 70140, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3798177, 70146, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3798290, 70152, 12388, 169, 19, "Input",
 CellOpen->False],
Cell[3810681, 70323, 41183, 869, 734, "Output"]
}, Open  ]],
Cell[3851879, 71195, 94, 1, 44, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[3852010, 71201, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3852123, 71207, 444, 7, 123, "Section"],
Cell[CellGroupData[{
Cell[3852592, 71218, 21353, 385, 25, "Input",
 CellOpen->False],
Cell[3873948, 71605, 2905, 73, 490, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[3876914, 71685, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[3877027, 71691, 303, 4, 123, "Section"],
Cell[CellGroupData[{
Cell[3877355, 71699, 10509, 185, 25, "Input",
 CellOpen->False],
Cell[3887867, 71886, 112499, 2290, 466, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4000427, 74183, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[4000540, 74189, 476, 6, 123, "Section"],
Cell[CellGroupData[{
Cell[4001041, 74199, 625, 10, 45, "Item"],
Cell[4001669, 74211, 980, 24, 51, "Item"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4002686, 74240, 33362, 616, 19, "Input",
 CellOpen->False],
Cell[4036051, 74858, 5305, 117, 374, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[4041417, 74982, 88, 2, 1, "SlideShowNavigationBar",
 CellTags->"SlideShowHeader"],
Cell[CellGroupData[{
Cell[4041530, 74988, 486, 7, 80, "Section"],
Cell[CellGroupData[{
Cell[4042041, 74999, 789, 16, 28, "Item"],
Cell[4042833, 75017, 677, 11, 28, "Item"],
Cell[4043513, 75030, 690, 11, 28, "Item"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
